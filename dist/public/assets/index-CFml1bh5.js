var Zs=Object.defineProperty;var zs=i=>{throw TypeError(i)};var Js=(i,s,o)=>s in i?Zs(i,s,{enumerable:!0,configurable:!0,writable:!0,value:o}):i[s]=o;var Ht=(i,s,o)=>Js(i,typeof s!="symbol"?s+"":s,o),fs=(i,s,o)=>s.has(i)||zs("Cannot "+o);var Wt=(i,s,o)=>(fs(i,s,"read from private field"),o?o.call(i):s.get(i)),kn=(i,s,o)=>s.has(i)?zs("Cannot add the same private member more than once"):s instanceof WeakSet?s.add(i):s.set(i,o),bn=(i,s,o,a)=>(fs(i,s,"write to private field"),a?a.call(i,o):s.set(i,o),o),Un=(i,s,o)=>(fs(i,s,"access private method"),o);var ls=(i,s,o,a)=>({set _(c){bn(i,s,c,o)},get _(){return Wt(i,s,a)}});function _mergeNamespaces(i,s){for(var o=0;o<s.length;o++){const a=s[o];if(typeof a!="string"&&!Array.isArray(a)){for(const c in a)if(c!=="default"&&!(c in i)){const d=Object.getOwnPropertyDescriptor(a,c);d&&Object.defineProperty(i,c,d.get?d:{enumerable:!0,get:()=>a[c]})}}}return Object.freeze(Object.defineProperty(i,Symbol.toStringTag,{value:"Module"}))}(function(){const s=document.createElement("link").relList;if(s&&s.supports&&s.supports("modulepreload"))return;for(const c of document.querySelectorAll('link[rel="modulepreload"]'))a(c);new MutationObserver(c=>{for(const d of c)if(d.type==="childList")for(const g of d.addedNodes)g.tagName==="LINK"&&g.rel==="modulepreload"&&a(g)}).observe(document,{childList:!0,subtree:!0});function o(c){const d={};return c.integrity&&(d.integrity=c.integrity),c.referrerPolicy&&(d.referrerPolicy=c.referrerPolicy),c.crossOrigin==="use-credentials"?d.credentials="include":c.crossOrigin==="anonymous"?d.credentials="omit":d.credentials="same-origin",d}function a(c){if(c.ep)return;c.ep=!0;const d=o(c);fetch(c.href,d)}})();var commonjsGlobal=typeof globalThis<"u"?globalThis:typeof window<"u"?window:typeof global<"u"?global:typeof self<"u"?self:{};function getDefaultExportFromCjs(i){return i&&i.__esModule&&Object.prototype.hasOwnProperty.call(i,"default")?i.default:i}function getAugmentedNamespace(i){if(i.__esModule)return i;var s=i.default;if(typeof s=="function"){var o=function a(){return this instanceof a?Reflect.construct(s,arguments,this.constructor):s.apply(this,arguments)};o.prototype=s.prototype}else o={};return Object.defineProperty(o,"__esModule",{value:!0}),Object.keys(i).forEach(function(a){var c=Object.getOwnPropertyDescriptor(i,a);Object.defineProperty(o,a,c.get?c:{enumerable:!0,get:function(){return i[a]}})}),o}var jsxRuntime={exports:{}},reactJsxRuntime_production_min={},react={exports:{}},react_production_min={};/**
 * @license React
 * react.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var l$2=Symbol.for("react.element"),n$2=Symbol.for("react.portal"),p$4=Symbol.for("react.fragment"),q$2=Symbol.for("react.strict_mode"),r$3=Symbol.for("react.profiler"),t$1=Symbol.for("react.provider"),u$1=Symbol.for("react.context"),v$1=Symbol.for("react.forward_ref"),w=Symbol.for("react.suspense"),x=Symbol.for("react.memo"),y=Symbol.for("react.lazy"),z$1=Symbol.iterator;function A$1(i){return i===null||typeof i!="object"?null:(i=z$1&&i[z$1]||i["@@iterator"],typeof i=="function"?i:null)}var B$1={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},C$1=Object.assign,D$1={};function E$1(i,s,o){this.props=i,this.context=s,this.refs=D$1,this.updater=o||B$1}E$1.prototype.isReactComponent={};E$1.prototype.setState=function(i,s){if(typeof i!="object"&&typeof i!="function"&&i!=null)throw Error("setState(...): takes an object of state variables to update or a function which returns an object of state variables.");this.updater.enqueueSetState(this,i,s,"setState")};E$1.prototype.forceUpdate=function(i){this.updater.enqueueForceUpdate(this,i,"forceUpdate")};function F(){}F.prototype=E$1.prototype;function G$1(i,s,o){this.props=i,this.context=s,this.refs=D$1,this.updater=o||B$1}var H$1=G$1.prototype=new F;H$1.constructor=G$1;C$1(H$1,E$1.prototype);H$1.isPureReactComponent=!0;var I$1=Array.isArray,J=Object.prototype.hasOwnProperty,K$1={current:null},L$1={key:!0,ref:!0,__self:!0,__source:!0};function M$1(i,s,o){var a,c={},d=null,g=null;if(s!=null)for(a in s.ref!==void 0&&(g=s.ref),s.key!==void 0&&(d=""+s.key),s)J.call(s,a)&&!L$1.hasOwnProperty(a)&&(c[a]=s[a]);var $=arguments.length-2;if($===1)c.children=o;else if(1<$){for(var j=Array($),_e=0;_e<$;_e++)j[_e]=arguments[_e+2];c.children=j}if(i&&i.defaultProps)for(a in $=i.defaultProps,$)c[a]===void 0&&(c[a]=$[a]);return{$$typeof:l$2,type:i,key:d,ref:g,props:c,_owner:K$1.current}}function N$1(i,s){return{$$typeof:l$2,type:i.type,key:s,ref:i.ref,props:i.props,_owner:i._owner}}function O$1(i){return typeof i=="object"&&i!==null&&i.$$typeof===l$2}function escape(i){var s={"=":"=0",":":"=2"};return"$"+i.replace(/[=:]/g,function(o){return s[o]})}var P$1=/\/+/g;function Q$1(i,s){return typeof i=="object"&&i!==null&&i.key!=null?escape(""+i.key):s.toString(36)}function R$1(i,s,o,a,c){var d=typeof i;(d==="undefined"||d==="boolean")&&(i=null);var g=!1;if(i===null)g=!0;else switch(d){case"string":case"number":g=!0;break;case"object":switch(i.$$typeof){case l$2:case n$2:g=!0}}if(g)return g=i,c=c(g),i=a===""?"."+Q$1(g,0):a,I$1(c)?(o="",i!=null&&(o=i.replace(P$1,"$&/")+"/"),R$1(c,s,o,"",function(_e){return _e})):c!=null&&(O$1(c)&&(c=N$1(c,o+(!c.key||g&&g.key===c.key?"":(""+c.key).replace(P$1,"$&/")+"/")+i)),s.push(c)),1;if(g=0,a=a===""?".":a+":",I$1(i))for(var $=0;$<i.length;$++){d=i[$];var j=a+Q$1(d,$);g+=R$1(d,s,o,j,c)}else if(j=A$1(i),typeof j=="function")for(i=j.call(i),$=0;!(d=i.next()).done;)d=d.value,j=a+Q$1(d,$++),g+=R$1(d,s,o,j,c);else if(d==="object")throw s=String(i),Error("Objects are not valid as a React child (found: "+(s==="[object Object]"?"object with keys {"+Object.keys(i).join(", ")+"}":s)+"). If you meant to render a collection of children, use an array instead.");return g}function S$1(i,s,o){if(i==null)return i;var a=[],c=0;return R$1(i,a,"","",function(d){return s.call(o,d,c++)}),a}function T$1(i){if(i._status===-1){var s=i._result;s=s(),s.then(function(o){(i._status===0||i._status===-1)&&(i._status=1,i._result=o)},function(o){(i._status===0||i._status===-1)&&(i._status=2,i._result=o)}),i._status===-1&&(i._status=0,i._result=s)}if(i._status===1)return i._result.default;throw i._result}var U$1={current:null},V$1={transition:null},W$1={ReactCurrentDispatcher:U$1,ReactCurrentBatchConfig:V$1,ReactCurrentOwner:K$1};function X$2(){throw Error("act(...) is not supported in production builds of React.")}react_production_min.Children={map:S$1,forEach:function(i,s,o){S$1(i,function(){s.apply(this,arguments)},o)},count:function(i){var s=0;return S$1(i,function(){s++}),s},toArray:function(i){return S$1(i,function(s){return s})||[]},only:function(i){if(!O$1(i))throw Error("React.Children.only expected to receive a single React element child.");return i}};react_production_min.Component=E$1;react_production_min.Fragment=p$4;react_production_min.Profiler=r$3;react_production_min.PureComponent=G$1;react_production_min.StrictMode=q$2;react_production_min.Suspense=w;react_production_min.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=W$1;react_production_min.act=X$2;react_production_min.cloneElement=function(i,s,o){if(i==null)throw Error("React.cloneElement(...): The argument must be a React element, but you passed "+i+".");var a=C$1({},i.props),c=i.key,d=i.ref,g=i._owner;if(s!=null){if(s.ref!==void 0&&(d=s.ref,g=K$1.current),s.key!==void 0&&(c=""+s.key),i.type&&i.type.defaultProps)var $=i.type.defaultProps;for(j in s)J.call(s,j)&&!L$1.hasOwnProperty(j)&&(a[j]=s[j]===void 0&&$!==void 0?$[j]:s[j])}var j=arguments.length-2;if(j===1)a.children=o;else if(1<j){$=Array(j);for(var _e=0;_e<j;_e++)$[_e]=arguments[_e+2];a.children=$}return{$$typeof:l$2,type:i.type,key:c,ref:d,props:a,_owner:g}};react_production_min.createContext=function(i){return i={$$typeof:u$1,_currentValue:i,_currentValue2:i,_threadCount:0,Provider:null,Consumer:null,_defaultValue:null,_globalName:null},i.Provider={$$typeof:t$1,_context:i},i.Consumer=i};react_production_min.createElement=M$1;react_production_min.createFactory=function(i){var s=M$1.bind(null,i);return s.type=i,s};react_production_min.createRef=function(){return{current:null}};react_production_min.forwardRef=function(i){return{$$typeof:v$1,render:i}};react_production_min.isValidElement=O$1;react_production_min.lazy=function(i){return{$$typeof:y,_payload:{_status:-1,_result:i},_init:T$1}};react_production_min.memo=function(i,s){return{$$typeof:x,type:i,compare:s===void 0?null:s}};react_production_min.startTransition=function(i){var s=V$1.transition;V$1.transition={};try{i()}finally{V$1.transition=s}};react_production_min.unstable_act=X$2;react_production_min.useCallback=function(i,s){return U$1.current.useCallback(i,s)};react_production_min.useContext=function(i){return U$1.current.useContext(i)};react_production_min.useDebugValue=function(){};react_production_min.useDeferredValue=function(i){return U$1.current.useDeferredValue(i)};react_production_min.useEffect=function(i,s){return U$1.current.useEffect(i,s)};react_production_min.useId=function(){return U$1.current.useId()};react_production_min.useImperativeHandle=function(i,s,o){return U$1.current.useImperativeHandle(i,s,o)};react_production_min.useInsertionEffect=function(i,s){return U$1.current.useInsertionEffect(i,s)};react_production_min.useLayoutEffect=function(i,s){return U$1.current.useLayoutEffect(i,s)};react_production_min.useMemo=function(i,s){return U$1.current.useMemo(i,s)};react_production_min.useReducer=function(i,s,o){return U$1.current.useReducer(i,s,o)};react_production_min.useRef=function(i){return U$1.current.useRef(i)};react_production_min.useState=function(i){return U$1.current.useState(i)};react_production_min.useSyncExternalStore=function(i,s,o){return U$1.current.useSyncExternalStore(i,s,o)};react_production_min.useTransition=function(){return U$1.current.useTransition()};react_production_min.version="18.3.1";react.exports=react_production_min;var reactExports=react.exports;const React=getDefaultExportFromCjs(reactExports),React$1=_mergeNamespaces({__proto__:null,default:React},[reactExports]);/**
 * @license React
 * react-jsx-runtime.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var f=reactExports,k$1=Symbol.for("react.element"),l$1=Symbol.for("react.fragment"),m$2=Object.prototype.hasOwnProperty,n$1=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,p$3={key:!0,ref:!0,__self:!0,__source:!0};function q$1(i,s,o){var a,c={},d=null,g=null;o!==void 0&&(d=""+o),s.key!==void 0&&(d=""+s.key),s.ref!==void 0&&(g=s.ref);for(a in s)m$2.call(s,a)&&!p$3.hasOwnProperty(a)&&(c[a]=s[a]);if(i&&i.defaultProps)for(a in s=i.defaultProps,s)c[a]===void 0&&(c[a]=s[a]);return{$$typeof:k$1,type:i,key:d,ref:g,props:c,_owner:n$1.current}}reactJsxRuntime_production_min.Fragment=l$1;reactJsxRuntime_production_min.jsx=q$1;reactJsxRuntime_production_min.jsxs=q$1;jsxRuntime.exports=reactJsxRuntime_production_min;var jsxRuntimeExports=jsxRuntime.exports,reactDom={exports:{}},reactDom_production_min={},scheduler={exports:{}},scheduler_production_min={};/**
 * @license React
 * scheduler.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */(function(i){function s(Et,Ct){var kt=Et.length;Et.push(Ct);e:for(;0<kt;){var Nt=kt-1>>>1,Mt=Et[Nt];if(0<c(Mt,Ct))Et[Nt]=Ct,Et[kt]=Mt,kt=Nt;else break e}}function o(Et){return Et.length===0?null:Et[0]}function a(Et){if(Et.length===0)return null;var Ct=Et[0],kt=Et.pop();if(kt!==Ct){Et[0]=kt;e:for(var Nt=0,Mt=Et.length,Vt=Mt>>>1;Nt<Vt;){var Gt=2*(Nt+1)-1,Ft=Et[Gt],jt=Gt+1,qt=Et[jt];if(0>c(Ft,kt))jt<Mt&&0>c(qt,Ft)?(Et[Nt]=qt,Et[jt]=kt,Nt=jt):(Et[Nt]=Ft,Et[Gt]=kt,Nt=Gt);else if(jt<Mt&&0>c(qt,kt))Et[Nt]=qt,Et[jt]=kt,Nt=jt;else break e}}return Ct}function c(Et,Ct){var kt=Et.sortIndex-Ct.sortIndex;return kt!==0?kt:Et.id-Ct.id}if(typeof performance=="object"&&typeof performance.now=="function"){var d=performance;i.unstable_now=function(){return d.now()}}else{var g=Date,$=g.now();i.unstable_now=function(){return g.now()-$}}var j=[],_e=[],et=1,_=null,b=3,tt=!1,nt=!1,rt=!1,st=typeof setTimeout=="function"?setTimeout:null,ot=typeof clearTimeout=="function"?clearTimeout:null,it=typeof setImmediate<"u"?setImmediate:null;typeof navigator<"u"&&navigator.scheduling!==void 0&&navigator.scheduling.isInputPending!==void 0&&navigator.scheduling.isInputPending.bind(navigator.scheduling);function at(Et){for(var Ct=o(_e);Ct!==null;){if(Ct.callback===null)a(_e);else if(Ct.startTime<=Et)a(_e),Ct.sortIndex=Ct.expirationTime,s(j,Ct);else break;Ct=o(_e)}}function lt(Et){if(rt=!1,at(Et),!nt)if(o(j)!==null)nt=!0,mt(ut);else{var Ct=o(_e);Ct!==null&&vt(lt,Ct.startTime-Et)}}function ut(Et,Ct){nt=!1,rt&&(rt=!1,ot(pt),pt=-1),tt=!0;var kt=b;try{for(at(Ct),_=o(j);_!==null&&(!(_.expirationTime>Ct)||Et&&!yt());){var Nt=_.callback;if(typeof Nt=="function"){_.callback=null,b=_.priorityLevel;var Mt=Nt(_.expirationTime<=Ct);Ct=i.unstable_now(),typeof Mt=="function"?_.callback=Mt:_===o(j)&&a(j),at(Ct)}else a(j);_=o(j)}if(_!==null)var Vt=!0;else{var Gt=o(_e);Gt!==null&&vt(lt,Gt.startTime-Ct),Vt=!1}return Vt}finally{_=null,b=kt,tt=!1}}var ct=!1,dt=null,pt=-1,ht=5,ft=-1;function yt(){return!(i.unstable_now()-ft<ht)}function wt(){if(dt!==null){var Et=i.unstable_now();ft=Et;var Ct=!0;try{Ct=dt(!0,Et)}finally{Ct?_t():(ct=!1,dt=null)}}else ct=!1}var _t;if(typeof it=="function")_t=function(){it(wt)};else if(typeof MessageChannel<"u"){var bt=new MessageChannel,xt=bt.port2;bt.port1.onmessage=wt,_t=function(){xt.postMessage(null)}}else _t=function(){st(wt,0)};function mt(Et){dt=Et,ct||(ct=!0,_t())}function vt(Et,Ct){pt=st(function(){Et(i.unstable_now())},Ct)}i.unstable_IdlePriority=5,i.unstable_ImmediatePriority=1,i.unstable_LowPriority=4,i.unstable_NormalPriority=3,i.unstable_Profiling=null,i.unstable_UserBlockingPriority=2,i.unstable_cancelCallback=function(Et){Et.callback=null},i.unstable_continueExecution=function(){nt||tt||(nt=!0,mt(ut))},i.unstable_forceFrameRate=function(Et){0>Et||125<Et?console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported"):ht=0<Et?Math.floor(1e3/Et):5},i.unstable_getCurrentPriorityLevel=function(){return b},i.unstable_getFirstCallbackNode=function(){return o(j)},i.unstable_next=function(Et){switch(b){case 1:case 2:case 3:var Ct=3;break;default:Ct=b}var kt=b;b=Ct;try{return Et()}finally{b=kt}},i.unstable_pauseExecution=function(){},i.unstable_requestPaint=function(){},i.unstable_runWithPriority=function(Et,Ct){switch(Et){case 1:case 2:case 3:case 4:case 5:break;default:Et=3}var kt=b;b=Et;try{return Ct()}finally{b=kt}},i.unstable_scheduleCallback=function(Et,Ct,kt){var Nt=i.unstable_now();switch(typeof kt=="object"&&kt!==null?(kt=kt.delay,kt=typeof kt=="number"&&0<kt?Nt+kt:Nt):kt=Nt,Et){case 1:var Mt=-1;break;case 2:Mt=250;break;case 5:Mt=1073741823;break;case 4:Mt=1e4;break;default:Mt=5e3}return Mt=kt+Mt,Et={id:et++,callback:Ct,priorityLevel:Et,startTime:kt,expirationTime:Mt,sortIndex:-1},kt>Nt?(Et.sortIndex=kt,s(_e,Et),o(j)===null&&Et===o(_e)&&(rt?(ot(pt),pt=-1):rt=!0,vt(lt,kt-Nt))):(Et.sortIndex=Mt,s(j,Et),nt||tt||(nt=!0,mt(ut))),Et},i.unstable_shouldYield=yt,i.unstable_wrapCallback=function(Et){var Ct=b;return function(){var kt=b;b=Ct;try{return Et.apply(this,arguments)}finally{b=kt}}}})(scheduler_production_min);scheduler.exports=scheduler_production_min;var schedulerExports=scheduler.exports;/**
 * @license React
 * react-dom.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var aa=reactExports,ca=schedulerExports;function p$2(i){for(var s="https://reactjs.org/docs/error-decoder.html?invariant="+i,o=1;o<arguments.length;o++)s+="&args[]="+encodeURIComponent(arguments[o]);return"Minified React error #"+i+"; visit "+s+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}var da=new Set,ea={};function fa(i,s){ha(i,s),ha(i+"Capture",s)}function ha(i,s){for(ea[i]=s,i=0;i<s.length;i++)da.add(s[i])}var ia=!(typeof window>"u"||typeof window.document>"u"||typeof window.document.createElement>"u"),ja=Object.prototype.hasOwnProperty,ka=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,la={},ma={};function oa(i){return ja.call(ma,i)?!0:ja.call(la,i)?!1:ka.test(i)?ma[i]=!0:(la[i]=!0,!1)}function pa(i,s,o,a){if(o!==null&&o.type===0)return!1;switch(typeof s){case"function":case"symbol":return!0;case"boolean":return a?!1:o!==null?!o.acceptsBooleans:(i=i.toLowerCase().slice(0,5),i!=="data-"&&i!=="aria-");default:return!1}}function qa(i,s,o,a){if(s===null||typeof s>"u"||pa(i,s,o,a))return!0;if(a)return!1;if(o!==null)switch(o.type){case 3:return!s;case 4:return s===!1;case 5:return isNaN(s);case 6:return isNaN(s)||1>s}return!1}function v(i,s,o,a,c,d,g){this.acceptsBooleans=s===2||s===3||s===4,this.attributeName=a,this.attributeNamespace=c,this.mustUseProperty=o,this.propertyName=i,this.type=s,this.sanitizeURL=d,this.removeEmptyString=g}var z={};"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach(function(i){z[i]=new v(i,0,!1,i,null,!1,!1)});[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach(function(i){var s=i[0];z[s]=new v(s,1,!1,i[1],null,!1,!1)});["contentEditable","draggable","spellCheck","value"].forEach(function(i){z[i]=new v(i,2,!1,i.toLowerCase(),null,!1,!1)});["autoReverse","externalResourcesRequired","focusable","preserveAlpha"].forEach(function(i){z[i]=new v(i,2,!1,i,null,!1,!1)});"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach(function(i){z[i]=new v(i,3,!1,i.toLowerCase(),null,!1,!1)});["checked","multiple","muted","selected"].forEach(function(i){z[i]=new v(i,3,!0,i,null,!1,!1)});["capture","download"].forEach(function(i){z[i]=new v(i,4,!1,i,null,!1,!1)});["cols","rows","size","span"].forEach(function(i){z[i]=new v(i,6,!1,i,null,!1,!1)});["rowSpan","start"].forEach(function(i){z[i]=new v(i,5,!1,i.toLowerCase(),null,!1,!1)});var ra=/[\-:]([a-z])/g;function sa(i){return i[1].toUpperCase()}"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach(function(i){var s=i.replace(ra,sa);z[s]=new v(s,1,!1,i,null,!1,!1)});"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach(function(i){var s=i.replace(ra,sa);z[s]=new v(s,1,!1,i,"http://www.w3.org/1999/xlink",!1,!1)});["xml:base","xml:lang","xml:space"].forEach(function(i){var s=i.replace(ra,sa);z[s]=new v(s,1,!1,i,"http://www.w3.org/XML/1998/namespace",!1,!1)});["tabIndex","crossOrigin"].forEach(function(i){z[i]=new v(i,1,!1,i.toLowerCase(),null,!1,!1)});z.xlinkHref=new v("xlinkHref",1,!1,"xlink:href","http://www.w3.org/1999/xlink",!0,!1);["src","href","action","formAction"].forEach(function(i){z[i]=new v(i,1,!1,i.toLowerCase(),null,!0,!0)});function ta(i,s,o,a){var c=z.hasOwnProperty(s)?z[s]:null;(c!==null?c.type!==0:a||!(2<s.length)||s[0]!=="o"&&s[0]!=="O"||s[1]!=="n"&&s[1]!=="N")&&(qa(s,o,c,a)&&(o=null),a||c===null?oa(s)&&(o===null?i.removeAttribute(s):i.setAttribute(s,""+o)):c.mustUseProperty?i[c.propertyName]=o===null?c.type===3?!1:"":o:(s=c.attributeName,a=c.attributeNamespace,o===null?i.removeAttribute(s):(c=c.type,o=c===3||c===4&&o===!0?"":""+o,a?i.setAttributeNS(a,s,o):i.setAttribute(s,o))))}var ua=aa.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,va=Symbol.for("react.element"),wa=Symbol.for("react.portal"),ya=Symbol.for("react.fragment"),za=Symbol.for("react.strict_mode"),Aa=Symbol.for("react.profiler"),Ba=Symbol.for("react.provider"),Ca=Symbol.for("react.context"),Da=Symbol.for("react.forward_ref"),Ea=Symbol.for("react.suspense"),Fa=Symbol.for("react.suspense_list"),Ga=Symbol.for("react.memo"),Ha=Symbol.for("react.lazy"),Ia=Symbol.for("react.offscreen"),Ja=Symbol.iterator;function Ka(i){return i===null||typeof i!="object"?null:(i=Ja&&i[Ja]||i["@@iterator"],typeof i=="function"?i:null)}var A=Object.assign,La;function Ma(i){if(La===void 0)try{throw Error()}catch(o){var s=o.stack.trim().match(/\n( *(at )?)/);La=s&&s[1]||""}return`
`+La+i}var Na=!1;function Oa(i,s){if(!i||Na)return"";Na=!0;var o=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{if(s)if(s=function(){throw Error()},Object.defineProperty(s.prototype,"props",{set:function(){throw Error()}}),typeof Reflect=="object"&&Reflect.construct){try{Reflect.construct(s,[])}catch(_e){var a=_e}Reflect.construct(i,[],s)}else{try{s.call()}catch(_e){a=_e}i.call(s.prototype)}else{try{throw Error()}catch(_e){a=_e}i()}}catch(_e){if(_e&&a&&typeof _e.stack=="string"){for(var c=_e.stack.split(`
`),d=a.stack.split(`
`),g=c.length-1,$=d.length-1;1<=g&&0<=$&&c[g]!==d[$];)$--;for(;1<=g&&0<=$;g--,$--)if(c[g]!==d[$]){if(g!==1||$!==1)do if(g--,$--,0>$||c[g]!==d[$]){var j=`
`+c[g].replace(" at new "," at ");return i.displayName&&j.includes("<anonymous>")&&(j=j.replace("<anonymous>",i.displayName)),j}while(1<=g&&0<=$);break}}}finally{Na=!1,Error.prepareStackTrace=o}return(i=i?i.displayName||i.name:"")?Ma(i):""}function Pa(i){switch(i.tag){case 5:return Ma(i.type);case 16:return Ma("Lazy");case 13:return Ma("Suspense");case 19:return Ma("SuspenseList");case 0:case 2:case 15:return i=Oa(i.type,!1),i;case 11:return i=Oa(i.type.render,!1),i;case 1:return i=Oa(i.type,!0),i;default:return""}}function Qa(i){if(i==null)return null;if(typeof i=="function")return i.displayName||i.name||null;if(typeof i=="string")return i;switch(i){case ya:return"Fragment";case wa:return"Portal";case Aa:return"Profiler";case za:return"StrictMode";case Ea:return"Suspense";case Fa:return"SuspenseList"}if(typeof i=="object")switch(i.$$typeof){case Ca:return(i.displayName||"Context")+".Consumer";case Ba:return(i._context.displayName||"Context")+".Provider";case Da:var s=i.render;return i=i.displayName,i||(i=s.displayName||s.name||"",i=i!==""?"ForwardRef("+i+")":"ForwardRef"),i;case Ga:return s=i.displayName||null,s!==null?s:Qa(i.type)||"Memo";case Ha:s=i._payload,i=i._init;try{return Qa(i(s))}catch{}}return null}function Ra(i){var s=i.type;switch(i.tag){case 24:return"Cache";case 9:return(s.displayName||"Context")+".Consumer";case 10:return(s._context.displayName||"Context")+".Provider";case 18:return"DehydratedFragment";case 11:return i=s.render,i=i.displayName||i.name||"",s.displayName||(i!==""?"ForwardRef("+i+")":"ForwardRef");case 7:return"Fragment";case 5:return s;case 4:return"Portal";case 3:return"Root";case 6:return"Text";case 16:return Qa(s);case 8:return s===za?"StrictMode":"Mode";case 22:return"Offscreen";case 12:return"Profiler";case 21:return"Scope";case 13:return"Suspense";case 19:return"SuspenseList";case 25:return"TracingMarker";case 1:case 0:case 17:case 2:case 14:case 15:if(typeof s=="function")return s.displayName||s.name||null;if(typeof s=="string")return s}return null}function Sa(i){switch(typeof i){case"boolean":case"number":case"string":case"undefined":return i;case"object":return i;default:return""}}function Ta(i){var s=i.type;return(i=i.nodeName)&&i.toLowerCase()==="input"&&(s==="checkbox"||s==="radio")}function Ua(i){var s=Ta(i)?"checked":"value",o=Object.getOwnPropertyDescriptor(i.constructor.prototype,s),a=""+i[s];if(!i.hasOwnProperty(s)&&typeof o<"u"&&typeof o.get=="function"&&typeof o.set=="function"){var c=o.get,d=o.set;return Object.defineProperty(i,s,{configurable:!0,get:function(){return c.call(this)},set:function(g){a=""+g,d.call(this,g)}}),Object.defineProperty(i,s,{enumerable:o.enumerable}),{getValue:function(){return a},setValue:function(g){a=""+g},stopTracking:function(){i._valueTracker=null,delete i[s]}}}}function Va(i){i._valueTracker||(i._valueTracker=Ua(i))}function Wa(i){if(!i)return!1;var s=i._valueTracker;if(!s)return!0;var o=s.getValue(),a="";return i&&(a=Ta(i)?i.checked?"true":"false":i.value),i=a,i!==o?(s.setValue(i),!0):!1}function Xa(i){if(i=i||(typeof document<"u"?document:void 0),typeof i>"u")return null;try{return i.activeElement||i.body}catch{return i.body}}function Ya(i,s){var o=s.checked;return A({},s,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:o??i._wrapperState.initialChecked})}function Za(i,s){var o=s.defaultValue==null?"":s.defaultValue,a=s.checked!=null?s.checked:s.defaultChecked;o=Sa(s.value!=null?s.value:o),i._wrapperState={initialChecked:a,initialValue:o,controlled:s.type==="checkbox"||s.type==="radio"?s.checked!=null:s.value!=null}}function ab(i,s){s=s.checked,s!=null&&ta(i,"checked",s,!1)}function bb(i,s){ab(i,s);var o=Sa(s.value),a=s.type;if(o!=null)a==="number"?(o===0&&i.value===""||i.value!=o)&&(i.value=""+o):i.value!==""+o&&(i.value=""+o);else if(a==="submit"||a==="reset"){i.removeAttribute("value");return}s.hasOwnProperty("value")?cb(i,s.type,o):s.hasOwnProperty("defaultValue")&&cb(i,s.type,Sa(s.defaultValue)),s.checked==null&&s.defaultChecked!=null&&(i.defaultChecked=!!s.defaultChecked)}function db(i,s,o){if(s.hasOwnProperty("value")||s.hasOwnProperty("defaultValue")){var a=s.type;if(!(a!=="submit"&&a!=="reset"||s.value!==void 0&&s.value!==null))return;s=""+i._wrapperState.initialValue,o||s===i.value||(i.value=s),i.defaultValue=s}o=i.name,o!==""&&(i.name=""),i.defaultChecked=!!i._wrapperState.initialChecked,o!==""&&(i.name=o)}function cb(i,s,o){(s!=="number"||Xa(i.ownerDocument)!==i)&&(o==null?i.defaultValue=""+i._wrapperState.initialValue:i.defaultValue!==""+o&&(i.defaultValue=""+o))}var eb=Array.isArray;function fb(i,s,o,a){if(i=i.options,s){s={};for(var c=0;c<o.length;c++)s["$"+o[c]]=!0;for(o=0;o<i.length;o++)c=s.hasOwnProperty("$"+i[o].value),i[o].selected!==c&&(i[o].selected=c),c&&a&&(i[o].defaultSelected=!0)}else{for(o=""+Sa(o),s=null,c=0;c<i.length;c++){if(i[c].value===o){i[c].selected=!0,a&&(i[c].defaultSelected=!0);return}s!==null||i[c].disabled||(s=i[c])}s!==null&&(s.selected=!0)}}function gb(i,s){if(s.dangerouslySetInnerHTML!=null)throw Error(p$2(91));return A({},s,{value:void 0,defaultValue:void 0,children:""+i._wrapperState.initialValue})}function hb(i,s){var o=s.value;if(o==null){if(o=s.children,s=s.defaultValue,o!=null){if(s!=null)throw Error(p$2(92));if(eb(o)){if(1<o.length)throw Error(p$2(93));o=o[0]}s=o}s==null&&(s=""),o=s}i._wrapperState={initialValue:Sa(o)}}function ib(i,s){var o=Sa(s.value),a=Sa(s.defaultValue);o!=null&&(o=""+o,o!==i.value&&(i.value=o),s.defaultValue==null&&i.defaultValue!==o&&(i.defaultValue=o)),a!=null&&(i.defaultValue=""+a)}function jb(i){var s=i.textContent;s===i._wrapperState.initialValue&&s!==""&&s!==null&&(i.value=s)}function kb(i){switch(i){case"svg":return"http://www.w3.org/2000/svg";case"math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function lb(i,s){return i==null||i==="http://www.w3.org/1999/xhtml"?kb(s):i==="http://www.w3.org/2000/svg"&&s==="foreignObject"?"http://www.w3.org/1999/xhtml":i}var mb,nb=function(i){return typeof MSApp<"u"&&MSApp.execUnsafeLocalFunction?function(s,o,a,c){MSApp.execUnsafeLocalFunction(function(){return i(s,o,a,c)})}:i}(function(i,s){if(i.namespaceURI!=="http://www.w3.org/2000/svg"||"innerHTML"in i)i.innerHTML=s;else{for(mb=mb||document.createElement("div"),mb.innerHTML="<svg>"+s.valueOf().toString()+"</svg>",s=mb.firstChild;i.firstChild;)i.removeChild(i.firstChild);for(;s.firstChild;)i.appendChild(s.firstChild)}});function ob(i,s){if(s){var o=i.firstChild;if(o&&o===i.lastChild&&o.nodeType===3){o.nodeValue=s;return}}i.textContent=s}var pb={animationIterationCount:!0,aspectRatio:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},qb=["Webkit","ms","Moz","O"];Object.keys(pb).forEach(function(i){qb.forEach(function(s){s=s+i.charAt(0).toUpperCase()+i.substring(1),pb[s]=pb[i]})});function rb(i,s,o){return s==null||typeof s=="boolean"||s===""?"":o||typeof s!="number"||s===0||pb.hasOwnProperty(i)&&pb[i]?(""+s).trim():s+"px"}function sb(i,s){i=i.style;for(var o in s)if(s.hasOwnProperty(o)){var a=o.indexOf("--")===0,c=rb(o,s[o],a);o==="float"&&(o="cssFloat"),a?i.setProperty(o,c):i[o]=c}}var tb=A({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});function ub(i,s){if(s){if(tb[i]&&(s.children!=null||s.dangerouslySetInnerHTML!=null))throw Error(p$2(137,i));if(s.dangerouslySetInnerHTML!=null){if(s.children!=null)throw Error(p$2(60));if(typeof s.dangerouslySetInnerHTML!="object"||!("__html"in s.dangerouslySetInnerHTML))throw Error(p$2(61))}if(s.style!=null&&typeof s.style!="object")throw Error(p$2(62))}}function vb(i,s){if(i.indexOf("-")===-1)return typeof s.is=="string";switch(i){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}var wb=null;function xb(i){return i=i.target||i.srcElement||window,i.correspondingUseElement&&(i=i.correspondingUseElement),i.nodeType===3?i.parentNode:i}var yb=null,zb=null,Ab=null;function Bb(i){if(i=Cb(i)){if(typeof yb!="function")throw Error(p$2(280));var s=i.stateNode;s&&(s=Db(s),yb(i.stateNode,i.type,s))}}function Eb(i){zb?Ab?Ab.push(i):Ab=[i]:zb=i}function Fb(){if(zb){var i=zb,s=Ab;if(Ab=zb=null,Bb(i),s)for(i=0;i<s.length;i++)Bb(s[i])}}function Gb(i,s){return i(s)}function Hb(){}var Ib=!1;function Jb(i,s,o){if(Ib)return i(s,o);Ib=!0;try{return Gb(i,s,o)}finally{Ib=!1,(zb!==null||Ab!==null)&&(Hb(),Fb())}}function Kb(i,s){var o=i.stateNode;if(o===null)return null;var a=Db(o);if(a===null)return null;o=a[s];e:switch(s){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":case"onMouseEnter":(a=!a.disabled)||(i=i.type,a=!(i==="button"||i==="input"||i==="select"||i==="textarea")),i=!a;break e;default:i=!1}if(i)return null;if(o&&typeof o!="function")throw Error(p$2(231,s,typeof o));return o}var Lb=!1;if(ia)try{var Mb={};Object.defineProperty(Mb,"passive",{get:function(){Lb=!0}}),window.addEventListener("test",Mb,Mb),window.removeEventListener("test",Mb,Mb)}catch{Lb=!1}function Nb(i,s,o,a,c,d,g,$,j){var _e=Array.prototype.slice.call(arguments,3);try{s.apply(o,_e)}catch(et){this.onError(et)}}var Ob=!1,Pb=null,Qb=!1,Rb=null,Sb={onError:function(i){Ob=!0,Pb=i}};function Tb(i,s,o,a,c,d,g,$,j){Ob=!1,Pb=null,Nb.apply(Sb,arguments)}function Ub(i,s,o,a,c,d,g,$,j){if(Tb.apply(this,arguments),Ob){if(Ob){var _e=Pb;Ob=!1,Pb=null}else throw Error(p$2(198));Qb||(Qb=!0,Rb=_e)}}function Vb(i){var s=i,o=i;if(i.alternate)for(;s.return;)s=s.return;else{i=s;do s=i,s.flags&4098&&(o=s.return),i=s.return;while(i)}return s.tag===3?o:null}function Wb(i){if(i.tag===13){var s=i.memoizedState;if(s===null&&(i=i.alternate,i!==null&&(s=i.memoizedState)),s!==null)return s.dehydrated}return null}function Xb(i){if(Vb(i)!==i)throw Error(p$2(188))}function Yb(i){var s=i.alternate;if(!s){if(s=Vb(i),s===null)throw Error(p$2(188));return s!==i?null:i}for(var o=i,a=s;;){var c=o.return;if(c===null)break;var d=c.alternate;if(d===null){if(a=c.return,a!==null){o=a;continue}break}if(c.child===d.child){for(d=c.child;d;){if(d===o)return Xb(c),i;if(d===a)return Xb(c),s;d=d.sibling}throw Error(p$2(188))}if(o.return!==a.return)o=c,a=d;else{for(var g=!1,$=c.child;$;){if($===o){g=!0,o=c,a=d;break}if($===a){g=!0,a=c,o=d;break}$=$.sibling}if(!g){for($=d.child;$;){if($===o){g=!0,o=d,a=c;break}if($===a){g=!0,a=d,o=c;break}$=$.sibling}if(!g)throw Error(p$2(189))}}if(o.alternate!==a)throw Error(p$2(190))}if(o.tag!==3)throw Error(p$2(188));return o.stateNode.current===o?i:s}function Zb(i){return i=Yb(i),i!==null?$b(i):null}function $b(i){if(i.tag===5||i.tag===6)return i;for(i=i.child;i!==null;){var s=$b(i);if(s!==null)return s;i=i.sibling}return null}var ac=ca.unstable_scheduleCallback,bc=ca.unstable_cancelCallback,cc=ca.unstable_shouldYield,dc=ca.unstable_requestPaint,B=ca.unstable_now,ec=ca.unstable_getCurrentPriorityLevel,fc=ca.unstable_ImmediatePriority,gc=ca.unstable_UserBlockingPriority,hc=ca.unstable_NormalPriority,ic=ca.unstable_LowPriority,jc=ca.unstable_IdlePriority,kc=null,lc=null;function mc(i){if(lc&&typeof lc.onCommitFiberRoot=="function")try{lc.onCommitFiberRoot(kc,i,void 0,(i.current.flags&128)===128)}catch{}}var oc=Math.clz32?Math.clz32:nc,pc=Math.log,qc=Math.LN2;function nc(i){return i>>>=0,i===0?32:31-(pc(i)/qc|0)|0}var rc=64,sc=4194304;function tc(i){switch(i&-i){case 1:return 1;case 2:return 2;case 4:return 4;case 8:return 8;case 16:return 16;case 32:return 32;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return i&4194240;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return i&130023424;case 134217728:return 134217728;case 268435456:return 268435456;case 536870912:return 536870912;case 1073741824:return 1073741824;default:return i}}function uc(i,s){var o=i.pendingLanes;if(o===0)return 0;var a=0,c=i.suspendedLanes,d=i.pingedLanes,g=o&268435455;if(g!==0){var $=g&~c;$!==0?a=tc($):(d&=g,d!==0&&(a=tc(d)))}else g=o&~c,g!==0?a=tc(g):d!==0&&(a=tc(d));if(a===0)return 0;if(s!==0&&s!==a&&!(s&c)&&(c=a&-a,d=s&-s,c>=d||c===16&&(d&4194240)!==0))return s;if(a&4&&(a|=o&16),s=i.entangledLanes,s!==0)for(i=i.entanglements,s&=a;0<s;)o=31-oc(s),c=1<<o,a|=i[o],s&=~c;return a}function vc(i,s){switch(i){case 1:case 2:case 4:return s+250;case 8:case 16:case 32:case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return s+5e3;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return-1;case 134217728:case 268435456:case 536870912:case 1073741824:return-1;default:return-1}}function wc(i,s){for(var o=i.suspendedLanes,a=i.pingedLanes,c=i.expirationTimes,d=i.pendingLanes;0<d;){var g=31-oc(d),$=1<<g,j=c[g];j===-1?(!($&o)||$&a)&&(c[g]=vc($,s)):j<=s&&(i.expiredLanes|=$),d&=~$}}function xc(i){return i=i.pendingLanes&-1073741825,i!==0?i:i&1073741824?1073741824:0}function yc(){var i=rc;return rc<<=1,!(rc&4194240)&&(rc=64),i}function zc(i){for(var s=[],o=0;31>o;o++)s.push(i);return s}function Ac(i,s,o){i.pendingLanes|=s,s!==536870912&&(i.suspendedLanes=0,i.pingedLanes=0),i=i.eventTimes,s=31-oc(s),i[s]=o}function Bc(i,s){var o=i.pendingLanes&~s;i.pendingLanes=s,i.suspendedLanes=0,i.pingedLanes=0,i.expiredLanes&=s,i.mutableReadLanes&=s,i.entangledLanes&=s,s=i.entanglements;var a=i.eventTimes;for(i=i.expirationTimes;0<o;){var c=31-oc(o),d=1<<c;s[c]=0,a[c]=-1,i[c]=-1,o&=~d}}function Cc(i,s){var o=i.entangledLanes|=s;for(i=i.entanglements;o;){var a=31-oc(o),c=1<<a;c&s|i[a]&s&&(i[a]|=s),o&=~c}}var C=0;function Dc(i){return i&=-i,1<i?4<i?i&268435455?16:536870912:4:1}var Ec,Fc,Gc,Hc,Ic,Jc=!1,Kc=[],Lc=null,Mc=null,Nc=null,Oc=new Map,Pc=new Map,Qc=[],Rc="mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit".split(" ");function Sc(i,s){switch(i){case"focusin":case"focusout":Lc=null;break;case"dragenter":case"dragleave":Mc=null;break;case"mouseover":case"mouseout":Nc=null;break;case"pointerover":case"pointerout":Oc.delete(s.pointerId);break;case"gotpointercapture":case"lostpointercapture":Pc.delete(s.pointerId)}}function Tc(i,s,o,a,c,d){return i===null||i.nativeEvent!==d?(i={blockedOn:s,domEventName:o,eventSystemFlags:a,nativeEvent:d,targetContainers:[c]},s!==null&&(s=Cb(s),s!==null&&Fc(s)),i):(i.eventSystemFlags|=a,s=i.targetContainers,c!==null&&s.indexOf(c)===-1&&s.push(c),i)}function Uc(i,s,o,a,c){switch(s){case"focusin":return Lc=Tc(Lc,i,s,o,a,c),!0;case"dragenter":return Mc=Tc(Mc,i,s,o,a,c),!0;case"mouseover":return Nc=Tc(Nc,i,s,o,a,c),!0;case"pointerover":var d=c.pointerId;return Oc.set(d,Tc(Oc.get(d)||null,i,s,o,a,c)),!0;case"gotpointercapture":return d=c.pointerId,Pc.set(d,Tc(Pc.get(d)||null,i,s,o,a,c)),!0}return!1}function Vc(i){var s=Wc(i.target);if(s!==null){var o=Vb(s);if(o!==null){if(s=o.tag,s===13){if(s=Wb(o),s!==null){i.blockedOn=s,Ic(i.priority,function(){Gc(o)});return}}else if(s===3&&o.stateNode.current.memoizedState.isDehydrated){i.blockedOn=o.tag===3?o.stateNode.containerInfo:null;return}}}i.blockedOn=null}function Xc(i){if(i.blockedOn!==null)return!1;for(var s=i.targetContainers;0<s.length;){var o=Yc(i.domEventName,i.eventSystemFlags,s[0],i.nativeEvent);if(o===null){o=i.nativeEvent;var a=new o.constructor(o.type,o);wb=a,o.target.dispatchEvent(a),wb=null}else return s=Cb(o),s!==null&&Fc(s),i.blockedOn=o,!1;s.shift()}return!0}function Zc(i,s,o){Xc(i)&&o.delete(s)}function $c(){Jc=!1,Lc!==null&&Xc(Lc)&&(Lc=null),Mc!==null&&Xc(Mc)&&(Mc=null),Nc!==null&&Xc(Nc)&&(Nc=null),Oc.forEach(Zc),Pc.forEach(Zc)}function ad(i,s){i.blockedOn===s&&(i.blockedOn=null,Jc||(Jc=!0,ca.unstable_scheduleCallback(ca.unstable_NormalPriority,$c)))}function bd(i){function s(c){return ad(c,i)}if(0<Kc.length){ad(Kc[0],i);for(var o=1;o<Kc.length;o++){var a=Kc[o];a.blockedOn===i&&(a.blockedOn=null)}}for(Lc!==null&&ad(Lc,i),Mc!==null&&ad(Mc,i),Nc!==null&&ad(Nc,i),Oc.forEach(s),Pc.forEach(s),o=0;o<Qc.length;o++)a=Qc[o],a.blockedOn===i&&(a.blockedOn=null);for(;0<Qc.length&&(o=Qc[0],o.blockedOn===null);)Vc(o),o.blockedOn===null&&Qc.shift()}var cd=ua.ReactCurrentBatchConfig,dd=!0;function ed(i,s,o,a){var c=C,d=cd.transition;cd.transition=null;try{C=1,fd(i,s,o,a)}finally{C=c,cd.transition=d}}function gd(i,s,o,a){var c=C,d=cd.transition;cd.transition=null;try{C=4,fd(i,s,o,a)}finally{C=c,cd.transition=d}}function fd(i,s,o,a){if(dd){var c=Yc(i,s,o,a);if(c===null)hd(i,s,a,id,o),Sc(i,a);else if(Uc(c,i,s,o,a))a.stopPropagation();else if(Sc(i,a),s&4&&-1<Rc.indexOf(i)){for(;c!==null;){var d=Cb(c);if(d!==null&&Ec(d),d=Yc(i,s,o,a),d===null&&hd(i,s,a,id,o),d===c)break;c=d}c!==null&&a.stopPropagation()}else hd(i,s,a,null,o)}}var id=null;function Yc(i,s,o,a){if(id=null,i=xb(a),i=Wc(i),i!==null)if(s=Vb(i),s===null)i=null;else if(o=s.tag,o===13){if(i=Wb(s),i!==null)return i;i=null}else if(o===3){if(s.stateNode.current.memoizedState.isDehydrated)return s.tag===3?s.stateNode.containerInfo:null;i=null}else s!==i&&(i=null);return id=i,null}function jd(i){switch(i){case"cancel":case"click":case"close":case"contextmenu":case"copy":case"cut":case"auxclick":case"dblclick":case"dragend":case"dragstart":case"drop":case"focusin":case"focusout":case"input":case"invalid":case"keydown":case"keypress":case"keyup":case"mousedown":case"mouseup":case"paste":case"pause":case"play":case"pointercancel":case"pointerdown":case"pointerup":case"ratechange":case"reset":case"resize":case"seeked":case"submit":case"touchcancel":case"touchend":case"touchstart":case"volumechange":case"change":case"selectionchange":case"textInput":case"compositionstart":case"compositionend":case"compositionupdate":case"beforeblur":case"afterblur":case"beforeinput":case"blur":case"fullscreenchange":case"focus":case"hashchange":case"popstate":case"select":case"selectstart":return 1;case"drag":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"mousemove":case"mouseout":case"mouseover":case"pointermove":case"pointerout":case"pointerover":case"scroll":case"toggle":case"touchmove":case"wheel":case"mouseenter":case"mouseleave":case"pointerenter":case"pointerleave":return 4;case"message":switch(ec()){case fc:return 1;case gc:return 4;case hc:case ic:return 16;case jc:return 536870912;default:return 16}default:return 16}}var kd=null,ld=null,md=null;function nd(){if(md)return md;var i,s=ld,o=s.length,a,c="value"in kd?kd.value:kd.textContent,d=c.length;for(i=0;i<o&&s[i]===c[i];i++);var g=o-i;for(a=1;a<=g&&s[o-a]===c[d-a];a++);return md=c.slice(i,1<a?1-a:void 0)}function od(i){var s=i.keyCode;return"charCode"in i?(i=i.charCode,i===0&&s===13&&(i=13)):i=s,i===10&&(i=13),32<=i||i===13?i:0}function pd(){return!0}function qd(){return!1}function rd(i){function s(o,a,c,d,g){this._reactName=o,this._targetInst=c,this.type=a,this.nativeEvent=d,this.target=g,this.currentTarget=null;for(var $ in i)i.hasOwnProperty($)&&(o=i[$],this[$]=o?o(d):d[$]);return this.isDefaultPrevented=(d.defaultPrevented!=null?d.defaultPrevented:d.returnValue===!1)?pd:qd,this.isPropagationStopped=qd,this}return A(s.prototype,{preventDefault:function(){this.defaultPrevented=!0;var o=this.nativeEvent;o&&(o.preventDefault?o.preventDefault():typeof o.returnValue!="unknown"&&(o.returnValue=!1),this.isDefaultPrevented=pd)},stopPropagation:function(){var o=this.nativeEvent;o&&(o.stopPropagation?o.stopPropagation():typeof o.cancelBubble!="unknown"&&(o.cancelBubble=!0),this.isPropagationStopped=pd)},persist:function(){},isPersistent:pd}),s}var sd={eventPhase:0,bubbles:0,cancelable:0,timeStamp:function(i){return i.timeStamp||Date.now()},defaultPrevented:0,isTrusted:0},td=rd(sd),ud=A({},sd,{view:0,detail:0}),vd=rd(ud),wd,xd,yd,Ad=A({},ud,{screenX:0,screenY:0,clientX:0,clientY:0,pageX:0,pageY:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,getModifierState:zd,button:0,buttons:0,relatedTarget:function(i){return i.relatedTarget===void 0?i.fromElement===i.srcElement?i.toElement:i.fromElement:i.relatedTarget},movementX:function(i){return"movementX"in i?i.movementX:(i!==yd&&(yd&&i.type==="mousemove"?(wd=i.screenX-yd.screenX,xd=i.screenY-yd.screenY):xd=wd=0,yd=i),wd)},movementY:function(i){return"movementY"in i?i.movementY:xd}}),Bd=rd(Ad),Cd=A({},Ad,{dataTransfer:0}),Dd=rd(Cd),Ed=A({},ud,{relatedTarget:0}),Fd=rd(Ed),Gd=A({},sd,{animationName:0,elapsedTime:0,pseudoElement:0}),Hd=rd(Gd),Id=A({},sd,{clipboardData:function(i){return"clipboardData"in i?i.clipboardData:window.clipboardData}}),Jd=rd(Id),Kd=A({},sd,{data:0}),Ld=rd(Kd),Md={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},Nd={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},Od={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function Pd(i){var s=this.nativeEvent;return s.getModifierState?s.getModifierState(i):(i=Od[i])?!!s[i]:!1}function zd(){return Pd}var Qd=A({},ud,{key:function(i){if(i.key){var s=Md[i.key]||i.key;if(s!=="Unidentified")return s}return i.type==="keypress"?(i=od(i),i===13?"Enter":String.fromCharCode(i)):i.type==="keydown"||i.type==="keyup"?Nd[i.keyCode]||"Unidentified":""},code:0,location:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,repeat:0,locale:0,getModifierState:zd,charCode:function(i){return i.type==="keypress"?od(i):0},keyCode:function(i){return i.type==="keydown"||i.type==="keyup"?i.keyCode:0},which:function(i){return i.type==="keypress"?od(i):i.type==="keydown"||i.type==="keyup"?i.keyCode:0}}),Rd=rd(Qd),Sd=A({},Ad,{pointerId:0,width:0,height:0,pressure:0,tangentialPressure:0,tiltX:0,tiltY:0,twist:0,pointerType:0,isPrimary:0}),Td=rd(Sd),Ud=A({},ud,{touches:0,targetTouches:0,changedTouches:0,altKey:0,metaKey:0,ctrlKey:0,shiftKey:0,getModifierState:zd}),Vd=rd(Ud),Wd=A({},sd,{propertyName:0,elapsedTime:0,pseudoElement:0}),Xd=rd(Wd),Yd=A({},Ad,{deltaX:function(i){return"deltaX"in i?i.deltaX:"wheelDeltaX"in i?-i.wheelDeltaX:0},deltaY:function(i){return"deltaY"in i?i.deltaY:"wheelDeltaY"in i?-i.wheelDeltaY:"wheelDelta"in i?-i.wheelDelta:0},deltaZ:0,deltaMode:0}),Zd=rd(Yd),$d=[9,13,27,32],ae=ia&&"CompositionEvent"in window,be=null;ia&&"documentMode"in document&&(be=document.documentMode);var ce=ia&&"TextEvent"in window&&!be,de=ia&&(!ae||be&&8<be&&11>=be),ee=" ",fe=!1;function ge(i,s){switch(i){case"keyup":return $d.indexOf(s.keyCode)!==-1;case"keydown":return s.keyCode!==229;case"keypress":case"mousedown":case"focusout":return!0;default:return!1}}function he(i){return i=i.detail,typeof i=="object"&&"data"in i?i.data:null}var ie=!1;function je(i,s){switch(i){case"compositionend":return he(s);case"keypress":return s.which!==32?null:(fe=!0,ee);case"textInput":return i=s.data,i===ee&&fe?null:i;default:return null}}function ke(i,s){if(ie)return i==="compositionend"||!ae&&ge(i,s)?(i=nd(),md=ld=kd=null,ie=!1,i):null;switch(i){case"paste":return null;case"keypress":if(!(s.ctrlKey||s.altKey||s.metaKey)||s.ctrlKey&&s.altKey){if(s.char&&1<s.char.length)return s.char;if(s.which)return String.fromCharCode(s.which)}return null;case"compositionend":return de&&s.locale!=="ko"?null:s.data;default:return null}}var le={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function me(i){var s=i&&i.nodeName&&i.nodeName.toLowerCase();return s==="input"?!!le[i.type]:s==="textarea"}function ne(i,s,o,a){Eb(a),s=oe(s,"onChange"),0<s.length&&(o=new td("onChange","change",null,o,a),i.push({event:o,listeners:s}))}var pe=null,qe=null;function re(i){se(i,0)}function te(i){var s=ue(i);if(Wa(s))return i}function ve(i,s){if(i==="change")return s}var we=!1;if(ia){var xe;if(ia){var ye="oninput"in document;if(!ye){var ze=document.createElement("div");ze.setAttribute("oninput","return;"),ye=typeof ze.oninput=="function"}xe=ye}else xe=!1;we=xe&&(!document.documentMode||9<document.documentMode)}function Ae(){pe&&(pe.detachEvent("onpropertychange",Be),qe=pe=null)}function Be(i){if(i.propertyName==="value"&&te(qe)){var s=[];ne(s,qe,i,xb(i)),Jb(re,s)}}function Ce(i,s,o){i==="focusin"?(Ae(),pe=s,qe=o,pe.attachEvent("onpropertychange",Be)):i==="focusout"&&Ae()}function De(i){if(i==="selectionchange"||i==="keyup"||i==="keydown")return te(qe)}function Ee(i,s){if(i==="click")return te(s)}function Fe(i,s){if(i==="input"||i==="change")return te(s)}function Ge(i,s){return i===s&&(i!==0||1/i===1/s)||i!==i&&s!==s}var He=typeof Object.is=="function"?Object.is:Ge;function Ie(i,s){if(He(i,s))return!0;if(typeof i!="object"||i===null||typeof s!="object"||s===null)return!1;var o=Object.keys(i),a=Object.keys(s);if(o.length!==a.length)return!1;for(a=0;a<o.length;a++){var c=o[a];if(!ja.call(s,c)||!He(i[c],s[c]))return!1}return!0}function Je(i){for(;i&&i.firstChild;)i=i.firstChild;return i}function Ke(i,s){var o=Je(i);i=0;for(var a;o;){if(o.nodeType===3){if(a=i+o.textContent.length,i<=s&&a>=s)return{node:o,offset:s-i};i=a}e:{for(;o;){if(o.nextSibling){o=o.nextSibling;break e}o=o.parentNode}o=void 0}o=Je(o)}}function Le(i,s){return i&&s?i===s?!0:i&&i.nodeType===3?!1:s&&s.nodeType===3?Le(i,s.parentNode):"contains"in i?i.contains(s):i.compareDocumentPosition?!!(i.compareDocumentPosition(s)&16):!1:!1}function Me(){for(var i=window,s=Xa();s instanceof i.HTMLIFrameElement;){try{var o=typeof s.contentWindow.location.href=="string"}catch{o=!1}if(o)i=s.contentWindow;else break;s=Xa(i.document)}return s}function Ne(i){var s=i&&i.nodeName&&i.nodeName.toLowerCase();return s&&(s==="input"&&(i.type==="text"||i.type==="search"||i.type==="tel"||i.type==="url"||i.type==="password")||s==="textarea"||i.contentEditable==="true")}function Oe(i){var s=Me(),o=i.focusedElem,a=i.selectionRange;if(s!==o&&o&&o.ownerDocument&&Le(o.ownerDocument.documentElement,o)){if(a!==null&&Ne(o)){if(s=a.start,i=a.end,i===void 0&&(i=s),"selectionStart"in o)o.selectionStart=s,o.selectionEnd=Math.min(i,o.value.length);else if(i=(s=o.ownerDocument||document)&&s.defaultView||window,i.getSelection){i=i.getSelection();var c=o.textContent.length,d=Math.min(a.start,c);a=a.end===void 0?d:Math.min(a.end,c),!i.extend&&d>a&&(c=a,a=d,d=c),c=Ke(o,d);var g=Ke(o,a);c&&g&&(i.rangeCount!==1||i.anchorNode!==c.node||i.anchorOffset!==c.offset||i.focusNode!==g.node||i.focusOffset!==g.offset)&&(s=s.createRange(),s.setStart(c.node,c.offset),i.removeAllRanges(),d>a?(i.addRange(s),i.extend(g.node,g.offset)):(s.setEnd(g.node,g.offset),i.addRange(s)))}}for(s=[],i=o;i=i.parentNode;)i.nodeType===1&&s.push({element:i,left:i.scrollLeft,top:i.scrollTop});for(typeof o.focus=="function"&&o.focus(),o=0;o<s.length;o++)i=s[o],i.element.scrollLeft=i.left,i.element.scrollTop=i.top}}var Pe=ia&&"documentMode"in document&&11>=document.documentMode,Qe=null,Re=null,Se=null,Te=!1;function Ue(i,s,o){var a=o.window===o?o.document:o.nodeType===9?o:o.ownerDocument;Te||Qe==null||Qe!==Xa(a)||(a=Qe,"selectionStart"in a&&Ne(a)?a={start:a.selectionStart,end:a.selectionEnd}:(a=(a.ownerDocument&&a.ownerDocument.defaultView||window).getSelection(),a={anchorNode:a.anchorNode,anchorOffset:a.anchorOffset,focusNode:a.focusNode,focusOffset:a.focusOffset}),Se&&Ie(Se,a)||(Se=a,a=oe(Re,"onSelect"),0<a.length&&(s=new td("onSelect","select",null,s,o),i.push({event:s,listeners:a}),s.target=Qe)))}function Ve(i,s){var o={};return o[i.toLowerCase()]=s.toLowerCase(),o["Webkit"+i]="webkit"+s,o["Moz"+i]="moz"+s,o}var We={animationend:Ve("Animation","AnimationEnd"),animationiteration:Ve("Animation","AnimationIteration"),animationstart:Ve("Animation","AnimationStart"),transitionend:Ve("Transition","TransitionEnd")},Xe={},Ye={};ia&&(Ye=document.createElement("div").style,"AnimationEvent"in window||(delete We.animationend.animation,delete We.animationiteration.animation,delete We.animationstart.animation),"TransitionEvent"in window||delete We.transitionend.transition);function Ze(i){if(Xe[i])return Xe[i];if(!We[i])return i;var s=We[i],o;for(o in s)if(s.hasOwnProperty(o)&&o in Ye)return Xe[i]=s[o];return i}var $e=Ze("animationend"),af=Ze("animationiteration"),bf=Ze("animationstart"),cf=Ze("transitionend"),df=new Map,ef="abort auxClick cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll toggle touchMove waiting wheel".split(" ");function ff(i,s){df.set(i,s),fa(s,[i])}for(var gf=0;gf<ef.length;gf++){var hf=ef[gf],jf=hf.toLowerCase(),kf=hf[0].toUpperCase()+hf.slice(1);ff(jf,"on"+kf)}ff($e,"onAnimationEnd");ff(af,"onAnimationIteration");ff(bf,"onAnimationStart");ff("dblclick","onDoubleClick");ff("focusin","onFocus");ff("focusout","onBlur");ff(cf,"onTransitionEnd");ha("onMouseEnter",["mouseout","mouseover"]);ha("onMouseLeave",["mouseout","mouseover"]);ha("onPointerEnter",["pointerout","pointerover"]);ha("onPointerLeave",["pointerout","pointerover"]);fa("onChange","change click focusin focusout input keydown keyup selectionchange".split(" "));fa("onSelect","focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange".split(" "));fa("onBeforeInput",["compositionend","keypress","textInput","paste"]);fa("onCompositionEnd","compositionend focusout keydown keypress keyup mousedown".split(" "));fa("onCompositionStart","compositionstart focusout keydown keypress keyup mousedown".split(" "));fa("onCompositionUpdate","compositionupdate focusout keydown keypress keyup mousedown".split(" "));var lf="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),mf=new Set("cancel close invalid load scroll toggle".split(" ").concat(lf));function nf(i,s,o){var a=i.type||"unknown-event";i.currentTarget=o,Ub(a,s,void 0,i),i.currentTarget=null}function se(i,s){s=(s&4)!==0;for(var o=0;o<i.length;o++){var a=i[o],c=a.event;a=a.listeners;e:{var d=void 0;if(s)for(var g=a.length-1;0<=g;g--){var $=a[g],j=$.instance,_e=$.currentTarget;if($=$.listener,j!==d&&c.isPropagationStopped())break e;nf(c,$,_e),d=j}else for(g=0;g<a.length;g++){if($=a[g],j=$.instance,_e=$.currentTarget,$=$.listener,j!==d&&c.isPropagationStopped())break e;nf(c,$,_e),d=j}}}if(Qb)throw i=Rb,Qb=!1,Rb=null,i}function D(i,s){var o=s[of];o===void 0&&(o=s[of]=new Set);var a=i+"__bubble";o.has(a)||(pf(s,i,2,!1),o.add(a))}function qf(i,s,o){var a=0;s&&(a|=4),pf(o,i,a,s)}var rf="_reactListening"+Math.random().toString(36).slice(2);function sf(i){if(!i[rf]){i[rf]=!0,da.forEach(function(o){o!=="selectionchange"&&(mf.has(o)||qf(o,!1,i),qf(o,!0,i))});var s=i.nodeType===9?i:i.ownerDocument;s===null||s[rf]||(s[rf]=!0,qf("selectionchange",!1,s))}}function pf(i,s,o,a){switch(jd(s)){case 1:var c=ed;break;case 4:c=gd;break;default:c=fd}o=c.bind(null,s,o,i),c=void 0,!Lb||s!=="touchstart"&&s!=="touchmove"&&s!=="wheel"||(c=!0),a?c!==void 0?i.addEventListener(s,o,{capture:!0,passive:c}):i.addEventListener(s,o,!0):c!==void 0?i.addEventListener(s,o,{passive:c}):i.addEventListener(s,o,!1)}function hd(i,s,o,a,c){var d=a;if(!(s&1)&&!(s&2)&&a!==null)e:for(;;){if(a===null)return;var g=a.tag;if(g===3||g===4){var $=a.stateNode.containerInfo;if($===c||$.nodeType===8&&$.parentNode===c)break;if(g===4)for(g=a.return;g!==null;){var j=g.tag;if((j===3||j===4)&&(j=g.stateNode.containerInfo,j===c||j.nodeType===8&&j.parentNode===c))return;g=g.return}for(;$!==null;){if(g=Wc($),g===null)return;if(j=g.tag,j===5||j===6){a=d=g;continue e}$=$.parentNode}}a=a.return}Jb(function(){var _e=d,et=xb(o),_=[];e:{var b=df.get(i);if(b!==void 0){var tt=td,nt=i;switch(i){case"keypress":if(od(o)===0)break e;case"keydown":case"keyup":tt=Rd;break;case"focusin":nt="focus",tt=Fd;break;case"focusout":nt="blur",tt=Fd;break;case"beforeblur":case"afterblur":tt=Fd;break;case"click":if(o.button===2)break e;case"auxclick":case"dblclick":case"mousedown":case"mousemove":case"mouseup":case"mouseout":case"mouseover":case"contextmenu":tt=Bd;break;case"drag":case"dragend":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"dragstart":case"drop":tt=Dd;break;case"touchcancel":case"touchend":case"touchmove":case"touchstart":tt=Vd;break;case $e:case af:case bf:tt=Hd;break;case cf:tt=Xd;break;case"scroll":tt=vd;break;case"wheel":tt=Zd;break;case"copy":case"cut":case"paste":tt=Jd;break;case"gotpointercapture":case"lostpointercapture":case"pointercancel":case"pointerdown":case"pointermove":case"pointerout":case"pointerover":case"pointerup":tt=Td}var rt=(s&4)!==0,st=!rt&&i==="scroll",ot=rt?b!==null?b+"Capture":null:b;rt=[];for(var it=_e,at;it!==null;){at=it;var lt=at.stateNode;if(at.tag===5&&lt!==null&&(at=lt,ot!==null&&(lt=Kb(it,ot),lt!=null&&rt.push(tf(it,lt,at)))),st)break;it=it.return}0<rt.length&&(b=new tt(b,nt,null,o,et),_.push({event:b,listeners:rt}))}}if(!(s&7)){e:{if(b=i==="mouseover"||i==="pointerover",tt=i==="mouseout"||i==="pointerout",b&&o!==wb&&(nt=o.relatedTarget||o.fromElement)&&(Wc(nt)||nt[uf]))break e;if((tt||b)&&(b=et.window===et?et:(b=et.ownerDocument)?b.defaultView||b.parentWindow:window,tt?(nt=o.relatedTarget||o.toElement,tt=_e,nt=nt?Wc(nt):null,nt!==null&&(st=Vb(nt),nt!==st||nt.tag!==5&&nt.tag!==6)&&(nt=null)):(tt=null,nt=_e),tt!==nt)){if(rt=Bd,lt="onMouseLeave",ot="onMouseEnter",it="mouse",(i==="pointerout"||i==="pointerover")&&(rt=Td,lt="onPointerLeave",ot="onPointerEnter",it="pointer"),st=tt==null?b:ue(tt),at=nt==null?b:ue(nt),b=new rt(lt,it+"leave",tt,o,et),b.target=st,b.relatedTarget=at,lt=null,Wc(et)===_e&&(rt=new rt(ot,it+"enter",nt,o,et),rt.target=at,rt.relatedTarget=st,lt=rt),st=lt,tt&&nt)t:{for(rt=tt,ot=nt,it=0,at=rt;at;at=vf(at))it++;for(at=0,lt=ot;lt;lt=vf(lt))at++;for(;0<it-at;)rt=vf(rt),it--;for(;0<at-it;)ot=vf(ot),at--;for(;it--;){if(rt===ot||ot!==null&&rt===ot.alternate)break t;rt=vf(rt),ot=vf(ot)}rt=null}else rt=null;tt!==null&&wf(_,b,tt,rt,!1),nt!==null&&st!==null&&wf(_,st,nt,rt,!0)}}e:{if(b=_e?ue(_e):window,tt=b.nodeName&&b.nodeName.toLowerCase(),tt==="select"||tt==="input"&&b.type==="file")var ut=ve;else if(me(b))if(we)ut=Fe;else{ut=De;var ct=Ce}else(tt=b.nodeName)&&tt.toLowerCase()==="input"&&(b.type==="checkbox"||b.type==="radio")&&(ut=Ee);if(ut&&(ut=ut(i,_e))){ne(_,ut,o,et);break e}ct&&ct(i,b,_e),i==="focusout"&&(ct=b._wrapperState)&&ct.controlled&&b.type==="number"&&cb(b,"number",b.value)}switch(ct=_e?ue(_e):window,i){case"focusin":(me(ct)||ct.contentEditable==="true")&&(Qe=ct,Re=_e,Se=null);break;case"focusout":Se=Re=Qe=null;break;case"mousedown":Te=!0;break;case"contextmenu":case"mouseup":case"dragend":Te=!1,Ue(_,o,et);break;case"selectionchange":if(Pe)break;case"keydown":case"keyup":Ue(_,o,et)}var dt;if(ae)e:{switch(i){case"compositionstart":var pt="onCompositionStart";break e;case"compositionend":pt="onCompositionEnd";break e;case"compositionupdate":pt="onCompositionUpdate";break e}pt=void 0}else ie?ge(i,o)&&(pt="onCompositionEnd"):i==="keydown"&&o.keyCode===229&&(pt="onCompositionStart");pt&&(de&&o.locale!=="ko"&&(ie||pt!=="onCompositionStart"?pt==="onCompositionEnd"&&ie&&(dt=nd()):(kd=et,ld="value"in kd?kd.value:kd.textContent,ie=!0)),ct=oe(_e,pt),0<ct.length&&(pt=new Ld(pt,i,null,o,et),_.push({event:pt,listeners:ct}),dt?pt.data=dt:(dt=he(o),dt!==null&&(pt.data=dt)))),(dt=ce?je(i,o):ke(i,o))&&(_e=oe(_e,"onBeforeInput"),0<_e.length&&(et=new Ld("onBeforeInput","beforeinput",null,o,et),_.push({event:et,listeners:_e}),et.data=dt))}se(_,s)})}function tf(i,s,o){return{instance:i,listener:s,currentTarget:o}}function oe(i,s){for(var o=s+"Capture",a=[];i!==null;){var c=i,d=c.stateNode;c.tag===5&&d!==null&&(c=d,d=Kb(i,o),d!=null&&a.unshift(tf(i,d,c)),d=Kb(i,s),d!=null&&a.push(tf(i,d,c))),i=i.return}return a}function vf(i){if(i===null)return null;do i=i.return;while(i&&i.tag!==5);return i||null}function wf(i,s,o,a,c){for(var d=s._reactName,g=[];o!==null&&o!==a;){var $=o,j=$.alternate,_e=$.stateNode;if(j!==null&&j===a)break;$.tag===5&&_e!==null&&($=_e,c?(j=Kb(o,d),j!=null&&g.unshift(tf(o,j,$))):c||(j=Kb(o,d),j!=null&&g.push(tf(o,j,$)))),o=o.return}g.length!==0&&i.push({event:s,listeners:g})}var xf=/\r\n?/g,yf=/\u0000|\uFFFD/g;function zf(i){return(typeof i=="string"?i:""+i).replace(xf,`
`).replace(yf,"")}function Af(i,s,o){if(s=zf(s),zf(i)!==s&&o)throw Error(p$2(425))}function Bf(){}var Cf=null,Df=null;function Ef(i,s){return i==="textarea"||i==="noscript"||typeof s.children=="string"||typeof s.children=="number"||typeof s.dangerouslySetInnerHTML=="object"&&s.dangerouslySetInnerHTML!==null&&s.dangerouslySetInnerHTML.__html!=null}var Ff=typeof setTimeout=="function"?setTimeout:void 0,Gf=typeof clearTimeout=="function"?clearTimeout:void 0,Hf=typeof Promise=="function"?Promise:void 0,Jf=typeof queueMicrotask=="function"?queueMicrotask:typeof Hf<"u"?function(i){return Hf.resolve(null).then(i).catch(If$1)}:Ff;function If$1(i){setTimeout(function(){throw i})}function Kf(i,s){var o=s,a=0;do{var c=o.nextSibling;if(i.removeChild(o),c&&c.nodeType===8)if(o=c.data,o==="/$"){if(a===0){i.removeChild(c),bd(s);return}a--}else o!=="$"&&o!=="$?"&&o!=="$!"||a++;o=c}while(o);bd(s)}function Lf(i){for(;i!=null;i=i.nextSibling){var s=i.nodeType;if(s===1||s===3)break;if(s===8){if(s=i.data,s==="$"||s==="$!"||s==="$?")break;if(s==="/$")return null}}return i}function Mf(i){i=i.previousSibling;for(var s=0;i;){if(i.nodeType===8){var o=i.data;if(o==="$"||o==="$!"||o==="$?"){if(s===0)return i;s--}else o==="/$"&&s++}i=i.previousSibling}return null}var Nf=Math.random().toString(36).slice(2),Of="__reactFiber$"+Nf,Pf="__reactProps$"+Nf,uf="__reactContainer$"+Nf,of="__reactEvents$"+Nf,Qf="__reactListeners$"+Nf,Rf="__reactHandles$"+Nf;function Wc(i){var s=i[Of];if(s)return s;for(var o=i.parentNode;o;){if(s=o[uf]||o[Of]){if(o=s.alternate,s.child!==null||o!==null&&o.child!==null)for(i=Mf(i);i!==null;){if(o=i[Of])return o;i=Mf(i)}return s}i=o,o=i.parentNode}return null}function Cb(i){return i=i[Of]||i[uf],!i||i.tag!==5&&i.tag!==6&&i.tag!==13&&i.tag!==3?null:i}function ue(i){if(i.tag===5||i.tag===6)return i.stateNode;throw Error(p$2(33))}function Db(i){return i[Pf]||null}var Sf=[],Tf=-1;function Uf(i){return{current:i}}function E(i){0>Tf||(i.current=Sf[Tf],Sf[Tf]=null,Tf--)}function G(i,s){Tf++,Sf[Tf]=i.current,i.current=s}var Vf={},H=Uf(Vf),Wf=Uf(!1),Xf=Vf;function Yf(i,s){var o=i.type.contextTypes;if(!o)return Vf;var a=i.stateNode;if(a&&a.__reactInternalMemoizedUnmaskedChildContext===s)return a.__reactInternalMemoizedMaskedChildContext;var c={},d;for(d in o)c[d]=s[d];return a&&(i=i.stateNode,i.__reactInternalMemoizedUnmaskedChildContext=s,i.__reactInternalMemoizedMaskedChildContext=c),c}function Zf(i){return i=i.childContextTypes,i!=null}function $f(){E(Wf),E(H)}function ag(i,s,o){if(H.current!==Vf)throw Error(p$2(168));G(H,s),G(Wf,o)}function bg(i,s,o){var a=i.stateNode;if(s=s.childContextTypes,typeof a.getChildContext!="function")return o;a=a.getChildContext();for(var c in a)if(!(c in s))throw Error(p$2(108,Ra(i)||"Unknown",c));return A({},o,a)}function cg(i){return i=(i=i.stateNode)&&i.__reactInternalMemoizedMergedChildContext||Vf,Xf=H.current,G(H,i),G(Wf,Wf.current),!0}function dg(i,s,o){var a=i.stateNode;if(!a)throw Error(p$2(169));o?(i=bg(i,s,Xf),a.__reactInternalMemoizedMergedChildContext=i,E(Wf),E(H),G(H,i)):E(Wf),G(Wf,o)}var eg=null,fg=!1,gg=!1;function hg(i){eg===null?eg=[i]:eg.push(i)}function ig(i){fg=!0,hg(i)}function jg(){if(!gg&&eg!==null){gg=!0;var i=0,s=C;try{var o=eg;for(C=1;i<o.length;i++){var a=o[i];do a=a(!0);while(a!==null)}eg=null,fg=!1}catch(c){throw eg!==null&&(eg=eg.slice(i+1)),ac(fc,jg),c}finally{C=s,gg=!1}}return null}var kg=[],lg=0,mg=null,ng=0,og=[],pg=0,qg=null,rg=1,sg="";function tg(i,s){kg[lg++]=ng,kg[lg++]=mg,mg=i,ng=s}function ug(i,s,o){og[pg++]=rg,og[pg++]=sg,og[pg++]=qg,qg=i;var a=rg;i=sg;var c=32-oc(a)-1;a&=~(1<<c),o+=1;var d=32-oc(s)+c;if(30<d){var g=c-c%5;d=(a&(1<<g)-1).toString(32),a>>=g,c-=g,rg=1<<32-oc(s)+c|o<<c|a,sg=d+i}else rg=1<<d|o<<c|a,sg=i}function vg(i){i.return!==null&&(tg(i,1),ug(i,1,0))}function wg(i){for(;i===mg;)mg=kg[--lg],kg[lg]=null,ng=kg[--lg],kg[lg]=null;for(;i===qg;)qg=og[--pg],og[pg]=null,sg=og[--pg],og[pg]=null,rg=og[--pg],og[pg]=null}var xg=null,yg=null,I=!1,zg=null;function Ag(i,s){var o=Bg(5,null,null,0);o.elementType="DELETED",o.stateNode=s,o.return=i,s=i.deletions,s===null?(i.deletions=[o],i.flags|=16):s.push(o)}function Cg(i,s){switch(i.tag){case 5:var o=i.type;return s=s.nodeType!==1||o.toLowerCase()!==s.nodeName.toLowerCase()?null:s,s!==null?(i.stateNode=s,xg=i,yg=Lf(s.firstChild),!0):!1;case 6:return s=i.pendingProps===""||s.nodeType!==3?null:s,s!==null?(i.stateNode=s,xg=i,yg=null,!0):!1;case 13:return s=s.nodeType!==8?null:s,s!==null?(o=qg!==null?{id:rg,overflow:sg}:null,i.memoizedState={dehydrated:s,treeContext:o,retryLane:1073741824},o=Bg(18,null,null,0),o.stateNode=s,o.return=i,i.child=o,xg=i,yg=null,!0):!1;default:return!1}}function Dg(i){return(i.mode&1)!==0&&(i.flags&128)===0}function Eg(i){if(I){var s=yg;if(s){var o=s;if(!Cg(i,s)){if(Dg(i))throw Error(p$2(418));s=Lf(o.nextSibling);var a=xg;s&&Cg(i,s)?Ag(a,o):(i.flags=i.flags&-4097|2,I=!1,xg=i)}}else{if(Dg(i))throw Error(p$2(418));i.flags=i.flags&-4097|2,I=!1,xg=i}}}function Fg(i){for(i=i.return;i!==null&&i.tag!==5&&i.tag!==3&&i.tag!==13;)i=i.return;xg=i}function Gg(i){if(i!==xg)return!1;if(!I)return Fg(i),I=!0,!1;var s;if((s=i.tag!==3)&&!(s=i.tag!==5)&&(s=i.type,s=s!=="head"&&s!=="body"&&!Ef(i.type,i.memoizedProps)),s&&(s=yg)){if(Dg(i))throw Hg(),Error(p$2(418));for(;s;)Ag(i,s),s=Lf(s.nextSibling)}if(Fg(i),i.tag===13){if(i=i.memoizedState,i=i!==null?i.dehydrated:null,!i)throw Error(p$2(317));e:{for(i=i.nextSibling,s=0;i;){if(i.nodeType===8){var o=i.data;if(o==="/$"){if(s===0){yg=Lf(i.nextSibling);break e}s--}else o!=="$"&&o!=="$!"&&o!=="$?"||s++}i=i.nextSibling}yg=null}}else yg=xg?Lf(i.stateNode.nextSibling):null;return!0}function Hg(){for(var i=yg;i;)i=Lf(i.nextSibling)}function Ig(){yg=xg=null,I=!1}function Jg(i){zg===null?zg=[i]:zg.push(i)}var Kg=ua.ReactCurrentBatchConfig;function Lg(i,s,o){if(i=o.ref,i!==null&&typeof i!="function"&&typeof i!="object"){if(o._owner){if(o=o._owner,o){if(o.tag!==1)throw Error(p$2(309));var a=o.stateNode}if(!a)throw Error(p$2(147,i));var c=a,d=""+i;return s!==null&&s.ref!==null&&typeof s.ref=="function"&&s.ref._stringRef===d?s.ref:(s=function(g){var $=c.refs;g===null?delete $[d]:$[d]=g},s._stringRef=d,s)}if(typeof i!="string")throw Error(p$2(284));if(!o._owner)throw Error(p$2(290,i))}return i}function Mg(i,s){throw i=Object.prototype.toString.call(s),Error(p$2(31,i==="[object Object]"?"object with keys {"+Object.keys(s).join(", ")+"}":i))}function Ng(i){var s=i._init;return s(i._payload)}function Og(i){function s(ot,it){if(i){var at=ot.deletions;at===null?(ot.deletions=[it],ot.flags|=16):at.push(it)}}function o(ot,it){if(!i)return null;for(;it!==null;)s(ot,it),it=it.sibling;return null}function a(ot,it){for(ot=new Map;it!==null;)it.key!==null?ot.set(it.key,it):ot.set(it.index,it),it=it.sibling;return ot}function c(ot,it){return ot=Pg(ot,it),ot.index=0,ot.sibling=null,ot}function d(ot,it,at){return ot.index=at,i?(at=ot.alternate,at!==null?(at=at.index,at<it?(ot.flags|=2,it):at):(ot.flags|=2,it)):(ot.flags|=1048576,it)}function g(ot){return i&&ot.alternate===null&&(ot.flags|=2),ot}function $(ot,it,at,lt){return it===null||it.tag!==6?(it=Qg(at,ot.mode,lt),it.return=ot,it):(it=c(it,at),it.return=ot,it)}function j(ot,it,at,lt){var ut=at.type;return ut===ya?et(ot,it,at.props.children,lt,at.key):it!==null&&(it.elementType===ut||typeof ut=="object"&&ut!==null&&ut.$$typeof===Ha&&Ng(ut)===it.type)?(lt=c(it,at.props),lt.ref=Lg(ot,it,at),lt.return=ot,lt):(lt=Rg(at.type,at.key,at.props,null,ot.mode,lt),lt.ref=Lg(ot,it,at),lt.return=ot,lt)}function _e(ot,it,at,lt){return it===null||it.tag!==4||it.stateNode.containerInfo!==at.containerInfo||it.stateNode.implementation!==at.implementation?(it=Sg(at,ot.mode,lt),it.return=ot,it):(it=c(it,at.children||[]),it.return=ot,it)}function et(ot,it,at,lt,ut){return it===null||it.tag!==7?(it=Tg(at,ot.mode,lt,ut),it.return=ot,it):(it=c(it,at),it.return=ot,it)}function _(ot,it,at){if(typeof it=="string"&&it!==""||typeof it=="number")return it=Qg(""+it,ot.mode,at),it.return=ot,it;if(typeof it=="object"&&it!==null){switch(it.$$typeof){case va:return at=Rg(it.type,it.key,it.props,null,ot.mode,at),at.ref=Lg(ot,null,it),at.return=ot,at;case wa:return it=Sg(it,ot.mode,at),it.return=ot,it;case Ha:var lt=it._init;return _(ot,lt(it._payload),at)}if(eb(it)||Ka(it))return it=Tg(it,ot.mode,at,null),it.return=ot,it;Mg(ot,it)}return null}function b(ot,it,at,lt){var ut=it!==null?it.key:null;if(typeof at=="string"&&at!==""||typeof at=="number")return ut!==null?null:$(ot,it,""+at,lt);if(typeof at=="object"&&at!==null){switch(at.$$typeof){case va:return at.key===ut?j(ot,it,at,lt):null;case wa:return at.key===ut?_e(ot,it,at,lt):null;case Ha:return ut=at._init,b(ot,it,ut(at._payload),lt)}if(eb(at)||Ka(at))return ut!==null?null:et(ot,it,at,lt,null);Mg(ot,at)}return null}function tt(ot,it,at,lt,ut){if(typeof lt=="string"&&lt!==""||typeof lt=="number")return ot=ot.get(at)||null,$(it,ot,""+lt,ut);if(typeof lt=="object"&&lt!==null){switch(lt.$$typeof){case va:return ot=ot.get(lt.key===null?at:lt.key)||null,j(it,ot,lt,ut);case wa:return ot=ot.get(lt.key===null?at:lt.key)||null,_e(it,ot,lt,ut);case Ha:var ct=lt._init;return tt(ot,it,at,ct(lt._payload),ut)}if(eb(lt)||Ka(lt))return ot=ot.get(at)||null,et(it,ot,lt,ut,null);Mg(it,lt)}return null}function nt(ot,it,at,lt){for(var ut=null,ct=null,dt=it,pt=it=0,ht=null;dt!==null&&pt<at.length;pt++){dt.index>pt?(ht=dt,dt=null):ht=dt.sibling;var ft=b(ot,dt,at[pt],lt);if(ft===null){dt===null&&(dt=ht);break}i&&dt&&ft.alternate===null&&s(ot,dt),it=d(ft,it,pt),ct===null?ut=ft:ct.sibling=ft,ct=ft,dt=ht}if(pt===at.length)return o(ot,dt),I&&tg(ot,pt),ut;if(dt===null){for(;pt<at.length;pt++)dt=_(ot,at[pt],lt),dt!==null&&(it=d(dt,it,pt),ct===null?ut=dt:ct.sibling=dt,ct=dt);return I&&tg(ot,pt),ut}for(dt=a(ot,dt);pt<at.length;pt++)ht=tt(dt,ot,pt,at[pt],lt),ht!==null&&(i&&ht.alternate!==null&&dt.delete(ht.key===null?pt:ht.key),it=d(ht,it,pt),ct===null?ut=ht:ct.sibling=ht,ct=ht);return i&&dt.forEach(function(yt){return s(ot,yt)}),I&&tg(ot,pt),ut}function rt(ot,it,at,lt){var ut=Ka(at);if(typeof ut!="function")throw Error(p$2(150));if(at=ut.call(at),at==null)throw Error(p$2(151));for(var ct=ut=null,dt=it,pt=it=0,ht=null,ft=at.next();dt!==null&&!ft.done;pt++,ft=at.next()){dt.index>pt?(ht=dt,dt=null):ht=dt.sibling;var yt=b(ot,dt,ft.value,lt);if(yt===null){dt===null&&(dt=ht);break}i&&dt&&yt.alternate===null&&s(ot,dt),it=d(yt,it,pt),ct===null?ut=yt:ct.sibling=yt,ct=yt,dt=ht}if(ft.done)return o(ot,dt),I&&tg(ot,pt),ut;if(dt===null){for(;!ft.done;pt++,ft=at.next())ft=_(ot,ft.value,lt),ft!==null&&(it=d(ft,it,pt),ct===null?ut=ft:ct.sibling=ft,ct=ft);return I&&tg(ot,pt),ut}for(dt=a(ot,dt);!ft.done;pt++,ft=at.next())ft=tt(dt,ot,pt,ft.value,lt),ft!==null&&(i&&ft.alternate!==null&&dt.delete(ft.key===null?pt:ft.key),it=d(ft,it,pt),ct===null?ut=ft:ct.sibling=ft,ct=ft);return i&&dt.forEach(function(wt){return s(ot,wt)}),I&&tg(ot,pt),ut}function st(ot,it,at,lt){if(typeof at=="object"&&at!==null&&at.type===ya&&at.key===null&&(at=at.props.children),typeof at=="object"&&at!==null){switch(at.$$typeof){case va:e:{for(var ut=at.key,ct=it;ct!==null;){if(ct.key===ut){if(ut=at.type,ut===ya){if(ct.tag===7){o(ot,ct.sibling),it=c(ct,at.props.children),it.return=ot,ot=it;break e}}else if(ct.elementType===ut||typeof ut=="object"&&ut!==null&&ut.$$typeof===Ha&&Ng(ut)===ct.type){o(ot,ct.sibling),it=c(ct,at.props),it.ref=Lg(ot,ct,at),it.return=ot,ot=it;break e}o(ot,ct);break}else s(ot,ct);ct=ct.sibling}at.type===ya?(it=Tg(at.props.children,ot.mode,lt,at.key),it.return=ot,ot=it):(lt=Rg(at.type,at.key,at.props,null,ot.mode,lt),lt.ref=Lg(ot,it,at),lt.return=ot,ot=lt)}return g(ot);case wa:e:{for(ct=at.key;it!==null;){if(it.key===ct)if(it.tag===4&&it.stateNode.containerInfo===at.containerInfo&&it.stateNode.implementation===at.implementation){o(ot,it.sibling),it=c(it,at.children||[]),it.return=ot,ot=it;break e}else{o(ot,it);break}else s(ot,it);it=it.sibling}it=Sg(at,ot.mode,lt),it.return=ot,ot=it}return g(ot);case Ha:return ct=at._init,st(ot,it,ct(at._payload),lt)}if(eb(at))return nt(ot,it,at,lt);if(Ka(at))return rt(ot,it,at,lt);Mg(ot,at)}return typeof at=="string"&&at!==""||typeof at=="number"?(at=""+at,it!==null&&it.tag===6?(o(ot,it.sibling),it=c(it,at),it.return=ot,ot=it):(o(ot,it),it=Qg(at,ot.mode,lt),it.return=ot,ot=it),g(ot)):o(ot,it)}return st}var Ug=Og(!0),Vg=Og(!1),Wg=Uf(null),Xg=null,Yg=null,Zg=null;function $g(){Zg=Yg=Xg=null}function ah(i){var s=Wg.current;E(Wg),i._currentValue=s}function bh(i,s,o){for(;i!==null;){var a=i.alternate;if((i.childLanes&s)!==s?(i.childLanes|=s,a!==null&&(a.childLanes|=s)):a!==null&&(a.childLanes&s)!==s&&(a.childLanes|=s),i===o)break;i=i.return}}function ch(i,s){Xg=i,Zg=Yg=null,i=i.dependencies,i!==null&&i.firstContext!==null&&(i.lanes&s&&(dh=!0),i.firstContext=null)}function eh(i){var s=i._currentValue;if(Zg!==i)if(i={context:i,memoizedValue:s,next:null},Yg===null){if(Xg===null)throw Error(p$2(308));Yg=i,Xg.dependencies={lanes:0,firstContext:i}}else Yg=Yg.next=i;return s}var fh=null;function gh(i){fh===null?fh=[i]:fh.push(i)}function hh(i,s,o,a){var c=s.interleaved;return c===null?(o.next=o,gh(s)):(o.next=c.next,c.next=o),s.interleaved=o,ih(i,a)}function ih(i,s){i.lanes|=s;var o=i.alternate;for(o!==null&&(o.lanes|=s),o=i,i=i.return;i!==null;)i.childLanes|=s,o=i.alternate,o!==null&&(o.childLanes|=s),o=i,i=i.return;return o.tag===3?o.stateNode:null}var jh=!1;function kh(i){i.updateQueue={baseState:i.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null,interleaved:null,lanes:0},effects:null}}function lh(i,s){i=i.updateQueue,s.updateQueue===i&&(s.updateQueue={baseState:i.baseState,firstBaseUpdate:i.firstBaseUpdate,lastBaseUpdate:i.lastBaseUpdate,shared:i.shared,effects:i.effects})}function mh(i,s){return{eventTime:i,lane:s,tag:0,payload:null,callback:null,next:null}}function nh(i,s,o){var a=i.updateQueue;if(a===null)return null;if(a=a.shared,K&2){var c=a.pending;return c===null?s.next=s:(s.next=c.next,c.next=s),a.pending=s,ih(i,o)}return c=a.interleaved,c===null?(s.next=s,gh(a)):(s.next=c.next,c.next=s),a.interleaved=s,ih(i,o)}function oh(i,s,o){if(s=s.updateQueue,s!==null&&(s=s.shared,(o&4194240)!==0)){var a=s.lanes;a&=i.pendingLanes,o|=a,s.lanes=o,Cc(i,o)}}function ph(i,s){var o=i.updateQueue,a=i.alternate;if(a!==null&&(a=a.updateQueue,o===a)){var c=null,d=null;if(o=o.firstBaseUpdate,o!==null){do{var g={eventTime:o.eventTime,lane:o.lane,tag:o.tag,payload:o.payload,callback:o.callback,next:null};d===null?c=d=g:d=d.next=g,o=o.next}while(o!==null);d===null?c=d=s:d=d.next=s}else c=d=s;o={baseState:a.baseState,firstBaseUpdate:c,lastBaseUpdate:d,shared:a.shared,effects:a.effects},i.updateQueue=o;return}i=o.lastBaseUpdate,i===null?o.firstBaseUpdate=s:i.next=s,o.lastBaseUpdate=s}function qh(i,s,o,a){var c=i.updateQueue;jh=!1;var d=c.firstBaseUpdate,g=c.lastBaseUpdate,$=c.shared.pending;if($!==null){c.shared.pending=null;var j=$,_e=j.next;j.next=null,g===null?d=_e:g.next=_e,g=j;var et=i.alternate;et!==null&&(et=et.updateQueue,$=et.lastBaseUpdate,$!==g&&($===null?et.firstBaseUpdate=_e:$.next=_e,et.lastBaseUpdate=j))}if(d!==null){var _=c.baseState;g=0,et=_e=j=null,$=d;do{var b=$.lane,tt=$.eventTime;if((a&b)===b){et!==null&&(et=et.next={eventTime:tt,lane:0,tag:$.tag,payload:$.payload,callback:$.callback,next:null});e:{var nt=i,rt=$;switch(b=s,tt=o,rt.tag){case 1:if(nt=rt.payload,typeof nt=="function"){_=nt.call(tt,_,b);break e}_=nt;break e;case 3:nt.flags=nt.flags&-65537|128;case 0:if(nt=rt.payload,b=typeof nt=="function"?nt.call(tt,_,b):nt,b==null)break e;_=A({},_,b);break e;case 2:jh=!0}}$.callback!==null&&$.lane!==0&&(i.flags|=64,b=c.effects,b===null?c.effects=[$]:b.push($))}else tt={eventTime:tt,lane:b,tag:$.tag,payload:$.payload,callback:$.callback,next:null},et===null?(_e=et=tt,j=_):et=et.next=tt,g|=b;if($=$.next,$===null){if($=c.shared.pending,$===null)break;b=$,$=b.next,b.next=null,c.lastBaseUpdate=b,c.shared.pending=null}}while(!0);if(et===null&&(j=_),c.baseState=j,c.firstBaseUpdate=_e,c.lastBaseUpdate=et,s=c.shared.interleaved,s!==null){c=s;do g|=c.lane,c=c.next;while(c!==s)}else d===null&&(c.shared.lanes=0);rh|=g,i.lanes=g,i.memoizedState=_}}function sh(i,s,o){if(i=s.effects,s.effects=null,i!==null)for(s=0;s<i.length;s++){var a=i[s],c=a.callback;if(c!==null){if(a.callback=null,a=o,typeof c!="function")throw Error(p$2(191,c));c.call(a)}}}var th={},uh=Uf(th),vh=Uf(th),wh=Uf(th);function xh(i){if(i===th)throw Error(p$2(174));return i}function yh(i,s){switch(G(wh,s),G(vh,i),G(uh,th),i=s.nodeType,i){case 9:case 11:s=(s=s.documentElement)?s.namespaceURI:lb(null,"");break;default:i=i===8?s.parentNode:s,s=i.namespaceURI||null,i=i.tagName,s=lb(s,i)}E(uh),G(uh,s)}function zh(){E(uh),E(vh),E(wh)}function Ah(i){xh(wh.current);var s=xh(uh.current),o=lb(s,i.type);s!==o&&(G(vh,i),G(uh,o))}function Bh(i){vh.current===i&&(E(uh),E(vh))}var L=Uf(0);function Ch(i){for(var s=i;s!==null;){if(s.tag===13){var o=s.memoizedState;if(o!==null&&(o=o.dehydrated,o===null||o.data==="$?"||o.data==="$!"))return s}else if(s.tag===19&&s.memoizedProps.revealOrder!==void 0){if(s.flags&128)return s}else if(s.child!==null){s.child.return=s,s=s.child;continue}if(s===i)break;for(;s.sibling===null;){if(s.return===null||s.return===i)return null;s=s.return}s.sibling.return=s.return,s=s.sibling}return null}var Dh=[];function Eh(){for(var i=0;i<Dh.length;i++)Dh[i]._workInProgressVersionPrimary=null;Dh.length=0}var Fh=ua.ReactCurrentDispatcher,Gh=ua.ReactCurrentBatchConfig,Hh=0,M=null,N=null,O=null,Ih=!1,Jh=!1,Kh=0,Lh=0;function P(){throw Error(p$2(321))}function Mh(i,s){if(s===null)return!1;for(var o=0;o<s.length&&o<i.length;o++)if(!He(i[o],s[o]))return!1;return!0}function Nh(i,s,o,a,c,d){if(Hh=d,M=s,s.memoizedState=null,s.updateQueue=null,s.lanes=0,Fh.current=i===null||i.memoizedState===null?Oh:Ph,i=o(a,c),Jh){d=0;do{if(Jh=!1,Kh=0,25<=d)throw Error(p$2(301));d+=1,O=N=null,s.updateQueue=null,Fh.current=Qh,i=o(a,c)}while(Jh)}if(Fh.current=Rh,s=N!==null&&N.next!==null,Hh=0,O=N=M=null,Ih=!1,s)throw Error(p$2(300));return i}function Sh(){var i=Kh!==0;return Kh=0,i}function Th(){var i={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};return O===null?M.memoizedState=O=i:O=O.next=i,O}function Uh(){if(N===null){var i=M.alternate;i=i!==null?i.memoizedState:null}else i=N.next;var s=O===null?M.memoizedState:O.next;if(s!==null)O=s,N=i;else{if(i===null)throw Error(p$2(310));N=i,i={memoizedState:N.memoizedState,baseState:N.baseState,baseQueue:N.baseQueue,queue:N.queue,next:null},O===null?M.memoizedState=O=i:O=O.next=i}return O}function Vh(i,s){return typeof s=="function"?s(i):s}function Wh(i){var s=Uh(),o=s.queue;if(o===null)throw Error(p$2(311));o.lastRenderedReducer=i;var a=N,c=a.baseQueue,d=o.pending;if(d!==null){if(c!==null){var g=c.next;c.next=d.next,d.next=g}a.baseQueue=c=d,o.pending=null}if(c!==null){d=c.next,a=a.baseState;var $=g=null,j=null,_e=d;do{var et=_e.lane;if((Hh&et)===et)j!==null&&(j=j.next={lane:0,action:_e.action,hasEagerState:_e.hasEagerState,eagerState:_e.eagerState,next:null}),a=_e.hasEagerState?_e.eagerState:i(a,_e.action);else{var _={lane:et,action:_e.action,hasEagerState:_e.hasEagerState,eagerState:_e.eagerState,next:null};j===null?($=j=_,g=a):j=j.next=_,M.lanes|=et,rh|=et}_e=_e.next}while(_e!==null&&_e!==d);j===null?g=a:j.next=$,He(a,s.memoizedState)||(dh=!0),s.memoizedState=a,s.baseState=g,s.baseQueue=j,o.lastRenderedState=a}if(i=o.interleaved,i!==null){c=i;do d=c.lane,M.lanes|=d,rh|=d,c=c.next;while(c!==i)}else c===null&&(o.lanes=0);return[s.memoizedState,o.dispatch]}function Xh(i){var s=Uh(),o=s.queue;if(o===null)throw Error(p$2(311));o.lastRenderedReducer=i;var a=o.dispatch,c=o.pending,d=s.memoizedState;if(c!==null){o.pending=null;var g=c=c.next;do d=i(d,g.action),g=g.next;while(g!==c);He(d,s.memoizedState)||(dh=!0),s.memoizedState=d,s.baseQueue===null&&(s.baseState=d),o.lastRenderedState=d}return[d,a]}function Yh(){}function Zh(i,s){var o=M,a=Uh(),c=s(),d=!He(a.memoizedState,c);if(d&&(a.memoizedState=c,dh=!0),a=a.queue,$h(ai.bind(null,o,a,i),[i]),a.getSnapshot!==s||d||O!==null&&O.memoizedState.tag&1){if(o.flags|=2048,bi(9,ci.bind(null,o,a,c,s),void 0,null),Q===null)throw Error(p$2(349));Hh&30||di(o,s,c)}return c}function di(i,s,o){i.flags|=16384,i={getSnapshot:s,value:o},s=M.updateQueue,s===null?(s={lastEffect:null,stores:null},M.updateQueue=s,s.stores=[i]):(o=s.stores,o===null?s.stores=[i]:o.push(i))}function ci(i,s,o,a){s.value=o,s.getSnapshot=a,ei(s)&&fi(i)}function ai(i,s,o){return o(function(){ei(s)&&fi(i)})}function ei(i){var s=i.getSnapshot;i=i.value;try{var o=s();return!He(i,o)}catch{return!0}}function fi(i){var s=ih(i,1);s!==null&&gi(s,i,1,-1)}function hi(i){var s=Th();return typeof i=="function"&&(i=i()),s.memoizedState=s.baseState=i,i={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:Vh,lastRenderedState:i},s.queue=i,i=i.dispatch=ii.bind(null,M,i),[s.memoizedState,i]}function bi(i,s,o,a){return i={tag:i,create:s,destroy:o,deps:a,next:null},s=M.updateQueue,s===null?(s={lastEffect:null,stores:null},M.updateQueue=s,s.lastEffect=i.next=i):(o=s.lastEffect,o===null?s.lastEffect=i.next=i:(a=o.next,o.next=i,i.next=a,s.lastEffect=i)),i}function ji(){return Uh().memoizedState}function ki(i,s,o,a){var c=Th();M.flags|=i,c.memoizedState=bi(1|s,o,void 0,a===void 0?null:a)}function li(i,s,o,a){var c=Uh();a=a===void 0?null:a;var d=void 0;if(N!==null){var g=N.memoizedState;if(d=g.destroy,a!==null&&Mh(a,g.deps)){c.memoizedState=bi(s,o,d,a);return}}M.flags|=i,c.memoizedState=bi(1|s,o,d,a)}function mi(i,s){return ki(8390656,8,i,s)}function $h(i,s){return li(2048,8,i,s)}function ni(i,s){return li(4,2,i,s)}function oi(i,s){return li(4,4,i,s)}function pi(i,s){if(typeof s=="function")return i=i(),s(i),function(){s(null)};if(s!=null)return i=i(),s.current=i,function(){s.current=null}}function qi(i,s,o){return o=o!=null?o.concat([i]):null,li(4,4,pi.bind(null,s,i),o)}function ri(){}function si(i,s){var o=Uh();s=s===void 0?null:s;var a=o.memoizedState;return a!==null&&s!==null&&Mh(s,a[1])?a[0]:(o.memoizedState=[i,s],i)}function ti(i,s){var o=Uh();s=s===void 0?null:s;var a=o.memoizedState;return a!==null&&s!==null&&Mh(s,a[1])?a[0]:(i=i(),o.memoizedState=[i,s],i)}function ui(i,s,o){return Hh&21?(He(o,s)||(o=yc(),M.lanes|=o,rh|=o,i.baseState=!0),s):(i.baseState&&(i.baseState=!1,dh=!0),i.memoizedState=o)}function vi(i,s){var o=C;C=o!==0&&4>o?o:4,i(!0);var a=Gh.transition;Gh.transition={};try{i(!1),s()}finally{C=o,Gh.transition=a}}function wi(){return Uh().memoizedState}function xi(i,s,o){var a=yi(i);if(o={lane:a,action:o,hasEagerState:!1,eagerState:null,next:null},zi(i))Ai(s,o);else if(o=hh(i,s,o,a),o!==null){var c=R();gi(o,i,a,c),Bi(o,s,a)}}function ii(i,s,o){var a=yi(i),c={lane:a,action:o,hasEagerState:!1,eagerState:null,next:null};if(zi(i))Ai(s,c);else{var d=i.alternate;if(i.lanes===0&&(d===null||d.lanes===0)&&(d=s.lastRenderedReducer,d!==null))try{var g=s.lastRenderedState,$=d(g,o);if(c.hasEagerState=!0,c.eagerState=$,He($,g)){var j=s.interleaved;j===null?(c.next=c,gh(s)):(c.next=j.next,j.next=c),s.interleaved=c;return}}catch{}finally{}o=hh(i,s,c,a),o!==null&&(c=R(),gi(o,i,a,c),Bi(o,s,a))}}function zi(i){var s=i.alternate;return i===M||s!==null&&s===M}function Ai(i,s){Jh=Ih=!0;var o=i.pending;o===null?s.next=s:(s.next=o.next,o.next=s),i.pending=s}function Bi(i,s,o){if(o&4194240){var a=s.lanes;a&=i.pendingLanes,o|=a,s.lanes=o,Cc(i,o)}}var Rh={readContext:eh,useCallback:P,useContext:P,useEffect:P,useImperativeHandle:P,useInsertionEffect:P,useLayoutEffect:P,useMemo:P,useReducer:P,useRef:P,useState:P,useDebugValue:P,useDeferredValue:P,useTransition:P,useMutableSource:P,useSyncExternalStore:P,useId:P,unstable_isNewReconciler:!1},Oh={readContext:eh,useCallback:function(i,s){return Th().memoizedState=[i,s===void 0?null:s],i},useContext:eh,useEffect:mi,useImperativeHandle:function(i,s,o){return o=o!=null?o.concat([i]):null,ki(4194308,4,pi.bind(null,s,i),o)},useLayoutEffect:function(i,s){return ki(4194308,4,i,s)},useInsertionEffect:function(i,s){return ki(4,2,i,s)},useMemo:function(i,s){var o=Th();return s=s===void 0?null:s,i=i(),o.memoizedState=[i,s],i},useReducer:function(i,s,o){var a=Th();return s=o!==void 0?o(s):s,a.memoizedState=a.baseState=s,i={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:i,lastRenderedState:s},a.queue=i,i=i.dispatch=xi.bind(null,M,i),[a.memoizedState,i]},useRef:function(i){var s=Th();return i={current:i},s.memoizedState=i},useState:hi,useDebugValue:ri,useDeferredValue:function(i){return Th().memoizedState=i},useTransition:function(){var i=hi(!1),s=i[0];return i=vi.bind(null,i[1]),Th().memoizedState=i,[s,i]},useMutableSource:function(){},useSyncExternalStore:function(i,s,o){var a=M,c=Th();if(I){if(o===void 0)throw Error(p$2(407));o=o()}else{if(o=s(),Q===null)throw Error(p$2(349));Hh&30||di(a,s,o)}c.memoizedState=o;var d={value:o,getSnapshot:s};return c.queue=d,mi(ai.bind(null,a,d,i),[i]),a.flags|=2048,bi(9,ci.bind(null,a,d,o,s),void 0,null),o},useId:function(){var i=Th(),s=Q.identifierPrefix;if(I){var o=sg,a=rg;o=(a&~(1<<32-oc(a)-1)).toString(32)+o,s=":"+s+"R"+o,o=Kh++,0<o&&(s+="H"+o.toString(32)),s+=":"}else o=Lh++,s=":"+s+"r"+o.toString(32)+":";return i.memoizedState=s},unstable_isNewReconciler:!1},Ph={readContext:eh,useCallback:si,useContext:eh,useEffect:$h,useImperativeHandle:qi,useInsertionEffect:ni,useLayoutEffect:oi,useMemo:ti,useReducer:Wh,useRef:ji,useState:function(){return Wh(Vh)},useDebugValue:ri,useDeferredValue:function(i){var s=Uh();return ui(s,N.memoizedState,i)},useTransition:function(){var i=Wh(Vh)[0],s=Uh().memoizedState;return[i,s]},useMutableSource:Yh,useSyncExternalStore:Zh,useId:wi,unstable_isNewReconciler:!1},Qh={readContext:eh,useCallback:si,useContext:eh,useEffect:$h,useImperativeHandle:qi,useInsertionEffect:ni,useLayoutEffect:oi,useMemo:ti,useReducer:Xh,useRef:ji,useState:function(){return Xh(Vh)},useDebugValue:ri,useDeferredValue:function(i){var s=Uh();return N===null?s.memoizedState=i:ui(s,N.memoizedState,i)},useTransition:function(){var i=Xh(Vh)[0],s=Uh().memoizedState;return[i,s]},useMutableSource:Yh,useSyncExternalStore:Zh,useId:wi,unstable_isNewReconciler:!1};function Ci(i,s){if(i&&i.defaultProps){s=A({},s),i=i.defaultProps;for(var o in i)s[o]===void 0&&(s[o]=i[o]);return s}return s}function Di(i,s,o,a){s=i.memoizedState,o=o(a,s),o=o==null?s:A({},s,o),i.memoizedState=o,i.lanes===0&&(i.updateQueue.baseState=o)}var Ei={isMounted:function(i){return(i=i._reactInternals)?Vb(i)===i:!1},enqueueSetState:function(i,s,o){i=i._reactInternals;var a=R(),c=yi(i),d=mh(a,c);d.payload=s,o!=null&&(d.callback=o),s=nh(i,d,c),s!==null&&(gi(s,i,c,a),oh(s,i,c))},enqueueReplaceState:function(i,s,o){i=i._reactInternals;var a=R(),c=yi(i),d=mh(a,c);d.tag=1,d.payload=s,o!=null&&(d.callback=o),s=nh(i,d,c),s!==null&&(gi(s,i,c,a),oh(s,i,c))},enqueueForceUpdate:function(i,s){i=i._reactInternals;var o=R(),a=yi(i),c=mh(o,a);c.tag=2,s!=null&&(c.callback=s),s=nh(i,c,a),s!==null&&(gi(s,i,a,o),oh(s,i,a))}};function Fi(i,s,o,a,c,d,g){return i=i.stateNode,typeof i.shouldComponentUpdate=="function"?i.shouldComponentUpdate(a,d,g):s.prototype&&s.prototype.isPureReactComponent?!Ie(o,a)||!Ie(c,d):!0}function Gi(i,s,o){var a=!1,c=Vf,d=s.contextType;return typeof d=="object"&&d!==null?d=eh(d):(c=Zf(s)?Xf:H.current,a=s.contextTypes,d=(a=a!=null)?Yf(i,c):Vf),s=new s(o,d),i.memoizedState=s.state!==null&&s.state!==void 0?s.state:null,s.updater=Ei,i.stateNode=s,s._reactInternals=i,a&&(i=i.stateNode,i.__reactInternalMemoizedUnmaskedChildContext=c,i.__reactInternalMemoizedMaskedChildContext=d),s}function Hi(i,s,o,a){i=s.state,typeof s.componentWillReceiveProps=="function"&&s.componentWillReceiveProps(o,a),typeof s.UNSAFE_componentWillReceiveProps=="function"&&s.UNSAFE_componentWillReceiveProps(o,a),s.state!==i&&Ei.enqueueReplaceState(s,s.state,null)}function Ii(i,s,o,a){var c=i.stateNode;c.props=o,c.state=i.memoizedState,c.refs={},kh(i);var d=s.contextType;typeof d=="object"&&d!==null?c.context=eh(d):(d=Zf(s)?Xf:H.current,c.context=Yf(i,d)),c.state=i.memoizedState,d=s.getDerivedStateFromProps,typeof d=="function"&&(Di(i,s,d,o),c.state=i.memoizedState),typeof s.getDerivedStateFromProps=="function"||typeof c.getSnapshotBeforeUpdate=="function"||typeof c.UNSAFE_componentWillMount!="function"&&typeof c.componentWillMount!="function"||(s=c.state,typeof c.componentWillMount=="function"&&c.componentWillMount(),typeof c.UNSAFE_componentWillMount=="function"&&c.UNSAFE_componentWillMount(),s!==c.state&&Ei.enqueueReplaceState(c,c.state,null),qh(i,o,c,a),c.state=i.memoizedState),typeof c.componentDidMount=="function"&&(i.flags|=4194308)}function Ji(i,s){try{var o="",a=s;do o+=Pa(a),a=a.return;while(a);var c=o}catch(d){c=`
Error generating stack: `+d.message+`
`+d.stack}return{value:i,source:s,stack:c,digest:null}}function Ki(i,s,o){return{value:i,source:null,stack:o??null,digest:s??null}}function Li(i,s){try{console.error(s.value)}catch(o){setTimeout(function(){throw o})}}var Mi=typeof WeakMap=="function"?WeakMap:Map;function Ni(i,s,o){o=mh(-1,o),o.tag=3,o.payload={element:null};var a=s.value;return o.callback=function(){Oi||(Oi=!0,Pi=a),Li(i,s)},o}function Qi(i,s,o){o=mh(-1,o),o.tag=3;var a=i.type.getDerivedStateFromError;if(typeof a=="function"){var c=s.value;o.payload=function(){return a(c)},o.callback=function(){Li(i,s)}}var d=i.stateNode;return d!==null&&typeof d.componentDidCatch=="function"&&(o.callback=function(){Li(i,s),typeof a!="function"&&(Ri===null?Ri=new Set([this]):Ri.add(this));var g=s.stack;this.componentDidCatch(s.value,{componentStack:g!==null?g:""})}),o}function Si(i,s,o){var a=i.pingCache;if(a===null){a=i.pingCache=new Mi;var c=new Set;a.set(s,c)}else c=a.get(s),c===void 0&&(c=new Set,a.set(s,c));c.has(o)||(c.add(o),i=Ti.bind(null,i,s,o),s.then(i,i))}function Ui(i){do{var s;if((s=i.tag===13)&&(s=i.memoizedState,s=s!==null?s.dehydrated!==null:!0),s)return i;i=i.return}while(i!==null);return null}function Vi(i,s,o,a,c){return i.mode&1?(i.flags|=65536,i.lanes=c,i):(i===s?i.flags|=65536:(i.flags|=128,o.flags|=131072,o.flags&=-52805,o.tag===1&&(o.alternate===null?o.tag=17:(s=mh(-1,1),s.tag=2,nh(o,s,1))),o.lanes|=1),i)}var Wi=ua.ReactCurrentOwner,dh=!1;function Xi(i,s,o,a){s.child=i===null?Vg(s,null,o,a):Ug(s,i.child,o,a)}function Yi(i,s,o,a,c){o=o.render;var d=s.ref;return ch(s,c),a=Nh(i,s,o,a,d,c),o=Sh(),i!==null&&!dh?(s.updateQueue=i.updateQueue,s.flags&=-2053,i.lanes&=~c,Zi(i,s,c)):(I&&o&&vg(s),s.flags|=1,Xi(i,s,a,c),s.child)}function $i(i,s,o,a,c){if(i===null){var d=o.type;return typeof d=="function"&&!aj(d)&&d.defaultProps===void 0&&o.compare===null&&o.defaultProps===void 0?(s.tag=15,s.type=d,bj(i,s,d,a,c)):(i=Rg(o.type,null,a,s,s.mode,c),i.ref=s.ref,i.return=s,s.child=i)}if(d=i.child,!(i.lanes&c)){var g=d.memoizedProps;if(o=o.compare,o=o!==null?o:Ie,o(g,a)&&i.ref===s.ref)return Zi(i,s,c)}return s.flags|=1,i=Pg(d,a),i.ref=s.ref,i.return=s,s.child=i}function bj(i,s,o,a,c){if(i!==null){var d=i.memoizedProps;if(Ie(d,a)&&i.ref===s.ref)if(dh=!1,s.pendingProps=a=d,(i.lanes&c)!==0)i.flags&131072&&(dh=!0);else return s.lanes=i.lanes,Zi(i,s,c)}return cj(i,s,o,a,c)}function dj(i,s,o){var a=s.pendingProps,c=a.children,d=i!==null?i.memoizedState:null;if(a.mode==="hidden")if(!(s.mode&1))s.memoizedState={baseLanes:0,cachePool:null,transitions:null},G(ej,fj),fj|=o;else{if(!(o&1073741824))return i=d!==null?d.baseLanes|o:o,s.lanes=s.childLanes=1073741824,s.memoizedState={baseLanes:i,cachePool:null,transitions:null},s.updateQueue=null,G(ej,fj),fj|=i,null;s.memoizedState={baseLanes:0,cachePool:null,transitions:null},a=d!==null?d.baseLanes:o,G(ej,fj),fj|=a}else d!==null?(a=d.baseLanes|o,s.memoizedState=null):a=o,G(ej,fj),fj|=a;return Xi(i,s,c,o),s.child}function gj(i,s){var o=s.ref;(i===null&&o!==null||i!==null&&i.ref!==o)&&(s.flags|=512,s.flags|=2097152)}function cj(i,s,o,a,c){var d=Zf(o)?Xf:H.current;return d=Yf(s,d),ch(s,c),o=Nh(i,s,o,a,d,c),a=Sh(),i!==null&&!dh?(s.updateQueue=i.updateQueue,s.flags&=-2053,i.lanes&=~c,Zi(i,s,c)):(I&&a&&vg(s),s.flags|=1,Xi(i,s,o,c),s.child)}function hj(i,s,o,a,c){if(Zf(o)){var d=!0;cg(s)}else d=!1;if(ch(s,c),s.stateNode===null)ij(i,s),Gi(s,o,a),Ii(s,o,a,c),a=!0;else if(i===null){var g=s.stateNode,$=s.memoizedProps;g.props=$;var j=g.context,_e=o.contextType;typeof _e=="object"&&_e!==null?_e=eh(_e):(_e=Zf(o)?Xf:H.current,_e=Yf(s,_e));var et=o.getDerivedStateFromProps,_=typeof et=="function"||typeof g.getSnapshotBeforeUpdate=="function";_||typeof g.UNSAFE_componentWillReceiveProps!="function"&&typeof g.componentWillReceiveProps!="function"||($!==a||j!==_e)&&Hi(s,g,a,_e),jh=!1;var b=s.memoizedState;g.state=b,qh(s,a,g,c),j=s.memoizedState,$!==a||b!==j||Wf.current||jh?(typeof et=="function"&&(Di(s,o,et,a),j=s.memoizedState),($=jh||Fi(s,o,$,a,b,j,_e))?(_||typeof g.UNSAFE_componentWillMount!="function"&&typeof g.componentWillMount!="function"||(typeof g.componentWillMount=="function"&&g.componentWillMount(),typeof g.UNSAFE_componentWillMount=="function"&&g.UNSAFE_componentWillMount()),typeof g.componentDidMount=="function"&&(s.flags|=4194308)):(typeof g.componentDidMount=="function"&&(s.flags|=4194308),s.memoizedProps=a,s.memoizedState=j),g.props=a,g.state=j,g.context=_e,a=$):(typeof g.componentDidMount=="function"&&(s.flags|=4194308),a=!1)}else{g=s.stateNode,lh(i,s),$=s.memoizedProps,_e=s.type===s.elementType?$:Ci(s.type,$),g.props=_e,_=s.pendingProps,b=g.context,j=o.contextType,typeof j=="object"&&j!==null?j=eh(j):(j=Zf(o)?Xf:H.current,j=Yf(s,j));var tt=o.getDerivedStateFromProps;(et=typeof tt=="function"||typeof g.getSnapshotBeforeUpdate=="function")||typeof g.UNSAFE_componentWillReceiveProps!="function"&&typeof g.componentWillReceiveProps!="function"||($!==_||b!==j)&&Hi(s,g,a,j),jh=!1,b=s.memoizedState,g.state=b,qh(s,a,g,c);var nt=s.memoizedState;$!==_||b!==nt||Wf.current||jh?(typeof tt=="function"&&(Di(s,o,tt,a),nt=s.memoizedState),(_e=jh||Fi(s,o,_e,a,b,nt,j)||!1)?(et||typeof g.UNSAFE_componentWillUpdate!="function"&&typeof g.componentWillUpdate!="function"||(typeof g.componentWillUpdate=="function"&&g.componentWillUpdate(a,nt,j),typeof g.UNSAFE_componentWillUpdate=="function"&&g.UNSAFE_componentWillUpdate(a,nt,j)),typeof g.componentDidUpdate=="function"&&(s.flags|=4),typeof g.getSnapshotBeforeUpdate=="function"&&(s.flags|=1024)):(typeof g.componentDidUpdate!="function"||$===i.memoizedProps&&b===i.memoizedState||(s.flags|=4),typeof g.getSnapshotBeforeUpdate!="function"||$===i.memoizedProps&&b===i.memoizedState||(s.flags|=1024),s.memoizedProps=a,s.memoizedState=nt),g.props=a,g.state=nt,g.context=j,a=_e):(typeof g.componentDidUpdate!="function"||$===i.memoizedProps&&b===i.memoizedState||(s.flags|=4),typeof g.getSnapshotBeforeUpdate!="function"||$===i.memoizedProps&&b===i.memoizedState||(s.flags|=1024),a=!1)}return jj(i,s,o,a,d,c)}function jj(i,s,o,a,c,d){gj(i,s);var g=(s.flags&128)!==0;if(!a&&!g)return c&&dg(s,o,!1),Zi(i,s,d);a=s.stateNode,Wi.current=s;var $=g&&typeof o.getDerivedStateFromError!="function"?null:a.render();return s.flags|=1,i!==null&&g?(s.child=Ug(s,i.child,null,d),s.child=Ug(s,null,$,d)):Xi(i,s,$,d),s.memoizedState=a.state,c&&dg(s,o,!0),s.child}function kj(i){var s=i.stateNode;s.pendingContext?ag(i,s.pendingContext,s.pendingContext!==s.context):s.context&&ag(i,s.context,!1),yh(i,s.containerInfo)}function lj(i,s,o,a,c){return Ig(),Jg(c),s.flags|=256,Xi(i,s,o,a),s.child}var mj={dehydrated:null,treeContext:null,retryLane:0};function nj(i){return{baseLanes:i,cachePool:null,transitions:null}}function oj(i,s,o){var a=s.pendingProps,c=L.current,d=!1,g=(s.flags&128)!==0,$;if(($=g)||($=i!==null&&i.memoizedState===null?!1:(c&2)!==0),$?(d=!0,s.flags&=-129):(i===null||i.memoizedState!==null)&&(c|=1),G(L,c&1),i===null)return Eg(s),i=s.memoizedState,i!==null&&(i=i.dehydrated,i!==null)?(s.mode&1?i.data==="$!"?s.lanes=8:s.lanes=1073741824:s.lanes=1,null):(g=a.children,i=a.fallback,d?(a=s.mode,d=s.child,g={mode:"hidden",children:g},!(a&1)&&d!==null?(d.childLanes=0,d.pendingProps=g):d=pj(g,a,0,null),i=Tg(i,a,o,null),d.return=s,i.return=s,d.sibling=i,s.child=d,s.child.memoizedState=nj(o),s.memoizedState=mj,i):qj(s,g));if(c=i.memoizedState,c!==null&&($=c.dehydrated,$!==null))return rj(i,s,g,a,$,c,o);if(d){d=a.fallback,g=s.mode,c=i.child,$=c.sibling;var j={mode:"hidden",children:a.children};return!(g&1)&&s.child!==c?(a=s.child,a.childLanes=0,a.pendingProps=j,s.deletions=null):(a=Pg(c,j),a.subtreeFlags=c.subtreeFlags&14680064),$!==null?d=Pg($,d):(d=Tg(d,g,o,null),d.flags|=2),d.return=s,a.return=s,a.sibling=d,s.child=a,a=d,d=s.child,g=i.child.memoizedState,g=g===null?nj(o):{baseLanes:g.baseLanes|o,cachePool:null,transitions:g.transitions},d.memoizedState=g,d.childLanes=i.childLanes&~o,s.memoizedState=mj,a}return d=i.child,i=d.sibling,a=Pg(d,{mode:"visible",children:a.children}),!(s.mode&1)&&(a.lanes=o),a.return=s,a.sibling=null,i!==null&&(o=s.deletions,o===null?(s.deletions=[i],s.flags|=16):o.push(i)),s.child=a,s.memoizedState=null,a}function qj(i,s){return s=pj({mode:"visible",children:s},i.mode,0,null),s.return=i,i.child=s}function sj(i,s,o,a){return a!==null&&Jg(a),Ug(s,i.child,null,o),i=qj(s,s.pendingProps.children),i.flags|=2,s.memoizedState=null,i}function rj(i,s,o,a,c,d,g){if(o)return s.flags&256?(s.flags&=-257,a=Ki(Error(p$2(422))),sj(i,s,g,a)):s.memoizedState!==null?(s.child=i.child,s.flags|=128,null):(d=a.fallback,c=s.mode,a=pj({mode:"visible",children:a.children},c,0,null),d=Tg(d,c,g,null),d.flags|=2,a.return=s,d.return=s,a.sibling=d,s.child=a,s.mode&1&&Ug(s,i.child,null,g),s.child.memoizedState=nj(g),s.memoizedState=mj,d);if(!(s.mode&1))return sj(i,s,g,null);if(c.data==="$!"){if(a=c.nextSibling&&c.nextSibling.dataset,a)var $=a.dgst;return a=$,d=Error(p$2(419)),a=Ki(d,a,void 0),sj(i,s,g,a)}if($=(g&i.childLanes)!==0,dh||$){if(a=Q,a!==null){switch(g&-g){case 4:c=2;break;case 16:c=8;break;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:c=32;break;case 536870912:c=268435456;break;default:c=0}c=c&(a.suspendedLanes|g)?0:c,c!==0&&c!==d.retryLane&&(d.retryLane=c,ih(i,c),gi(a,i,c,-1))}return tj(),a=Ki(Error(p$2(421))),sj(i,s,g,a)}return c.data==="$?"?(s.flags|=128,s.child=i.child,s=uj.bind(null,i),c._reactRetry=s,null):(i=d.treeContext,yg=Lf(c.nextSibling),xg=s,I=!0,zg=null,i!==null&&(og[pg++]=rg,og[pg++]=sg,og[pg++]=qg,rg=i.id,sg=i.overflow,qg=s),s=qj(s,a.children),s.flags|=4096,s)}function vj(i,s,o){i.lanes|=s;var a=i.alternate;a!==null&&(a.lanes|=s),bh(i.return,s,o)}function wj(i,s,o,a,c){var d=i.memoizedState;d===null?i.memoizedState={isBackwards:s,rendering:null,renderingStartTime:0,last:a,tail:o,tailMode:c}:(d.isBackwards=s,d.rendering=null,d.renderingStartTime=0,d.last=a,d.tail=o,d.tailMode=c)}function xj(i,s,o){var a=s.pendingProps,c=a.revealOrder,d=a.tail;if(Xi(i,s,a.children,o),a=L.current,a&2)a=a&1|2,s.flags|=128;else{if(i!==null&&i.flags&128)e:for(i=s.child;i!==null;){if(i.tag===13)i.memoizedState!==null&&vj(i,o,s);else if(i.tag===19)vj(i,o,s);else if(i.child!==null){i.child.return=i,i=i.child;continue}if(i===s)break e;for(;i.sibling===null;){if(i.return===null||i.return===s)break e;i=i.return}i.sibling.return=i.return,i=i.sibling}a&=1}if(G(L,a),!(s.mode&1))s.memoizedState=null;else switch(c){case"forwards":for(o=s.child,c=null;o!==null;)i=o.alternate,i!==null&&Ch(i)===null&&(c=o),o=o.sibling;o=c,o===null?(c=s.child,s.child=null):(c=o.sibling,o.sibling=null),wj(s,!1,c,o,d);break;case"backwards":for(o=null,c=s.child,s.child=null;c!==null;){if(i=c.alternate,i!==null&&Ch(i)===null){s.child=c;break}i=c.sibling,c.sibling=o,o=c,c=i}wj(s,!0,o,null,d);break;case"together":wj(s,!1,null,null,void 0);break;default:s.memoizedState=null}return s.child}function ij(i,s){!(s.mode&1)&&i!==null&&(i.alternate=null,s.alternate=null,s.flags|=2)}function Zi(i,s,o){if(i!==null&&(s.dependencies=i.dependencies),rh|=s.lanes,!(o&s.childLanes))return null;if(i!==null&&s.child!==i.child)throw Error(p$2(153));if(s.child!==null){for(i=s.child,o=Pg(i,i.pendingProps),s.child=o,o.return=s;i.sibling!==null;)i=i.sibling,o=o.sibling=Pg(i,i.pendingProps),o.return=s;o.sibling=null}return s.child}function yj(i,s,o){switch(s.tag){case 3:kj(s),Ig();break;case 5:Ah(s);break;case 1:Zf(s.type)&&cg(s);break;case 4:yh(s,s.stateNode.containerInfo);break;case 10:var a=s.type._context,c=s.memoizedProps.value;G(Wg,a._currentValue),a._currentValue=c;break;case 13:if(a=s.memoizedState,a!==null)return a.dehydrated!==null?(G(L,L.current&1),s.flags|=128,null):o&s.child.childLanes?oj(i,s,o):(G(L,L.current&1),i=Zi(i,s,o),i!==null?i.sibling:null);G(L,L.current&1);break;case 19:if(a=(o&s.childLanes)!==0,i.flags&128){if(a)return xj(i,s,o);s.flags|=128}if(c=s.memoizedState,c!==null&&(c.rendering=null,c.tail=null,c.lastEffect=null),G(L,L.current),a)break;return null;case 22:case 23:return s.lanes=0,dj(i,s,o)}return Zi(i,s,o)}var zj,Aj,Bj,Cj;zj=function(i,s){for(var o=s.child;o!==null;){if(o.tag===5||o.tag===6)i.appendChild(o.stateNode);else if(o.tag!==4&&o.child!==null){o.child.return=o,o=o.child;continue}if(o===s)break;for(;o.sibling===null;){if(o.return===null||o.return===s)return;o=o.return}o.sibling.return=o.return,o=o.sibling}};Aj=function(){};Bj=function(i,s,o,a){var c=i.memoizedProps;if(c!==a){i=s.stateNode,xh(uh.current);var d=null;switch(o){case"input":c=Ya(i,c),a=Ya(i,a),d=[];break;case"select":c=A({},c,{value:void 0}),a=A({},a,{value:void 0}),d=[];break;case"textarea":c=gb(i,c),a=gb(i,a),d=[];break;default:typeof c.onClick!="function"&&typeof a.onClick=="function"&&(i.onclick=Bf)}ub(o,a);var g;o=null;for(_e in c)if(!a.hasOwnProperty(_e)&&c.hasOwnProperty(_e)&&c[_e]!=null)if(_e==="style"){var $=c[_e];for(g in $)$.hasOwnProperty(g)&&(o||(o={}),o[g]="")}else _e!=="dangerouslySetInnerHTML"&&_e!=="children"&&_e!=="suppressContentEditableWarning"&&_e!=="suppressHydrationWarning"&&_e!=="autoFocus"&&(ea.hasOwnProperty(_e)?d||(d=[]):(d=d||[]).push(_e,null));for(_e in a){var j=a[_e];if($=c!=null?c[_e]:void 0,a.hasOwnProperty(_e)&&j!==$&&(j!=null||$!=null))if(_e==="style")if($){for(g in $)!$.hasOwnProperty(g)||j&&j.hasOwnProperty(g)||(o||(o={}),o[g]="");for(g in j)j.hasOwnProperty(g)&&$[g]!==j[g]&&(o||(o={}),o[g]=j[g])}else o||(d||(d=[]),d.push(_e,o)),o=j;else _e==="dangerouslySetInnerHTML"?(j=j?j.__html:void 0,$=$?$.__html:void 0,j!=null&&$!==j&&(d=d||[]).push(_e,j)):_e==="children"?typeof j!="string"&&typeof j!="number"||(d=d||[]).push(_e,""+j):_e!=="suppressContentEditableWarning"&&_e!=="suppressHydrationWarning"&&(ea.hasOwnProperty(_e)?(j!=null&&_e==="onScroll"&&D("scroll",i),d||$===j||(d=[])):(d=d||[]).push(_e,j))}o&&(d=d||[]).push("style",o);var _e=d;(s.updateQueue=_e)&&(s.flags|=4)}};Cj=function(i,s,o,a){o!==a&&(s.flags|=4)};function Dj(i,s){if(!I)switch(i.tailMode){case"hidden":s=i.tail;for(var o=null;s!==null;)s.alternate!==null&&(o=s),s=s.sibling;o===null?i.tail=null:o.sibling=null;break;case"collapsed":o=i.tail;for(var a=null;o!==null;)o.alternate!==null&&(a=o),o=o.sibling;a===null?s||i.tail===null?i.tail=null:i.tail.sibling=null:a.sibling=null}}function S(i){var s=i.alternate!==null&&i.alternate.child===i.child,o=0,a=0;if(s)for(var c=i.child;c!==null;)o|=c.lanes|c.childLanes,a|=c.subtreeFlags&14680064,a|=c.flags&14680064,c.return=i,c=c.sibling;else for(c=i.child;c!==null;)o|=c.lanes|c.childLanes,a|=c.subtreeFlags,a|=c.flags,c.return=i,c=c.sibling;return i.subtreeFlags|=a,i.childLanes=o,s}function Ej(i,s,o){var a=s.pendingProps;switch(wg(s),s.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return S(s),null;case 1:return Zf(s.type)&&$f(),S(s),null;case 3:return a=s.stateNode,zh(),E(Wf),E(H),Eh(),a.pendingContext&&(a.context=a.pendingContext,a.pendingContext=null),(i===null||i.child===null)&&(Gg(s)?s.flags|=4:i===null||i.memoizedState.isDehydrated&&!(s.flags&256)||(s.flags|=1024,zg!==null&&(Fj(zg),zg=null))),Aj(i,s),S(s),null;case 5:Bh(s);var c=xh(wh.current);if(o=s.type,i!==null&&s.stateNode!=null)Bj(i,s,o,a,c),i.ref!==s.ref&&(s.flags|=512,s.flags|=2097152);else{if(!a){if(s.stateNode===null)throw Error(p$2(166));return S(s),null}if(i=xh(uh.current),Gg(s)){a=s.stateNode,o=s.type;var d=s.memoizedProps;switch(a[Of]=s,a[Pf]=d,i=(s.mode&1)!==0,o){case"dialog":D("cancel",a),D("close",a);break;case"iframe":case"object":case"embed":D("load",a);break;case"video":case"audio":for(c=0;c<lf.length;c++)D(lf[c],a);break;case"source":D("error",a);break;case"img":case"image":case"link":D("error",a),D("load",a);break;case"details":D("toggle",a);break;case"input":Za(a,d),D("invalid",a);break;case"select":a._wrapperState={wasMultiple:!!d.multiple},D("invalid",a);break;case"textarea":hb(a,d),D("invalid",a)}ub(o,d),c=null;for(var g in d)if(d.hasOwnProperty(g)){var $=d[g];g==="children"?typeof $=="string"?a.textContent!==$&&(d.suppressHydrationWarning!==!0&&Af(a.textContent,$,i),c=["children",$]):typeof $=="number"&&a.textContent!==""+$&&(d.suppressHydrationWarning!==!0&&Af(a.textContent,$,i),c=["children",""+$]):ea.hasOwnProperty(g)&&$!=null&&g==="onScroll"&&D("scroll",a)}switch(o){case"input":Va(a),db(a,d,!0);break;case"textarea":Va(a),jb(a);break;case"select":case"option":break;default:typeof d.onClick=="function"&&(a.onclick=Bf)}a=c,s.updateQueue=a,a!==null&&(s.flags|=4)}else{g=c.nodeType===9?c:c.ownerDocument,i==="http://www.w3.org/1999/xhtml"&&(i=kb(o)),i==="http://www.w3.org/1999/xhtml"?o==="script"?(i=g.createElement("div"),i.innerHTML="<script><\/script>",i=i.removeChild(i.firstChild)):typeof a.is=="string"?i=g.createElement(o,{is:a.is}):(i=g.createElement(o),o==="select"&&(g=i,a.multiple?g.multiple=!0:a.size&&(g.size=a.size))):i=g.createElementNS(i,o),i[Of]=s,i[Pf]=a,zj(i,s,!1,!1),s.stateNode=i;e:{switch(g=vb(o,a),o){case"dialog":D("cancel",i),D("close",i),c=a;break;case"iframe":case"object":case"embed":D("load",i),c=a;break;case"video":case"audio":for(c=0;c<lf.length;c++)D(lf[c],i);c=a;break;case"source":D("error",i),c=a;break;case"img":case"image":case"link":D("error",i),D("load",i),c=a;break;case"details":D("toggle",i),c=a;break;case"input":Za(i,a),c=Ya(i,a),D("invalid",i);break;case"option":c=a;break;case"select":i._wrapperState={wasMultiple:!!a.multiple},c=A({},a,{value:void 0}),D("invalid",i);break;case"textarea":hb(i,a),c=gb(i,a),D("invalid",i);break;default:c=a}ub(o,c),$=c;for(d in $)if($.hasOwnProperty(d)){var j=$[d];d==="style"?sb(i,j):d==="dangerouslySetInnerHTML"?(j=j?j.__html:void 0,j!=null&&nb(i,j)):d==="children"?typeof j=="string"?(o!=="textarea"||j!=="")&&ob(i,j):typeof j=="number"&&ob(i,""+j):d!=="suppressContentEditableWarning"&&d!=="suppressHydrationWarning"&&d!=="autoFocus"&&(ea.hasOwnProperty(d)?j!=null&&d==="onScroll"&&D("scroll",i):j!=null&&ta(i,d,j,g))}switch(o){case"input":Va(i),db(i,a,!1);break;case"textarea":Va(i),jb(i);break;case"option":a.value!=null&&i.setAttribute("value",""+Sa(a.value));break;case"select":i.multiple=!!a.multiple,d=a.value,d!=null?fb(i,!!a.multiple,d,!1):a.defaultValue!=null&&fb(i,!!a.multiple,a.defaultValue,!0);break;default:typeof c.onClick=="function"&&(i.onclick=Bf)}switch(o){case"button":case"input":case"select":case"textarea":a=!!a.autoFocus;break e;case"img":a=!0;break e;default:a=!1}}a&&(s.flags|=4)}s.ref!==null&&(s.flags|=512,s.flags|=2097152)}return S(s),null;case 6:if(i&&s.stateNode!=null)Cj(i,s,i.memoizedProps,a);else{if(typeof a!="string"&&s.stateNode===null)throw Error(p$2(166));if(o=xh(wh.current),xh(uh.current),Gg(s)){if(a=s.stateNode,o=s.memoizedProps,a[Of]=s,(d=a.nodeValue!==o)&&(i=xg,i!==null))switch(i.tag){case 3:Af(a.nodeValue,o,(i.mode&1)!==0);break;case 5:i.memoizedProps.suppressHydrationWarning!==!0&&Af(a.nodeValue,o,(i.mode&1)!==0)}d&&(s.flags|=4)}else a=(o.nodeType===9?o:o.ownerDocument).createTextNode(a),a[Of]=s,s.stateNode=a}return S(s),null;case 13:if(E(L),a=s.memoizedState,i===null||i.memoizedState!==null&&i.memoizedState.dehydrated!==null){if(I&&yg!==null&&s.mode&1&&!(s.flags&128))Hg(),Ig(),s.flags|=98560,d=!1;else if(d=Gg(s),a!==null&&a.dehydrated!==null){if(i===null){if(!d)throw Error(p$2(318));if(d=s.memoizedState,d=d!==null?d.dehydrated:null,!d)throw Error(p$2(317));d[Of]=s}else Ig(),!(s.flags&128)&&(s.memoizedState=null),s.flags|=4;S(s),d=!1}else zg!==null&&(Fj(zg),zg=null),d=!0;if(!d)return s.flags&65536?s:null}return s.flags&128?(s.lanes=o,s):(a=a!==null,a!==(i!==null&&i.memoizedState!==null)&&a&&(s.child.flags|=8192,s.mode&1&&(i===null||L.current&1?T===0&&(T=3):tj())),s.updateQueue!==null&&(s.flags|=4),S(s),null);case 4:return zh(),Aj(i,s),i===null&&sf(s.stateNode.containerInfo),S(s),null;case 10:return ah(s.type._context),S(s),null;case 17:return Zf(s.type)&&$f(),S(s),null;case 19:if(E(L),d=s.memoizedState,d===null)return S(s),null;if(a=(s.flags&128)!==0,g=d.rendering,g===null)if(a)Dj(d,!1);else{if(T!==0||i!==null&&i.flags&128)for(i=s.child;i!==null;){if(g=Ch(i),g!==null){for(s.flags|=128,Dj(d,!1),a=g.updateQueue,a!==null&&(s.updateQueue=a,s.flags|=4),s.subtreeFlags=0,a=o,o=s.child;o!==null;)d=o,i=a,d.flags&=14680066,g=d.alternate,g===null?(d.childLanes=0,d.lanes=i,d.child=null,d.subtreeFlags=0,d.memoizedProps=null,d.memoizedState=null,d.updateQueue=null,d.dependencies=null,d.stateNode=null):(d.childLanes=g.childLanes,d.lanes=g.lanes,d.child=g.child,d.subtreeFlags=0,d.deletions=null,d.memoizedProps=g.memoizedProps,d.memoizedState=g.memoizedState,d.updateQueue=g.updateQueue,d.type=g.type,i=g.dependencies,d.dependencies=i===null?null:{lanes:i.lanes,firstContext:i.firstContext}),o=o.sibling;return G(L,L.current&1|2),s.child}i=i.sibling}d.tail!==null&&B()>Gj&&(s.flags|=128,a=!0,Dj(d,!1),s.lanes=4194304)}else{if(!a)if(i=Ch(g),i!==null){if(s.flags|=128,a=!0,o=i.updateQueue,o!==null&&(s.updateQueue=o,s.flags|=4),Dj(d,!0),d.tail===null&&d.tailMode==="hidden"&&!g.alternate&&!I)return S(s),null}else 2*B()-d.renderingStartTime>Gj&&o!==1073741824&&(s.flags|=128,a=!0,Dj(d,!1),s.lanes=4194304);d.isBackwards?(g.sibling=s.child,s.child=g):(o=d.last,o!==null?o.sibling=g:s.child=g,d.last=g)}return d.tail!==null?(s=d.tail,d.rendering=s,d.tail=s.sibling,d.renderingStartTime=B(),s.sibling=null,o=L.current,G(L,a?o&1|2:o&1),s):(S(s),null);case 22:case 23:return Hj(),a=s.memoizedState!==null,i!==null&&i.memoizedState!==null!==a&&(s.flags|=8192),a&&s.mode&1?fj&1073741824&&(S(s),s.subtreeFlags&6&&(s.flags|=8192)):S(s),null;case 24:return null;case 25:return null}throw Error(p$2(156,s.tag))}function Ij(i,s){switch(wg(s),s.tag){case 1:return Zf(s.type)&&$f(),i=s.flags,i&65536?(s.flags=i&-65537|128,s):null;case 3:return zh(),E(Wf),E(H),Eh(),i=s.flags,i&65536&&!(i&128)?(s.flags=i&-65537|128,s):null;case 5:return Bh(s),null;case 13:if(E(L),i=s.memoizedState,i!==null&&i.dehydrated!==null){if(s.alternate===null)throw Error(p$2(340));Ig()}return i=s.flags,i&65536?(s.flags=i&-65537|128,s):null;case 19:return E(L),null;case 4:return zh(),null;case 10:return ah(s.type._context),null;case 22:case 23:return Hj(),null;case 24:return null;default:return null}}var Jj=!1,U=!1,Kj=typeof WeakSet=="function"?WeakSet:Set,V=null;function Lj(i,s){var o=i.ref;if(o!==null)if(typeof o=="function")try{o(null)}catch(a){W(i,s,a)}else o.current=null}function Mj(i,s,o){try{o()}catch(a){W(i,s,a)}}var Nj=!1;function Oj(i,s){if(Cf=dd,i=Me(),Ne(i)){if("selectionStart"in i)var o={start:i.selectionStart,end:i.selectionEnd};else e:{o=(o=i.ownerDocument)&&o.defaultView||window;var a=o.getSelection&&o.getSelection();if(a&&a.rangeCount!==0){o=a.anchorNode;var c=a.anchorOffset,d=a.focusNode;a=a.focusOffset;try{o.nodeType,d.nodeType}catch{o=null;break e}var g=0,$=-1,j=-1,_e=0,et=0,_=i,b=null;t:for(;;){for(var tt;_!==o||c!==0&&_.nodeType!==3||($=g+c),_!==d||a!==0&&_.nodeType!==3||(j=g+a),_.nodeType===3&&(g+=_.nodeValue.length),(tt=_.firstChild)!==null;)b=_,_=tt;for(;;){if(_===i)break t;if(b===o&&++_e===c&&($=g),b===d&&++et===a&&(j=g),(tt=_.nextSibling)!==null)break;_=b,b=_.parentNode}_=tt}o=$===-1||j===-1?null:{start:$,end:j}}else o=null}o=o||{start:0,end:0}}else o=null;for(Df={focusedElem:i,selectionRange:o},dd=!1,V=s;V!==null;)if(s=V,i=s.child,(s.subtreeFlags&1028)!==0&&i!==null)i.return=s,V=i;else for(;V!==null;){s=V;try{var nt=s.alternate;if(s.flags&1024)switch(s.tag){case 0:case 11:case 15:break;case 1:if(nt!==null){var rt=nt.memoizedProps,st=nt.memoizedState,ot=s.stateNode,it=ot.getSnapshotBeforeUpdate(s.elementType===s.type?rt:Ci(s.type,rt),st);ot.__reactInternalSnapshotBeforeUpdate=it}break;case 3:var at=s.stateNode.containerInfo;at.nodeType===1?at.textContent="":at.nodeType===9&&at.documentElement&&at.removeChild(at.documentElement);break;case 5:case 6:case 4:case 17:break;default:throw Error(p$2(163))}}catch(lt){W(s,s.return,lt)}if(i=s.sibling,i!==null){i.return=s.return,V=i;break}V=s.return}return nt=Nj,Nj=!1,nt}function Pj(i,s,o){var a=s.updateQueue;if(a=a!==null?a.lastEffect:null,a!==null){var c=a=a.next;do{if((c.tag&i)===i){var d=c.destroy;c.destroy=void 0,d!==void 0&&Mj(s,o,d)}c=c.next}while(c!==a)}}function Qj(i,s){if(s=s.updateQueue,s=s!==null?s.lastEffect:null,s!==null){var o=s=s.next;do{if((o.tag&i)===i){var a=o.create;o.destroy=a()}o=o.next}while(o!==s)}}function Rj(i){var s=i.ref;if(s!==null){var o=i.stateNode;switch(i.tag){case 5:i=o;break;default:i=o}typeof s=="function"?s(i):s.current=i}}function Sj(i){var s=i.alternate;s!==null&&(i.alternate=null,Sj(s)),i.child=null,i.deletions=null,i.sibling=null,i.tag===5&&(s=i.stateNode,s!==null&&(delete s[Of],delete s[Pf],delete s[of],delete s[Qf],delete s[Rf])),i.stateNode=null,i.return=null,i.dependencies=null,i.memoizedProps=null,i.memoizedState=null,i.pendingProps=null,i.stateNode=null,i.updateQueue=null}function Tj(i){return i.tag===5||i.tag===3||i.tag===4}function Uj(i){e:for(;;){for(;i.sibling===null;){if(i.return===null||Tj(i.return))return null;i=i.return}for(i.sibling.return=i.return,i=i.sibling;i.tag!==5&&i.tag!==6&&i.tag!==18;){if(i.flags&2||i.child===null||i.tag===4)continue e;i.child.return=i,i=i.child}if(!(i.flags&2))return i.stateNode}}function Vj(i,s,o){var a=i.tag;if(a===5||a===6)i=i.stateNode,s?o.nodeType===8?o.parentNode.insertBefore(i,s):o.insertBefore(i,s):(o.nodeType===8?(s=o.parentNode,s.insertBefore(i,o)):(s=o,s.appendChild(i)),o=o._reactRootContainer,o!=null||s.onclick!==null||(s.onclick=Bf));else if(a!==4&&(i=i.child,i!==null))for(Vj(i,s,o),i=i.sibling;i!==null;)Vj(i,s,o),i=i.sibling}function Wj(i,s,o){var a=i.tag;if(a===5||a===6)i=i.stateNode,s?o.insertBefore(i,s):o.appendChild(i);else if(a!==4&&(i=i.child,i!==null))for(Wj(i,s,o),i=i.sibling;i!==null;)Wj(i,s,o),i=i.sibling}var X$1=null,Xj=!1;function Yj(i,s,o){for(o=o.child;o!==null;)Zj(i,s,o),o=o.sibling}function Zj(i,s,o){if(lc&&typeof lc.onCommitFiberUnmount=="function")try{lc.onCommitFiberUnmount(kc,o)}catch{}switch(o.tag){case 5:U||Lj(o,s);case 6:var a=X$1,c=Xj;X$1=null,Yj(i,s,o),X$1=a,Xj=c,X$1!==null&&(Xj?(i=X$1,o=o.stateNode,i.nodeType===8?i.parentNode.removeChild(o):i.removeChild(o)):X$1.removeChild(o.stateNode));break;case 18:X$1!==null&&(Xj?(i=X$1,o=o.stateNode,i.nodeType===8?Kf(i.parentNode,o):i.nodeType===1&&Kf(i,o),bd(i)):Kf(X$1,o.stateNode));break;case 4:a=X$1,c=Xj,X$1=o.stateNode.containerInfo,Xj=!0,Yj(i,s,o),X$1=a,Xj=c;break;case 0:case 11:case 14:case 15:if(!U&&(a=o.updateQueue,a!==null&&(a=a.lastEffect,a!==null))){c=a=a.next;do{var d=c,g=d.destroy;d=d.tag,g!==void 0&&(d&2||d&4)&&Mj(o,s,g),c=c.next}while(c!==a)}Yj(i,s,o);break;case 1:if(!U&&(Lj(o,s),a=o.stateNode,typeof a.componentWillUnmount=="function"))try{a.props=o.memoizedProps,a.state=o.memoizedState,a.componentWillUnmount()}catch($){W(o,s,$)}Yj(i,s,o);break;case 21:Yj(i,s,o);break;case 22:o.mode&1?(U=(a=U)||o.memoizedState!==null,Yj(i,s,o),U=a):Yj(i,s,o);break;default:Yj(i,s,o)}}function ak(i){var s=i.updateQueue;if(s!==null){i.updateQueue=null;var o=i.stateNode;o===null&&(o=i.stateNode=new Kj),s.forEach(function(a){var c=bk.bind(null,i,a);o.has(a)||(o.add(a),a.then(c,c))})}}function ck(i,s){var o=s.deletions;if(o!==null)for(var a=0;a<o.length;a++){var c=o[a];try{var d=i,g=s,$=g;e:for(;$!==null;){switch($.tag){case 5:X$1=$.stateNode,Xj=!1;break e;case 3:X$1=$.stateNode.containerInfo,Xj=!0;break e;case 4:X$1=$.stateNode.containerInfo,Xj=!0;break e}$=$.return}if(X$1===null)throw Error(p$2(160));Zj(d,g,c),X$1=null,Xj=!1;var j=c.alternate;j!==null&&(j.return=null),c.return=null}catch(_e){W(c,s,_e)}}if(s.subtreeFlags&12854)for(s=s.child;s!==null;)dk(s,i),s=s.sibling}function dk(i,s){var o=i.alternate,a=i.flags;switch(i.tag){case 0:case 11:case 14:case 15:if(ck(s,i),ek(i),a&4){try{Pj(3,i,i.return),Qj(3,i)}catch(rt){W(i,i.return,rt)}try{Pj(5,i,i.return)}catch(rt){W(i,i.return,rt)}}break;case 1:ck(s,i),ek(i),a&512&&o!==null&&Lj(o,o.return);break;case 5:if(ck(s,i),ek(i),a&512&&o!==null&&Lj(o,o.return),i.flags&32){var c=i.stateNode;try{ob(c,"")}catch(rt){W(i,i.return,rt)}}if(a&4&&(c=i.stateNode,c!=null)){var d=i.memoizedProps,g=o!==null?o.memoizedProps:d,$=i.type,j=i.updateQueue;if(i.updateQueue=null,j!==null)try{$==="input"&&d.type==="radio"&&d.name!=null&&ab(c,d),vb($,g);var _e=vb($,d);for(g=0;g<j.length;g+=2){var et=j[g],_=j[g+1];et==="style"?sb(c,_):et==="dangerouslySetInnerHTML"?nb(c,_):et==="children"?ob(c,_):ta(c,et,_,_e)}switch($){case"input":bb(c,d);break;case"textarea":ib(c,d);break;case"select":var b=c._wrapperState.wasMultiple;c._wrapperState.wasMultiple=!!d.multiple;var tt=d.value;tt!=null?fb(c,!!d.multiple,tt,!1):b!==!!d.multiple&&(d.defaultValue!=null?fb(c,!!d.multiple,d.defaultValue,!0):fb(c,!!d.multiple,d.multiple?[]:"",!1))}c[Pf]=d}catch(rt){W(i,i.return,rt)}}break;case 6:if(ck(s,i),ek(i),a&4){if(i.stateNode===null)throw Error(p$2(162));c=i.stateNode,d=i.memoizedProps;try{c.nodeValue=d}catch(rt){W(i,i.return,rt)}}break;case 3:if(ck(s,i),ek(i),a&4&&o!==null&&o.memoizedState.isDehydrated)try{bd(s.containerInfo)}catch(rt){W(i,i.return,rt)}break;case 4:ck(s,i),ek(i);break;case 13:ck(s,i),ek(i),c=i.child,c.flags&8192&&(d=c.memoizedState!==null,c.stateNode.isHidden=d,!d||c.alternate!==null&&c.alternate.memoizedState!==null||(fk=B())),a&4&&ak(i);break;case 22:if(et=o!==null&&o.memoizedState!==null,i.mode&1?(U=(_e=U)||et,ck(s,i),U=_e):ck(s,i),ek(i),a&8192){if(_e=i.memoizedState!==null,(i.stateNode.isHidden=_e)&&!et&&i.mode&1)for(V=i,et=i.child;et!==null;){for(_=V=et;V!==null;){switch(b=V,tt=b.child,b.tag){case 0:case 11:case 14:case 15:Pj(4,b,b.return);break;case 1:Lj(b,b.return);var nt=b.stateNode;if(typeof nt.componentWillUnmount=="function"){a=b,o=b.return;try{s=a,nt.props=s.memoizedProps,nt.state=s.memoizedState,nt.componentWillUnmount()}catch(rt){W(a,o,rt)}}break;case 5:Lj(b,b.return);break;case 22:if(b.memoizedState!==null){gk(_);continue}}tt!==null?(tt.return=b,V=tt):gk(_)}et=et.sibling}e:for(et=null,_=i;;){if(_.tag===5){if(et===null){et=_;try{c=_.stateNode,_e?(d=c.style,typeof d.setProperty=="function"?d.setProperty("display","none","important"):d.display="none"):($=_.stateNode,j=_.memoizedProps.style,g=j!=null&&j.hasOwnProperty("display")?j.display:null,$.style.display=rb("display",g))}catch(rt){W(i,i.return,rt)}}}else if(_.tag===6){if(et===null)try{_.stateNode.nodeValue=_e?"":_.memoizedProps}catch(rt){W(i,i.return,rt)}}else if((_.tag!==22&&_.tag!==23||_.memoizedState===null||_===i)&&_.child!==null){_.child.return=_,_=_.child;continue}if(_===i)break e;for(;_.sibling===null;){if(_.return===null||_.return===i)break e;et===_&&(et=null),_=_.return}et===_&&(et=null),_.sibling.return=_.return,_=_.sibling}}break;case 19:ck(s,i),ek(i),a&4&&ak(i);break;case 21:break;default:ck(s,i),ek(i)}}function ek(i){var s=i.flags;if(s&2){try{e:{for(var o=i.return;o!==null;){if(Tj(o)){var a=o;break e}o=o.return}throw Error(p$2(160))}switch(a.tag){case 5:var c=a.stateNode;a.flags&32&&(ob(c,""),a.flags&=-33);var d=Uj(i);Wj(i,d,c);break;case 3:case 4:var g=a.stateNode.containerInfo,$=Uj(i);Vj(i,$,g);break;default:throw Error(p$2(161))}}catch(j){W(i,i.return,j)}i.flags&=-3}s&4096&&(i.flags&=-4097)}function hk(i,s,o){V=i,ik(i)}function ik(i,s,o){for(var a=(i.mode&1)!==0;V!==null;){var c=V,d=c.child;if(c.tag===22&&a){var g=c.memoizedState!==null||Jj;if(!g){var $=c.alternate,j=$!==null&&$.memoizedState!==null||U;$=Jj;var _e=U;if(Jj=g,(U=j)&&!_e)for(V=c;V!==null;)g=V,j=g.child,g.tag===22&&g.memoizedState!==null?jk(c):j!==null?(j.return=g,V=j):jk(c);for(;d!==null;)V=d,ik(d),d=d.sibling;V=c,Jj=$,U=_e}kk(i)}else c.subtreeFlags&8772&&d!==null?(d.return=c,V=d):kk(i)}}function kk(i){for(;V!==null;){var s=V;if(s.flags&8772){var o=s.alternate;try{if(s.flags&8772)switch(s.tag){case 0:case 11:case 15:U||Qj(5,s);break;case 1:var a=s.stateNode;if(s.flags&4&&!U)if(o===null)a.componentDidMount();else{var c=s.elementType===s.type?o.memoizedProps:Ci(s.type,o.memoizedProps);a.componentDidUpdate(c,o.memoizedState,a.__reactInternalSnapshotBeforeUpdate)}var d=s.updateQueue;d!==null&&sh(s,d,a);break;case 3:var g=s.updateQueue;if(g!==null){if(o=null,s.child!==null)switch(s.child.tag){case 5:o=s.child.stateNode;break;case 1:o=s.child.stateNode}sh(s,g,o)}break;case 5:var $=s.stateNode;if(o===null&&s.flags&4){o=$;var j=s.memoizedProps;switch(s.type){case"button":case"input":case"select":case"textarea":j.autoFocus&&o.focus();break;case"img":j.src&&(o.src=j.src)}}break;case 6:break;case 4:break;case 12:break;case 13:if(s.memoizedState===null){var _e=s.alternate;if(_e!==null){var et=_e.memoizedState;if(et!==null){var _=et.dehydrated;_!==null&&bd(_)}}}break;case 19:case 17:case 21:case 22:case 23:case 25:break;default:throw Error(p$2(163))}U||s.flags&512&&Rj(s)}catch(b){W(s,s.return,b)}}if(s===i){V=null;break}if(o=s.sibling,o!==null){o.return=s.return,V=o;break}V=s.return}}function gk(i){for(;V!==null;){var s=V;if(s===i){V=null;break}var o=s.sibling;if(o!==null){o.return=s.return,V=o;break}V=s.return}}function jk(i){for(;V!==null;){var s=V;try{switch(s.tag){case 0:case 11:case 15:var o=s.return;try{Qj(4,s)}catch(j){W(s,o,j)}break;case 1:var a=s.stateNode;if(typeof a.componentDidMount=="function"){var c=s.return;try{a.componentDidMount()}catch(j){W(s,c,j)}}var d=s.return;try{Rj(s)}catch(j){W(s,d,j)}break;case 5:var g=s.return;try{Rj(s)}catch(j){W(s,g,j)}}}catch(j){W(s,s.return,j)}if(s===i){V=null;break}var $=s.sibling;if($!==null){$.return=s.return,V=$;break}V=s.return}}var lk=Math.ceil,mk=ua.ReactCurrentDispatcher,nk=ua.ReactCurrentOwner,ok=ua.ReactCurrentBatchConfig,K=0,Q=null,Y=null,Z=0,fj=0,ej=Uf(0),T=0,pk=null,rh=0,qk=0,rk=0,sk=null,tk=null,fk=0,Gj=1/0,uk=null,Oi=!1,Pi=null,Ri=null,vk=!1,wk=null,xk=0,yk=0,zk=null,Ak=-1,Bk=0;function R(){return K&6?B():Ak!==-1?Ak:Ak=B()}function yi(i){return i.mode&1?K&2&&Z!==0?Z&-Z:Kg.transition!==null?(Bk===0&&(Bk=yc()),Bk):(i=C,i!==0||(i=window.event,i=i===void 0?16:jd(i.type)),i):1}function gi(i,s,o,a){if(50<yk)throw yk=0,zk=null,Error(p$2(185));Ac(i,o,a),(!(K&2)||i!==Q)&&(i===Q&&(!(K&2)&&(qk|=o),T===4&&Ck(i,Z)),Dk(i,a),o===1&&K===0&&!(s.mode&1)&&(Gj=B()+500,fg&&jg()))}function Dk(i,s){var o=i.callbackNode;wc(i,s);var a=uc(i,i===Q?Z:0);if(a===0)o!==null&&bc(o),i.callbackNode=null,i.callbackPriority=0;else if(s=a&-a,i.callbackPriority!==s){if(o!=null&&bc(o),s===1)i.tag===0?ig(Ek.bind(null,i)):hg(Ek.bind(null,i)),Jf(function(){!(K&6)&&jg()}),o=null;else{switch(Dc(a)){case 1:o=fc;break;case 4:o=gc;break;case 16:o=hc;break;case 536870912:o=jc;break;default:o=hc}o=Fk(o,Gk.bind(null,i))}i.callbackPriority=s,i.callbackNode=o}}function Gk(i,s){if(Ak=-1,Bk=0,K&6)throw Error(p$2(327));var o=i.callbackNode;if(Hk()&&i.callbackNode!==o)return null;var a=uc(i,i===Q?Z:0);if(a===0)return null;if(a&30||a&i.expiredLanes||s)s=Ik(i,a);else{s=a;var c=K;K|=2;var d=Jk();(Q!==i||Z!==s)&&(uk=null,Gj=B()+500,Kk(i,s));do try{Lk();break}catch($){Mk(i,$)}while(!0);$g(),mk.current=d,K=c,Y!==null?s=0:(Q=null,Z=0,s=T)}if(s!==0){if(s===2&&(c=xc(i),c!==0&&(a=c,s=Nk(i,c))),s===1)throw o=pk,Kk(i,0),Ck(i,a),Dk(i,B()),o;if(s===6)Ck(i,a);else{if(c=i.current.alternate,!(a&30)&&!Ok(c)&&(s=Ik(i,a),s===2&&(d=xc(i),d!==0&&(a=d,s=Nk(i,d))),s===1))throw o=pk,Kk(i,0),Ck(i,a),Dk(i,B()),o;switch(i.finishedWork=c,i.finishedLanes=a,s){case 0:case 1:throw Error(p$2(345));case 2:Pk(i,tk,uk);break;case 3:if(Ck(i,a),(a&130023424)===a&&(s=fk+500-B(),10<s)){if(uc(i,0)!==0)break;if(c=i.suspendedLanes,(c&a)!==a){R(),i.pingedLanes|=i.suspendedLanes&c;break}i.timeoutHandle=Ff(Pk.bind(null,i,tk,uk),s);break}Pk(i,tk,uk);break;case 4:if(Ck(i,a),(a&4194240)===a)break;for(s=i.eventTimes,c=-1;0<a;){var g=31-oc(a);d=1<<g,g=s[g],g>c&&(c=g),a&=~d}if(a=c,a=B()-a,a=(120>a?120:480>a?480:1080>a?1080:1920>a?1920:3e3>a?3e3:4320>a?4320:1960*lk(a/1960))-a,10<a){i.timeoutHandle=Ff(Pk.bind(null,i,tk,uk),a);break}Pk(i,tk,uk);break;case 5:Pk(i,tk,uk);break;default:throw Error(p$2(329))}}}return Dk(i,B()),i.callbackNode===o?Gk.bind(null,i):null}function Nk(i,s){var o=sk;return i.current.memoizedState.isDehydrated&&(Kk(i,s).flags|=256),i=Ik(i,s),i!==2&&(s=tk,tk=o,s!==null&&Fj(s)),i}function Fj(i){tk===null?tk=i:tk.push.apply(tk,i)}function Ok(i){for(var s=i;;){if(s.flags&16384){var o=s.updateQueue;if(o!==null&&(o=o.stores,o!==null))for(var a=0;a<o.length;a++){var c=o[a],d=c.getSnapshot;c=c.value;try{if(!He(d(),c))return!1}catch{return!1}}}if(o=s.child,s.subtreeFlags&16384&&o!==null)o.return=s,s=o;else{if(s===i)break;for(;s.sibling===null;){if(s.return===null||s.return===i)return!0;s=s.return}s.sibling.return=s.return,s=s.sibling}}return!0}function Ck(i,s){for(s&=~rk,s&=~qk,i.suspendedLanes|=s,i.pingedLanes&=~s,i=i.expirationTimes;0<s;){var o=31-oc(s),a=1<<o;i[o]=-1,s&=~a}}function Ek(i){if(K&6)throw Error(p$2(327));Hk();var s=uc(i,0);if(!(s&1))return Dk(i,B()),null;var o=Ik(i,s);if(i.tag!==0&&o===2){var a=xc(i);a!==0&&(s=a,o=Nk(i,a))}if(o===1)throw o=pk,Kk(i,0),Ck(i,s),Dk(i,B()),o;if(o===6)throw Error(p$2(345));return i.finishedWork=i.current.alternate,i.finishedLanes=s,Pk(i,tk,uk),Dk(i,B()),null}function Qk(i,s){var o=K;K|=1;try{return i(s)}finally{K=o,K===0&&(Gj=B()+500,fg&&jg())}}function Rk(i){wk!==null&&wk.tag===0&&!(K&6)&&Hk();var s=K;K|=1;var o=ok.transition,a=C;try{if(ok.transition=null,C=1,i)return i()}finally{C=a,ok.transition=o,K=s,!(K&6)&&jg()}}function Hj(){fj=ej.current,E(ej)}function Kk(i,s){i.finishedWork=null,i.finishedLanes=0;var o=i.timeoutHandle;if(o!==-1&&(i.timeoutHandle=-1,Gf(o)),Y!==null)for(o=Y.return;o!==null;){var a=o;switch(wg(a),a.tag){case 1:a=a.type.childContextTypes,a!=null&&$f();break;case 3:zh(),E(Wf),E(H),Eh();break;case 5:Bh(a);break;case 4:zh();break;case 13:E(L);break;case 19:E(L);break;case 10:ah(a.type._context);break;case 22:case 23:Hj()}o=o.return}if(Q=i,Y=i=Pg(i.current,null),Z=fj=s,T=0,pk=null,rk=qk=rh=0,tk=sk=null,fh!==null){for(s=0;s<fh.length;s++)if(o=fh[s],a=o.interleaved,a!==null){o.interleaved=null;var c=a.next,d=o.pending;if(d!==null){var g=d.next;d.next=c,a.next=g}o.pending=a}fh=null}return i}function Mk(i,s){do{var o=Y;try{if($g(),Fh.current=Rh,Ih){for(var a=M.memoizedState;a!==null;){var c=a.queue;c!==null&&(c.pending=null),a=a.next}Ih=!1}if(Hh=0,O=N=M=null,Jh=!1,Kh=0,nk.current=null,o===null||o.return===null){T=1,pk=s,Y=null;break}e:{var d=i,g=o.return,$=o,j=s;if(s=Z,$.flags|=32768,j!==null&&typeof j=="object"&&typeof j.then=="function"){var _e=j,et=$,_=et.tag;if(!(et.mode&1)&&(_===0||_===11||_===15)){var b=et.alternate;b?(et.updateQueue=b.updateQueue,et.memoizedState=b.memoizedState,et.lanes=b.lanes):(et.updateQueue=null,et.memoizedState=null)}var tt=Ui(g);if(tt!==null){tt.flags&=-257,Vi(tt,g,$,d,s),tt.mode&1&&Si(d,_e,s),s=tt,j=_e;var nt=s.updateQueue;if(nt===null){var rt=new Set;rt.add(j),s.updateQueue=rt}else nt.add(j);break e}else{if(!(s&1)){Si(d,_e,s),tj();break e}j=Error(p$2(426))}}else if(I&&$.mode&1){var st=Ui(g);if(st!==null){!(st.flags&65536)&&(st.flags|=256),Vi(st,g,$,d,s),Jg(Ji(j,$));break e}}d=j=Ji(j,$),T!==4&&(T=2),sk===null?sk=[d]:sk.push(d),d=g;do{switch(d.tag){case 3:d.flags|=65536,s&=-s,d.lanes|=s;var ot=Ni(d,j,s);ph(d,ot);break e;case 1:$=j;var it=d.type,at=d.stateNode;if(!(d.flags&128)&&(typeof it.getDerivedStateFromError=="function"||at!==null&&typeof at.componentDidCatch=="function"&&(Ri===null||!Ri.has(at)))){d.flags|=65536,s&=-s,d.lanes|=s;var lt=Qi(d,$,s);ph(d,lt);break e}}d=d.return}while(d!==null)}Sk(o)}catch(ut){s=ut,Y===o&&o!==null&&(Y=o=o.return);continue}break}while(!0)}function Jk(){var i=mk.current;return mk.current=Rh,i===null?Rh:i}function tj(){(T===0||T===3||T===2)&&(T=4),Q===null||!(rh&268435455)&&!(qk&268435455)||Ck(Q,Z)}function Ik(i,s){var o=K;K|=2;var a=Jk();(Q!==i||Z!==s)&&(uk=null,Kk(i,s));do try{Tk();break}catch(c){Mk(i,c)}while(!0);if($g(),K=o,mk.current=a,Y!==null)throw Error(p$2(261));return Q=null,Z=0,T}function Tk(){for(;Y!==null;)Uk(Y)}function Lk(){for(;Y!==null&&!cc();)Uk(Y)}function Uk(i){var s=Vk(i.alternate,i,fj);i.memoizedProps=i.pendingProps,s===null?Sk(i):Y=s,nk.current=null}function Sk(i){var s=i;do{var o=s.alternate;if(i=s.return,s.flags&32768){if(o=Ij(o,s),o!==null){o.flags&=32767,Y=o;return}if(i!==null)i.flags|=32768,i.subtreeFlags=0,i.deletions=null;else{T=6,Y=null;return}}else if(o=Ej(o,s,fj),o!==null){Y=o;return}if(s=s.sibling,s!==null){Y=s;return}Y=s=i}while(s!==null);T===0&&(T=5)}function Pk(i,s,o){var a=C,c=ok.transition;try{ok.transition=null,C=1,Wk(i,s,o,a)}finally{ok.transition=c,C=a}return null}function Wk(i,s,o,a){do Hk();while(wk!==null);if(K&6)throw Error(p$2(327));o=i.finishedWork;var c=i.finishedLanes;if(o===null)return null;if(i.finishedWork=null,i.finishedLanes=0,o===i.current)throw Error(p$2(177));i.callbackNode=null,i.callbackPriority=0;var d=o.lanes|o.childLanes;if(Bc(i,d),i===Q&&(Y=Q=null,Z=0),!(o.subtreeFlags&2064)&&!(o.flags&2064)||vk||(vk=!0,Fk(hc,function(){return Hk(),null})),d=(o.flags&15990)!==0,o.subtreeFlags&15990||d){d=ok.transition,ok.transition=null;var g=C;C=1;var $=K;K|=4,nk.current=null,Oj(i,o),dk(o,i),Oe(Df),dd=!!Cf,Df=Cf=null,i.current=o,hk(o),dc(),K=$,C=g,ok.transition=d}else i.current=o;if(vk&&(vk=!1,wk=i,xk=c),d=i.pendingLanes,d===0&&(Ri=null),mc(o.stateNode),Dk(i,B()),s!==null)for(a=i.onRecoverableError,o=0;o<s.length;o++)c=s[o],a(c.value,{componentStack:c.stack,digest:c.digest});if(Oi)throw Oi=!1,i=Pi,Pi=null,i;return xk&1&&i.tag!==0&&Hk(),d=i.pendingLanes,d&1?i===zk?yk++:(yk=0,zk=i):yk=0,jg(),null}function Hk(){if(wk!==null){var i=Dc(xk),s=ok.transition,o=C;try{if(ok.transition=null,C=16>i?16:i,wk===null)var a=!1;else{if(i=wk,wk=null,xk=0,K&6)throw Error(p$2(331));var c=K;for(K|=4,V=i.current;V!==null;){var d=V,g=d.child;if(V.flags&16){var $=d.deletions;if($!==null){for(var j=0;j<$.length;j++){var _e=$[j];for(V=_e;V!==null;){var et=V;switch(et.tag){case 0:case 11:case 15:Pj(8,et,d)}var _=et.child;if(_!==null)_.return=et,V=_;else for(;V!==null;){et=V;var b=et.sibling,tt=et.return;if(Sj(et),et===_e){V=null;break}if(b!==null){b.return=tt,V=b;break}V=tt}}}var nt=d.alternate;if(nt!==null){var rt=nt.child;if(rt!==null){nt.child=null;do{var st=rt.sibling;rt.sibling=null,rt=st}while(rt!==null)}}V=d}}if(d.subtreeFlags&2064&&g!==null)g.return=d,V=g;else e:for(;V!==null;){if(d=V,d.flags&2048)switch(d.tag){case 0:case 11:case 15:Pj(9,d,d.return)}var ot=d.sibling;if(ot!==null){ot.return=d.return,V=ot;break e}V=d.return}}var it=i.current;for(V=it;V!==null;){g=V;var at=g.child;if(g.subtreeFlags&2064&&at!==null)at.return=g,V=at;else e:for(g=it;V!==null;){if($=V,$.flags&2048)try{switch($.tag){case 0:case 11:case 15:Qj(9,$)}}catch(ut){W($,$.return,ut)}if($===g){V=null;break e}var lt=$.sibling;if(lt!==null){lt.return=$.return,V=lt;break e}V=$.return}}if(K=c,jg(),lc&&typeof lc.onPostCommitFiberRoot=="function")try{lc.onPostCommitFiberRoot(kc,i)}catch{}a=!0}return a}finally{C=o,ok.transition=s}}return!1}function Xk(i,s,o){s=Ji(o,s),s=Ni(i,s,1),i=nh(i,s,1),s=R(),i!==null&&(Ac(i,1,s),Dk(i,s))}function W(i,s,o){if(i.tag===3)Xk(i,i,o);else for(;s!==null;){if(s.tag===3){Xk(s,i,o);break}else if(s.tag===1){var a=s.stateNode;if(typeof s.type.getDerivedStateFromError=="function"||typeof a.componentDidCatch=="function"&&(Ri===null||!Ri.has(a))){i=Ji(o,i),i=Qi(s,i,1),s=nh(s,i,1),i=R(),s!==null&&(Ac(s,1,i),Dk(s,i));break}}s=s.return}}function Ti(i,s,o){var a=i.pingCache;a!==null&&a.delete(s),s=R(),i.pingedLanes|=i.suspendedLanes&o,Q===i&&(Z&o)===o&&(T===4||T===3&&(Z&130023424)===Z&&500>B()-fk?Kk(i,0):rk|=o),Dk(i,s)}function Yk(i,s){s===0&&(i.mode&1?(s=sc,sc<<=1,!(sc&130023424)&&(sc=4194304)):s=1);var o=R();i=ih(i,s),i!==null&&(Ac(i,s,o),Dk(i,o))}function uj(i){var s=i.memoizedState,o=0;s!==null&&(o=s.retryLane),Yk(i,o)}function bk(i,s){var o=0;switch(i.tag){case 13:var a=i.stateNode,c=i.memoizedState;c!==null&&(o=c.retryLane);break;case 19:a=i.stateNode;break;default:throw Error(p$2(314))}a!==null&&a.delete(s),Yk(i,o)}var Vk;Vk=function(i,s,o){if(i!==null)if(i.memoizedProps!==s.pendingProps||Wf.current)dh=!0;else{if(!(i.lanes&o)&&!(s.flags&128))return dh=!1,yj(i,s,o);dh=!!(i.flags&131072)}else dh=!1,I&&s.flags&1048576&&ug(s,ng,s.index);switch(s.lanes=0,s.tag){case 2:var a=s.type;ij(i,s),i=s.pendingProps;var c=Yf(s,H.current);ch(s,o),c=Nh(null,s,a,i,c,o);var d=Sh();return s.flags|=1,typeof c=="object"&&c!==null&&typeof c.render=="function"&&c.$$typeof===void 0?(s.tag=1,s.memoizedState=null,s.updateQueue=null,Zf(a)?(d=!0,cg(s)):d=!1,s.memoizedState=c.state!==null&&c.state!==void 0?c.state:null,kh(s),c.updater=Ei,s.stateNode=c,c._reactInternals=s,Ii(s,a,i,o),s=jj(null,s,a,!0,d,o)):(s.tag=0,I&&d&&vg(s),Xi(null,s,c,o),s=s.child),s;case 16:a=s.elementType;e:{switch(ij(i,s),i=s.pendingProps,c=a._init,a=c(a._payload),s.type=a,c=s.tag=Zk(a),i=Ci(a,i),c){case 0:s=cj(null,s,a,i,o);break e;case 1:s=hj(null,s,a,i,o);break e;case 11:s=Yi(null,s,a,i,o);break e;case 14:s=$i(null,s,a,Ci(a.type,i),o);break e}throw Error(p$2(306,a,""))}return s;case 0:return a=s.type,c=s.pendingProps,c=s.elementType===a?c:Ci(a,c),cj(i,s,a,c,o);case 1:return a=s.type,c=s.pendingProps,c=s.elementType===a?c:Ci(a,c),hj(i,s,a,c,o);case 3:e:{if(kj(s),i===null)throw Error(p$2(387));a=s.pendingProps,d=s.memoizedState,c=d.element,lh(i,s),qh(s,a,null,o);var g=s.memoizedState;if(a=g.element,d.isDehydrated)if(d={element:a,isDehydrated:!1,cache:g.cache,pendingSuspenseBoundaries:g.pendingSuspenseBoundaries,transitions:g.transitions},s.updateQueue.baseState=d,s.memoizedState=d,s.flags&256){c=Ji(Error(p$2(423)),s),s=lj(i,s,a,o,c);break e}else if(a!==c){c=Ji(Error(p$2(424)),s),s=lj(i,s,a,o,c);break e}else for(yg=Lf(s.stateNode.containerInfo.firstChild),xg=s,I=!0,zg=null,o=Vg(s,null,a,o),s.child=o;o;)o.flags=o.flags&-3|4096,o=o.sibling;else{if(Ig(),a===c){s=Zi(i,s,o);break e}Xi(i,s,a,o)}s=s.child}return s;case 5:return Ah(s),i===null&&Eg(s),a=s.type,c=s.pendingProps,d=i!==null?i.memoizedProps:null,g=c.children,Ef(a,c)?g=null:d!==null&&Ef(a,d)&&(s.flags|=32),gj(i,s),Xi(i,s,g,o),s.child;case 6:return i===null&&Eg(s),null;case 13:return oj(i,s,o);case 4:return yh(s,s.stateNode.containerInfo),a=s.pendingProps,i===null?s.child=Ug(s,null,a,o):Xi(i,s,a,o),s.child;case 11:return a=s.type,c=s.pendingProps,c=s.elementType===a?c:Ci(a,c),Yi(i,s,a,c,o);case 7:return Xi(i,s,s.pendingProps,o),s.child;case 8:return Xi(i,s,s.pendingProps.children,o),s.child;case 12:return Xi(i,s,s.pendingProps.children,o),s.child;case 10:e:{if(a=s.type._context,c=s.pendingProps,d=s.memoizedProps,g=c.value,G(Wg,a._currentValue),a._currentValue=g,d!==null)if(He(d.value,g)){if(d.children===c.children&&!Wf.current){s=Zi(i,s,o);break e}}else for(d=s.child,d!==null&&(d.return=s);d!==null;){var $=d.dependencies;if($!==null){g=d.child;for(var j=$.firstContext;j!==null;){if(j.context===a){if(d.tag===1){j=mh(-1,o&-o),j.tag=2;var _e=d.updateQueue;if(_e!==null){_e=_e.shared;var et=_e.pending;et===null?j.next=j:(j.next=et.next,et.next=j),_e.pending=j}}d.lanes|=o,j=d.alternate,j!==null&&(j.lanes|=o),bh(d.return,o,s),$.lanes|=o;break}j=j.next}}else if(d.tag===10)g=d.type===s.type?null:d.child;else if(d.tag===18){if(g=d.return,g===null)throw Error(p$2(341));g.lanes|=o,$=g.alternate,$!==null&&($.lanes|=o),bh(g,o,s),g=d.sibling}else g=d.child;if(g!==null)g.return=d;else for(g=d;g!==null;){if(g===s){g=null;break}if(d=g.sibling,d!==null){d.return=g.return,g=d;break}g=g.return}d=g}Xi(i,s,c.children,o),s=s.child}return s;case 9:return c=s.type,a=s.pendingProps.children,ch(s,o),c=eh(c),a=a(c),s.flags|=1,Xi(i,s,a,o),s.child;case 14:return a=s.type,c=Ci(a,s.pendingProps),c=Ci(a.type,c),$i(i,s,a,c,o);case 15:return bj(i,s,s.type,s.pendingProps,o);case 17:return a=s.type,c=s.pendingProps,c=s.elementType===a?c:Ci(a,c),ij(i,s),s.tag=1,Zf(a)?(i=!0,cg(s)):i=!1,ch(s,o),Gi(s,a,c),Ii(s,a,c,o),jj(null,s,a,!0,i,o);case 19:return xj(i,s,o);case 22:return dj(i,s,o)}throw Error(p$2(156,s.tag))};function Fk(i,s){return ac(i,s)}function $k(i,s,o,a){this.tag=i,this.key=o,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.ref=null,this.pendingProps=s,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=a,this.subtreeFlags=this.flags=0,this.deletions=null,this.childLanes=this.lanes=0,this.alternate=null}function Bg(i,s,o,a){return new $k(i,s,o,a)}function aj(i){return i=i.prototype,!(!i||!i.isReactComponent)}function Zk(i){if(typeof i=="function")return aj(i)?1:0;if(i!=null){if(i=i.$$typeof,i===Da)return 11;if(i===Ga)return 14}return 2}function Pg(i,s){var o=i.alternate;return o===null?(o=Bg(i.tag,s,i.key,i.mode),o.elementType=i.elementType,o.type=i.type,o.stateNode=i.stateNode,o.alternate=i,i.alternate=o):(o.pendingProps=s,o.type=i.type,o.flags=0,o.subtreeFlags=0,o.deletions=null),o.flags=i.flags&14680064,o.childLanes=i.childLanes,o.lanes=i.lanes,o.child=i.child,o.memoizedProps=i.memoizedProps,o.memoizedState=i.memoizedState,o.updateQueue=i.updateQueue,s=i.dependencies,o.dependencies=s===null?null:{lanes:s.lanes,firstContext:s.firstContext},o.sibling=i.sibling,o.index=i.index,o.ref=i.ref,o}function Rg(i,s,o,a,c,d){var g=2;if(a=i,typeof i=="function")aj(i)&&(g=1);else if(typeof i=="string")g=5;else e:switch(i){case ya:return Tg(o.children,c,d,s);case za:g=8,c|=8;break;case Aa:return i=Bg(12,o,s,c|2),i.elementType=Aa,i.lanes=d,i;case Ea:return i=Bg(13,o,s,c),i.elementType=Ea,i.lanes=d,i;case Fa:return i=Bg(19,o,s,c),i.elementType=Fa,i.lanes=d,i;case Ia:return pj(o,c,d,s);default:if(typeof i=="object"&&i!==null)switch(i.$$typeof){case Ba:g=10;break e;case Ca:g=9;break e;case Da:g=11;break e;case Ga:g=14;break e;case Ha:g=16,a=null;break e}throw Error(p$2(130,i==null?i:typeof i,""))}return s=Bg(g,o,s,c),s.elementType=i,s.type=a,s.lanes=d,s}function Tg(i,s,o,a){return i=Bg(7,i,a,s),i.lanes=o,i}function pj(i,s,o,a){return i=Bg(22,i,a,s),i.elementType=Ia,i.lanes=o,i.stateNode={isHidden:!1},i}function Qg(i,s,o){return i=Bg(6,i,null,s),i.lanes=o,i}function Sg(i,s,o){return s=Bg(4,i.children!==null?i.children:[],i.key,s),s.lanes=o,s.stateNode={containerInfo:i.containerInfo,pendingChildren:null,implementation:i.implementation},s}function al(i,s,o,a,c){this.tag=s,this.containerInfo=i,this.finishedWork=this.pingCache=this.current=this.pendingChildren=null,this.timeoutHandle=-1,this.callbackNode=this.pendingContext=this.context=null,this.callbackPriority=0,this.eventTimes=zc(0),this.expirationTimes=zc(-1),this.entangledLanes=this.finishedLanes=this.mutableReadLanes=this.expiredLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0,this.entanglements=zc(0),this.identifierPrefix=a,this.onRecoverableError=c,this.mutableSourceEagerHydrationData=null}function bl(i,s,o,a,c,d,g,$,j){return i=new al(i,s,o,$,j),s===1?(s=1,d===!0&&(s|=8)):s=0,d=Bg(3,null,null,s),i.current=d,d.stateNode=i,d.memoizedState={element:a,isDehydrated:o,cache:null,transitions:null,pendingSuspenseBoundaries:null},kh(d),i}function cl(i,s,o){var a=3<arguments.length&&arguments[3]!==void 0?arguments[3]:null;return{$$typeof:wa,key:a==null?null:""+a,children:i,containerInfo:s,implementation:o}}function dl(i){if(!i)return Vf;i=i._reactInternals;e:{if(Vb(i)!==i||i.tag!==1)throw Error(p$2(170));var s=i;do{switch(s.tag){case 3:s=s.stateNode.context;break e;case 1:if(Zf(s.type)){s=s.stateNode.__reactInternalMemoizedMergedChildContext;break e}}s=s.return}while(s!==null);throw Error(p$2(171))}if(i.tag===1){var o=i.type;if(Zf(o))return bg(i,o,s)}return s}function el(i,s,o,a,c,d,g,$,j){return i=bl(o,a,!0,i,c,d,g,$,j),i.context=dl(null),o=i.current,a=R(),c=yi(o),d=mh(a,c),d.callback=s??null,nh(o,d,c),i.current.lanes=c,Ac(i,c,a),Dk(i,a),i}function fl(i,s,o,a){var c=s.current,d=R(),g=yi(c);return o=dl(o),s.context===null?s.context=o:s.pendingContext=o,s=mh(d,g),s.payload={element:i},a=a===void 0?null:a,a!==null&&(s.callback=a),i=nh(c,s,g),i!==null&&(gi(i,c,g,d),oh(i,c,g)),g}function gl(i){if(i=i.current,!i.child)return null;switch(i.child.tag){case 5:return i.child.stateNode;default:return i.child.stateNode}}function hl(i,s){if(i=i.memoizedState,i!==null&&i.dehydrated!==null){var o=i.retryLane;i.retryLane=o!==0&&o<s?o:s}}function il(i,s){hl(i,s),(i=i.alternate)&&hl(i,s)}function jl(){return null}var kl=typeof reportError=="function"?reportError:function(i){console.error(i)};function ll(i){this._internalRoot=i}ml.prototype.render=ll.prototype.render=function(i){var s=this._internalRoot;if(s===null)throw Error(p$2(409));fl(i,s,null,null)};ml.prototype.unmount=ll.prototype.unmount=function(){var i=this._internalRoot;if(i!==null){this._internalRoot=null;var s=i.containerInfo;Rk(function(){fl(null,i,null,null)}),s[uf]=null}};function ml(i){this._internalRoot=i}ml.prototype.unstable_scheduleHydration=function(i){if(i){var s=Hc();i={blockedOn:null,target:i,priority:s};for(var o=0;o<Qc.length&&s!==0&&s<Qc[o].priority;o++);Qc.splice(o,0,i),o===0&&Vc(i)}};function nl(i){return!(!i||i.nodeType!==1&&i.nodeType!==9&&i.nodeType!==11)}function ol(i){return!(!i||i.nodeType!==1&&i.nodeType!==9&&i.nodeType!==11&&(i.nodeType!==8||i.nodeValue!==" react-mount-point-unstable "))}function pl(){}function ql(i,s,o,a,c){if(c){if(typeof a=="function"){var d=a;a=function(){var _e=gl(g);d.call(_e)}}var g=el(s,a,i,0,null,!1,!1,"",pl);return i._reactRootContainer=g,i[uf]=g.current,sf(i.nodeType===8?i.parentNode:i),Rk(),g}for(;c=i.lastChild;)i.removeChild(c);if(typeof a=="function"){var $=a;a=function(){var _e=gl(j);$.call(_e)}}var j=bl(i,0,!1,null,null,!1,!1,"",pl);return i._reactRootContainer=j,i[uf]=j.current,sf(i.nodeType===8?i.parentNode:i),Rk(function(){fl(s,j,o,a)}),j}function rl(i,s,o,a,c){var d=o._reactRootContainer;if(d){var g=d;if(typeof c=="function"){var $=c;c=function(){var j=gl(g);$.call(j)}}fl(s,g,i,c)}else g=ql(o,s,i,c,a);return gl(g)}Ec=function(i){switch(i.tag){case 3:var s=i.stateNode;if(s.current.memoizedState.isDehydrated){var o=tc(s.pendingLanes);o!==0&&(Cc(s,o|1),Dk(s,B()),!(K&6)&&(Gj=B()+500,jg()))}break;case 13:Rk(function(){var a=ih(i,1);if(a!==null){var c=R();gi(a,i,1,c)}}),il(i,1)}};Fc=function(i){if(i.tag===13){var s=ih(i,134217728);if(s!==null){var o=R();gi(s,i,134217728,o)}il(i,134217728)}};Gc=function(i){if(i.tag===13){var s=yi(i),o=ih(i,s);if(o!==null){var a=R();gi(o,i,s,a)}il(i,s)}};Hc=function(){return C};Ic=function(i,s){var o=C;try{return C=i,s()}finally{C=o}};yb=function(i,s,o){switch(s){case"input":if(bb(i,o),s=o.name,o.type==="radio"&&s!=null){for(o=i;o.parentNode;)o=o.parentNode;for(o=o.querySelectorAll("input[name="+JSON.stringify(""+s)+'][type="radio"]'),s=0;s<o.length;s++){var a=o[s];if(a!==i&&a.form===i.form){var c=Db(a);if(!c)throw Error(p$2(90));Wa(a),bb(a,c)}}}break;case"textarea":ib(i,o);break;case"select":s=o.value,s!=null&&fb(i,!!o.multiple,s,!1)}};Gb=Qk;Hb=Rk;var sl={usingClientEntryPoint:!1,Events:[Cb,ue,Db,Eb,Fb,Qk]},tl={findFiberByHostInstance:Wc,bundleType:0,version:"18.3.1",rendererPackageName:"react-dom"},ul={bundleType:tl.bundleType,version:tl.version,rendererPackageName:tl.rendererPackageName,rendererConfig:tl.rendererConfig,overrideHookState:null,overrideHookStateDeletePath:null,overrideHookStateRenamePath:null,overrideProps:null,overridePropsDeletePath:null,overridePropsRenamePath:null,setErrorHandler:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:ua.ReactCurrentDispatcher,findHostInstanceByFiber:function(i){return i=Zb(i),i===null?null:i.stateNode},findFiberByHostInstance:tl.findFiberByHostInstance||jl,findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null,reconcilerVersion:"18.3.1-next-f1338f8080-20240426"};if(typeof __REACT_DEVTOOLS_GLOBAL_HOOK__<"u"){var vl=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(!vl.isDisabled&&vl.supportsFiber)try{kc=vl.inject(ul),lc=vl}catch{}}reactDom_production_min.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=sl;reactDom_production_min.createPortal=function(i,s){var o=2<arguments.length&&arguments[2]!==void 0?arguments[2]:null;if(!nl(s))throw Error(p$2(200));return cl(i,s,null,o)};reactDom_production_min.createRoot=function(i,s){if(!nl(i))throw Error(p$2(299));var o=!1,a="",c=kl;return s!=null&&(s.unstable_strictMode===!0&&(o=!0),s.identifierPrefix!==void 0&&(a=s.identifierPrefix),s.onRecoverableError!==void 0&&(c=s.onRecoverableError)),s=bl(i,1,!1,null,null,o,!1,a,c),i[uf]=s.current,sf(i.nodeType===8?i.parentNode:i),new ll(s)};reactDom_production_min.findDOMNode=function(i){if(i==null)return null;if(i.nodeType===1)return i;var s=i._reactInternals;if(s===void 0)throw typeof i.render=="function"?Error(p$2(188)):(i=Object.keys(i).join(","),Error(p$2(268,i)));return i=Zb(s),i=i===null?null:i.stateNode,i};reactDom_production_min.flushSync=function(i){return Rk(i)};reactDom_production_min.hydrate=function(i,s,o){if(!ol(s))throw Error(p$2(200));return rl(null,i,s,!0,o)};reactDom_production_min.hydrateRoot=function(i,s,o){if(!nl(i))throw Error(p$2(405));var a=o!=null&&o.hydratedSources||null,c=!1,d="",g=kl;if(o!=null&&(o.unstable_strictMode===!0&&(c=!0),o.identifierPrefix!==void 0&&(d=o.identifierPrefix),o.onRecoverableError!==void 0&&(g=o.onRecoverableError)),s=el(s,null,i,1,o??null,c,!1,d,g),i[uf]=s.current,sf(i),a)for(i=0;i<a.length;i++)o=a[i],c=o._getVersion,c=c(o._source),s.mutableSourceEagerHydrationData==null?s.mutableSourceEagerHydrationData=[o,c]:s.mutableSourceEagerHydrationData.push(o,c);return new ml(s)};reactDom_production_min.render=function(i,s,o){if(!ol(s))throw Error(p$2(200));return rl(null,i,s,!1,o)};reactDom_production_min.unmountComponentAtNode=function(i){if(!ol(i))throw Error(p$2(40));return i._reactRootContainer?(Rk(function(){rl(null,null,i,!1,function(){i._reactRootContainer=null,i[uf]=null})}),!0):!1};reactDom_production_min.unstable_batchedUpdates=Qk;reactDom_production_min.unstable_renderSubtreeIntoContainer=function(i,s,o,a){if(!ol(o))throw Error(p$2(200));if(i==null||i._reactInternals===void 0)throw Error(p$2(38));return rl(i,s,o,!1,a)};reactDom_production_min.version="18.3.1-next-f1338f8080-20240426";function checkDCE(){if(!(typeof __REACT_DEVTOOLS_GLOBAL_HOOK__>"u"||typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE!="function"))try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(checkDCE)}catch(i){console.error(i)}}checkDCE(),reactDom.exports=reactDom_production_min;var reactDomExports=reactDom.exports;const ReactDOM=getDefaultExportFromCjs(reactDomExports);var createRoot,m$1=reactDomExports;createRoot=m$1.createRoot,m$1.hydrateRoot;function parse$1(i,s){if(i instanceof RegExp)return{keys:!1,pattern:i};var o,a,c,d,g=[],$="",j=i.split("/");for(j[0]||j.shift();c=j.shift();)o=c[0],o==="*"?(g.push(o),$+=c[1]==="?"?"(?:/(.*))?":"/(.*)"):o===":"?(a=c.indexOf("?",1),d=c.indexOf(".",1),g.push(c.substring(1,~a?a:~d?d:c.length)),$+=~a&&!~d?"(?:/([^/]+?))?":"/([^/]+?)",~d&&($+=(~a?"?":"")+"\\"+c.substring(d))):$+="/"+c;return{keys:g,pattern:new RegExp("^"+$+(s?"(?=$|/)":"/?$"),"i")}}var shim={exports:{}},useSyncExternalStoreShim_production_min={};/**
 * @license React
 * use-sync-external-store-shim.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var e=reactExports;function h(i,s){return i===s&&(i!==0||1/i===1/s)||i!==i&&s!==s}var k=typeof Object.is=="function"?Object.is:h,l=e.useState,m=e.useEffect,n=e.useLayoutEffect,p$1=e.useDebugValue;function q(i,s){var o=s(),a=l({inst:{value:o,getSnapshot:s}}),c=a[0].inst,d=a[1];return n(function(){c.value=o,c.getSnapshot=s,r$2(c)&&d({inst:c})},[i,o,s]),m(function(){return r$2(c)&&d({inst:c}),i(function(){r$2(c)&&d({inst:c})})},[i]),p$1(o),o}function r$2(i){var s=i.getSnapshot;i=i.value;try{var o=s();return!k(i,o)}catch{return!0}}function t(i,s){return s()}var u=typeof window>"u"||typeof window.document>"u"||typeof window.document.createElement>"u"?t:q;useSyncExternalStoreShim_production_min.useSyncExternalStore=e.useSyncExternalStore!==void 0?e.useSyncExternalStore:u;shim.exports=useSyncExternalStoreShim_production_min;var shimExports=shim.exports;const useBuiltinInsertionEffect=React$1.useInsertionEffect,canUseDOM=typeof window<"u"&&typeof window.document<"u"&&typeof window.document.createElement<"u",useIsomorphicLayoutEffect=canUseDOM?reactExports.useLayoutEffect:reactExports.useEffect,useInsertionEffect=useBuiltinInsertionEffect||useIsomorphicLayoutEffect,useEvent=i=>{const s=reactExports.useRef([i,(...o)=>s[0](...o)]).current;return useInsertionEffect(()=>{s[0]=i}),s[1]},eventPopstate="popstate",eventPushState="pushState",eventReplaceState="replaceState",eventHashchange="hashchange",events=[eventPopstate,eventPushState,eventReplaceState,eventHashchange],subscribeToLocationUpdates=i=>{for(const s of events)addEventListener(s,i);return()=>{for(const s of events)removeEventListener(s,i)}},useLocationProperty=(i,s)=>shimExports.useSyncExternalStore(subscribeToLocationUpdates,i,s),currentSearch=()=>location.search,useSearch=({ssrSearch:i=""}={})=>useLocationProperty(currentSearch,()=>i),currentPathname=()=>location.pathname,usePathname=({ssrPath:i}={})=>useLocationProperty(currentPathname,i?()=>i:currentPathname),navigate=(i,{replace:s=!1,state:o=null}={})=>history[s?eventReplaceState:eventPushState](o,"",i),useBrowserLocation=(i={})=>[usePathname(i),navigate],patchKey=Symbol.for("wouter_v3");if(typeof history<"u"&&typeof window[patchKey]>"u"){for(const i of[eventPushState,eventReplaceState]){const s=history[i];history[i]=function(){const o=s.apply(this,arguments),a=new Event(i);return a.arguments=arguments,dispatchEvent(a),o}}Object.defineProperty(window,patchKey,{value:!0})}const _relativePath=(i,s)=>s.toLowerCase().indexOf(i.toLowerCase())?"~"+s:s.slice(i.length)||"/",baseDefaults=(i="")=>i==="/"?"":i,absolutePath=(i,s)=>i[0]==="~"?i.slice(1):baseDefaults(s)+i,relativePath=(i="",s)=>_relativePath(unescape(baseDefaults(i)),unescape(s)),unescape=i=>{try{return decodeURI(i)}catch{return i}},defaultRouter={hook:useBrowserLocation,searchHook:useSearch,parser:parse$1,base:"",ssrPath:void 0,ssrSearch:void 0,hrefs:i=>i},RouterCtx=reactExports.createContext(defaultRouter),useRouter=()=>reactExports.useContext(RouterCtx),Params0={},ParamsCtx=reactExports.createContext(Params0),useParams=()=>reactExports.useContext(ParamsCtx),useLocationFromRouter=i=>{const[s,o]=i.hook(i);return[relativePath(i.base,s),useEvent((a,c)=>o(absolutePath(a,i.base),c))]},matchRoute=(i,s,o,a)=>{const{pattern:c,keys:d}=s instanceof RegExp?{keys:!1,pattern:s}:i(s||"*",a),g=c.exec(o)||[],[$,...j]=g;return $!==void 0?[!0,(()=>{const _e=d!==!1?Object.fromEntries(d.map((_,b)=>[_,j[b]])):g.groups;let et={...j};return _e&&Object.assign(et,_e),et})(),...a?[$]:[]]:[!1,null]},Router$1=({children:i,...s})=>{var et,_;const o=useRouter(),a=s.hook?defaultRouter:o;let c=a;const[d,g]=((et=s.ssrPath)==null?void 0:et.split("?"))??[];g&&(s.ssrSearch=g,s.ssrPath=d),s.hrefs=s.hrefs??((_=s.hook)==null?void 0:_.hrefs);let $=reactExports.useRef({}),j=$.current,_e=j;for(let b in a){const tt=b==="base"?a[b]+(s[b]||""):s[b]||a[b];j===_e&&tt!==_e[b]&&($.current=_e={..._e}),_e[b]=tt,tt!==a[b]&&(c=_e)}return reactExports.createElement(RouterCtx.Provider,{value:c,children:i})},h_route=({children:i,component:s},o)=>s?reactExports.createElement(s,{params:o}):typeof i=="function"?i(o):i,useCachedParams=i=>{let s=reactExports.useRef(Params0),o=s.current;for(const a in i)i[a]!==o[a]&&(o=i);return Object.keys(i).length===0&&(o=i),s.current=o},Route=({path:i,nest:s,match:o,...a})=>{const c=useRouter(),[d]=useLocationFromRouter(c),[g,$,j]=o??matchRoute(c.parser,i,d,s),_e=useCachedParams({...useParams(),...$});if(!g)return null;const et=j?reactExports.createElement(Router$1,{base:j},h_route(a,_e)):h_route(a,_e);return reactExports.createElement(ParamsCtx.Provider,{value:_e,children:et})};reactExports.forwardRef((i,s)=>{const o=useRouter(),[a,c]=useLocationFromRouter(o),{to:d="",href:g=d,onClick:$,asChild:j,children:_e,className:et,replace:_,state:b,...tt}=i,nt=useEvent(st=>{st.ctrlKey||st.metaKey||st.altKey||st.shiftKey||st.button!==0||($==null||$(st),st.defaultPrevented||(st.preventDefault(),c(g,i)))}),rt=o.hrefs(g[0]==="~"?g.slice(1):o.base+g,o);return j&&reactExports.isValidElement(_e)?reactExports.cloneElement(_e,{onClick:nt,href:rt}):reactExports.createElement("a",{...tt,onClick:nt,href:rt,className:et!=null&&et.call?et(a===g):et,children:_e,ref:s})});const flattenChildren=i=>Array.isArray(i)?i.flatMap(s=>flattenChildren(s&&s.type===reactExports.Fragment?s.props.children:s)):[i],Switch=({children:i,location:s})=>{const o=useRouter(),[a]=useLocationFromRouter(o);for(const c of flattenChildren(i)){let d=0;if(reactExports.isValidElement(c)&&(d=matchRoute(o.parser,c.props.path,s||a,c.props.nest))[0])return reactExports.cloneElement(c,{match:d})}return null};var Subscribable=class{constructor(){this.listeners=new Set,this.subscribe=this.subscribe.bind(this)}subscribe(i){return this.listeners.add(i),this.onSubscribe(),()=>{this.listeners.delete(i),this.onUnsubscribe()}}hasListeners(){return this.listeners.size>0}onSubscribe(){}onUnsubscribe(){}},isServer=typeof window>"u"||"Deno"in globalThis;function noop(){}function functionalUpdate(i,s){return typeof i=="function"?i(s):i}function isValidTimeout(i){return typeof i=="number"&&i>=0&&i!==1/0}function timeUntilStale(i,s){return Math.max(i+(s||0)-Date.now(),0)}function resolveStaleTime(i,s){return typeof i=="function"?i(s):i}function resolveEnabled(i,s){return typeof i=="function"?i(s):i}function matchQuery(i,s){const{type:o="all",exact:a,fetchStatus:c,predicate:d,queryKey:g,stale:$}=i;if(g){if(a){if(s.queryHash!==hashQueryKeyByOptions(g,s.options))return!1}else if(!partialMatchKey(s.queryKey,g))return!1}if(o!=="all"){const j=s.isActive();if(o==="active"&&!j||o==="inactive"&&j)return!1}return!(typeof $=="boolean"&&s.isStale()!==$||c&&c!==s.state.fetchStatus||d&&!d(s))}function matchMutation(i,s){const{exact:o,status:a,predicate:c,mutationKey:d}=i;if(d){if(!s.options.mutationKey)return!1;if(o){if(hashKey(s.options.mutationKey)!==hashKey(d))return!1}else if(!partialMatchKey(s.options.mutationKey,d))return!1}return!(a&&s.state.status!==a||c&&!c(s))}function hashQueryKeyByOptions(i,s){return((s==null?void 0:s.queryKeyHashFn)||hashKey)(i)}function hashKey(i){return JSON.stringify(i,(s,o)=>isPlainObject(o)?Object.keys(o).sort().reduce((a,c)=>(a[c]=o[c],a),{}):o)}function partialMatchKey(i,s){return i===s?!0:typeof i!=typeof s?!1:i&&s&&typeof i=="object"&&typeof s=="object"?!Object.keys(s).some(o=>!partialMatchKey(i[o],s[o])):!1}function replaceEqualDeep(i,s){if(i===s)return i;const o=isPlainArray(i)&&isPlainArray(s);if(o||isPlainObject(i)&&isPlainObject(s)){const a=o?i:Object.keys(i),c=a.length,d=o?s:Object.keys(s),g=d.length,$=o?[]:{};let j=0;for(let _e=0;_e<g;_e++){const et=o?_e:d[_e];(!o&&a.includes(et)||o)&&i[et]===void 0&&s[et]===void 0?($[et]=void 0,j++):($[et]=replaceEqualDeep(i[et],s[et]),$[et]===i[et]&&i[et]!==void 0&&j++)}return c===g&&j===c?i:$}return s}function isPlainArray(i){return Array.isArray(i)&&i.length===Object.keys(i).length}function isPlainObject(i){if(!hasObjectPrototype(i))return!1;const s=i.constructor;if(s===void 0)return!0;const o=s.prototype;return!(!hasObjectPrototype(o)||!o.hasOwnProperty("isPrototypeOf")||Object.getPrototypeOf(i)!==Object.prototype)}function hasObjectPrototype(i){return Object.prototype.toString.call(i)==="[object Object]"}function sleep(i){return new Promise(s=>{setTimeout(s,i)})}function replaceData(i,s,o){return typeof o.structuralSharing=="function"?o.structuralSharing(i,s):o.structuralSharing!==!1?replaceEqualDeep(i,s):s}function addToEnd(i,s,o=0){const a=[...i,s];return o&&a.length>o?a.slice(1):a}function addToStart(i,s,o=0){const a=[s,...i];return o&&a.length>o?a.slice(0,-1):a}var skipToken=Symbol();function ensureQueryFn(i,s){return!i.queryFn&&(s!=null&&s.initialPromise)?()=>s.initialPromise:!i.queryFn||i.queryFn===skipToken?()=>Promise.reject(new Error(`Missing queryFn: '${i.queryHash}'`)):i.queryFn}var Er,gr,Ar,Bs,FocusManager=(Bs=class extends Subscribable{constructor(){super();kn(this,Er);kn(this,gr);kn(this,Ar);bn(this,Ar,s=>{if(!isServer&&window.addEventListener){const o=()=>s();return window.addEventListener("visibilitychange",o,!1),()=>{window.removeEventListener("visibilitychange",o)}}})}onSubscribe(){Wt(this,gr)||this.setEventListener(Wt(this,Ar))}onUnsubscribe(){var s;this.hasListeners()||((s=Wt(this,gr))==null||s.call(this),bn(this,gr,void 0))}setEventListener(s){var o;bn(this,Ar,s),(o=Wt(this,gr))==null||o.call(this),bn(this,gr,s(a=>{typeof a=="boolean"?this.setFocused(a):this.onFocus()}))}setFocused(s){Wt(this,Er)!==s&&(bn(this,Er,s),this.onFocus())}onFocus(){const s=this.isFocused();this.listeners.forEach(o=>{o(s)})}isFocused(){var s;return typeof Wt(this,Er)=="boolean"?Wt(this,Er):((s=globalThis.document)==null?void 0:s.visibilityState)!=="hidden"}},Er=new WeakMap,gr=new WeakMap,Ar=new WeakMap,Bs),focusManager=new FocusManager,Nr,yr,Pr,Vs,OnlineManager=(Vs=class extends Subscribable{constructor(){super();kn(this,Nr,!0);kn(this,yr);kn(this,Pr);bn(this,Pr,s=>{if(!isServer&&window.addEventListener){const o=()=>s(!0),a=()=>s(!1);return window.addEventListener("online",o,!1),window.addEventListener("offline",a,!1),()=>{window.removeEventListener("online",o),window.removeEventListener("offline",a)}}})}onSubscribe(){Wt(this,yr)||this.setEventListener(Wt(this,Pr))}onUnsubscribe(){var s;this.hasListeners()||((s=Wt(this,yr))==null||s.call(this),bn(this,yr,void 0))}setEventListener(s){var o;bn(this,Pr,s),(o=Wt(this,yr))==null||o.call(this),bn(this,yr,s(this.setOnline.bind(this)))}setOnline(s){Wt(this,Nr)!==s&&(bn(this,Nr,s),this.listeners.forEach(a=>{a(s)}))}isOnline(){return Wt(this,Nr)}},Nr=new WeakMap,yr=new WeakMap,Pr=new WeakMap,Vs),onlineManager=new OnlineManager;function pendingThenable(){let i,s;const o=new Promise((c,d)=>{i=c,s=d});o.status="pending",o.catch(()=>{});function a(c){Object.assign(o,c),delete o.resolve,delete o.reject}return o.resolve=c=>{a({status:"fulfilled",value:c}),i(c)},o.reject=c=>{a({status:"rejected",reason:c}),s(c)},o}function defaultRetryDelay(i){return Math.min(1e3*2**i,3e4)}function canFetch(i){return(i??"online")==="online"?onlineManager.isOnline():!0}var CancelledError=class extends Error{constructor(i){super("CancelledError"),this.revert=i==null?void 0:i.revert,this.silent=i==null?void 0:i.silent}};function isCancelledError(i){return i instanceof CancelledError}function createRetryer(i){let s=!1,o=0,a=!1,c;const d=pendingThenable(),g=rt=>{var st;a||(b(new CancelledError(rt)),(st=i.abort)==null||st.call(i))},$=()=>{s=!0},j=()=>{s=!1},_e=()=>focusManager.isFocused()&&(i.networkMode==="always"||onlineManager.isOnline())&&i.canRun(),et=()=>canFetch(i.networkMode)&&i.canRun(),_=rt=>{var st;a||(a=!0,(st=i.onSuccess)==null||st.call(i,rt),c==null||c(),d.resolve(rt))},b=rt=>{var st;a||(a=!0,(st=i.onError)==null||st.call(i,rt),c==null||c(),d.reject(rt))},tt=()=>new Promise(rt=>{var st;c=ot=>{(a||_e())&&rt(ot)},(st=i.onPause)==null||st.call(i)}).then(()=>{var rt;c=void 0,a||(rt=i.onContinue)==null||rt.call(i)}),nt=()=>{if(a)return;let rt;const st=o===0?i.initialPromise:void 0;try{rt=st??i.fn()}catch(ot){rt=Promise.reject(ot)}Promise.resolve(rt).then(_).catch(ot=>{var ct;if(a)return;const it=i.retry??(isServer?0:3),at=i.retryDelay??defaultRetryDelay,lt=typeof at=="function"?at(o,ot):at,ut=it===!0||typeof it=="number"&&o<it||typeof it=="function"&&it(o,ot);if(s||!ut){b(ot);return}o++,(ct=i.onFail)==null||ct.call(i,o,ot),sleep(lt).then(()=>_e()?void 0:tt()).then(()=>{s?b(ot):nt()})})};return{promise:d,cancel:g,continue:()=>(c==null||c(),d),cancelRetry:$,continueRetry:j,canStart:et,start:()=>(et()?nt():tt().then(nt),d)}}function createNotifyManager(){let i=[],s=0,o=$=>{$()},a=$=>{$()},c=$=>setTimeout($,0);const d=$=>{s?i.push($):c(()=>{o($)})},g=()=>{const $=i;i=[],$.length&&c(()=>{a(()=>{$.forEach(j=>{o(j)})})})};return{batch:$=>{let j;s++;try{j=$()}finally{s--,s||g()}return j},batchCalls:$=>(...j)=>{d(()=>{$(...j)})},schedule:d,setNotifyFunction:$=>{o=$},setBatchNotifyFunction:$=>{a=$},setScheduler:$=>{c=$}}}var notifyManager=createNotifyManager(),Cr,Us,Removable=(Us=class{constructor(){kn(this,Cr)}destroy(){this.clearGcTimeout()}scheduleGc(){this.clearGcTimeout(),isValidTimeout(this.gcTime)&&bn(this,Cr,setTimeout(()=>{this.optionalRemove()},this.gcTime))}updateGcTime(i){this.gcTime=Math.max(this.gcTime||0,i??(isServer?1/0:5*60*1e3))}clearGcTimeout(){Wt(this,Cr)&&(clearTimeout(Wt(this,Cr)),bn(this,Cr,void 0))}},Cr=new WeakMap,Us),Or,Dr,er,Gn,es,$r,nr,fr,Gs,Query=(Gs=class extends Removable{constructor(s){super();kn(this,nr);kn(this,Or);kn(this,Dr);kn(this,er);kn(this,Gn);kn(this,es);kn(this,$r);bn(this,$r,!1),bn(this,es,s.defaultOptions),this.setOptions(s.options),this.observers=[],bn(this,er,s.cache),this.queryKey=s.queryKey,this.queryHash=s.queryHash,bn(this,Or,getDefaultState$1(this.options)),this.state=s.state??Wt(this,Or),this.scheduleGc()}get meta(){return this.options.meta}get promise(){var s;return(s=Wt(this,Gn))==null?void 0:s.promise}setOptions(s){this.options={...Wt(this,es),...s},this.updateGcTime(this.options.gcTime)}optionalRemove(){!this.observers.length&&this.state.fetchStatus==="idle"&&Wt(this,er).remove(this)}setData(s,o){const a=replaceData(this.state.data,s,this.options);return Un(this,nr,fr).call(this,{data:a,type:"success",dataUpdatedAt:o==null?void 0:o.updatedAt,manual:o==null?void 0:o.manual}),a}setState(s,o){Un(this,nr,fr).call(this,{type:"setState",state:s,setStateOptions:o})}cancel(s){var a,c;const o=(a=Wt(this,Gn))==null?void 0:a.promise;return(c=Wt(this,Gn))==null||c.cancel(s),o?o.then(noop).catch(noop):Promise.resolve()}destroy(){super.destroy(),this.cancel({silent:!0})}reset(){this.destroy(),this.setState(Wt(this,Or))}isActive(){return this.observers.some(s=>resolveEnabled(s.options.enabled,this)!==!1)}isDisabled(){return this.getObserversCount()>0?!this.isActive():this.options.queryFn===skipToken||this.state.dataUpdateCount+this.state.errorUpdateCount===0}isStale(){return this.state.isInvalidated?!0:this.getObserversCount()>0?this.observers.some(s=>s.getCurrentResult().isStale):this.state.data===void 0}isStaleByTime(s=0){return this.state.isInvalidated||this.state.data===void 0||!timeUntilStale(this.state.dataUpdatedAt,s)}onFocus(){var o;const s=this.observers.find(a=>a.shouldFetchOnWindowFocus());s==null||s.refetch({cancelRefetch:!1}),(o=Wt(this,Gn))==null||o.continue()}onOnline(){var o;const s=this.observers.find(a=>a.shouldFetchOnReconnect());s==null||s.refetch({cancelRefetch:!1}),(o=Wt(this,Gn))==null||o.continue()}addObserver(s){this.observers.includes(s)||(this.observers.push(s),this.clearGcTimeout(),Wt(this,er).notify({type:"observerAdded",query:this,observer:s}))}removeObserver(s){this.observers.includes(s)&&(this.observers=this.observers.filter(o=>o!==s),this.observers.length||(Wt(this,Gn)&&(Wt(this,$r)?Wt(this,Gn).cancel({revert:!0}):Wt(this,Gn).cancelRetry()),this.scheduleGc()),Wt(this,er).notify({type:"observerRemoved",query:this,observer:s}))}getObserversCount(){return this.observers.length}invalidate(){this.state.isInvalidated||Un(this,nr,fr).call(this,{type:"invalidate"})}fetch(s,o){var j,_e,et;if(this.state.fetchStatus!=="idle"){if(this.state.data!==void 0&&(o!=null&&o.cancelRefetch))this.cancel({silent:!0});else if(Wt(this,Gn))return Wt(this,Gn).continueRetry(),Wt(this,Gn).promise}if(s&&this.setOptions(s),!this.options.queryFn){const _=this.observers.find(b=>b.options.queryFn);_&&this.setOptions(_.options)}const a=new AbortController,c=_=>{Object.defineProperty(_,"signal",{enumerable:!0,get:()=>(bn(this,$r,!0),a.signal)})},d=()=>{const _=ensureQueryFn(this.options,o),b={queryKey:this.queryKey,meta:this.meta};return c(b),bn(this,$r,!1),this.options.persister?this.options.persister(_,b,this):_(b)},g={fetchOptions:o,options:this.options,queryKey:this.queryKey,state:this.state,fetchFn:d};c(g),(j=this.options.behavior)==null||j.onFetch(g,this),bn(this,Dr,this.state),(this.state.fetchStatus==="idle"||this.state.fetchMeta!==((_e=g.fetchOptions)==null?void 0:_e.meta))&&Un(this,nr,fr).call(this,{type:"fetch",meta:(et=g.fetchOptions)==null?void 0:et.meta});const $=_=>{var b,tt,nt,rt;isCancelledError(_)&&_.silent||Un(this,nr,fr).call(this,{type:"error",error:_}),isCancelledError(_)||((tt=(b=Wt(this,er).config).onError)==null||tt.call(b,_,this),(rt=(nt=Wt(this,er).config).onSettled)==null||rt.call(nt,this.state.data,_,this)),this.scheduleGc()};return bn(this,Gn,createRetryer({initialPromise:o==null?void 0:o.initialPromise,fn:g.fetchFn,abort:a.abort.bind(a),onSuccess:_=>{var b,tt,nt,rt;if(_===void 0){$(new Error(`${this.queryHash} data is undefined`));return}try{this.setData(_)}catch(st){$(st);return}(tt=(b=Wt(this,er).config).onSuccess)==null||tt.call(b,_,this),(rt=(nt=Wt(this,er).config).onSettled)==null||rt.call(nt,_,this.state.error,this),this.scheduleGc()},onError:$,onFail:(_,b)=>{Un(this,nr,fr).call(this,{type:"failed",failureCount:_,error:b})},onPause:()=>{Un(this,nr,fr).call(this,{type:"pause"})},onContinue:()=>{Un(this,nr,fr).call(this,{type:"continue"})},retry:g.options.retry,retryDelay:g.options.retryDelay,networkMode:g.options.networkMode,canRun:()=>!0})),Wt(this,Gn).start()}},Or=new WeakMap,Dr=new WeakMap,er=new WeakMap,Gn=new WeakMap,es=new WeakMap,$r=new WeakMap,nr=new WeakSet,fr=function(s){const o=a=>{switch(s.type){case"failed":return{...a,fetchFailureCount:s.failureCount,fetchFailureReason:s.error};case"pause":return{...a,fetchStatus:"paused"};case"continue":return{...a,fetchStatus:"fetching"};case"fetch":return{...a,...fetchState(a.data,this.options),fetchMeta:s.meta??null};case"success":return{...a,data:s.data,dataUpdateCount:a.dataUpdateCount+1,dataUpdatedAt:s.dataUpdatedAt??Date.now(),error:null,isInvalidated:!1,status:"success",...!s.manual&&{fetchStatus:"idle",fetchFailureCount:0,fetchFailureReason:null}};case"error":const c=s.error;return isCancelledError(c)&&c.revert&&Wt(this,Dr)?{...Wt(this,Dr),fetchStatus:"idle"}:{...a,error:c,errorUpdateCount:a.errorUpdateCount+1,errorUpdatedAt:Date.now(),fetchFailureCount:a.fetchFailureCount+1,fetchFailureReason:c,fetchStatus:"idle",status:"error"};case"invalidate":return{...a,isInvalidated:!0};case"setState":return{...a,...s.state}}};this.state=o(this.state),notifyManager.batch(()=>{this.observers.forEach(a=>{a.onQueryUpdate()}),Wt(this,er).notify({query:this,type:"updated",action:s})})},Gs);function fetchState(i,s){return{fetchFailureCount:0,fetchFailureReason:null,fetchStatus:canFetch(s.networkMode)?"fetching":"paused",...i===void 0&&{error:null,status:"pending"}}}function getDefaultState$1(i){const s=typeof i.initialData=="function"?i.initialData():i.initialData,o=s!==void 0,a=o?typeof i.initialDataUpdatedAt=="function"?i.initialDataUpdatedAt():i.initialDataUpdatedAt:0;return{data:s,dataUpdateCount:0,dataUpdatedAt:o?a??Date.now():0,error:null,errorUpdateCount:0,errorUpdatedAt:0,fetchFailureCount:0,fetchFailureReason:null,fetchMeta:null,isInvalidated:!1,status:o?"success":"pending",fetchStatus:"idle"}}var lr,js,QueryCache=(js=class extends Subscribable{constructor(s={}){super();kn(this,lr);this.config=s,bn(this,lr,new Map)}build(s,o,a){const c=o.queryKey,d=o.queryHash??hashQueryKeyByOptions(c,o);let g=this.get(d);return g||(g=new Query({cache:this,queryKey:c,queryHash:d,options:s.defaultQueryOptions(o),state:a,defaultOptions:s.getQueryDefaults(c)}),this.add(g)),g}add(s){Wt(this,lr).has(s.queryHash)||(Wt(this,lr).set(s.queryHash,s),this.notify({type:"added",query:s}))}remove(s){const o=Wt(this,lr).get(s.queryHash);o&&(s.destroy(),o===s&&Wt(this,lr).delete(s.queryHash),this.notify({type:"removed",query:s}))}clear(){notifyManager.batch(()=>{this.getAll().forEach(s=>{this.remove(s)})})}get(s){return Wt(this,lr).get(s)}getAll(){return[...Wt(this,lr).values()]}find(s){const o={exact:!0,...s};return this.getAll().find(a=>matchQuery(o,a))}findAll(s={}){const o=this.getAll();return Object.keys(s).length>0?o.filter(a=>matchQuery(s,a)):o}notify(s){notifyManager.batch(()=>{this.listeners.forEach(o=>{o(s)})})}onFocus(){notifyManager.batch(()=>{this.getAll().forEach(s=>{s.onFocus()})})}onOnline(){notifyManager.batch(()=>{this.getAll().forEach(s=>{s.onOnline()})})}},lr=new WeakMap,js),ur,Hn,Ir,cr,mr,Ws,Mutation=(Ws=class extends Removable{constructor(s){super();kn(this,cr);kn(this,ur);kn(this,Hn);kn(this,Ir);this.mutationId=s.mutationId,bn(this,Hn,s.mutationCache),bn(this,ur,[]),this.state=s.state||getDefaultState(),this.setOptions(s.options),this.scheduleGc()}setOptions(s){this.options=s,this.updateGcTime(this.options.gcTime)}get meta(){return this.options.meta}addObserver(s){Wt(this,ur).includes(s)||(Wt(this,ur).push(s),this.clearGcTimeout(),Wt(this,Hn).notify({type:"observerAdded",mutation:this,observer:s}))}removeObserver(s){bn(this,ur,Wt(this,ur).filter(o=>o!==s)),this.scheduleGc(),Wt(this,Hn).notify({type:"observerRemoved",mutation:this,observer:s})}optionalRemove(){Wt(this,ur).length||(this.state.status==="pending"?this.scheduleGc():Wt(this,Hn).remove(this))}continue(){var s;return((s=Wt(this,Ir))==null?void 0:s.continue())??this.execute(this.state.variables)}async execute(s){var c,d,g,$,j,_e,et,_,b,tt,nt,rt,st,ot,it,at,lt,ut,ct,dt;bn(this,Ir,createRetryer({fn:()=>this.options.mutationFn?this.options.mutationFn(s):Promise.reject(new Error("No mutationFn found")),onFail:(pt,ht)=>{Un(this,cr,mr).call(this,{type:"failed",failureCount:pt,error:ht})},onPause:()=>{Un(this,cr,mr).call(this,{type:"pause"})},onContinue:()=>{Un(this,cr,mr).call(this,{type:"continue"})},retry:this.options.retry??0,retryDelay:this.options.retryDelay,networkMode:this.options.networkMode,canRun:()=>Wt(this,Hn).canRun(this)}));const o=this.state.status==="pending",a=!Wt(this,Ir).canStart();try{if(!o){Un(this,cr,mr).call(this,{type:"pending",variables:s,isPaused:a}),await((d=(c=Wt(this,Hn).config).onMutate)==null?void 0:d.call(c,s,this));const ht=await(($=(g=this.options).onMutate)==null?void 0:$.call(g,s));ht!==this.state.context&&Un(this,cr,mr).call(this,{type:"pending",context:ht,variables:s,isPaused:a})}const pt=await Wt(this,Ir).start();return await((_e=(j=Wt(this,Hn).config).onSuccess)==null?void 0:_e.call(j,pt,s,this.state.context,this)),await((_=(et=this.options).onSuccess)==null?void 0:_.call(et,pt,s,this.state.context)),await((tt=(b=Wt(this,Hn).config).onSettled)==null?void 0:tt.call(b,pt,null,this.state.variables,this.state.context,this)),await((rt=(nt=this.options).onSettled)==null?void 0:rt.call(nt,pt,null,s,this.state.context)),Un(this,cr,mr).call(this,{type:"success",data:pt}),pt}catch(pt){try{throw await((ot=(st=Wt(this,Hn).config).onError)==null?void 0:ot.call(st,pt,s,this.state.context,this)),await((at=(it=this.options).onError)==null?void 0:at.call(it,pt,s,this.state.context)),await((ut=(lt=Wt(this,Hn).config).onSettled)==null?void 0:ut.call(lt,void 0,pt,this.state.variables,this.state.context,this)),await((dt=(ct=this.options).onSettled)==null?void 0:dt.call(ct,void 0,pt,s,this.state.context)),pt}finally{Un(this,cr,mr).call(this,{type:"error",error:pt})}}finally{Wt(this,Hn).runNext(this)}}},ur=new WeakMap,Hn=new WeakMap,Ir=new WeakMap,cr=new WeakSet,mr=function(s){const o=a=>{switch(s.type){case"failed":return{...a,failureCount:s.failureCount,failureReason:s.error};case"pause":return{...a,isPaused:!0};case"continue":return{...a,isPaused:!1};case"pending":return{...a,context:s.context,data:void 0,failureCount:0,failureReason:null,error:null,isPaused:s.isPaused,status:"pending",variables:s.variables,submittedAt:Date.now()};case"success":return{...a,data:s.data,failureCount:0,failureReason:null,error:null,status:"success",isPaused:!1};case"error":return{...a,data:void 0,error:s.error,failureCount:a.failureCount+1,failureReason:s.error,isPaused:!1,status:"error"}}};this.state=o(this.state),notifyManager.batch(()=>{Wt(this,ur).forEach(a=>{a.onMutationUpdate(s)}),Wt(this,Hn).notify({mutation:this,type:"updated",action:s})})},Ws);function getDefaultState(){return{context:void 0,data:void 0,error:null,failureCount:0,failureReason:null,isPaused:!1,status:"idle",variables:void 0,submittedAt:0}}var Yn,ts,Hs,MutationCache=(Hs=class extends Subscribable{constructor(s={}){super();kn(this,Yn);kn(this,ts);this.config=s,bn(this,Yn,new Map),bn(this,ts,Date.now())}build(s,o,a){const c=new Mutation({mutationCache:this,mutationId:++ls(this,ts)._,options:s.defaultMutationOptions(o),state:a});return this.add(c),c}add(s){const o=scopeFor(s),a=Wt(this,Yn).get(o)??[];a.push(s),Wt(this,Yn).set(o,a),this.notify({type:"added",mutation:s})}remove(s){var a;const o=scopeFor(s);if(Wt(this,Yn).has(o)){const c=(a=Wt(this,Yn).get(o))==null?void 0:a.filter(d=>d!==s);c&&(c.length===0?Wt(this,Yn).delete(o):Wt(this,Yn).set(o,c))}this.notify({type:"removed",mutation:s})}canRun(s){var a;const o=(a=Wt(this,Yn).get(scopeFor(s)))==null?void 0:a.find(c=>c.state.status==="pending");return!o||o===s}runNext(s){var a;const o=(a=Wt(this,Yn).get(scopeFor(s)))==null?void 0:a.find(c=>c!==s&&c.state.isPaused);return(o==null?void 0:o.continue())??Promise.resolve()}clear(){notifyManager.batch(()=>{this.getAll().forEach(s=>{this.remove(s)})})}getAll(){return[...Wt(this,Yn).values()].flat()}find(s){const o={exact:!0,...s};return this.getAll().find(a=>matchMutation(o,a))}findAll(s={}){return this.getAll().filter(o=>matchMutation(s,o))}notify(s){notifyManager.batch(()=>{this.listeners.forEach(o=>{o(s)})})}resumePausedMutations(){const s=this.getAll().filter(o=>o.state.isPaused);return notifyManager.batch(()=>Promise.all(s.map(o=>o.continue().catch(noop))))}},Yn=new WeakMap,ts=new WeakMap,Hs);function scopeFor(i){var s;return((s=i.options.scope)==null?void 0:s.id)??String(i.mutationId)}function infiniteQueryBehavior(i){return{onFetch:(s,o)=>{var et,_,b,tt,nt;const a=s.options,c=(b=(_=(et=s.fetchOptions)==null?void 0:et.meta)==null?void 0:_.fetchMore)==null?void 0:b.direction,d=((tt=s.state.data)==null?void 0:tt.pages)||[],g=((nt=s.state.data)==null?void 0:nt.pageParams)||[];let $={pages:[],pageParams:[]},j=0;const _e=async()=>{let rt=!1;const st=at=>{Object.defineProperty(at,"signal",{enumerable:!0,get:()=>(s.signal.aborted?rt=!0:s.signal.addEventListener("abort",()=>{rt=!0}),s.signal)})},ot=ensureQueryFn(s.options,s.fetchOptions),it=async(at,lt,ut)=>{if(rt)return Promise.reject();if(lt==null&&at.pages.length)return Promise.resolve(at);const ct={queryKey:s.queryKey,pageParam:lt,direction:ut?"backward":"forward",meta:s.options.meta};st(ct);const dt=await ot(ct),{maxPages:pt}=s.options,ht=ut?addToStart:addToEnd;return{pages:ht(at.pages,dt,pt),pageParams:ht(at.pageParams,lt,pt)}};if(c&&d.length){const at=c==="backward",lt=at?getPreviousPageParam:getNextPageParam,ut={pages:d,pageParams:g},ct=lt(a,ut);$=await it(ut,ct,at)}else{const at=i??d.length;do{const lt=j===0?g[0]??a.initialPageParam:getNextPageParam(a,$);if(j>0&&lt==null)break;$=await it($,lt),j++}while(j<at)}return $};s.options.persister?s.fetchFn=()=>{var rt,st;return(st=(rt=s.options).persister)==null?void 0:st.call(rt,_e,{queryKey:s.queryKey,meta:s.options.meta,signal:s.signal},o)}:s.fetchFn=_e}}}function getNextPageParam(i,{pages:s,pageParams:o}){const a=s.length-1;return s.length>0?i.getNextPageParam(s[a],s,o[a],o):void 0}function getPreviousPageParam(i,{pages:s,pageParams:o}){var a;return s.length>0?(a=i.getPreviousPageParam)==null?void 0:a.call(i,s[0],s,o[0],o):void 0}var Fn,br,xr,Mr,Rr,vr,Fr,Lr,qs,QueryClient=(qs=class{constructor(i={}){kn(this,Fn);kn(this,br);kn(this,xr);kn(this,Mr);kn(this,Rr);kn(this,vr);kn(this,Fr);kn(this,Lr);bn(this,Fn,i.queryCache||new QueryCache),bn(this,br,i.mutationCache||new MutationCache),bn(this,xr,i.defaultOptions||{}),bn(this,Mr,new Map),bn(this,Rr,new Map),bn(this,vr,0)}mount(){ls(this,vr)._++,Wt(this,vr)===1&&(bn(this,Fr,focusManager.subscribe(async i=>{i&&(await this.resumePausedMutations(),Wt(this,Fn).onFocus())})),bn(this,Lr,onlineManager.subscribe(async i=>{i&&(await this.resumePausedMutations(),Wt(this,Fn).onOnline())})))}unmount(){var i,s;ls(this,vr)._--,Wt(this,vr)===0&&((i=Wt(this,Fr))==null||i.call(this),bn(this,Fr,void 0),(s=Wt(this,Lr))==null||s.call(this),bn(this,Lr,void 0))}isFetching(i){return Wt(this,Fn).findAll({...i,fetchStatus:"fetching"}).length}isMutating(i){return Wt(this,br).findAll({...i,status:"pending"}).length}getQueryData(i){var o;const s=this.defaultQueryOptions({queryKey:i});return(o=Wt(this,Fn).get(s.queryHash))==null?void 0:o.state.data}ensureQueryData(i){const s=this.getQueryData(i.queryKey);if(s===void 0)return this.fetchQuery(i);{const o=this.defaultQueryOptions(i),a=Wt(this,Fn).build(this,o);return i.revalidateIfStale&&a.isStaleByTime(resolveStaleTime(o.staleTime,a))&&this.prefetchQuery(o),Promise.resolve(s)}}getQueriesData(i){return Wt(this,Fn).findAll(i).map(({queryKey:s,state:o})=>{const a=o.data;return[s,a]})}setQueryData(i,s,o){const a=this.defaultQueryOptions({queryKey:i}),c=Wt(this,Fn).get(a.queryHash),d=c==null?void 0:c.state.data,g=functionalUpdate(s,d);if(g!==void 0)return Wt(this,Fn).build(this,a).setData(g,{...o,manual:!0})}setQueriesData(i,s,o){return notifyManager.batch(()=>Wt(this,Fn).findAll(i).map(({queryKey:a})=>[a,this.setQueryData(a,s,o)]))}getQueryState(i){var o;const s=this.defaultQueryOptions({queryKey:i});return(o=Wt(this,Fn).get(s.queryHash))==null?void 0:o.state}removeQueries(i){const s=Wt(this,Fn);notifyManager.batch(()=>{s.findAll(i).forEach(o=>{s.remove(o)})})}resetQueries(i,s){const o=Wt(this,Fn),a={type:"active",...i};return notifyManager.batch(()=>(o.findAll(i).forEach(c=>{c.reset()}),this.refetchQueries(a,s)))}cancelQueries(i={},s={}){const o={revert:!0,...s},a=notifyManager.batch(()=>Wt(this,Fn).findAll(i).map(c=>c.cancel(o)));return Promise.all(a).then(noop).catch(noop)}invalidateQueries(i={},s={}){return notifyManager.batch(()=>{if(Wt(this,Fn).findAll(i).forEach(a=>{a.invalidate()}),i.refetchType==="none")return Promise.resolve();const o={...i,type:i.refetchType??i.type??"active"};return this.refetchQueries(o,s)})}refetchQueries(i={},s){const o={...s,cancelRefetch:(s==null?void 0:s.cancelRefetch)??!0},a=notifyManager.batch(()=>Wt(this,Fn).findAll(i).filter(c=>!c.isDisabled()).map(c=>{let d=c.fetch(void 0,o);return o.throwOnError||(d=d.catch(noop)),c.state.fetchStatus==="paused"?Promise.resolve():d}));return Promise.all(a).then(noop)}fetchQuery(i){const s=this.defaultQueryOptions(i);s.retry===void 0&&(s.retry=!1);const o=Wt(this,Fn).build(this,s);return o.isStaleByTime(resolveStaleTime(s.staleTime,o))?o.fetch(s):Promise.resolve(o.state.data)}prefetchQuery(i){return this.fetchQuery(i).then(noop).catch(noop)}fetchInfiniteQuery(i){return i.behavior=infiniteQueryBehavior(i.pages),this.fetchQuery(i)}prefetchInfiniteQuery(i){return this.fetchInfiniteQuery(i).then(noop).catch(noop)}ensureInfiniteQueryData(i){return i.behavior=infiniteQueryBehavior(i.pages),this.ensureQueryData(i)}resumePausedMutations(){return onlineManager.isOnline()?Wt(this,br).resumePausedMutations():Promise.resolve()}getQueryCache(){return Wt(this,Fn)}getMutationCache(){return Wt(this,br)}getDefaultOptions(){return Wt(this,xr)}setDefaultOptions(i){bn(this,xr,i)}setQueryDefaults(i,s){Wt(this,Mr).set(hashKey(i),{queryKey:i,defaultOptions:s})}getQueryDefaults(i){const s=[...Wt(this,Mr).values()];let o={};return s.forEach(a=>{partialMatchKey(i,a.queryKey)&&(o={...o,...a.defaultOptions})}),o}setMutationDefaults(i,s){Wt(this,Rr).set(hashKey(i),{mutationKey:i,defaultOptions:s})}getMutationDefaults(i){const s=[...Wt(this,Rr).values()];let o={};return s.forEach(a=>{partialMatchKey(i,a.mutationKey)&&(o={...o,...a.defaultOptions})}),o}defaultQueryOptions(i){if(i._defaulted)return i;const s={...Wt(this,xr).queries,...this.getQueryDefaults(i.queryKey),...i,_defaulted:!0};return s.queryHash||(s.queryHash=hashQueryKeyByOptions(s.queryKey,s)),s.refetchOnReconnect===void 0&&(s.refetchOnReconnect=s.networkMode!=="always"),s.throwOnError===void 0&&(s.throwOnError=!!s.suspense),!s.networkMode&&s.persister&&(s.networkMode="offlineFirst"),s.enabled!==!0&&s.queryFn===skipToken&&(s.enabled=!1),s}defaultMutationOptions(i){return i!=null&&i._defaulted?i:{...Wt(this,xr).mutations,...(i==null?void 0:i.mutationKey)&&this.getMutationDefaults(i.mutationKey),...i,_defaulted:!0}}clear(){Wt(this,Fn).clear(),Wt(this,br).clear()}},Fn=new WeakMap,br=new WeakMap,xr=new WeakMap,Mr=new WeakMap,Rr=new WeakMap,vr=new WeakMap,Fr=new WeakMap,Lr=new WeakMap,qs),QueryClientContext=reactExports.createContext(void 0),QueryClientProvider=({client:i,children:s})=>(reactExports.useEffect(()=>(i.mount(),()=>{i.unmount()}),[i]),jsxRuntimeExports.jsx(QueryClientContext.Provider,{value:i,children:s}));const queryClient=new QueryClient({defaultOptions:{queries:{queryFn:async({queryKey:i})=>{const s=await fetch(i[0],{credentials:"include"});if(!s.ok)throw s.status>=500?new Error(`${s.status}: ${s.statusText}`):new Error(`${s.status}: ${await s.text()}`);return s.json()},refetchInterval:!1,refetchOnWindowFocus:!1,staleTime:1/0,retry:!1},mutations:{retry:!1}}}),TOAST_LIMIT=1,TOAST_REMOVE_DELAY=1e6;let count$1=0;function genId(){return count$1=(count$1+1)%Number.MAX_SAFE_INTEGER,count$1.toString()}const toastTimeouts=new Map,addToRemoveQueue=i=>{if(toastTimeouts.has(i))return;const s=setTimeout(()=>{toastTimeouts.delete(i),dispatch({type:"REMOVE_TOAST",toastId:i})},TOAST_REMOVE_DELAY);toastTimeouts.set(i,s)},reducer=(i,s)=>{switch(s.type){case"ADD_TOAST":return{...i,toasts:[s.toast,...i.toasts].slice(0,TOAST_LIMIT)};case"UPDATE_TOAST":return{...i,toasts:i.toasts.map(o=>o.id===s.toast.id?{...o,...s.toast}:o)};case"DISMISS_TOAST":{const{toastId:o}=s;return o?addToRemoveQueue(o):i.toasts.forEach(a=>{addToRemoveQueue(a.id)}),{...i,toasts:i.toasts.map(a=>a.id===o||o===void 0?{...a,open:!1}:a)}}case"REMOVE_TOAST":return s.toastId===void 0?{...i,toasts:[]}:{...i,toasts:i.toasts.filter(o=>o.id!==s.toastId)}}},listeners=[];let memoryState={toasts:[]};function dispatch(i){memoryState=reducer(memoryState,i),listeners.forEach(s=>{s(memoryState)})}function toast({...i}){const s=genId(),o=c=>dispatch({type:"UPDATE_TOAST",toast:{...c,id:s}}),a=()=>dispatch({type:"DISMISS_TOAST",toastId:s});return dispatch({type:"ADD_TOAST",toast:{...i,id:s,open:!0,onOpenChange:c=>{c||a()}}}),{id:s,dismiss:a,update:o}}function useToast(){const[i,s]=reactExports.useState(memoryState);return reactExports.useEffect(()=>(listeners.push(s),()=>{const o=listeners.indexOf(s);o>-1&&listeners.splice(o,1)}),[i]),{...i,toast,dismiss:o=>dispatch({type:"DISMISS_TOAST",toastId:o})}}function composeEventHandlers(i,s,{checkForDefaultPrevented:o=!0}={}){return function(c){if(i==null||i(c),o===!1||!c.defaultPrevented)return s==null?void 0:s(c)}}function setRef(i,s){typeof i=="function"?i(s):i!=null&&(i.current=s)}function composeRefs(...i){return s=>i.forEach(o=>setRef(o,s))}function useComposedRefs(...i){return reactExports.useCallback(composeRefs(...i),i)}function createContextScope$1(i,s=[]){let o=[];function a(d,g){const $=reactExports.createContext(g),j=o.length;o=[...o,g];function _e(_){const{scope:b,children:tt,...nt}=_,rt=(b==null?void 0:b[i][j])||$,st=reactExports.useMemo(()=>nt,Object.values(nt));return jsxRuntimeExports.jsx(rt.Provider,{value:st,children:tt})}function et(_,b){const tt=(b==null?void 0:b[i][j])||$,nt=reactExports.useContext(tt);if(nt)return nt;if(g!==void 0)return g;throw new Error(`\`${_}\` must be used within \`${d}\``)}return _e.displayName=d+"Provider",[_e,et]}const c=()=>{const d=o.map(g=>reactExports.createContext(g));return function($){const j=($==null?void 0:$[i])||d;return reactExports.useMemo(()=>({[`__scope${i}`]:{...$,[i]:j}}),[$,j])}};return c.scopeName=i,[a,composeContextScopes$1(c,...s)]}function composeContextScopes$1(...i){const s=i[0];if(i.length===1)return s;const o=()=>{const a=i.map(c=>({useScope:c(),scopeName:c.scopeName}));return function(d){const g=a.reduce(($,{useScope:j,scopeName:_e})=>{const _=j(d)[`__scope${_e}`];return{...$,..._}},{});return reactExports.useMemo(()=>({[`__scope${s.scopeName}`]:g}),[g])}};return o.scopeName=s.scopeName,o}var Slot=reactExports.forwardRef((i,s)=>{const{children:o,...a}=i,c=reactExports.Children.toArray(o),d=c.find(isSlottable);if(d){const g=d.props.children,$=c.map(j=>j===d?reactExports.Children.count(g)>1?reactExports.Children.only(null):reactExports.isValidElement(g)?g.props.children:null:j);return jsxRuntimeExports.jsx(SlotClone,{...a,ref:s,children:reactExports.isValidElement(g)?reactExports.cloneElement(g,void 0,$):null})}return jsxRuntimeExports.jsx(SlotClone,{...a,ref:s,children:o})});Slot.displayName="Slot";var SlotClone=reactExports.forwardRef((i,s)=>{const{children:o,...a}=i;if(reactExports.isValidElement(o)){const c=getElementRef$1(o);return reactExports.cloneElement(o,{...mergeProps(a,o.props),ref:s?composeRefs(s,c):c})}return reactExports.Children.count(o)>1?reactExports.Children.only(null):null});SlotClone.displayName="SlotClone";var Slottable=({children:i})=>jsxRuntimeExports.jsx(jsxRuntimeExports.Fragment,{children:i});function isSlottable(i){return reactExports.isValidElement(i)&&i.type===Slottable}function mergeProps(i,s){const o={...s};for(const a in s){const c=i[a],d=s[a];/^on[A-Z]/.test(a)?c&&d?o[a]=(...$)=>{d(...$),c(...$)}:c&&(o[a]=c):a==="style"?o[a]={...c,...d}:a==="className"&&(o[a]=[c,d].filter(Boolean).join(" "))}return{...i,...o}}function getElementRef$1(i){var a,c;let s=(a=Object.getOwnPropertyDescriptor(i.props,"ref"))==null?void 0:a.get,o=s&&"isReactWarning"in s&&s.isReactWarning;return o?i.ref:(s=(c=Object.getOwnPropertyDescriptor(i,"ref"))==null?void 0:c.get,o=s&&"isReactWarning"in s&&s.isReactWarning,o?i.props.ref:i.props.ref||i.ref)}function createCollection(i){const s=i+"CollectionProvider",[o,a]=createContextScope$1(s),[c,d]=o(s,{collectionRef:{current:null},itemMap:new Map}),g=tt=>{const{scope:nt,children:rt}=tt,st=React.useRef(null),ot=React.useRef(new Map).current;return jsxRuntimeExports.jsx(c,{scope:nt,itemMap:ot,collectionRef:st,children:rt})};g.displayName=s;const $=i+"CollectionSlot",j=React.forwardRef((tt,nt)=>{const{scope:rt,children:st}=tt,ot=d($,rt),it=useComposedRefs(nt,ot.collectionRef);return jsxRuntimeExports.jsx(Slot,{ref:it,children:st})});j.displayName=$;const _e=i+"CollectionItemSlot",et="data-radix-collection-item",_=React.forwardRef((tt,nt)=>{const{scope:rt,children:st,...ot}=tt,it=React.useRef(null),at=useComposedRefs(nt,it),lt=d(_e,rt);return React.useEffect(()=>(lt.itemMap.set(it,{ref:it,...ot}),()=>void lt.itemMap.delete(it))),jsxRuntimeExports.jsx(Slot,{[et]:"",ref:at,children:st})});_.displayName=_e;function b(tt){const nt=d(i+"CollectionConsumer",tt);return React.useCallback(()=>{const st=nt.collectionRef.current;if(!st)return[];const ot=Array.from(st.querySelectorAll(`[${et}]`));return Array.from(nt.itemMap.values()).sort((lt,ut)=>ot.indexOf(lt.ref.current)-ot.indexOf(ut.ref.current))},[nt.collectionRef,nt.itemMap])}return[{Provider:g,Slot:j,ItemSlot:_},b,a]}function createContextScope(i,s=[]){let o=[];function a(d,g){const $=reactExports.createContext(g),j=o.length;o=[...o,g];const _e=_=>{var ot;const{scope:b,children:tt,...nt}=_,rt=((ot=b==null?void 0:b[i])==null?void 0:ot[j])||$,st=reactExports.useMemo(()=>nt,Object.values(nt));return jsxRuntimeExports.jsx(rt.Provider,{value:st,children:tt})};_e.displayName=d+"Provider";function et(_,b){var rt;const tt=((rt=b==null?void 0:b[i])==null?void 0:rt[j])||$,nt=reactExports.useContext(tt);if(nt)return nt;if(g!==void 0)return g;throw new Error(`\`${_}\` must be used within \`${d}\``)}return[_e,et]}const c=()=>{const d=o.map(g=>reactExports.createContext(g));return function($){const j=($==null?void 0:$[i])||d;return reactExports.useMemo(()=>({[`__scope${i}`]:{...$,[i]:j}}),[$,j])}};return c.scopeName=i,[a,composeContextScopes(c,...s)]}function composeContextScopes(...i){const s=i[0];if(i.length===1)return s;const o=()=>{const a=i.map(c=>({useScope:c(),scopeName:c.scopeName}));return function(d){const g=a.reduce(($,{useScope:j,scopeName:_e})=>{const _=j(d)[`__scope${_e}`];return{...$,..._}},{});return reactExports.useMemo(()=>({[`__scope${s.scopeName}`]:g}),[g])}};return o.scopeName=s.scopeName,o}var NODES=["a","button","div","form","h2","h3","img","input","label","li","nav","ol","p","span","svg","ul"],Primitive=NODES.reduce((i,s)=>{const o=reactExports.forwardRef((a,c)=>{const{asChild:d,...g}=a,$=d?Slot:s;return typeof window<"u"&&(window[Symbol.for("radix-ui")]=!0),jsxRuntimeExports.jsx($,{...g,ref:c})});return o.displayName=`Primitive.${s}`,{...i,[s]:o}},{});function dispatchDiscreteCustomEvent(i,s){i&&reactDomExports.flushSync(()=>i.dispatchEvent(s))}function useCallbackRef(i){const s=reactExports.useRef(i);return reactExports.useEffect(()=>{s.current=i}),reactExports.useMemo(()=>(...o)=>{var a;return(a=s.current)==null?void 0:a.call(s,...o)},[])}function useEscapeKeydown(i,s=globalThis==null?void 0:globalThis.document){const o=useCallbackRef(i);reactExports.useEffect(()=>{const a=c=>{c.key==="Escape"&&o(c)};return s.addEventListener("keydown",a,{capture:!0}),()=>s.removeEventListener("keydown",a,{capture:!0})},[o,s])}var DISMISSABLE_LAYER_NAME="DismissableLayer",CONTEXT_UPDATE="dismissableLayer.update",POINTER_DOWN_OUTSIDE="dismissableLayer.pointerDownOutside",FOCUS_OUTSIDE="dismissableLayer.focusOutside",originalBodyPointerEvents,DismissableLayerContext=reactExports.createContext({layers:new Set,layersWithOutsidePointerEventsDisabled:new Set,branches:new Set}),DismissableLayer=reactExports.forwardRef((i,s)=>{const{disableOutsidePointerEvents:o=!1,onEscapeKeyDown:a,onPointerDownOutside:c,onFocusOutside:d,onInteractOutside:g,onDismiss:$,...j}=i,_e=reactExports.useContext(DismissableLayerContext),[et,_]=reactExports.useState(null),b=(et==null?void 0:et.ownerDocument)??(globalThis==null?void 0:globalThis.document),[,tt]=reactExports.useState({}),nt=useComposedRefs(s,dt=>_(dt)),rt=Array.from(_e.layers),[st]=[..._e.layersWithOutsidePointerEventsDisabled].slice(-1),ot=rt.indexOf(st),it=et?rt.indexOf(et):-1,at=_e.layersWithOutsidePointerEventsDisabled.size>0,lt=it>=ot,ut=usePointerDownOutside(dt=>{const pt=dt.target,ht=[..._e.branches].some(ft=>ft.contains(pt));!lt||ht||(c==null||c(dt),g==null||g(dt),dt.defaultPrevented||$==null||$())},b),ct=useFocusOutside(dt=>{const pt=dt.target;[..._e.branches].some(ft=>ft.contains(pt))||(d==null||d(dt),g==null||g(dt),dt.defaultPrevented||$==null||$())},b);return useEscapeKeydown(dt=>{it===_e.layers.size-1&&(a==null||a(dt),!dt.defaultPrevented&&$&&(dt.preventDefault(),$()))},b),reactExports.useEffect(()=>{if(et)return o&&(_e.layersWithOutsidePointerEventsDisabled.size===0&&(originalBodyPointerEvents=b.body.style.pointerEvents,b.body.style.pointerEvents="none"),_e.layersWithOutsidePointerEventsDisabled.add(et)),_e.layers.add(et),dispatchUpdate(),()=>{o&&_e.layersWithOutsidePointerEventsDisabled.size===1&&(b.body.style.pointerEvents=originalBodyPointerEvents)}},[et,b,o,_e]),reactExports.useEffect(()=>()=>{et&&(_e.layers.delete(et),_e.layersWithOutsidePointerEventsDisabled.delete(et),dispatchUpdate())},[et,_e]),reactExports.useEffect(()=>{const dt=()=>tt({});return document.addEventListener(CONTEXT_UPDATE,dt),()=>document.removeEventListener(CONTEXT_UPDATE,dt)},[]),jsxRuntimeExports.jsx(Primitive.div,{...j,ref:nt,style:{pointerEvents:at?lt?"auto":"none":void 0,...i.style},onFocusCapture:composeEventHandlers(i.onFocusCapture,ct.onFocusCapture),onBlurCapture:composeEventHandlers(i.onBlurCapture,ct.onBlurCapture),onPointerDownCapture:composeEventHandlers(i.onPointerDownCapture,ut.onPointerDownCapture)})});DismissableLayer.displayName=DISMISSABLE_LAYER_NAME;var BRANCH_NAME="DismissableLayerBranch",DismissableLayerBranch=reactExports.forwardRef((i,s)=>{const o=reactExports.useContext(DismissableLayerContext),a=reactExports.useRef(null),c=useComposedRefs(s,a);return reactExports.useEffect(()=>{const d=a.current;if(d)return o.branches.add(d),()=>{o.branches.delete(d)}},[o.branches]),jsxRuntimeExports.jsx(Primitive.div,{...i,ref:c})});DismissableLayerBranch.displayName=BRANCH_NAME;function usePointerDownOutside(i,s=globalThis==null?void 0:globalThis.document){const o=useCallbackRef(i),a=reactExports.useRef(!1),c=reactExports.useRef(()=>{});return reactExports.useEffect(()=>{const d=$=>{if($.target&&!a.current){let j=function(){handleAndDispatchCustomEvent$1(POINTER_DOWN_OUTSIDE,o,_e,{discrete:!0})};const _e={originalEvent:$};$.pointerType==="touch"?(s.removeEventListener("click",c.current),c.current=j,s.addEventListener("click",c.current,{once:!0})):j()}else s.removeEventListener("click",c.current);a.current=!1},g=window.setTimeout(()=>{s.addEventListener("pointerdown",d)},0);return()=>{window.clearTimeout(g),s.removeEventListener("pointerdown",d),s.removeEventListener("click",c.current)}},[s,o]),{onPointerDownCapture:()=>a.current=!0}}function useFocusOutside(i,s=globalThis==null?void 0:globalThis.document){const o=useCallbackRef(i),a=reactExports.useRef(!1);return reactExports.useEffect(()=>{const c=d=>{d.target&&!a.current&&handleAndDispatchCustomEvent$1(FOCUS_OUTSIDE,o,{originalEvent:d},{discrete:!1})};return s.addEventListener("focusin",c),()=>s.removeEventListener("focusin",c)},[s,o]),{onFocusCapture:()=>a.current=!0,onBlurCapture:()=>a.current=!1}}function dispatchUpdate(){const i=new CustomEvent(CONTEXT_UPDATE);document.dispatchEvent(i)}function handleAndDispatchCustomEvent$1(i,s,o,{discrete:a}){const c=o.originalEvent.target,d=new CustomEvent(i,{bubbles:!1,cancelable:!0,detail:o});s&&c.addEventListener(i,s,{once:!0}),a?dispatchDiscreteCustomEvent(c,d):c.dispatchEvent(d)}var Root=DismissableLayer,Branch=DismissableLayerBranch,useLayoutEffect2=globalThis!=null&&globalThis.document?reactExports.useLayoutEffect:()=>{},PORTAL_NAME="Portal",Portal=reactExports.forwardRef((i,s)=>{var $;const{container:o,...a}=i,[c,d]=reactExports.useState(!1);useLayoutEffect2(()=>d(!0),[]);const g=o||c&&(($=globalThis==null?void 0:globalThis.document)==null?void 0:$.body);return g?ReactDOM.createPortal(jsxRuntimeExports.jsx(Primitive.div,{...a,ref:s}),g):null});Portal.displayName=PORTAL_NAME;function useStateMachine(i,s){return reactExports.useReducer((o,a)=>s[o][a]??o,i)}var Presence=i=>{const{present:s,children:o}=i,a=usePresence(s),c=typeof o=="function"?o({present:a.isPresent}):reactExports.Children.only(o),d=useComposedRefs(a.ref,getElementRef(c));return typeof o=="function"||a.isPresent?reactExports.cloneElement(c,{ref:d}):null};Presence.displayName="Presence";function usePresence(i){const[s,o]=reactExports.useState(),a=reactExports.useRef({}),c=reactExports.useRef(i),d=reactExports.useRef("none"),g=i?"mounted":"unmounted",[$,j]=useStateMachine(g,{mounted:{UNMOUNT:"unmounted",ANIMATION_OUT:"unmountSuspended"},unmountSuspended:{MOUNT:"mounted",ANIMATION_END:"unmounted"},unmounted:{MOUNT:"mounted"}});return reactExports.useEffect(()=>{const _e=getAnimationName(a.current);d.current=$==="mounted"?_e:"none"},[$]),useLayoutEffect2(()=>{const _e=a.current,et=c.current;if(et!==i){const b=d.current,tt=getAnimationName(_e);i?j("MOUNT"):tt==="none"||(_e==null?void 0:_e.display)==="none"?j("UNMOUNT"):j(et&&b!==tt?"ANIMATION_OUT":"UNMOUNT"),c.current=i}},[i,j]),useLayoutEffect2(()=>{if(s){let _e;const et=s.ownerDocument.defaultView??window,_=tt=>{const rt=getAnimationName(a.current).includes(tt.animationName);if(tt.target===s&&rt&&(j("ANIMATION_END"),!c.current)){const st=s.style.animationFillMode;s.style.animationFillMode="forwards",_e=et.setTimeout(()=>{s.style.animationFillMode==="forwards"&&(s.style.animationFillMode=st)})}},b=tt=>{tt.target===s&&(d.current=getAnimationName(a.current))};return s.addEventListener("animationstart",b),s.addEventListener("animationcancel",_),s.addEventListener("animationend",_),()=>{et.clearTimeout(_e),s.removeEventListener("animationstart",b),s.removeEventListener("animationcancel",_),s.removeEventListener("animationend",_)}}else j("ANIMATION_END")},[s,j]),{isPresent:["mounted","unmountSuspended"].includes($),ref:reactExports.useCallback(_e=>{_e&&(a.current=getComputedStyle(_e)),o(_e)},[])}}function getAnimationName(i){return(i==null?void 0:i.animationName)||"none"}function getElementRef(i){var a,c;let s=(a=Object.getOwnPropertyDescriptor(i.props,"ref"))==null?void 0:a.get,o=s&&"isReactWarning"in s&&s.isReactWarning;return o?i.ref:(s=(c=Object.getOwnPropertyDescriptor(i,"ref"))==null?void 0:c.get,o=s&&"isReactWarning"in s&&s.isReactWarning,o?i.props.ref:i.props.ref||i.ref)}function useControllableState({prop:i,defaultProp:s,onChange:o=()=>{}}){const[a,c]=useUncontrolledState({defaultProp:s,onChange:o}),d=i!==void 0,g=d?i:a,$=useCallbackRef(o),j=reactExports.useCallback(_e=>{if(d){const _=typeof _e=="function"?_e(i):_e;_!==i&&$(_)}else c(_e)},[d,i,c,$]);return[g,j]}function useUncontrolledState({defaultProp:i,onChange:s}){const o=reactExports.useState(i),[a]=o,c=reactExports.useRef(a),d=useCallbackRef(s);return reactExports.useEffect(()=>{c.current!==a&&(d(a),c.current=a)},[a,c,d]),o}var NAME="VisuallyHidden",VisuallyHidden=reactExports.forwardRef((i,s)=>jsxRuntimeExports.jsx(Primitive.span,{...i,ref:s,style:{position:"absolute",border:0,width:1,height:1,padding:0,margin:-1,overflow:"hidden",clip:"rect(0, 0, 0, 0)",whiteSpace:"nowrap",wordWrap:"normal",...i.style}}));VisuallyHidden.displayName=NAME;var PROVIDER_NAME="ToastProvider",[Collection,useCollection,createCollectionScope]=createCollection("Toast"),[createToastContext,createToastScope]=createContextScope("Toast",[createCollectionScope]),[ToastProviderProvider,useToastProviderContext]=createToastContext(PROVIDER_NAME),ToastProvider$1=i=>{const{__scopeToast:s,label:o="Notification",duration:a=5e3,swipeDirection:c="right",swipeThreshold:d=50,children:g}=i,[$,j]=reactExports.useState(null),[_e,et]=reactExports.useState(0),_=reactExports.useRef(!1),b=reactExports.useRef(!1);return o.trim()||console.error(`Invalid prop \`label\` supplied to \`${PROVIDER_NAME}\`. Expected non-empty \`string\`.`),jsxRuntimeExports.jsx(Collection.Provider,{scope:s,children:jsxRuntimeExports.jsx(ToastProviderProvider,{scope:s,label:o,duration:a,swipeDirection:c,swipeThreshold:d,toastCount:_e,viewport:$,onViewportChange:j,onToastAdd:reactExports.useCallback(()=>et(tt=>tt+1),[]),onToastRemove:reactExports.useCallback(()=>et(tt=>tt-1),[]),isFocusedToastEscapeKeyDownRef:_,isClosePausedRef:b,children:g})})};ToastProvider$1.displayName=PROVIDER_NAME;var VIEWPORT_NAME="ToastViewport",VIEWPORT_DEFAULT_HOTKEY=["F8"],VIEWPORT_PAUSE="toast.viewportPause",VIEWPORT_RESUME="toast.viewportResume",ToastViewport$1=reactExports.forwardRef((i,s)=>{const{__scopeToast:o,hotkey:a=VIEWPORT_DEFAULT_HOTKEY,label:c="Notifications ({hotkey})",...d}=i,g=useToastProviderContext(VIEWPORT_NAME,o),$=useCollection(o),j=reactExports.useRef(null),_e=reactExports.useRef(null),et=reactExports.useRef(null),_=reactExports.useRef(null),b=useComposedRefs(s,_,g.onViewportChange),tt=a.join("+").replace(/Key/g,"").replace(/Digit/g,""),nt=g.toastCount>0;reactExports.useEffect(()=>{const st=ot=>{var at;a.length!==0&&a.every(lt=>ot[lt]||ot.code===lt)&&((at=_.current)==null||at.focus())};return document.addEventListener("keydown",st),()=>document.removeEventListener("keydown",st)},[a]),reactExports.useEffect(()=>{const st=j.current,ot=_.current;if(nt&&st&&ot){const it=()=>{if(!g.isClosePausedRef.current){const ct=new CustomEvent(VIEWPORT_PAUSE);ot.dispatchEvent(ct),g.isClosePausedRef.current=!0}},at=()=>{if(g.isClosePausedRef.current){const ct=new CustomEvent(VIEWPORT_RESUME);ot.dispatchEvent(ct),g.isClosePausedRef.current=!1}},lt=ct=>{!st.contains(ct.relatedTarget)&&at()},ut=()=>{st.contains(document.activeElement)||at()};return st.addEventListener("focusin",it),st.addEventListener("focusout",lt),st.addEventListener("pointermove",it),st.addEventListener("pointerleave",ut),window.addEventListener("blur",it),window.addEventListener("focus",at),()=>{st.removeEventListener("focusin",it),st.removeEventListener("focusout",lt),st.removeEventListener("pointermove",it),st.removeEventListener("pointerleave",ut),window.removeEventListener("blur",it),window.removeEventListener("focus",at)}}},[nt,g.isClosePausedRef]);const rt=reactExports.useCallback(({tabbingDirection:st})=>{const it=$().map(at=>{const lt=at.ref.current,ut=[lt,...getTabbableCandidates(lt)];return st==="forwards"?ut:ut.reverse()});return(st==="forwards"?it.reverse():it).flat()},[$]);return reactExports.useEffect(()=>{const st=_.current;if(st){const ot=it=>{var ut,ct,dt;const at=it.altKey||it.ctrlKey||it.metaKey;if(it.key==="Tab"&&!at){const pt=document.activeElement,ht=it.shiftKey;if(it.target===st&&ht){(ut=_e.current)==null||ut.focus();return}const wt=rt({tabbingDirection:ht?"backwards":"forwards"}),_t=wt.findIndex(bt=>bt===pt);focusFirst(wt.slice(_t+1))?it.preventDefault():ht?(ct=_e.current)==null||ct.focus():(dt=et.current)==null||dt.focus()}};return st.addEventListener("keydown",ot),()=>st.removeEventListener("keydown",ot)}},[$,rt]),jsxRuntimeExports.jsxs(Branch,{ref:j,role:"region","aria-label":c.replace("{hotkey}",tt),tabIndex:-1,style:{pointerEvents:nt?void 0:"none"},children:[nt&&jsxRuntimeExports.jsx(FocusProxy,{ref:_e,onFocusFromOutsideViewport:()=>{const st=rt({tabbingDirection:"forwards"});focusFirst(st)}}),jsxRuntimeExports.jsx(Collection.Slot,{scope:o,children:jsxRuntimeExports.jsx(Primitive.ol,{tabIndex:-1,...d,ref:b})}),nt&&jsxRuntimeExports.jsx(FocusProxy,{ref:et,onFocusFromOutsideViewport:()=>{const st=rt({tabbingDirection:"backwards"});focusFirst(st)}})]})});ToastViewport$1.displayName=VIEWPORT_NAME;var FOCUS_PROXY_NAME="ToastFocusProxy",FocusProxy=reactExports.forwardRef((i,s)=>{const{__scopeToast:o,onFocusFromOutsideViewport:a,...c}=i,d=useToastProviderContext(FOCUS_PROXY_NAME,o);return jsxRuntimeExports.jsx(VisuallyHidden,{"aria-hidden":!0,tabIndex:0,...c,ref:s,style:{position:"fixed"},onFocus:g=>{var _e;const $=g.relatedTarget;!((_e=d.viewport)!=null&&_e.contains($))&&a()}})});FocusProxy.displayName=FOCUS_PROXY_NAME;var TOAST_NAME="Toast",TOAST_SWIPE_START="toast.swipeStart",TOAST_SWIPE_MOVE="toast.swipeMove",TOAST_SWIPE_CANCEL="toast.swipeCancel",TOAST_SWIPE_END="toast.swipeEnd",Toast$1=reactExports.forwardRef((i,s)=>{const{forceMount:o,open:a,defaultOpen:c,onOpenChange:d,...g}=i,[$=!0,j]=useControllableState({prop:a,defaultProp:c,onChange:d});return jsxRuntimeExports.jsx(Presence,{present:o||$,children:jsxRuntimeExports.jsx(ToastImpl,{open:$,...g,ref:s,onClose:()=>j(!1),onPause:useCallbackRef(i.onPause),onResume:useCallbackRef(i.onResume),onSwipeStart:composeEventHandlers(i.onSwipeStart,_e=>{_e.currentTarget.setAttribute("data-swipe","start")}),onSwipeMove:composeEventHandlers(i.onSwipeMove,_e=>{const{x:et,y:_}=_e.detail.delta;_e.currentTarget.setAttribute("data-swipe","move"),_e.currentTarget.style.setProperty("--radix-toast-swipe-move-x",`${et}px`),_e.currentTarget.style.setProperty("--radix-toast-swipe-move-y",`${_}px`)}),onSwipeCancel:composeEventHandlers(i.onSwipeCancel,_e=>{_e.currentTarget.setAttribute("data-swipe","cancel"),_e.currentTarget.style.removeProperty("--radix-toast-swipe-move-x"),_e.currentTarget.style.removeProperty("--radix-toast-swipe-move-y"),_e.currentTarget.style.removeProperty("--radix-toast-swipe-end-x"),_e.currentTarget.style.removeProperty("--radix-toast-swipe-end-y")}),onSwipeEnd:composeEventHandlers(i.onSwipeEnd,_e=>{const{x:et,y:_}=_e.detail.delta;_e.currentTarget.setAttribute("data-swipe","end"),_e.currentTarget.style.removeProperty("--radix-toast-swipe-move-x"),_e.currentTarget.style.removeProperty("--radix-toast-swipe-move-y"),_e.currentTarget.style.setProperty("--radix-toast-swipe-end-x",`${et}px`),_e.currentTarget.style.setProperty("--radix-toast-swipe-end-y",`${_}px`),j(!1)})})})});Toast$1.displayName=TOAST_NAME;var[ToastInteractiveProvider,useToastInteractiveContext]=createToastContext(TOAST_NAME,{onClose(){}}),ToastImpl=reactExports.forwardRef((i,s)=>{const{__scopeToast:o,type:a="foreground",duration:c,open:d,onClose:g,onEscapeKeyDown:$,onPause:j,onResume:_e,onSwipeStart:et,onSwipeMove:_,onSwipeCancel:b,onSwipeEnd:tt,...nt}=i,rt=useToastProviderContext(TOAST_NAME,o),[st,ot]=reactExports.useState(null),it=useComposedRefs(s,bt=>ot(bt)),at=reactExports.useRef(null),lt=reactExports.useRef(null),ut=c||rt.duration,ct=reactExports.useRef(0),dt=reactExports.useRef(ut),pt=reactExports.useRef(0),{onToastAdd:ht,onToastRemove:ft}=rt,yt=useCallbackRef(()=>{var xt;(st==null?void 0:st.contains(document.activeElement))&&((xt=rt.viewport)==null||xt.focus()),g()}),wt=reactExports.useCallback(bt=>{!bt||bt===1/0||(window.clearTimeout(pt.current),ct.current=new Date().getTime(),pt.current=window.setTimeout(yt,bt))},[yt]);reactExports.useEffect(()=>{const bt=rt.viewport;if(bt){const xt=()=>{wt(dt.current),_e==null||_e()},mt=()=>{const vt=new Date().getTime()-ct.current;dt.current=dt.current-vt,window.clearTimeout(pt.current),j==null||j()};return bt.addEventListener(VIEWPORT_PAUSE,mt),bt.addEventListener(VIEWPORT_RESUME,xt),()=>{bt.removeEventListener(VIEWPORT_PAUSE,mt),bt.removeEventListener(VIEWPORT_RESUME,xt)}}},[rt.viewport,ut,j,_e,wt]),reactExports.useEffect(()=>{d&&!rt.isClosePausedRef.current&&wt(ut)},[d,ut,rt.isClosePausedRef,wt]),reactExports.useEffect(()=>(ht(),()=>ft()),[ht,ft]);const _t=reactExports.useMemo(()=>st?getAnnounceTextContent(st):null,[st]);return rt.viewport?jsxRuntimeExports.jsxs(jsxRuntimeExports.Fragment,{children:[_t&&jsxRuntimeExports.jsx(ToastAnnounce,{__scopeToast:o,role:"status","aria-live":a==="foreground"?"assertive":"polite","aria-atomic":!0,children:_t}),jsxRuntimeExports.jsx(ToastInteractiveProvider,{scope:o,onClose:yt,children:reactDomExports.createPortal(jsxRuntimeExports.jsx(Collection.ItemSlot,{scope:o,children:jsxRuntimeExports.jsx(Root,{asChild:!0,onEscapeKeyDown:composeEventHandlers($,()=>{rt.isFocusedToastEscapeKeyDownRef.current||yt(),rt.isFocusedToastEscapeKeyDownRef.current=!1}),children:jsxRuntimeExports.jsx(Primitive.li,{role:"status","aria-live":"off","aria-atomic":!0,tabIndex:0,"data-state":d?"open":"closed","data-swipe-direction":rt.swipeDirection,...nt,ref:it,style:{userSelect:"none",touchAction:"none",...i.style},onKeyDown:composeEventHandlers(i.onKeyDown,bt=>{bt.key==="Escape"&&($==null||$(bt.nativeEvent),bt.nativeEvent.defaultPrevented||(rt.isFocusedToastEscapeKeyDownRef.current=!0,yt()))}),onPointerDown:composeEventHandlers(i.onPointerDown,bt=>{bt.button===0&&(at.current={x:bt.clientX,y:bt.clientY})}),onPointerMove:composeEventHandlers(i.onPointerMove,bt=>{if(!at.current)return;const xt=bt.clientX-at.current.x,mt=bt.clientY-at.current.y,vt=!!lt.current,Et=["left","right"].includes(rt.swipeDirection),Ct=["left","up"].includes(rt.swipeDirection)?Math.min:Math.max,kt=Et?Ct(0,xt):0,Nt=Et?0:Ct(0,mt),Mt=bt.pointerType==="touch"?10:2,Vt={x:kt,y:Nt},Gt={originalEvent:bt,delta:Vt};vt?(lt.current=Vt,handleAndDispatchCustomEvent(TOAST_SWIPE_MOVE,_,Gt,{discrete:!1})):isDeltaInDirection(Vt,rt.swipeDirection,Mt)?(lt.current=Vt,handleAndDispatchCustomEvent(TOAST_SWIPE_START,et,Gt,{discrete:!1}),bt.target.setPointerCapture(bt.pointerId)):(Math.abs(xt)>Mt||Math.abs(mt)>Mt)&&(at.current=null)}),onPointerUp:composeEventHandlers(i.onPointerUp,bt=>{const xt=lt.current,mt=bt.target;if(mt.hasPointerCapture(bt.pointerId)&&mt.releasePointerCapture(bt.pointerId),lt.current=null,at.current=null,xt){const vt=bt.currentTarget,Et={originalEvent:bt,delta:xt};isDeltaInDirection(xt,rt.swipeDirection,rt.swipeThreshold)?handleAndDispatchCustomEvent(TOAST_SWIPE_END,tt,Et,{discrete:!0}):handleAndDispatchCustomEvent(TOAST_SWIPE_CANCEL,b,Et,{discrete:!0}),vt.addEventListener("click",Ct=>Ct.preventDefault(),{once:!0})}})})})}),rt.viewport)})]}):null}),ToastAnnounce=i=>{const{__scopeToast:s,children:o,...a}=i,c=useToastProviderContext(TOAST_NAME,s),[d,g]=reactExports.useState(!1),[$,j]=reactExports.useState(!1);return useNextFrame(()=>g(!0)),reactExports.useEffect(()=>{const _e=window.setTimeout(()=>j(!0),1e3);return()=>window.clearTimeout(_e)},[]),$?null:jsxRuntimeExports.jsx(Portal,{asChild:!0,children:jsxRuntimeExports.jsx(VisuallyHidden,{...a,children:d&&jsxRuntimeExports.jsxs(jsxRuntimeExports.Fragment,{children:[c.label," ",o]})})})},TITLE_NAME="ToastTitle",ToastTitle$1=reactExports.forwardRef((i,s)=>{const{__scopeToast:o,...a}=i;return jsxRuntimeExports.jsx(Primitive.div,{...a,ref:s})});ToastTitle$1.displayName=TITLE_NAME;var DESCRIPTION_NAME="ToastDescription",ToastDescription$1=reactExports.forwardRef((i,s)=>{const{__scopeToast:o,...a}=i;return jsxRuntimeExports.jsx(Primitive.div,{...a,ref:s})});ToastDescription$1.displayName=DESCRIPTION_NAME;var ACTION_NAME="ToastAction",ToastAction$1=reactExports.forwardRef((i,s)=>{const{altText:o,...a}=i;return o.trim()?jsxRuntimeExports.jsx(ToastAnnounceExclude,{altText:o,asChild:!0,children:jsxRuntimeExports.jsx(ToastClose$1,{...a,ref:s})}):(console.error(`Invalid prop \`altText\` supplied to \`${ACTION_NAME}\`. Expected non-empty \`string\`.`),null)});ToastAction$1.displayName=ACTION_NAME;var CLOSE_NAME="ToastClose",ToastClose$1=reactExports.forwardRef((i,s)=>{const{__scopeToast:o,...a}=i,c=useToastInteractiveContext(CLOSE_NAME,o);return jsxRuntimeExports.jsx(ToastAnnounceExclude,{asChild:!0,children:jsxRuntimeExports.jsx(Primitive.button,{type:"button",...a,ref:s,onClick:composeEventHandlers(i.onClick,c.onClose)})})});ToastClose$1.displayName=CLOSE_NAME;var ToastAnnounceExclude=reactExports.forwardRef((i,s)=>{const{__scopeToast:o,altText:a,...c}=i;return jsxRuntimeExports.jsx(Primitive.div,{"data-radix-toast-announce-exclude":"","data-radix-toast-announce-alt":a||void 0,...c,ref:s})});function getAnnounceTextContent(i){const s=[];return Array.from(i.childNodes).forEach(a=>{if(a.nodeType===a.TEXT_NODE&&a.textContent&&s.push(a.textContent),isHTMLElement(a)){const c=a.ariaHidden||a.hidden||a.style.display==="none",d=a.dataset.radixToastAnnounceExclude==="";if(!c)if(d){const g=a.dataset.radixToastAnnounceAlt;g&&s.push(g)}else s.push(...getAnnounceTextContent(a))}}),s}function handleAndDispatchCustomEvent(i,s,o,{discrete:a}){const c=o.originalEvent.currentTarget,d=new CustomEvent(i,{bubbles:!0,cancelable:!0,detail:o});s&&c.addEventListener(i,s,{once:!0}),a?dispatchDiscreteCustomEvent(c,d):c.dispatchEvent(d)}var isDeltaInDirection=(i,s,o=0)=>{const a=Math.abs(i.x),c=Math.abs(i.y),d=a>c;return s==="left"||s==="right"?d&&a>o:!d&&c>o};function useNextFrame(i=()=>{}){const s=useCallbackRef(i);useLayoutEffect2(()=>{let o=0,a=0;return o=window.requestAnimationFrame(()=>a=window.requestAnimationFrame(s)),()=>{window.cancelAnimationFrame(o),window.cancelAnimationFrame(a)}},[s])}function isHTMLElement(i){return i.nodeType===i.ELEMENT_NODE}function getTabbableCandidates(i){const s=[],o=document.createTreeWalker(i,NodeFilter.SHOW_ELEMENT,{acceptNode:a=>{const c=a.tagName==="INPUT"&&a.type==="hidden";return a.disabled||a.hidden||c?NodeFilter.FILTER_SKIP:a.tabIndex>=0?NodeFilter.FILTER_ACCEPT:NodeFilter.FILTER_SKIP}});for(;o.nextNode();)s.push(o.currentNode);return s}function focusFirst(i){const s=document.activeElement;return i.some(o=>o===s?!0:(o.focus(),document.activeElement!==s))}var Provider=ToastProvider$1,Viewport=ToastViewport$1,Root2=Toast$1,Title=ToastTitle$1,Description=ToastDescription$1,Action=ToastAction$1,Close=ToastClose$1;function r$1(i){var s,o,a="";if(typeof i=="string"||typeof i=="number")a+=i;else if(typeof i=="object")if(Array.isArray(i))for(s=0;s<i.length;s++)i[s]&&(o=r$1(i[s]))&&(a&&(a+=" "),a+=o);else for(s in i)i[s]&&(a&&(a+=" "),a+=s);return a}function clsx$1(){for(var i,s,o=0,a="";o<arguments.length;)(i=arguments[o++])&&(s=r$1(i))&&(a&&(a+=" "),a+=s);return a}const falsyToString=i=>typeof i=="boolean"?"".concat(i):i===0?"0":i,cx=clsx$1,cva=(i,s)=>o=>{var a;if((s==null?void 0:s.variants)==null)return cx(i,o==null?void 0:o.class,o==null?void 0:o.className);const{variants:c,defaultVariants:d}=s,g=Object.keys(c).map(_e=>{const et=o==null?void 0:o[_e],_=d==null?void 0:d[_e];if(et===null)return null;const b=falsyToString(et)||falsyToString(_);return c[_e][b]}),$=o&&Object.entries(o).reduce((_e,et)=>{let[_,b]=et;return b===void 0||(_e[_]=b),_e},{}),j=s==null||(a=s.compoundVariants)===null||a===void 0?void 0:a.reduce((_e,et)=>{let{class:_,className:b,...tt}=et;return Object.entries(tt).every(nt=>{let[rt,st]=nt;return Array.isArray(st)?st.includes({...d,...$}[rt]):{...d,...$}[rt]===st})?[..._e,_,b]:_e},[]);return cx(i,g,j,o==null?void 0:o.class,o==null?void 0:o.className)};/**
 * @license lucide-react v0.453.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */const toKebabCase=i=>i.replace(/([a-z0-9])([A-Z])/g,"$1-$2").toLowerCase(),mergeClasses=(...i)=>i.filter((s,o,a)=>!!s&&a.indexOf(s)===o).join(" ");/**
 * @license lucide-react v0.453.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */var defaultAttributes={xmlns:"http://www.w3.org/2000/svg",width:24,height:24,viewBox:"0 0 24 24",fill:"none",stroke:"currentColor",strokeWidth:2,strokeLinecap:"round",strokeLinejoin:"round"};/**
 * @license lucide-react v0.453.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */const Icon=reactExports.forwardRef(({color:i="currentColor",size:s=24,strokeWidth:o=2,absoluteStrokeWidth:a,className:c="",children:d,iconNode:g,...$},j)=>reactExports.createElement("svg",{ref:j,...defaultAttributes,width:s,height:s,stroke:i,strokeWidth:a?Number(o)*24/Number(s):o,className:mergeClasses("lucide",c),...$},[...g.map(([_e,et])=>reactExports.createElement(_e,et)),...Array.isArray(d)?d:[d]]));/**
 * @license lucide-react v0.453.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */const createLucideIcon=(i,s)=>{const o=reactExports.forwardRef(({className:a,...c},d)=>reactExports.createElement(Icon,{ref:d,iconNode:s,className:mergeClasses(`lucide-${toKebabCase(i)}`,a),...c}));return o.displayName=`${i}`,o};/**
 * @license lucide-react v0.453.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */const CircleAlert=createLucideIcon("CircleAlert",[["circle",{cx:"12",cy:"12",r:"10",key:"1mglay"}],["line",{x1:"12",x2:"12",y1:"8",y2:"12",key:"1pkeuh"}],["line",{x1:"12",x2:"12.01",y1:"16",y2:"16",key:"4dfq90"}]]);/**
 * @license lucide-react v0.453.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */const Copy=createLucideIcon("Copy",[["rect",{width:"14",height:"14",x:"8",y:"8",rx:"2",ry:"2",key:"17jyea"}],["path",{d:"M4 16c-1.1 0-2-.9-2-2V4c0-1.1.9-2 2-2h10c1.1 0 2 .9 2 2",key:"zix9uf"}]]);/**
 * @license lucide-react v0.453.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */const RefreshCw=createLucideIcon("RefreshCw",[["path",{d:"M3 12a9 9 0 0 1 9-9 9.75 9.75 0 0 1 6.74 2.74L21 8",key:"v9h5vc"}],["path",{d:"M21 3v5h-5",key:"1q7to0"}],["path",{d:"M21 12a9 9 0 0 1-9 9 9.75 9.75 0 0 1-6.74-2.74L3 16",key:"3uifl3"}],["path",{d:"M8 16H3v5",key:"1cv678"}]]);/**
 * @license lucide-react v0.453.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */const Shield=createLucideIcon("Shield",[["path",{d:"M20 13c0 5-3.5 7.5-7.66 8.95a1 1 0 0 1-.67-.01C7.5 20.5 4 18 4 13V6a1 1 0 0 1 1-1c2 0 4.5-1.2 6.24-2.72a1.17 1.17 0 0 1 1.52 0C14.51 3.81 17 5 19 5a1 1 0 0 1 1 1z",key:"oel41y"}]]);/**
 * @license lucide-react v0.453.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */const X=createLucideIcon("X",[["path",{d:"M18 6 6 18",key:"1bl5f8"}],["path",{d:"m6 6 12 12",key:"d8bk6v"}]]);function r(i){var s,o,a="";if(typeof i=="string"||typeof i=="number")a+=i;else if(typeof i=="object")if(Array.isArray(i)){var c=i.length;for(s=0;s<c;s++)i[s]&&(o=r(i[s]))&&(a&&(a+=" "),a+=o)}else for(o in i)i[o]&&(a&&(a+=" "),a+=o);return a}function clsx(){for(var i,s,o=0,a="",c=arguments.length;o<c;o++)(i=arguments[o])&&(s=r(i))&&(a&&(a+=" "),a+=s);return a}const CLASS_PART_SEPARATOR="-",createClassGroupUtils=i=>{const s=createClassMap(i),{conflictingClassGroups:o,conflictingClassGroupModifiers:a}=i;return{getClassGroupId:g=>{const $=g.split(CLASS_PART_SEPARATOR);return $[0]===""&&$.length!==1&&$.shift(),getGroupRecursive($,s)||getGroupIdForArbitraryProperty(g)},getConflictingClassGroupIds:(g,$)=>{const j=o[g]||[];return $&&a[g]?[...j,...a[g]]:j}}},getGroupRecursive=(i,s)=>{var g;if(i.length===0)return s.classGroupId;const o=i[0],a=s.nextPart.get(o),c=a?getGroupRecursive(i.slice(1),a):void 0;if(c)return c;if(s.validators.length===0)return;const d=i.join(CLASS_PART_SEPARATOR);return(g=s.validators.find(({validator:$})=>$(d)))==null?void 0:g.classGroupId},arbitraryPropertyRegex=/^\[(.+)\]$/,getGroupIdForArbitraryProperty=i=>{if(arbitraryPropertyRegex.test(i)){const s=arbitraryPropertyRegex.exec(i)[1],o=s==null?void 0:s.substring(0,s.indexOf(":"));if(o)return"arbitrary.."+o}},createClassMap=i=>{const{theme:s,prefix:o}=i,a={nextPart:new Map,validators:[]};return getPrefixedClassGroupEntries(Object.entries(i.classGroups),o).forEach(([d,g])=>{processClassesRecursively(g,a,d,s)}),a},processClassesRecursively=(i,s,o,a)=>{i.forEach(c=>{if(typeof c=="string"){const d=c===""?s:getPart(s,c);d.classGroupId=o;return}if(typeof c=="function"){if(isThemeGetter(c)){processClassesRecursively(c(a),s,o,a);return}s.validators.push({validator:c,classGroupId:o});return}Object.entries(c).forEach(([d,g])=>{processClassesRecursively(g,getPart(s,d),o,a)})})},getPart=(i,s)=>{let o=i;return s.split(CLASS_PART_SEPARATOR).forEach(a=>{o.nextPart.has(a)||o.nextPart.set(a,{nextPart:new Map,validators:[]}),o=o.nextPart.get(a)}),o},isThemeGetter=i=>i.isThemeGetter,getPrefixedClassGroupEntries=(i,s)=>s?i.map(([o,a])=>{const c=a.map(d=>typeof d=="string"?s+d:typeof d=="object"?Object.fromEntries(Object.entries(d).map(([g,$])=>[s+g,$])):d);return[o,c]}):i,createLruCache=i=>{if(i<1)return{get:()=>{},set:()=>{}};let s=0,o=new Map,a=new Map;const c=(d,g)=>{o.set(d,g),s++,s>i&&(s=0,a=o,o=new Map)};return{get(d){let g=o.get(d);if(g!==void 0)return g;if((g=a.get(d))!==void 0)return c(d,g),g},set(d,g){o.has(d)?o.set(d,g):c(d,g)}}},IMPORTANT_MODIFIER="!",createParseClassName=i=>{const{separator:s,experimentalParseClassName:o}=i,a=s.length===1,c=s[0],d=s.length,g=$=>{const j=[];let _e=0,et=0,_;for(let st=0;st<$.length;st++){let ot=$[st];if(_e===0){if(ot===c&&(a||$.slice(st,st+d)===s)){j.push($.slice(et,st)),et=st+d;continue}if(ot==="/"){_=st;continue}}ot==="["?_e++:ot==="]"&&_e--}const b=j.length===0?$:$.substring(et),tt=b.startsWith(IMPORTANT_MODIFIER),nt=tt?b.substring(1):b,rt=_&&_>et?_-et:void 0;return{modifiers:j,hasImportantModifier:tt,baseClassName:nt,maybePostfixModifierPosition:rt}};return o?$=>o({className:$,parseClassName:g}):g},sortModifiers=i=>{if(i.length<=1)return i;const s=[];let o=[];return i.forEach(a=>{a[0]==="["?(s.push(...o.sort(),a),o=[]):o.push(a)}),s.push(...o.sort()),s},createConfigUtils=i=>({cache:createLruCache(i.cacheSize),parseClassName:createParseClassName(i),...createClassGroupUtils(i)}),SPLIT_CLASSES_REGEX=/\s+/,mergeClassList=(i,s)=>{const{parseClassName:o,getClassGroupId:a,getConflictingClassGroupIds:c}=s,d=[],g=i.trim().split(SPLIT_CLASSES_REGEX);let $="";for(let j=g.length-1;j>=0;j-=1){const _e=g[j],{modifiers:et,hasImportantModifier:_,baseClassName:b,maybePostfixModifierPosition:tt}=o(_e);let nt=!!tt,rt=a(nt?b.substring(0,tt):b);if(!rt){if(!nt){$=_e+($.length>0?" "+$:$);continue}if(rt=a(b),!rt){$=_e+($.length>0?" "+$:$);continue}nt=!1}const st=sortModifiers(et).join(":"),ot=_?st+IMPORTANT_MODIFIER:st,it=ot+rt;if(d.includes(it))continue;d.push(it);const at=c(rt,nt);for(let lt=0;lt<at.length;++lt){const ut=at[lt];d.push(ot+ut)}$=_e+($.length>0?" "+$:$)}return $};function twJoin(){let i=0,s,o,a="";for(;i<arguments.length;)(s=arguments[i++])&&(o=toValue(s))&&(a&&(a+=" "),a+=o);return a}const toValue=i=>{if(typeof i=="string")return i;let s,o="";for(let a=0;a<i.length;a++)i[a]&&(s=toValue(i[a]))&&(o&&(o+=" "),o+=s);return o};function createTailwindMerge(i,...s){let o,a,c,d=g;function g(j){const _e=s.reduce((et,_)=>_(et),i());return o=createConfigUtils(_e),a=o.cache.get,c=o.cache.set,d=$,$(j)}function $(j){const _e=a(j);if(_e)return _e;const et=mergeClassList(j,o);return c(j,et),et}return function(){return d(twJoin.apply(null,arguments))}}const fromTheme=i=>{const s=o=>o[i]||[];return s.isThemeGetter=!0,s},arbitraryValueRegex=/^\[(?:([a-z-]+):)?(.+)\]$/i,fractionRegex=/^\d+\/\d+$/,stringLengths=new Set(["px","full","screen"]),tshirtUnitRegex=/^(\d+(\.\d+)?)?(xs|sm|md|lg|xl)$/,lengthUnitRegex=/\d+(%|px|r?em|[sdl]?v([hwib]|min|max)|pt|pc|in|cm|mm|cap|ch|ex|r?lh|cq(w|h|i|b|min|max))|\b(calc|min|max|clamp)\(.+\)|^0$/,colorFunctionRegex=/^(rgba?|hsla?|hwb|(ok)?(lab|lch))\(.+\)$/,shadowRegex=/^(inset_)?-?((\d+)?\.?(\d+)[a-z]+|0)_-?((\d+)?\.?(\d+)[a-z]+|0)/,imageRegex=/^(url|image|image-set|cross-fade|element|(repeating-)?(linear|radial|conic)-gradient)\(.+\)$/,isLength=i=>isNumber$1(i)||stringLengths.has(i)||fractionRegex.test(i),isArbitraryLength=i=>getIsArbitraryValue(i,"length",isLengthOnly),isNumber$1=i=>!!i&&!Number.isNaN(Number(i)),isArbitraryNumber=i=>getIsArbitraryValue(i,"number",isNumber$1),isInteger$2=i=>!!i&&Number.isInteger(Number(i)),isPercent=i=>i.endsWith("%")&&isNumber$1(i.slice(0,-1)),isArbitraryValue=i=>arbitraryValueRegex.test(i),isTshirtSize=i=>tshirtUnitRegex.test(i),sizeLabels=new Set(["length","size","percentage"]),isArbitrarySize=i=>getIsArbitraryValue(i,sizeLabels,isNever),isArbitraryPosition=i=>getIsArbitraryValue(i,"position",isNever),imageLabels=new Set(["image","url"]),isArbitraryImage=i=>getIsArbitraryValue(i,imageLabels,isImage),isArbitraryShadow=i=>getIsArbitraryValue(i,"",isShadow),isAny=()=>!0,getIsArbitraryValue=(i,s,o)=>{const a=arbitraryValueRegex.exec(i);return a?a[1]?typeof s=="string"?a[1]===s:s.has(a[1]):o(a[2]):!1},isLengthOnly=i=>lengthUnitRegex.test(i)&&!colorFunctionRegex.test(i),isNever=()=>!1,isShadow=i=>shadowRegex.test(i),isImage=i=>imageRegex.test(i),getDefaultConfig=()=>{const i=fromTheme("colors"),s=fromTheme("spacing"),o=fromTheme("blur"),a=fromTheme("brightness"),c=fromTheme("borderColor"),d=fromTheme("borderRadius"),g=fromTheme("borderSpacing"),$=fromTheme("borderWidth"),j=fromTheme("contrast"),_e=fromTheme("grayscale"),et=fromTheme("hueRotate"),_=fromTheme("invert"),b=fromTheme("gap"),tt=fromTheme("gradientColorStops"),nt=fromTheme("gradientColorStopPositions"),rt=fromTheme("inset"),st=fromTheme("margin"),ot=fromTheme("opacity"),it=fromTheme("padding"),at=fromTheme("saturate"),lt=fromTheme("scale"),ut=fromTheme("sepia"),ct=fromTheme("skew"),dt=fromTheme("space"),pt=fromTheme("translate"),ht=()=>["auto","contain","none"],ft=()=>["auto","hidden","clip","visible","scroll"],yt=()=>["auto",isArbitraryValue,s],wt=()=>[isArbitraryValue,s],_t=()=>["",isLength,isArbitraryLength],bt=()=>["auto",isNumber$1,isArbitraryValue],xt=()=>["bottom","center","left","left-bottom","left-top","right","right-bottom","right-top","top"],mt=()=>["solid","dashed","dotted","double","none"],vt=()=>["normal","multiply","screen","overlay","darken","lighten","color-dodge","color-burn","hard-light","soft-light","difference","exclusion","hue","saturation","color","luminosity"],Et=()=>["start","end","center","between","around","evenly","stretch"],Ct=()=>["","0",isArbitraryValue],kt=()=>["auto","avoid","all","avoid-page","page","left","right","column"],Nt=()=>[isNumber$1,isArbitraryValue];return{cacheSize:500,separator:":",theme:{colors:[isAny],spacing:[isLength,isArbitraryLength],blur:["none","",isTshirtSize,isArbitraryValue],brightness:Nt(),borderColor:[i],borderRadius:["none","","full",isTshirtSize,isArbitraryValue],borderSpacing:wt(),borderWidth:_t(),contrast:Nt(),grayscale:Ct(),hueRotate:Nt(),invert:Ct(),gap:wt(),gradientColorStops:[i],gradientColorStopPositions:[isPercent,isArbitraryLength],inset:yt(),margin:yt(),opacity:Nt(),padding:wt(),saturate:Nt(),scale:Nt(),sepia:Ct(),skew:Nt(),space:wt(),translate:wt()},classGroups:{aspect:[{aspect:["auto","square","video",isArbitraryValue]}],container:["container"],columns:[{columns:[isTshirtSize]}],"break-after":[{"break-after":kt()}],"break-before":[{"break-before":kt()}],"break-inside":[{"break-inside":["auto","avoid","avoid-page","avoid-column"]}],"box-decoration":[{"box-decoration":["slice","clone"]}],box:[{box:["border","content"]}],display:["block","inline-block","inline","flex","inline-flex","table","inline-table","table-caption","table-cell","table-column","table-column-group","table-footer-group","table-header-group","table-row-group","table-row","flow-root","grid","inline-grid","contents","list-item","hidden"],float:[{float:["right","left","none","start","end"]}],clear:[{clear:["left","right","both","none","start","end"]}],isolation:["isolate","isolation-auto"],"object-fit":[{object:["contain","cover","fill","none","scale-down"]}],"object-position":[{object:[...xt(),isArbitraryValue]}],overflow:[{overflow:ft()}],"overflow-x":[{"overflow-x":ft()}],"overflow-y":[{"overflow-y":ft()}],overscroll:[{overscroll:ht()}],"overscroll-x":[{"overscroll-x":ht()}],"overscroll-y":[{"overscroll-y":ht()}],position:["static","fixed","absolute","relative","sticky"],inset:[{inset:[rt]}],"inset-x":[{"inset-x":[rt]}],"inset-y":[{"inset-y":[rt]}],start:[{start:[rt]}],end:[{end:[rt]}],top:[{top:[rt]}],right:[{right:[rt]}],bottom:[{bottom:[rt]}],left:[{left:[rt]}],visibility:["visible","invisible","collapse"],z:[{z:["auto",isInteger$2,isArbitraryValue]}],basis:[{basis:yt()}],"flex-direction":[{flex:["row","row-reverse","col","col-reverse"]}],"flex-wrap":[{flex:["wrap","wrap-reverse","nowrap"]}],flex:[{flex:["1","auto","initial","none",isArbitraryValue]}],grow:[{grow:Ct()}],shrink:[{shrink:Ct()}],order:[{order:["first","last","none",isInteger$2,isArbitraryValue]}],"grid-cols":[{"grid-cols":[isAny]}],"col-start-end":[{col:["auto",{span:["full",isInteger$2,isArbitraryValue]},isArbitraryValue]}],"col-start":[{"col-start":bt()}],"col-end":[{"col-end":bt()}],"grid-rows":[{"grid-rows":[isAny]}],"row-start-end":[{row:["auto",{span:[isInteger$2,isArbitraryValue]},isArbitraryValue]}],"row-start":[{"row-start":bt()}],"row-end":[{"row-end":bt()}],"grid-flow":[{"grid-flow":["row","col","dense","row-dense","col-dense"]}],"auto-cols":[{"auto-cols":["auto","min","max","fr",isArbitraryValue]}],"auto-rows":[{"auto-rows":["auto","min","max","fr",isArbitraryValue]}],gap:[{gap:[b]}],"gap-x":[{"gap-x":[b]}],"gap-y":[{"gap-y":[b]}],"justify-content":[{justify:["normal",...Et()]}],"justify-items":[{"justify-items":["start","end","center","stretch"]}],"justify-self":[{"justify-self":["auto","start","end","center","stretch"]}],"align-content":[{content:["normal",...Et(),"baseline"]}],"align-items":[{items:["start","end","center","baseline","stretch"]}],"align-self":[{self:["auto","start","end","center","stretch","baseline"]}],"place-content":[{"place-content":[...Et(),"baseline"]}],"place-items":[{"place-items":["start","end","center","baseline","stretch"]}],"place-self":[{"place-self":["auto","start","end","center","stretch"]}],p:[{p:[it]}],px:[{px:[it]}],py:[{py:[it]}],ps:[{ps:[it]}],pe:[{pe:[it]}],pt:[{pt:[it]}],pr:[{pr:[it]}],pb:[{pb:[it]}],pl:[{pl:[it]}],m:[{m:[st]}],mx:[{mx:[st]}],my:[{my:[st]}],ms:[{ms:[st]}],me:[{me:[st]}],mt:[{mt:[st]}],mr:[{mr:[st]}],mb:[{mb:[st]}],ml:[{ml:[st]}],"space-x":[{"space-x":[dt]}],"space-x-reverse":["space-x-reverse"],"space-y":[{"space-y":[dt]}],"space-y-reverse":["space-y-reverse"],w:[{w:["auto","min","max","fit","svw","lvw","dvw",isArbitraryValue,s]}],"min-w":[{"min-w":[isArbitraryValue,s,"min","max","fit"]}],"max-w":[{"max-w":[isArbitraryValue,s,"none","full","min","max","fit","prose",{screen:[isTshirtSize]},isTshirtSize]}],h:[{h:[isArbitraryValue,s,"auto","min","max","fit","svh","lvh","dvh"]}],"min-h":[{"min-h":[isArbitraryValue,s,"min","max","fit","svh","lvh","dvh"]}],"max-h":[{"max-h":[isArbitraryValue,s,"min","max","fit","svh","lvh","dvh"]}],size:[{size:[isArbitraryValue,s,"auto","min","max","fit"]}],"font-size":[{text:["base",isTshirtSize,isArbitraryLength]}],"font-smoothing":["antialiased","subpixel-antialiased"],"font-style":["italic","not-italic"],"font-weight":[{font:["thin","extralight","light","normal","medium","semibold","bold","extrabold","black",isArbitraryNumber]}],"font-family":[{font:[isAny]}],"fvn-normal":["normal-nums"],"fvn-ordinal":["ordinal"],"fvn-slashed-zero":["slashed-zero"],"fvn-figure":["lining-nums","oldstyle-nums"],"fvn-spacing":["proportional-nums","tabular-nums"],"fvn-fraction":["diagonal-fractions","stacked-fractons"],tracking:[{tracking:["tighter","tight","normal","wide","wider","widest",isArbitraryValue]}],"line-clamp":[{"line-clamp":["none",isNumber$1,isArbitraryNumber]}],leading:[{leading:["none","tight","snug","normal","relaxed","loose",isLength,isArbitraryValue]}],"list-image":[{"list-image":["none",isArbitraryValue]}],"list-style-type":[{list:["none","disc","decimal",isArbitraryValue]}],"list-style-position":[{list:["inside","outside"]}],"placeholder-color":[{placeholder:[i]}],"placeholder-opacity":[{"placeholder-opacity":[ot]}],"text-alignment":[{text:["left","center","right","justify","start","end"]}],"text-color":[{text:[i]}],"text-opacity":[{"text-opacity":[ot]}],"text-decoration":["underline","overline","line-through","no-underline"],"text-decoration-style":[{decoration:[...mt(),"wavy"]}],"text-decoration-thickness":[{decoration:["auto","from-font",isLength,isArbitraryLength]}],"underline-offset":[{"underline-offset":["auto",isLength,isArbitraryValue]}],"text-decoration-color":[{decoration:[i]}],"text-transform":["uppercase","lowercase","capitalize","normal-case"],"text-overflow":["truncate","text-ellipsis","text-clip"],"text-wrap":[{text:["wrap","nowrap","balance","pretty"]}],indent:[{indent:wt()}],"vertical-align":[{align:["baseline","top","middle","bottom","text-top","text-bottom","sub","super",isArbitraryValue]}],whitespace:[{whitespace:["normal","nowrap","pre","pre-line","pre-wrap","break-spaces"]}],break:[{break:["normal","words","all","keep"]}],hyphens:[{hyphens:["none","manual","auto"]}],content:[{content:["none",isArbitraryValue]}],"bg-attachment":[{bg:["fixed","local","scroll"]}],"bg-clip":[{"bg-clip":["border","padding","content","text"]}],"bg-opacity":[{"bg-opacity":[ot]}],"bg-origin":[{"bg-origin":["border","padding","content"]}],"bg-position":[{bg:[...xt(),isArbitraryPosition]}],"bg-repeat":[{bg:["no-repeat",{repeat:["","x","y","round","space"]}]}],"bg-size":[{bg:["auto","cover","contain",isArbitrarySize]}],"bg-image":[{bg:["none",{"gradient-to":["t","tr","r","br","b","bl","l","tl"]},isArbitraryImage]}],"bg-color":[{bg:[i]}],"gradient-from-pos":[{from:[nt]}],"gradient-via-pos":[{via:[nt]}],"gradient-to-pos":[{to:[nt]}],"gradient-from":[{from:[tt]}],"gradient-via":[{via:[tt]}],"gradient-to":[{to:[tt]}],rounded:[{rounded:[d]}],"rounded-s":[{"rounded-s":[d]}],"rounded-e":[{"rounded-e":[d]}],"rounded-t":[{"rounded-t":[d]}],"rounded-r":[{"rounded-r":[d]}],"rounded-b":[{"rounded-b":[d]}],"rounded-l":[{"rounded-l":[d]}],"rounded-ss":[{"rounded-ss":[d]}],"rounded-se":[{"rounded-se":[d]}],"rounded-ee":[{"rounded-ee":[d]}],"rounded-es":[{"rounded-es":[d]}],"rounded-tl":[{"rounded-tl":[d]}],"rounded-tr":[{"rounded-tr":[d]}],"rounded-br":[{"rounded-br":[d]}],"rounded-bl":[{"rounded-bl":[d]}],"border-w":[{border:[$]}],"border-w-x":[{"border-x":[$]}],"border-w-y":[{"border-y":[$]}],"border-w-s":[{"border-s":[$]}],"border-w-e":[{"border-e":[$]}],"border-w-t":[{"border-t":[$]}],"border-w-r":[{"border-r":[$]}],"border-w-b":[{"border-b":[$]}],"border-w-l":[{"border-l":[$]}],"border-opacity":[{"border-opacity":[ot]}],"border-style":[{border:[...mt(),"hidden"]}],"divide-x":[{"divide-x":[$]}],"divide-x-reverse":["divide-x-reverse"],"divide-y":[{"divide-y":[$]}],"divide-y-reverse":["divide-y-reverse"],"divide-opacity":[{"divide-opacity":[ot]}],"divide-style":[{divide:mt()}],"border-color":[{border:[c]}],"border-color-x":[{"border-x":[c]}],"border-color-y":[{"border-y":[c]}],"border-color-s":[{"border-s":[c]}],"border-color-e":[{"border-e":[c]}],"border-color-t":[{"border-t":[c]}],"border-color-r":[{"border-r":[c]}],"border-color-b":[{"border-b":[c]}],"border-color-l":[{"border-l":[c]}],"divide-color":[{divide:[c]}],"outline-style":[{outline:["",...mt()]}],"outline-offset":[{"outline-offset":[isLength,isArbitraryValue]}],"outline-w":[{outline:[isLength,isArbitraryLength]}],"outline-color":[{outline:[i]}],"ring-w":[{ring:_t()}],"ring-w-inset":["ring-inset"],"ring-color":[{ring:[i]}],"ring-opacity":[{"ring-opacity":[ot]}],"ring-offset-w":[{"ring-offset":[isLength,isArbitraryLength]}],"ring-offset-color":[{"ring-offset":[i]}],shadow:[{shadow:["","inner","none",isTshirtSize,isArbitraryShadow]}],"shadow-color":[{shadow:[isAny]}],opacity:[{opacity:[ot]}],"mix-blend":[{"mix-blend":[...vt(),"plus-lighter","plus-darker"]}],"bg-blend":[{"bg-blend":vt()}],filter:[{filter:["","none"]}],blur:[{blur:[o]}],brightness:[{brightness:[a]}],contrast:[{contrast:[j]}],"drop-shadow":[{"drop-shadow":["","none",isTshirtSize,isArbitraryValue]}],grayscale:[{grayscale:[_e]}],"hue-rotate":[{"hue-rotate":[et]}],invert:[{invert:[_]}],saturate:[{saturate:[at]}],sepia:[{sepia:[ut]}],"backdrop-filter":[{"backdrop-filter":["","none"]}],"backdrop-blur":[{"backdrop-blur":[o]}],"backdrop-brightness":[{"backdrop-brightness":[a]}],"backdrop-contrast":[{"backdrop-contrast":[j]}],"backdrop-grayscale":[{"backdrop-grayscale":[_e]}],"backdrop-hue-rotate":[{"backdrop-hue-rotate":[et]}],"backdrop-invert":[{"backdrop-invert":[_]}],"backdrop-opacity":[{"backdrop-opacity":[ot]}],"backdrop-saturate":[{"backdrop-saturate":[at]}],"backdrop-sepia":[{"backdrop-sepia":[ut]}],"border-collapse":[{border:["collapse","separate"]}],"border-spacing":[{"border-spacing":[g]}],"border-spacing-x":[{"border-spacing-x":[g]}],"border-spacing-y":[{"border-spacing-y":[g]}],"table-layout":[{table:["auto","fixed"]}],caption:[{caption:["top","bottom"]}],transition:[{transition:["none","all","","colors","opacity","shadow","transform",isArbitraryValue]}],duration:[{duration:Nt()}],ease:[{ease:["linear","in","out","in-out",isArbitraryValue]}],delay:[{delay:Nt()}],animate:[{animate:["none","spin","ping","pulse","bounce",isArbitraryValue]}],transform:[{transform:["","gpu","none"]}],scale:[{scale:[lt]}],"scale-x":[{"scale-x":[lt]}],"scale-y":[{"scale-y":[lt]}],rotate:[{rotate:[isInteger$2,isArbitraryValue]}],"translate-x":[{"translate-x":[pt]}],"translate-y":[{"translate-y":[pt]}],"skew-x":[{"skew-x":[ct]}],"skew-y":[{"skew-y":[ct]}],"transform-origin":[{origin:["center","top","top-right","right","bottom-right","bottom","bottom-left","left","top-left",isArbitraryValue]}],accent:[{accent:["auto",i]}],appearance:[{appearance:["none","auto"]}],cursor:[{cursor:["auto","default","pointer","wait","text","move","help","not-allowed","none","context-menu","progress","cell","crosshair","vertical-text","alias","copy","no-drop","grab","grabbing","all-scroll","col-resize","row-resize","n-resize","e-resize","s-resize","w-resize","ne-resize","nw-resize","se-resize","sw-resize","ew-resize","ns-resize","nesw-resize","nwse-resize","zoom-in","zoom-out",isArbitraryValue]}],"caret-color":[{caret:[i]}],"pointer-events":[{"pointer-events":["none","auto"]}],resize:[{resize:["none","y","x",""]}],"scroll-behavior":[{scroll:["auto","smooth"]}],"scroll-m":[{"scroll-m":wt()}],"scroll-mx":[{"scroll-mx":wt()}],"scroll-my":[{"scroll-my":wt()}],"scroll-ms":[{"scroll-ms":wt()}],"scroll-me":[{"scroll-me":wt()}],"scroll-mt":[{"scroll-mt":wt()}],"scroll-mr":[{"scroll-mr":wt()}],"scroll-mb":[{"scroll-mb":wt()}],"scroll-ml":[{"scroll-ml":wt()}],"scroll-p":[{"scroll-p":wt()}],"scroll-px":[{"scroll-px":wt()}],"scroll-py":[{"scroll-py":wt()}],"scroll-ps":[{"scroll-ps":wt()}],"scroll-pe":[{"scroll-pe":wt()}],"scroll-pt":[{"scroll-pt":wt()}],"scroll-pr":[{"scroll-pr":wt()}],"scroll-pb":[{"scroll-pb":wt()}],"scroll-pl":[{"scroll-pl":wt()}],"snap-align":[{snap:["start","end","center","align-none"]}],"snap-stop":[{snap:["normal","always"]}],"snap-type":[{snap:["none","x","y","both"]}],"snap-strictness":[{snap:["mandatory","proximity"]}],touch:[{touch:["auto","none","manipulation"]}],"touch-x":[{"touch-pan":["x","left","right"]}],"touch-y":[{"touch-pan":["y","up","down"]}],"touch-pz":["touch-pinch-zoom"],select:[{select:["none","text","all","auto"]}],"will-change":[{"will-change":["auto","scroll","contents","transform",isArbitraryValue]}],fill:[{fill:[i,"none"]}],"stroke-w":[{stroke:[isLength,isArbitraryLength,isArbitraryNumber]}],stroke:[{stroke:[i,"none"]}],sr:["sr-only","not-sr-only"],"forced-color-adjust":[{"forced-color-adjust":["auto","none"]}]},conflictingClassGroups:{overflow:["overflow-x","overflow-y"],overscroll:["overscroll-x","overscroll-y"],inset:["inset-x","inset-y","start","end","top","right","bottom","left"],"inset-x":["right","left"],"inset-y":["top","bottom"],flex:["basis","grow","shrink"],gap:["gap-x","gap-y"],p:["px","py","ps","pe","pt","pr","pb","pl"],px:["pr","pl"],py:["pt","pb"],m:["mx","my","ms","me","mt","mr","mb","ml"],mx:["mr","ml"],my:["mt","mb"],size:["w","h"],"font-size":["leading"],"fvn-normal":["fvn-ordinal","fvn-slashed-zero","fvn-figure","fvn-spacing","fvn-fraction"],"fvn-ordinal":["fvn-normal"],"fvn-slashed-zero":["fvn-normal"],"fvn-figure":["fvn-normal"],"fvn-spacing":["fvn-normal"],"fvn-fraction":["fvn-normal"],"line-clamp":["display","overflow"],rounded:["rounded-s","rounded-e","rounded-t","rounded-r","rounded-b","rounded-l","rounded-ss","rounded-se","rounded-ee","rounded-es","rounded-tl","rounded-tr","rounded-br","rounded-bl"],"rounded-s":["rounded-ss","rounded-es"],"rounded-e":["rounded-se","rounded-ee"],"rounded-t":["rounded-tl","rounded-tr"],"rounded-r":["rounded-tr","rounded-br"],"rounded-b":["rounded-br","rounded-bl"],"rounded-l":["rounded-tl","rounded-bl"],"border-spacing":["border-spacing-x","border-spacing-y"],"border-w":["border-w-s","border-w-e","border-w-t","border-w-r","border-w-b","border-w-l"],"border-w-x":["border-w-r","border-w-l"],"border-w-y":["border-w-t","border-w-b"],"border-color":["border-color-s","border-color-e","border-color-t","border-color-r","border-color-b","border-color-l"],"border-color-x":["border-color-r","border-color-l"],"border-color-y":["border-color-t","border-color-b"],"scroll-m":["scroll-mx","scroll-my","scroll-ms","scroll-me","scroll-mt","scroll-mr","scroll-mb","scroll-ml"],"scroll-mx":["scroll-mr","scroll-ml"],"scroll-my":["scroll-mt","scroll-mb"],"scroll-p":["scroll-px","scroll-py","scroll-ps","scroll-pe","scroll-pt","scroll-pr","scroll-pb","scroll-pl"],"scroll-px":["scroll-pr","scroll-pl"],"scroll-py":["scroll-pt","scroll-pb"],touch:["touch-x","touch-y","touch-pz"],"touch-x":["touch"],"touch-y":["touch"],"touch-pz":["touch"]},conflictingClassGroupModifiers:{"font-size":["leading"]}}},twMerge=createTailwindMerge(getDefaultConfig);function cn(...i){return twMerge(clsx(i))}const ToastProvider=Provider,ToastViewport=reactExports.forwardRef(({className:i,...s},o)=>jsxRuntimeExports.jsx(Viewport,{ref:o,className:cn("fixed top-0 z-[100] flex max-h-screen w-full flex-col-reverse p-4 sm:bottom-0 sm:right-0 sm:top-auto sm:flex-col md:max-w-[420px]",i),...s}));ToastViewport.displayName=Viewport.displayName;const toastVariants=cva("group pointer-events-auto relative flex w-full items-center justify-between space-x-4 overflow-hidden rounded-md border p-6 pr-8 shadow-lg transition-all data-[swipe=cancel]:translate-x-0 data-[swipe=end]:translate-x-[var(--radix-toast-swipe-end-x)] data-[swipe=move]:translate-x-[var(--radix-toast-swipe-move-x)] data-[swipe=move]:transition-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[swipe=end]:animate-out data-[state=closed]:fade-out-80 data-[state=closed]:slide-out-to-right-full data-[state=open]:slide-in-from-top-full data-[state=open]:sm:slide-in-from-bottom-full",{variants:{variant:{default:"border bg-background text-foreground",destructive:"destructive group border-destructive bg-destructive text-destructive-foreground"}},defaultVariants:{variant:"default"}}),Toast=reactExports.forwardRef(({className:i,variant:s,...o},a)=>jsxRuntimeExports.jsx(Root2,{ref:a,className:cn(toastVariants({variant:s}),i),...o}));Toast.displayName=Root2.displayName;const ToastAction=reactExports.forwardRef(({className:i,...s},o)=>jsxRuntimeExports.jsx(Action,{ref:o,className:cn("inline-flex h-8 shrink-0 items-center justify-center rounded-md border bg-transparent px-3 text-sm font-medium ring-offset-background transition-colors hover:bg-secondary focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 group-[.destructive]:border-muted/40 group-[.destructive]:hover:border-destructive/30 group-[.destructive]:hover:bg-destructive group-[.destructive]:hover:text-destructive-foreground group-[.destructive]:focus:ring-destructive",i),...s}));ToastAction.displayName=Action.displayName;const ToastClose=reactExports.forwardRef(({className:i,...s},o)=>jsxRuntimeExports.jsx(Close,{ref:o,className:cn("absolute right-2 top-2 rounded-md p-1 text-foreground/50 opacity-0 transition-opacity hover:text-foreground focus:opacity-100 focus:outline-none focus:ring-2 group-hover:opacity-100 group-[.destructive]:text-red-300 group-[.destructive]:hover:text-red-50 group-[.destructive]:focus:ring-red-400 group-[.destructive]:focus:ring-offset-red-600",i),"toast-close":"",...s,children:jsxRuntimeExports.jsx(X,{className:"h-4 w-4"})}));ToastClose.displayName=Close.displayName;const ToastTitle=reactExports.forwardRef(({className:i,...s},o)=>jsxRuntimeExports.jsx(Title,{ref:o,className:cn("text-sm font-semibold",i),...s}));ToastTitle.displayName=Title.displayName;const ToastDescription=reactExports.forwardRef(({className:i,...s},o)=>jsxRuntimeExports.jsx(Description,{ref:o,className:cn("text-sm opacity-90",i),...s}));ToastDescription.displayName=Description.displayName;function Toaster(){const{toasts:i}=useToast();return jsxRuntimeExports.jsxs(ToastProvider,{children:[i.map(function({id:s,title:o,description:a,action:c,...d}){return jsxRuntimeExports.jsxs(Toast,{...d,children:[jsxRuntimeExports.jsxs("div",{className:"grid gap-1",children:[o&&jsxRuntimeExports.jsx(ToastTitle,{children:o}),a&&jsxRuntimeExports.jsx(ToastDescription,{children:a})]}),c,jsxRuntimeExports.jsx(ToastClose,{})]},s)}),jsxRuntimeExports.jsx(ToastViewport,{})]})}const Card=reactExports.forwardRef(({className:i,...s},o)=>jsxRuntimeExports.jsx("div",{ref:o,className:cn("rounded-lg border bg-card text-card-foreground shadow-sm",i),...s}));Card.displayName="Card";const CardHeader=reactExports.forwardRef(({className:i,...s},o)=>jsxRuntimeExports.jsx("div",{ref:o,className:cn("flex flex-col space-y-1.5 p-6",i),...s}));CardHeader.displayName="CardHeader";const CardTitle=reactExports.forwardRef(({className:i,...s},o)=>jsxRuntimeExports.jsx("h3",{ref:o,className:cn("text-2xl font-semibold leading-none tracking-tight",i),...s}));CardTitle.displayName="CardTitle";const CardDescription=reactExports.forwardRef(({className:i,...s},o)=>jsxRuntimeExports.jsx("p",{ref:o,className:cn("text-sm text-muted-foreground",i),...s}));CardDescription.displayName="CardDescription";const CardContent=reactExports.forwardRef(({className:i,...s},o)=>jsxRuntimeExports.jsx("div",{ref:o,className:cn("p-6 pt-0",i),...s}));CardContent.displayName="CardContent";const CardFooter=reactExports.forwardRef(({className:i,...s},o)=>jsxRuntimeExports.jsx("div",{ref:o,className:cn("flex items-center p-6 pt-0",i),...s}));CardFooter.displayName="CardFooter";function NotFound(){return jsxRuntimeExports.jsx("div",{className:"min-h-screen w-full flex items-center justify-center bg-gray-50",children:jsxRuntimeExports.jsx(Card,{className:"w-full max-w-md mx-4",children:jsxRuntimeExports.jsxs(CardContent,{className:"pt-6",children:[jsxRuntimeExports.jsxs("div",{className:"flex mb-4 gap-2",children:[jsxRuntimeExports.jsx(CircleAlert,{className:"h-8 w-8 text-red-500"}),jsxRuntimeExports.jsx("h1",{className:"text-2xl font-bold text-gray-900",children:"404 Page Not Found"})]}),jsxRuntimeExports.jsx("p",{className:"mt-4 text-sm text-gray-600",children:"Did you forget to add the page to the router?"})]})})})}const buttonVariants=cva("inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0",{variants:{variant:{default:"bg-primary text-primary-foreground hover:bg-primary/90",destructive:"bg-destructive text-destructive-foreground hover:bg-destructive/90",outline:"border border-input bg-background hover:bg-accent hover:text-accent-foreground",secondary:"bg-secondary text-secondary-foreground hover:bg-secondary/80",ghost:"hover:bg-accent hover:text-accent-foreground",link:"text-primary underline-offset-4 hover:underline"},size:{default:"h-10 px-4 py-2",sm:"h-9 rounded-md px-3",lg:"h-11 rounded-md px-8",icon:"h-10 w-10"}},defaultVariants:{variant:"default",size:"default"}}),Button=reactExports.forwardRef(({className:i,variant:s,size:o,asChild:a=!1,...c},d)=>{const g=a?Slot:"button";return jsxRuntimeExports.jsx(g,{className:cn(buttonVariants({variant:s,size:o,className:i})),ref:d,...c})});Button.displayName="Button";const Textarea=reactExports.forwardRef(({className:i,...s},o)=>jsxRuntimeExports.jsx("textarea",{className:cn("flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50",i),ref:o,...s}));Textarea.displayName="Textarea";const badgeVariants=cva("inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2",{variants:{variant:{default:"border-transparent bg-primary text-primary-foreground hover:bg-primary/80",secondary:"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80",destructive:"border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80",outline:"text-foreground"}},defaultVariants:{variant:"default"}});function Badge({className:i,variant:s,...o}){return jsxRuntimeExports.jsx("div",{className:cn(badgeVariants({variant:s}),i),...o})}function dispatchCallback(i,s){i&&i(s)}function reverseDictionary(i){return Object.fromEntries(Object.entries(i).map(([s,o])=>[o,s]))}function escapeRegExp(i){return i.replace(/[.*+?^${}()|[\]\\]/g,"\\$&")}const Callable=class{constructor(){let i=function(...s){return i._call(...s)};return Object.setPrototypeOf(i,new.target.prototype)}_call(...i){throw Error("Must implement _call method in subclass")}};function isTypedArray$1(i){var s,o,a;return((a=(o=(s=i==null?void 0:i.prototype)==null?void 0:s.__proto__)==null?void 0:o.constructor)==null?void 0:a.name)==="TypedArray"}function isIntegralNumber(i){return Number.isInteger(i)||typeof i=="bigint"}function exists(i){return i!=null}function calculateDimensions(i){const s=[];let o=i;for(;Array.isArray(o);)s.push(o.length),o=o[0];return s}function pop(i,s,o=void 0){const a=i[s];if(a!==void 0)return delete i[s],a;if(o===void 0)throw Error(`Key ${s} does not exist in object.`);return o}function mergeArrays(...i){return Array.prototype.concat.apply([],i)}function product(...i){return i.reduce((s,o)=>s.flatMap(a=>o.map(c=>[a,c])))}function calculateReflectOffset(i,s){return Math.abs((i+s)%(2*s)-s)}const sharp={},__viteBrowserExternal=Object.freeze(Object.defineProperty({__proto__:null,default:sharp},Symbol.toStringTag,{value:"Module"}));var ortWeb_min$1={exports:{}};const backends={},backendsSortedByPriority=[],registerBackend$1=(i,s,o)=>{if(s&&typeof s.init=="function"&&typeof s.createSessionHandler=="function"){const a=backends[i];if(a===void 0)backends[i]={backend:s,priority:o};else{if(a.priority>o)return;if(a.priority===o&&a.backend!==s)throw new Error(`cannot register backend "${i}" using priority ${o}`)}if(o>=0){const c=backendsSortedByPriority.indexOf(i);c!==-1&&backendsSortedByPriority.splice(c,1);for(let d=0;d<backendsSortedByPriority.length;d++)if(backends[backendsSortedByPriority[d]].priority<=o){backendsSortedByPriority.splice(d,0,i);return}backendsSortedByPriority.push(i)}return}throw new TypeError("not a valid backend")},resolveBackend=async i=>{const s=i.length===0?backendsSortedByPriority:i,o=[];for(const a of s){const c=backends[a];if(c){if(c.initialized)return c.backend;if(c.aborted)continue;const d=!!c.initPromise;try{return d||(c.initPromise=c.backend.init()),await c.initPromise,c.initialized=!0,c.backend}catch(g){d||o.push({name:a,err:g}),c.aborted=!0}finally{delete c.initPromise}}}throw new Error(`no available backend found. ERR: ${o.map(a=>`[${a.name}] ${a.err}`).join(", ")}`)};class EnvImpl{constructor(){this.wasm={},this.webgl={},this.logLevelInternal="warning"}set logLevel(s){if(s!==void 0){if(typeof s!="string"||["verbose","info","warning","error","fatal"].indexOf(s)===-1)throw new Error(`Unsupported logging level: ${s}`);this.logLevelInternal=s}}get logLevel(){return this.logLevelInternal}}const env$3=new EnvImpl,isBigInt64ArrayAvailable=typeof BigInt64Array<"u"&&typeof BigInt64Array.from=="function",isBigUint64ArrayAvailable=typeof BigUint64Array<"u"&&typeof BigUint64Array.from=="function",NUMERIC_TENSOR_TYPE_TO_TYPEDARRAY_MAP=new Map([["float32",Float32Array],["uint8",Uint8Array],["int8",Int8Array],["uint16",Uint16Array],["int16",Int16Array],["int32",Int32Array],["bool",Uint8Array],["float64",Float64Array],["uint32",Uint32Array]]),NUMERIC_TENSOR_TYPEDARRAY_TO_TYPE_MAP=new Map([[Float32Array,"float32"],[Uint8Array,"uint8"],[Int8Array,"int8"],[Uint16Array,"uint16"],[Int16Array,"int16"],[Int32Array,"int32"],[Float64Array,"float64"],[Uint32Array,"uint32"]]);isBigInt64ArrayAvailable&&(NUMERIC_TENSOR_TYPE_TO_TYPEDARRAY_MAP.set("int64",BigInt64Array),NUMERIC_TENSOR_TYPEDARRAY_TO_TYPE_MAP.set(BigInt64Array,"int64"));isBigUint64ArrayAvailable&&(NUMERIC_TENSOR_TYPE_TO_TYPEDARRAY_MAP.set("uint64",BigUint64Array),NUMERIC_TENSOR_TYPEDARRAY_TO_TYPE_MAP.set(BigUint64Array,"uint64"));const calculateSize=i=>{let s=1;for(let o=0;o<i.length;o++){const a=i[o];if(typeof a!="number"||!Number.isSafeInteger(a))throw new TypeError(`dims[${o}] must be an integer, got: ${a}`);if(a<0)throw new RangeError(`dims[${o}] must be a non-negative integer, got: ${a}`);s*=a}return s};let Tensor$3=class Sr{constructor(s,o,a){let c,d,g;if(typeof s=="string")if(c=s,g=a,s==="string"){if(!Array.isArray(o))throw new TypeError("A string tensor's data must be a string array.");d=o}else{const j=NUMERIC_TENSOR_TYPE_TO_TYPEDARRAY_MAP.get(s);if(j===void 0)throw new TypeError(`Unsupported tensor type: ${s}.`);if(Array.isArray(o))d=j.from(o);else if(o instanceof j)d=o;else throw new TypeError(`A ${c} tensor's data must be type of ${j}`)}else if(g=o,Array.isArray(s)){if(s.length===0)throw new TypeError("Tensor type cannot be inferred from an empty array.");const j=typeof s[0];if(j==="string")c="string",d=s;else if(j==="boolean")c="bool",d=Uint8Array.from(s);else throw new TypeError(`Invalid element type of data array: ${j}.`)}else{const j=NUMERIC_TENSOR_TYPEDARRAY_TO_TYPE_MAP.get(s.constructor);if(j===void 0)throw new TypeError(`Unsupported type for tensor data: ${s.constructor}.`);c=j,d=s}if(g===void 0)g=[d.length];else if(!Array.isArray(g))throw new TypeError("A tensor's dims must be a number array");const $=calculateSize(g);if($!==d.length)throw new Error(`Tensor's size(${$}) does not match data length(${d.length}).`);this.dims=g,this.type=c,this.data=d,this.size=$}static bufferToTensor(s,o){if(s===void 0)throw new Error("Image buffer must be defined");if(o.height===void 0||o.width===void 0)throw new Error("Image height and width must be defined");const{height:a,width:c}=o,d=o.norm;let g,$;d===void 0||d.mean===void 0?g=255:g=d.mean,d===void 0||d.bias===void 0?$=0:$=d.bias;const j=o.bitmapFormat!==void 0?o.bitmapFormat:"RGBA",_e=o.tensorFormat!==void 0&&o.tensorFormat!==void 0?o.tensorFormat:"RGB",et=a*c,_=_e==="RGBA"?new Float32Array(et*4):new Float32Array(et*3);let b=4,tt=0,nt=1,rt=2,st=3,ot=0,it=et,at=et*2,lt=-1;j==="RGB"&&(b=3,tt=0,nt=1,rt=2,st=-1),_e==="RGBA"?lt=et*3:_e==="RBG"?(ot=0,at=et,it=et*2):_e==="BGR"&&(at=0,it=et,ot=et*2);for(let ct=0;ct<et;ct++,tt+=b,rt+=b,nt+=b,st+=b)_[ot++]=(s[tt]+$)/g,_[it++]=(s[nt]+$)/g,_[at++]=(s[rt]+$)/g,lt!==-1&&st!==-1&&(_[lt++]=(s[st]+$)/g);return _e==="RGBA"?new Sr("float32",_,[1,4,a,c]):new Sr("float32",_,[1,3,a,c])}static async fromImage(s,o){const a=typeof HTMLImageElement<"u"&&s instanceof HTMLImageElement,c=typeof ImageData<"u"&&s instanceof ImageData,d=typeof ImageBitmap<"u"&&s instanceof ImageBitmap,g=typeof String<"u"&&(s instanceof String||typeof s=="string");let $,j={};if(a){const _e=document.createElement("canvas"),et=_e.getContext("2d");if(et!=null){let _=s.naturalHeight,b=s.naturalWidth;if(o!==void 0&&o.resizedHeight!==void 0&&o.resizedWidth!==void 0&&(_=o.resizedHeight,b=o.resizedWidth),o!==void 0){if(j=o,o.tensorFormat!==void 0)throw new Error("Image input config format must be RGBA for HTMLImageElement");if(j.tensorFormat="RGBA",o.height!==void 0&&o.height!==_)throw new Error("Image input config height doesn't match HTMLImageElement height");if(j.height=_,o.width!==void 0&&o.width!==b)throw new Error("Image input config width doesn't match HTMLImageElement width");j.width=b}else j.tensorFormat="RGBA",j.height=_,j.width=b;_e.width=b,_e.height=_,et.drawImage(s,0,0,b,_),$=et.getImageData(0,0,b,_).data}else throw new Error("Can not access image data")}else if(c){const _e="RGBA";let et,_;if(o!==void 0&&o.resizedWidth!==void 0&&o.resizedHeight!==void 0?(et=o.resizedHeight,_=o.resizedWidth):(et=s.height,_=s.width),o!==void 0){if(j=o,o.bitmapFormat!==void 0&&o.bitmapFormat!==_e)throw new Error("Image input config format must be RGBA for ImageData");j.bitmapFormat="RGBA"}else j.bitmapFormat="RGBA";if(j.height=et,j.width=_,o!==void 0){const b=document.createElement("canvas");b.width=_,b.height=et;const tt=b.getContext("2d");if(tt!=null)tt.putImageData(s,0,0),$=tt.getImageData(0,0,_,et).data;else throw new Error("Can not access image data")}else $=s.data}else if(d){if(o===void 0)throw new Error("Please provide image config with format for Imagebitmap");if(o.bitmapFormat!==void 0)throw new Error("Image input config format must be defined for ImageBitmap");const _e=document.createElement("canvas").getContext("2d");if(_e!=null){const et=s.height,_=s.width;if(_e.drawImage(s,0,0,_,et),$=_e.getImageData(0,0,_,et).data,o!==void 0){if(o.height!==void 0&&o.height!==et)throw new Error("Image input config height doesn't match ImageBitmap height");if(j.height=et,o.width!==void 0&&o.width!==_)throw new Error("Image input config width doesn't match ImageBitmap width");j.width=_}else j.height=et,j.width=_;return Sr.bufferToTensor($,j)}else throw new Error("Can not access image data")}else{if(g)return new Promise((_e,et)=>{const _=document.createElement("canvas"),b=_.getContext("2d");if(!s||!b)return et();const tt=new Image;tt.crossOrigin="Anonymous",tt.src=s,tt.onload=()=>{_.width=tt.width,_.height=tt.height,b.drawImage(tt,0,0,_.width,_.height);const nt=b.getImageData(0,0,_.width,_.height);if(o!==void 0){if(o.height!==void 0&&o.height!==_.height)throw new Error("Image input config height doesn't match ImageBitmap height");if(j.height=_.height,o.width!==void 0&&o.width!==_.width)throw new Error("Image input config width doesn't match ImageBitmap width");j.width=_.width}else j.height=_.height,j.width=_.width;_e(Sr.bufferToTensor(nt.data,j))}});throw new Error("Input data provided is not supported - aborted tensor creation")}if($!==void 0)return Sr.bufferToTensor($,j);throw new Error("Input data provided is not supported - aborted tensor creation")}toImageData(s){var o,a;const c=document.createElement("canvas").getContext("2d");let d;if(c!=null){const g=this.dims[3],$=this.dims[2],j=this.dims[1],_e=s!==void 0&&s.format!==void 0?s.format:"RGB",et=s!==void 0&&((o=s.norm)===null||o===void 0?void 0:o.mean)!==void 0?s.norm.mean:255,_=s!==void 0&&((a=s.norm)===null||a===void 0?void 0:a.bias)!==void 0?s.norm.bias:0,b=$*g;if(s!==void 0){if(s.height!==void 0&&s.height!==$)throw new Error("Image output config height doesn't match tensor height");if(s.width!==void 0&&s.width!==g)throw new Error("Image output config width doesn't match tensor width");if(s.format!==void 0&&j===4&&s.format!=="RGBA"||j===3&&s.format!=="RGB"&&s.format!=="BGR")throw new Error("Tensor format doesn't match input tensor dims")}const tt=4;let nt=0,rt=1,st=2,ot=3,it=0,at=b,lt=b*2,ut=-1;_e==="RGBA"?(it=0,at=b,lt=b*2,ut=b*3):_e==="RGB"?(it=0,at=b,lt=b*2):_e==="RBG"&&(it=0,lt=b,at=b*2),d=c.createImageData(g,$);for(let ct=0;ct<$*g;nt+=tt,rt+=tt,st+=tt,ot+=tt,ct++)d.data[nt]=(this.data[it++]-_)*et,d.data[rt]=(this.data[at++]-_)*et,d.data[st]=(this.data[lt++]-_)*et,d.data[ot]=ut===-1?255:(this.data[ut++]-_)*et}else throw new Error("Can not access image data");return d}reshape(s){return new Sr(this.type,this.data,s)}};const Tensor$2=Tensor$3;let InferenceSession$2=class Xs{constructor(s){this.handler=s}async run(s,o,a){const c={};let d={};if(typeof s!="object"||s===null||s instanceof Tensor$2||Array.isArray(s))throw new TypeError("'feeds' must be an object that use input names as keys and OnnxValue as corresponding values.");let g=!0;if(typeof o=="object"){if(o===null)throw new TypeError("Unexpected argument[1]: cannot be null.");if(o instanceof Tensor$2)throw new TypeError("'fetches' cannot be a Tensor");if(Array.isArray(o)){if(o.length===0)throw new TypeError("'fetches' cannot be an empty array.");g=!1;for(const _e of o){if(typeof _e!="string")throw new TypeError("'fetches' must be a string array or an object.");if(this.outputNames.indexOf(_e)===-1)throw new RangeError(`'fetches' contains invalid output name: ${_e}.`);c[_e]=null}if(typeof a=="object"&&a!==null)d=a;else if(typeof a<"u")throw new TypeError("'options' must be an object.")}else{let _e=!1;const et=Object.getOwnPropertyNames(o);for(const _ of this.outputNames)if(et.indexOf(_)!==-1){const b=o[_];(b===null||b instanceof Tensor$2)&&(_e=!0,g=!1,c[_]=b)}if(_e){if(typeof a=="object"&&a!==null)d=a;else if(typeof a<"u")throw new TypeError("'options' must be an object.")}else d=o}}else if(typeof o<"u")throw new TypeError("Unexpected argument[1]: must be 'fetches' or 'options'.");for(const _e of this.inputNames)if(typeof s[_e]>"u")throw new Error(`input '${_e}' is missing in 'feeds'.`);if(g)for(const _e of this.outputNames)c[_e]=null;const $=await this.handler.run(s,c,d),j={};for(const _e in $)Object.hasOwnProperty.call($,_e)&&(j[_e]=new Tensor$2($[_e].type,$[_e].data,$[_e].dims));return j}static async create(s,o,a,c){let d,g={};if(typeof s=="string"){if(d=s,typeof o=="object"&&o!==null)g=o;else if(typeof o<"u")throw new TypeError("'options' must be an object.")}else if(s instanceof Uint8Array){if(d=s,typeof o=="object"&&o!==null)g=o;else if(typeof o<"u")throw new TypeError("'options' must be an object.")}else if(s instanceof ArrayBuffer||typeof SharedArrayBuffer<"u"&&s instanceof SharedArrayBuffer){const _=s;let b=0,tt=s.byteLength;if(typeof o=="object"&&o!==null)g=o;else if(typeof o=="number"){if(b=o,!Number.isSafeInteger(b))throw new RangeError("'byteOffset' must be an integer.");if(b<0||b>=_.byteLength)throw new RangeError(`'byteOffset' is out of range [0, ${_.byteLength}).`);if(tt=s.byteLength-b,typeof a=="number"){if(tt=a,!Number.isSafeInteger(tt))throw new RangeError("'byteLength' must be an integer.");if(tt<=0||b+tt>_.byteLength)throw new RangeError(`'byteLength' is out of range (0, ${_.byteLength-b}].`);if(typeof c=="object"&&c!==null)g=c;else if(typeof c<"u")throw new TypeError("'options' must be an object.")}else if(typeof a<"u")throw new TypeError("'byteLength' must be a number.")}else if(typeof o<"u")throw new TypeError("'options' must be an object.");d=new Uint8Array(_,b,tt)}else throw new TypeError("Unexpected argument[0]: must be 'path' or 'buffer'.");const j=(g.executionProviders||[]).map(_=>typeof _=="string"?_:_.name),et=await(await resolveBackend(j)).createSessionHandler(d,g);return new Xs(et)}startProfiling(){this.handler.startProfiling()}endProfiling(){this.handler.endProfiling()}get inputNames(){return this.handler.inputNames}get outputNames(){return this.handler.outputNames}};const InferenceSession$1=InferenceSession$2,lib=Object.freeze(Object.defineProperty({__proto__:null,InferenceSession:InferenceSession$1,Tensor:Tensor$2,env:env$3,registerBackend:registerBackend$1},Symbol.toStringTag,{value:"Module"})),require$$0$1=getAugmentedNamespace(lib);/*!
* ONNX Runtime Web v1.14.0
* Copyright (c) Microsoft Corporation. All rights reserved.
* Licensed under the MIT License.
*/(function(module,exports){(function(i,s){module.exports=s(require$$0$1)})(self,__WEBPACK_EXTERNAL_MODULE__1670__=>(()=>{var __webpack_modules__={3474:(i,s,o)=>{var a,c=(a=(a=typeof document<"u"&&document.currentScript?document.currentScript.src:void 0)||"/index.js",function(d){function g(){return Ct.buffer!=Nt&&rn(Ct.buffer),Mt}function $(){return Ct.buffer!=Nt&&rn(Ct.buffer),Vt}function j(){return Ct.buffer!=Nt&&rn(Ct.buffer),Gt}function _e(){return Ct.buffer!=Nt&&rn(Ct.buffer),Ft}function et(){return Ct.buffer!=Nt&&rn(Ct.buffer),jt}var _,b,tt;d=d||{},_||(_=d!==void 0?d:{}),_.ready=new Promise(function(gt,Tt){b=gt,tt=Tt});var nt,rt,st,ot,it,at,lt=Object.assign({},_),ut="./this.program",ct=(gt,Tt)=>{throw Tt},dt=typeof window=="object",pt=typeof importScripts=="function",ht=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string",ft=_.ENVIRONMENT_IS_PTHREAD||!1,yt="";function wt(gt){return _.locateFile?_.locateFile(gt,yt):yt+gt}if(ht){let gt;yt=pt?o(908).dirname(yt)+"/":"//",at=()=>{it||(ot=o(1384),it=o(908))},nt=function(Tt,$t){return at(),Tt=it.normalize(Tt),ot.readFileSync(Tt,$t?void 0:"utf8")},st=Tt=>((Tt=nt(Tt,!0)).buffer||(Tt=new Uint8Array(Tt)),Tt),rt=(Tt,$t,At)=>{at(),Tt=it.normalize(Tt),ot.readFile(Tt,function(Dt,Lt){Dt?At(Dt):$t(Lt.buffer)})},1<process.argv.length&&(ut=process.argv[1].replace(/\\/g,"/")),process.argv.slice(2),process.on("uncaughtException",function(Tt){if(!(Tt instanceof Wn))throw Tt}),process.on("unhandledRejection",function(Tt){throw Tt}),ct=(Tt,$t)=>{if(In())throw process.exitCode=Tt,$t;$t instanceof Wn||vt("exiting due to exception: "+$t),process.exit(Tt)},_.inspect=function(){return"[Emscripten Module object]"};try{gt=o(9925)}catch(Tt){throw console.error('The "worker_threads" module is not supported in this node.js build - perhaps a newer version is needed?'),Tt}o.g.Worker=gt.Worker}else(dt||pt)&&(pt?yt=self.location.href:typeof document<"u"&&document.currentScript&&(yt=document.currentScript.src),a&&(yt=a),yt=yt.indexOf("blob:")!==0?yt.substr(0,yt.replace(/[?#].*/,"").lastIndexOf("/")+1):"",ht||(nt=gt=>{var Tt=new XMLHttpRequest;return Tt.open("GET",gt,!1),Tt.send(null),Tt.responseText},pt&&(st=gt=>{var Tt=new XMLHttpRequest;return Tt.open("GET",gt,!1),Tt.responseType="arraybuffer",Tt.send(null),new Uint8Array(Tt.response)}),rt=(gt,Tt,$t)=>{var At=new XMLHttpRequest;At.open("GET",gt,!0),At.responseType="arraybuffer",At.onload=()=>{At.status==200||At.status==0&&At.response?Tt(At.response):$t()},At.onerror=$t,At.send(null)}));ht&&typeof performance>"u"&&(o.g.performance=o(6953).performance);var _t=console.log.bind(console),bt=console.warn.bind(console);ht&&(at(),_t=gt=>ot.writeSync(1,gt+`
`),bt=gt=>ot.writeSync(2,gt+`
`));var xt,mt=_.print||_t,vt=_.printErr||bt;Object.assign(_,lt),lt=null,_.thisProgram&&(ut=_.thisProgram),_.quit&&(ct=_.quit),_.wasmBinary&&(xt=_.wasmBinary);var Et=_.noExitRuntime||!1;typeof WebAssembly!="object"&&ln("no native wasm support detected");var Ct,kt,Nt,Mt,Vt,Gt,Ft,jt,qt=!1,Yt=typeof TextDecoder<"u"?new TextDecoder("utf8"):void 0;function Qt(gt,Tt,$t){var At=(Tt>>>=0)+$t;for($t=Tt;gt[$t]&&!($t>=At);)++$t;if(16<$t-Tt&&gt.buffer&&Yt)return Yt.decode(gt.buffer instanceof SharedArrayBuffer?gt.slice(Tt,$t):gt.subarray(Tt,$t));for(At="";Tt<$t;){var Dt=gt[Tt++];if(128&Dt){var Lt=63&gt[Tt++];if((224&Dt)==192)At+=String.fromCharCode((31&Dt)<<6|Lt);else{var Xt=63&gt[Tt++];65536>(Dt=(240&Dt)==224?(15&Dt)<<12|Lt<<6|Xt:(7&Dt)<<18|Lt<<12|Xt<<6|63&gt[Tt++])?At+=String.fromCharCode(Dt):(Dt-=65536,At+=String.fromCharCode(55296|Dt>>10,56320|1023&Dt))}}else At+=String.fromCharCode(Dt)}return At}function Zt(gt,Tt){return(gt>>>=0)?Qt($(),gt,Tt):""}function en(gt,Tt,$t,At){if(!(0<At))return 0;var Dt=$t>>>=0;At=$t+At-1;for(var Lt=0;Lt<gt.length;++Lt){var Xt=gt.charCodeAt(Lt);if(55296<=Xt&&57343>=Xt&&(Xt=65536+((1023&Xt)<<10)|1023&gt.charCodeAt(++Lt)),127>=Xt){if($t>=At)break;Tt[$t++>>>0]=Xt}else{if(2047>=Xt){if($t+1>=At)break;Tt[$t++>>>0]=192|Xt>>6}else{if(65535>=Xt){if($t+2>=At)break;Tt[$t++>>>0]=224|Xt>>12}else{if($t+3>=At)break;Tt[$t++>>>0]=240|Xt>>18,Tt[$t++>>>0]=128|Xt>>12&63}Tt[$t++>>>0]=128|Xt>>6&63}Tt[$t++>>>0]=128|63&Xt}}return Tt[$t>>>0]=0,$t-Dt}function on(gt){for(var Tt=0,$t=0;$t<gt.length;++$t){var At=gt.charCodeAt($t);127>=At?Tt++:2047>=At?Tt+=2:55296<=At&&57343>=At?(Tt+=4,++$t):Tt+=3}return Tt}function rn(gt){Nt=gt,_.HEAP8=Mt=new Int8Array(gt),_.HEAP16=new Int16Array(gt),_.HEAP32=Gt=new Int32Array(gt),_.HEAPU8=Vt=new Uint8Array(gt),_.HEAPU16=new Uint16Array(gt),_.HEAPU32=Ft=new Uint32Array(gt),_.HEAPF32=new Float32Array(gt),_.HEAPF64=jt=new Float64Array(gt)}ft&&(Nt=_.buffer);var sn=_.INITIAL_MEMORY||16777216;if(ft)Ct=_.wasmMemory,Nt=_.buffer;else if(_.wasmMemory)Ct=_.wasmMemory;else if(!((Ct=new WebAssembly.Memory({initial:sn/65536,maximum:65536,shared:!0})).buffer instanceof SharedArrayBuffer))throw vt("requested a shared WebAssembly.Memory but the returned buffer is not a SharedArrayBuffer, indicating that while the browser has SharedArrayBuffer it does not have WebAssembly threads support - you may need to set a flag"),ht&&console.log("(on node you may need: --experimental-wasm-threads --experimental-wasm-bulk-memory and also use a recent version)"),Error("bad memory");Ct&&(Nt=Ct.buffer),sn=Nt.byteLength,rn(Nt);var pn,dn=[],mn=[],Sn=[],Ln=[];function In(){return Et||!1}function On(){var gt=_.preRun.shift();dn.unshift(gt)}var xn,Dn=0,Mn=null;function ln(gt){throw ft?postMessage({cmd:"onAbort",arg:gt}):_.onAbort&&_.onAbort(gt),vt(gt="Aborted("+gt+")"),qt=!0,gt=new WebAssembly.RuntimeError(gt+". Build with -sASSERTIONS for more info."),tt(gt),gt}function qn(){return xn.startsWith("data:application/octet-stream;base64,")}function jn(){var gt=xn;try{if(gt==xn&&xt)return new Uint8Array(xt);if(st)return st(gt);throw"both async and sync fetching of the wasm failed"}catch(Tt){ln(Tt)}}xn="ort-wasm-threaded.wasm",qn()||(xn=wt(xn));var Xn={};function Wn(gt){this.name="ExitStatus",this.message="Program terminated with exit("+gt+")",this.status=gt}function rr(gt){(gt=an.Vb[gt])||ln(),an.mc(gt)}function or(gt){var Tt=an.Cc();if(!Tt)return 6;an.ac.push(Tt),an.Vb[gt.Ub]=Tt,Tt.Ub=gt.Ub;var $t={cmd:"run",start_routine:gt.Ic,arg:gt.zc,pthread_ptr:gt.Ub};return Tt.$b=()=>{$t.time=performance.now(),Tt.postMessage($t,gt.Nc)},Tt.loaded&&(Tt.$b(),delete Tt.$b),0}function zn(gt){if(ft)return Jt(1,1,gt);In()||(an.oc(),_.onExit&&_.onExit(gt),qt=!0),ct(gt,new Wn(gt))}function Qn(gt,Tt){if(!Tt&&ft)throw rs(gt),"unwind";In()||ft||(ws(),ir(Sn),vs(0),us[1].length&&cs(1,10),us[2].length&&cs(2,10),an.oc()),zn(gt)}var an={Yb:[],ac:[],qc:[],Vb:{},fc:function(){ft&&an.Ec()},Pc:function(){},Ec:function(){an.receiveObjectTransfer=an.Gc,an.threadInitTLS=an.pc,an.setExitStatus=an.nc,Et=!1},nc:function(){},oc:function(){for(var gt of Object.values(an.Vb))an.mc(gt);for(gt of an.Yb)gt.terminate();an.Yb=[]},mc:function(gt){var Tt=gt.Ub;delete an.Vb[Tt],an.Yb.push(gt),an.ac.splice(an.ac.indexOf(gt),1),gt.Ub=0,hs(Tt)},Gc:function(){},pc:function(){an.qc.forEach(gt=>gt())},Fc:function(gt,Tt){gt.onmessage=$t=>{var At=($t=$t.data).cmd;if(gt.Ub&&(an.Bc=gt.Ub),$t.targetThread&&$t.targetThread!=os()){var Dt=an.Vb[$t.Qc];Dt?Dt.postMessage($t,$t.transferList):vt('Internal error! Worker sent a message "'+At+'" to target pthread '+$t.targetThread+", but that thread no longer exists!")}else At==="processProxyingQueue"?Pt($t.queue):At==="spawnThread"?or($t):At==="cleanupThread"?rr($t.thread):At==="killThread"?($t=$t.thread,At=an.Vb[$t],delete an.Vb[$t],At.terminate(),hs($t),an.ac.splice(an.ac.indexOf(At),1),At.Ub=0):At==="cancelThread"?an.Vb[$t.thread].postMessage({cmd:"cancel"}):At==="loaded"?(gt.loaded=!0,Tt&&Tt(gt),gt.$b&&(gt.$b(),delete gt.$b)):At==="print"?mt("Thread "+$t.threadId+": "+$t.text):At==="printErr"?vt("Thread "+$t.threadId+": "+$t.text):At==="alert"?alert("Thread "+$t.threadId+": "+$t.text):$t.target==="setimmediate"?gt.postMessage($t):At==="onAbort"?_.onAbort&&_.onAbort($t.arg):At&&vt("worker sent an unknown command "+At);an.Bc=void 0},gt.onerror=$t=>{throw vt("worker sent an error! "+$t.filename+":"+$t.lineno+": "+$t.message),$t},ht&&(gt.on("message",function($t){gt.onmessage({data:$t})}),gt.on("error",function($t){gt.onerror($t)}),gt.on("detachedExit",function(){})),gt.postMessage({cmd:"load",urlOrBlob:_.mainScriptUrlOrBlob||a,wasmMemory:Ct,wasmModule:kt})},yc:function(){var gt=wt("ort-wasm-threaded.worker.js");an.Yb.push(new Worker(gt))},Cc:function(){return an.Yb.length==0&&(an.yc(),an.Fc(an.Yb[0])),an.Yb.pop()}};function ir(gt){for(;0<gt.length;)gt.shift()(_)}function ns(gt){var Tt=vn();return gt=gt(),yn(Tt),gt}function rs(gt){if(ft)return Jt(2,0,gt);try{Qn(gt)}catch(Tt){Tt instanceof Wn||Tt=="unwind"||ct(1,Tt)}}_.PThread=an,_.establishStackSpace=function(){var gt=os(),Tt=j()[gt+44>>2>>>0];gt=j()[gt+48>>2>>>0],Cs(Tt,Tt-gt),yn(Tt)};var dr=[];function $n(gt){var Tt=dr[gt];return Tt||(gt>=dr.length&&(dr.length=gt+1),dr[gt]=Tt=pn.get(gt)),Tt}_.invokeEntryPoint=function(gt,Tt){gt=$n(gt)(Tt),In()?an.nc(gt):Es(gt)};var wr,zr,_r=[],fn=0,un=0;function hn(gt){this.Zb=gt,this.Sb=gt-24,this.xc=function(Tt){_e()[this.Sb+4>>2>>>0]=Tt},this.bc=function(){return _e()[this.Sb+4>>2>>>0]},this.wc=function(Tt){_e()[this.Sb+8>>2>>>0]=Tt},this.Dc=function(){return _e()[this.Sb+8>>2>>>0]},this.rc=function(){j()[this.Sb>>2>>>0]=0},this.hc=function(Tt){Tt=Tt?1:0,g()[this.Sb+12>>0>>>0]=Tt},this.uc=function(){return g()[this.Sb+12>>0>>>0]!=0},this.ic=function(Tt){Tt=Tt?1:0,g()[this.Sb+13>>0>>>0]=Tt},this.kc=function(){return g()[this.Sb+13>>0>>>0]!=0},this.fc=function(Tt,$t){this.cc(0),this.xc(Tt),this.wc($t),this.rc(),this.hc(!1),this.ic(!1)},this.sc=function(){Atomics.add(j(),this.Sb>>2,1)},this.Hc=function(){return Atomics.sub(j(),this.Sb>>2,1)===1},this.cc=function(Tt){_e()[this.Sb+16>>2>>>0]=Tt},this.tc=function(){return _e()[this.Sb+16>>2>>>0]},this.vc=function(){if($s(this.bc()))return _e()[this.Zb>>2>>>0];var Tt=this.tc();return Tt!==0?Tt:this.Zb}}function Br(gt){return xs(new hn(gt).Sb)}function Tr(gt,Tt,$t,At){return ft?Jt(3,1,gt,Tt,$t,At):Vr(gt,Tt,$t,At)}function Vr(gt,Tt,$t,At){if(typeof SharedArrayBuffer>"u")return vt("Current environment does not support SharedArrayBuffer, pthreads are not available!"),6;var Dt=[];return ft&&Dt.length===0?Tr(gt,Tt,$t,At):(gt={Ic:$t,Ub:gt,zc:At,Nc:Dt},ft?(gt.Oc="spawnThread",postMessage(gt,Dt),0):or(gt))}function Ur(gt,Tt,$t){return ft?Jt(4,1,gt,Tt,$t):0}function Gr(gt,Tt){if(ft)return Jt(5,1,gt,Tt)}function jr(gt,Tt){if(ft)return Jt(6,1,gt,Tt)}function Wr(gt,Tt,$t){if(ft)return Jt(7,1,gt,Tt,$t)}function Hr(gt,Tt,$t){return ft?Jt(8,1,gt,Tt,$t):0}function Kr(gt,Tt){if(ft)return Jt(9,1,gt,Tt)}function Xr(gt,Tt,$t){if(ft)return Jt(10,1,gt,Tt,$t)}function Yr(gt,Tt,$t,At){if(ft)return Jt(11,1,gt,Tt,$t,At)}function Qr(gt,Tt,$t,At){if(ft)return Jt(12,1,gt,Tt,$t,At)}function Zr(gt,Tt,$t,At){if(ft)return Jt(13,1,gt,Tt,$t,At)}function Jr(gt){if(ft)return Jt(14,1,gt)}function St(gt,Tt){if(ft)return Jt(15,1,gt,Tt)}function It(gt,Tt,$t){if(ft)return Jt(16,1,gt,Tt,$t)}function Pt(gt){Atomics.store(j(),gt>>2,1),os()&&Ss(gt),Atomics.compareExchange(j(),gt>>2,1,0)}function Ot(gt){return _e()[gt>>>2]+4294967296*j()[gt+4>>>2]}function Rt(gt,Tt,$t,At,Dt,Lt){return ft?Jt(17,1,gt,Tt,$t,At,Dt,Lt):-52}function Ut(gt,Tt,$t,At,Dt,Lt){if(ft)return Jt(18,1,gt,Tt,$t,At,Dt,Lt)}function Kt(gt){var Tt=on(gt)+1,$t=ds(Tt);return $t&&en(gt,g(),$t,Tt),$t}function tn(gt,Tt,$t){function At(Tn){return(Tn=Tn.toTimeString().match(/\(([A-Za-z ]+)\)$/))?Tn[1]:"GMT"}if(ft)return Jt(19,1,gt,Tt,$t);var Dt=new Date().getFullYear(),Lt=new Date(Dt,0,1),Xt=new Date(Dt,6,1);Dt=Lt.getTimezoneOffset();var nn=Xt.getTimezoneOffset(),_n=Math.max(Dt,nn);j()[gt>>2>>>0]=60*_n,j()[Tt>>2>>>0]=+(Dt!=nn),gt=At(Lt),Tt=At(Xt),gt=Kt(gt),Tt=Kt(Tt),nn<Dt?(_e()[$t>>2>>>0]=gt,_e()[$t+4>>2>>>0]=Tt):(_e()[$t>>2>>>0]=Tt,_e()[$t+4>>2>>>0]=gt)}function Jt(gt,Tt){var $t=arguments.length-2,At=arguments;return ns(()=>{for(var Dt=ps(8*$t),Lt=Dt>>3,Xt=0;Xt<$t;Xt++){var nn=At[2+Xt];et()[Lt+Xt>>>0]=nn}return Ts(gt,$t,Dt,Tt)})}_.executeNotifiedProxyingQueue=Pt,zr=ht?()=>{var gt=process.hrtime();return 1e3*gt[0]+gt[1]/1e6}:ft?()=>performance.now()-_.__performance_now_clock_drift:()=>performance.now();var gn,An=[],Vn={};function Bn(){if(!gn){var gt,Tt={USER:"web_user",LOGNAME:"web_user",PATH:"/",PWD:"/",HOME:"/home/web_user",LANG:(typeof navigator=="object"&&navigator.languages&&navigator.languages[0]||"C").replace("-","_")+".UTF-8",_:ut||"./this.program"};for(gt in Vn)Vn[gt]===void 0?delete Tt[gt]:Tt[gt]=Vn[gt];var $t=[];for(gt in Tt)$t.push(gt+"="+Tt[gt]);gn=$t}return gn}function zt(gt,Tt){if(ft)return Jt(20,1,gt,Tt);var $t=0;return Bn().forEach(function(At,Dt){var Lt=Tt+$t;for(Dt=_e()[gt+4*Dt>>2>>>0]=Lt,Lt=0;Lt<At.length;++Lt)g()[Dt++>>0>>>0]=At.charCodeAt(Lt);g()[Dt>>0>>>0]=0,$t+=At.length+1}),0}function En(gt,Tt){if(ft)return Jt(21,1,gt,Tt);var $t=Bn();_e()[gt>>2>>>0]=$t.length;var At=0;return $t.forEach(function(Dt){At+=Dt.length+1}),_e()[Tt>>2>>>0]=At,0}function Nn(gt){return ft?Jt(22,1,gt):52}function Zn(gt,Tt,$t,At){return ft?Jt(23,1,gt,Tt,$t,At):52}function hr(gt,Tt,$t,At,Dt){return ft?Jt(24,1,gt,Tt,$t,At,Dt):70}var us=[null,[],[]];function cs(gt,Tt){var $t=us[gt];Tt===0||Tt===10?((gt===1?mt:vt)(Qt($t,0)),$t.length=0):$t.push(Tt)}function ms(gt,Tt,$t,At){if(ft)return Jt(25,1,gt,Tt,$t,At);for(var Dt=0,Lt=0;Lt<$t;Lt++){var Xt=_e()[Tt>>2>>>0],nn=_e()[Tt+4>>2>>>0];Tt+=8;for(var _n=0;_n<nn;_n++)cs(gt,$()[Xt+_n>>>0]);Dt+=nn}return _e()[At>>2>>>0]=Dt,0}var Kn=0;function ss(gt){return gt%4==0&&(gt%100!=0||gt%400==0)}var gs=[31,29,31,30,31,30,31,31,30,31,30,31],ys=[31,28,31,30,31,30,31,31,30,31,30,31];function bs(gt,Tt,$t,At){function Dt(Bt,Cn,Pn){for(Bt=typeof Bt=="number"?Bt.toString():Bt||"";Bt.length<Cn;)Bt=Pn[0]+Bt;return Bt}function Lt(Bt,Cn){return Dt(Bt,Cn,"0")}function Xt(Bt,Cn){function Pn(kr){return 0>kr?-1:0<kr?1:0}var pr;return(pr=Pn(Bt.getFullYear()-Cn.getFullYear()))===0&&(pr=Pn(Bt.getMonth()-Cn.getMonth()))===0&&(pr=Pn(Bt.getDate()-Cn.getDate())),pr}function nn(Bt){switch(Bt.getDay()){case 0:return new Date(Bt.getFullYear()-1,11,29);case 1:return Bt;case 2:return new Date(Bt.getFullYear(),0,3);case 3:return new Date(Bt.getFullYear(),0,2);case 4:return new Date(Bt.getFullYear(),0,1);case 5:return new Date(Bt.getFullYear()-1,11,31);case 6:return new Date(Bt.getFullYear()-1,11,30)}}function _n(Bt){var Cn=Bt.Wb;for(Bt=new Date(new Date(Bt.Xb+1900,0,1).getTime());0<Cn;){var Pn=Bt.getMonth(),pr=(ss(Bt.getFullYear())?gs:ys)[Pn];if(!(Cn>pr-Bt.getDate())){Bt.setDate(Bt.getDate()+Cn);break}Cn-=pr-Bt.getDate()+1,Bt.setDate(1),11>Pn?Bt.setMonth(Pn+1):(Bt.setMonth(0),Bt.setFullYear(Bt.getFullYear()+1))}return Pn=new Date(Bt.getFullYear()+1,0,4),Cn=nn(new Date(Bt.getFullYear(),0,4)),Pn=nn(Pn),0>=Xt(Cn,Bt)?0>=Xt(Pn,Bt)?Bt.getFullYear()+1:Bt.getFullYear():Bt.getFullYear()-1}var Tn=j()[At+40>>2>>>0];for(var Rn in At={Lc:j()[At>>2>>>0],Kc:j()[At+4>>2>>>0],dc:j()[At+8>>2>>>0],jc:j()[At+12>>2>>>0],ec:j()[At+16>>2>>>0],Xb:j()[At+20>>2>>>0],Tb:j()[At+24>>2>>>0],Wb:j()[At+28>>2>>>0],Rc:j()[At+32>>2>>>0],Jc:j()[At+36>>2>>>0],Mc:Tn?Zt(Tn):""},$t=Zt($t),Tn={"%c":"%a %b %d %H:%M:%S %Y","%D":"%m/%d/%y","%F":"%Y-%m-%d","%h":"%b","%r":"%I:%M:%S %p","%R":"%H:%M","%T":"%H:%M:%S","%x":"%m/%d/%y","%X":"%H:%M:%S","%Ec":"%c","%EC":"%C","%Ex":"%m/%d/%y","%EX":"%H:%M:%S","%Ey":"%y","%EY":"%Y","%Od":"%d","%Oe":"%e","%OH":"%H","%OI":"%I","%Om":"%m","%OM":"%M","%OS":"%S","%Ou":"%u","%OU":"%U","%OV":"%V","%Ow":"%w","%OW":"%W","%Oy":"%y"})$t=$t.replace(new RegExp(Rn,"g"),Tn[Rn]);var ar="Sunday Monday Tuesday Wednesday Thursday Friday Saturday".split(" "),Jn="January February March April May June July August September October November December".split(" ");for(Rn in Tn={"%a":function(Bt){return ar[Bt.Tb].substring(0,3)},"%A":function(Bt){return ar[Bt.Tb]},"%b":function(Bt){return Jn[Bt.ec].substring(0,3)},"%B":function(Bt){return Jn[Bt.ec]},"%C":function(Bt){return Lt((Bt.Xb+1900)/100|0,2)},"%d":function(Bt){return Lt(Bt.jc,2)},"%e":function(Bt){return Dt(Bt.jc,2," ")},"%g":function(Bt){return _n(Bt).toString().substring(2)},"%G":function(Bt){return _n(Bt)},"%H":function(Bt){return Lt(Bt.dc,2)},"%I":function(Bt){return(Bt=Bt.dc)==0?Bt=12:12<Bt&&(Bt-=12),Lt(Bt,2)},"%j":function(Bt){for(var Cn=0,Pn=0;Pn<=Bt.ec-1;Cn+=(ss(Bt.Xb+1900)?gs:ys)[Pn++]);return Lt(Bt.jc+Cn,3)},"%m":function(Bt){return Lt(Bt.ec+1,2)},"%M":function(Bt){return Lt(Bt.Kc,2)},"%n":function(){return`
`},"%p":function(Bt){return 0<=Bt.dc&&12>Bt.dc?"AM":"PM"},"%S":function(Bt){return Lt(Bt.Lc,2)},"%t":function(){return"	"},"%u":function(Bt){return Bt.Tb||7},"%U":function(Bt){return Lt(Math.floor((Bt.Wb+7-Bt.Tb)/7),2)},"%V":function(Bt){var Cn=Math.floor((Bt.Wb+7-(Bt.Tb+6)%7)/7);if(2>=(Bt.Tb+371-Bt.Wb-2)%7&&Cn++,Cn)Cn==53&&((Pn=(Bt.Tb+371-Bt.Wb)%7)==4||Pn==3&&ss(Bt.Xb)||(Cn=1));else{Cn=52;var Pn=(Bt.Tb+7-Bt.Wb-1)%7;(Pn==4||Pn==5&&ss(Bt.Xb%400-1))&&Cn++}return Lt(Cn,2)},"%w":function(Bt){return Bt.Tb},"%W":function(Bt){return Lt(Math.floor((Bt.Wb+7-(Bt.Tb+6)%7)/7),2)},"%y":function(Bt){return(Bt.Xb+1900).toString().substring(2)},"%Y":function(Bt){return Bt.Xb+1900},"%z":function(Bt){var Cn=0<=(Bt=Bt.Jc);return Bt=Math.abs(Bt)/60,(Cn?"+":"-")+("0000"+(Bt/60*100+Bt%60)).slice(-4)},"%Z":function(Bt){return Bt.Mc},"%%":function(){return"%"}},$t=$t.replace(/%%/g,"\0\0"),Tn)$t.includes(Rn)&&($t=$t.replace(new RegExp(Rn,"g"),Tn[Rn](At)));return Rn=function(Bt){var Cn=Array(on(Bt)+1);return en(Bt,Cn,0,Cn.length),Cn}($t=$t.replace(/\0\0/g,"%")),Rn.length>Tt?0:(function(Bt,Cn){g().set(Bt,Cn>>>0)}(Rn,gt),Rn.length-1)}an.fc();var Ys=[null,zn,rs,Tr,Ur,Gr,jr,Wr,Hr,Kr,Xr,Yr,Qr,Zr,Jr,St,It,Rt,Ut,tn,zt,En,Nn,Zn,hr,ms],Qs={b:function(gt){return ds(gt+24)+24},n:function(gt){return(gt=new hn(gt)).uc()||(gt.hc(!0),fn--),gt.ic(!1),_r.push(gt),gt.sc(),gt.vc()},ma:function(gt){throw vt("Unexpected exception thrown, this is not properly supported - aborting"),qt=!0,gt},x:function(){wn(0);var gt=_r.pop();if(gt.Hc()&&!gt.kc()){var Tt=gt.Dc();Tt&&$n(Tt)(gt.Zb),Br(gt.Zb)}un=0},e:function(){var gt=un;if(!gt)return Kn=0;var Tt=new hn(gt);Tt.cc(gt);var $t=Tt.bc();if(!$t)return Kn=0,gt;for(var At=Array.prototype.slice.call(arguments),Dt=0;Dt<At.length;Dt++){var Lt=At[Dt];if(Lt===0||Lt===$t)break;if(as(Lt,$t,Tt.Sb+16))return Kn=Lt,gt}return Kn=$t,gt},l:function(){var gt=un;if(!gt)return Kn=0;var Tt=new hn(gt);Tt.cc(gt);var $t=Tt.bc();if(!$t)return Kn=0,gt;for(var At=Array.prototype.slice.call(arguments),Dt=0;Dt<At.length;Dt++){var Lt=At[Dt];if(Lt===0||Lt===$t)break;if(as(Lt,$t,Tt.Sb+16))return Kn=Lt,gt}return Kn=$t,gt},h:function(){var gt=un;if(!gt)return Kn=0;var Tt=new hn(gt);Tt.cc(gt);var $t=Tt.bc();if(!$t)return Kn=0,gt;for(var At=Array.prototype.slice.call(arguments),Dt=0;Dt<At.length;Dt++){var Lt=At[Dt];if(Lt===0||Lt===$t)break;if(as(Lt,$t,Tt.Sb+16))return Kn=Lt,gt}return Kn=$t,gt},t:Br,M:function(){var gt=_r.pop();gt||ln("no exception to throw");var Tt=gt.Zb;throw gt.kc()||(_r.push(gt),gt.ic(!0),gt.hc(!1),fn++),un=Tt,Tt},c:function(gt,Tt,$t){throw new hn(gt).fc(Tt,$t),un=gt,fn++,gt},pa:function(){return fn},Fa:function(gt){_s(gt,!pt,1,!dt),an.pc()},T:function(gt){ft?postMessage({cmd:"cleanupThread",thread:gt}):rr(gt)},xa:Vr,j:function(gt){throw un||(un=gt),gt},H:Ur,Ma:Gr,ua:jr,wa:Wr,oa:Hr,Ka:Kr,Ca:Xr,Ja:Yr,V:Qr,va:Zr,sa:Jr,La:St,ta:It,Ta:function(){},X:function(){ln("To use dlopen, you need enable dynamic linking, see https://github.com/emscripten-core/emscripten/wiki/Linking")},Ua:function(){ln("To use dlopen, you need enable dynamic linking, see https://github.com/emscripten-core/emscripten/wiki/Linking")},W:function(){return Date.now()},ya:function(){return 2097152},Oa:function(){return!0},za:function(gt,Tt,$t,At){if(gt==Tt)setTimeout(()=>Pt(At));else if(ft)postMessage({targetThread:gt,cmd:"processProxyingQueue",queue:At});else{if(!(gt=an.Vb[gt]))return;gt.postMessage({cmd:"processProxyingQueue",queue:At})}return 1},Ea:function(){return-1},Pa:function(gt,Tt){gt=new Date(1e3*Ot(gt)),j()[Tt>>2>>>0]=gt.getUTCSeconds(),j()[Tt+4>>2>>>0]=gt.getUTCMinutes(),j()[Tt+8>>2>>>0]=gt.getUTCHours(),j()[Tt+12>>2>>>0]=gt.getUTCDate(),j()[Tt+16>>2>>>0]=gt.getUTCMonth(),j()[Tt+20>>2>>>0]=gt.getUTCFullYear()-1900,j()[Tt+24>>2>>>0]=gt.getUTCDay(),gt=(gt.getTime()-Date.UTC(gt.getUTCFullYear(),0,1,0,0,0,0))/864e5|0,j()[Tt+28>>2>>>0]=gt},Qa:function(gt,Tt){gt=new Date(1e3*Ot(gt)),j()[Tt>>2>>>0]=gt.getSeconds(),j()[Tt+4>>2>>>0]=gt.getMinutes(),j()[Tt+8>>2>>>0]=gt.getHours(),j()[Tt+12>>2>>>0]=gt.getDate(),j()[Tt+16>>2>>>0]=gt.getMonth(),j()[Tt+20>>2>>>0]=gt.getFullYear()-1900,j()[Tt+24>>2>>>0]=gt.getDay();var $t=new Date(gt.getFullYear(),0,1),At=(gt.getTime()-$t.getTime())/864e5|0;j()[Tt+28>>2>>>0]=At,j()[Tt+36>>2>>>0]=-60*gt.getTimezoneOffset(),At=new Date(gt.getFullYear(),6,1).getTimezoneOffset(),gt=0|(At!=($t=$t.getTimezoneOffset())&&gt.getTimezoneOffset()==Math.min($t,At)),j()[Tt+32>>2>>>0]=gt},Ra:function(gt){var Tt=new Date(j()[gt+20>>2>>>0]+1900,j()[gt+16>>2>>>0],j()[gt+12>>2>>>0],j()[gt+8>>2>>>0],j()[gt+4>>2>>>0],j()[gt>>2>>>0],0),$t=j()[gt+32>>2>>>0],At=Tt.getTimezoneOffset(),Dt=new Date(Tt.getFullYear(),0,1),Lt=new Date(Tt.getFullYear(),6,1).getTimezoneOffset(),Xt=Dt.getTimezoneOffset(),nn=Math.min(Xt,Lt);return 0>$t?j()[gt+32>>2>>>0]=+(Lt!=Xt&&nn==At):0<$t!=(nn==At)&&(Lt=Math.max(Xt,Lt),Tt.setTime(Tt.getTime()+6e4*((0<$t?nn:Lt)-At))),j()[gt+24>>2>>>0]=Tt.getDay(),$t=(Tt.getTime()-Dt.getTime())/864e5|0,j()[gt+28>>2>>>0]=$t,j()[gt>>2>>>0]=Tt.getSeconds(),j()[gt+4>>2>>>0]=Tt.getMinutes(),j()[gt+8>>2>>>0]=Tt.getHours(),j()[gt+12>>2>>>0]=Tt.getDate(),j()[gt+16>>2>>>0]=Tt.getMonth(),Tt.getTime()/1e3|0},Aa:Rt,Ba:Ut,Sa:function gt(Tt,$t,At){gt.Ac||(gt.Ac=!0,tn(Tt,$t,At))},y:function(){ln("")},U:function(){if(!ht&&!pt){var gt="Blocking on the main thread is very dangerous, see https://emscripten.org/docs/porting/pthreads.html#blocking-on-the-main-browser-thread";wr||(wr={}),wr[gt]||(wr[gt]=1,ht&&(gt="warning: "+gt),vt(gt))}},ra:function(){return 4294901760},B:zr,Ia:function(gt,Tt,$t){$().copyWithin(gt>>>0,Tt>>>0,Tt+$t>>>0)},F:function(){return ht?o(3993).cpus().length:navigator.hardwareConcurrency},Da:function(gt,Tt,$t){An.length=Tt,$t>>=3;for(var At=0;At<Tt;At++)An[At]=et()[$t+At>>>0];return(0>gt?Xn[-gt-1]:Ys[gt]).apply(null,An)},qa:function(gt){var Tt=$().length;if((gt>>>=0)<=Tt||4294901760<gt)return!1;for(var $t=1;4>=$t;$t*=2){var At=Tt*(1+.2/$t);At=Math.min(At,gt+100663296);var Dt=Math;At=Math.max(gt,At),Dt=Dt.min.call(Dt,4294901760,At+(65536-At%65536)%65536);e:{try{Ct.grow(Dt-Nt.byteLength+65535>>>16),rn(Ct.buffer);var Lt=1;break e}catch{}Lt=void 0}if(Lt)return!0}return!1},Na:function(){throw"unwind"},Ga:zt,Ha:En,J:Qn,I:Nn,S:Zn,ga:hr,R:ms,d:function(){return Kn},na:function gt(Tt,$t){gt.lc||(gt.lc=function(){if(typeof crypto=="object"&&typeof crypto.getRandomValues=="function"){var Dt=new Uint8Array(1);return()=>(crypto.getRandomValues(Dt),Dt[0])}if(ht)try{var Lt=o(Object(function(){var Xt=new Error("Cannot find module 'crypto'");throw Xt.code="MODULE_NOT_FOUND",Xt}()));return()=>Lt.randomBytes(1)[0]}catch{}return()=>ln("randomDevice")}());for(var At=0;At<$t;At++)g()[Tt+At>>0>>>0]=gt.lc();return 0},ia:function(gt,Tt,$t){var At=vn();try{return $n(gt)(Tt,$t)}catch(Dt){if(yn(At),Dt!==Dt+0)throw Dt;wn(1,0)}},ja:function(gt,Tt,$t){var At=vn();try{return $n(gt)(Tt,$t)}catch(Dt){if(yn(At),Dt!==Dt+0)throw Dt;wn(1,0)}},K:function(gt){var Tt=vn();try{return $n(gt)()}catch($t){if(yn(Tt),$t!==$t+0)throw $t;wn(1,0)}},f:function(gt,Tt){var $t=vn();try{return $n(gt)(Tt)}catch(At){if(yn($t),At!==At+0)throw At;wn(1,0)}},P:function(gt,Tt,$t){var At=vn();try{return $n(gt)(Tt,$t)}catch(Dt){if(yn(At),Dt!==Dt+0)throw Dt;wn(1,0)}},Q:function(gt,Tt,$t){var At=vn();try{return $n(gt)(Tt,$t)}catch(Dt){if(yn(At),Dt!==Dt+0)throw Dt;wn(1,0)}},k:function(gt,Tt,$t){var At=vn();try{return $n(gt)(Tt,$t)}catch(Dt){if(yn(At),Dt!==Dt+0)throw Dt;wn(1,0)}},p:function(gt,Tt,$t,At){var Dt=vn();try{return $n(gt)(Tt,$t,At)}catch(Lt){if(yn(Dt),Lt!==Lt+0)throw Lt;wn(1,0)}},q:function(gt,Tt,$t,At,Dt){var Lt=vn();try{return $n(gt)(Tt,$t,At,Dt)}catch(Xt){if(yn(Lt),Xt!==Xt+0)throw Xt;wn(1,0)}},N:function(gt,Tt,$t,At,Dt,Lt){var Xt=vn();try{return $n(gt)(Tt,$t,At,Dt,Lt)}catch(nn){if(yn(Xt),nn!==nn+0)throw nn;wn(1,0)}},s:function(gt,Tt,$t,At,Dt,Lt){var Xt=vn();try{return $n(gt)(Tt,$t,At,Dt,Lt)}catch(nn){if(yn(Xt),nn!==nn+0)throw nn;wn(1,0)}},w:function(gt,Tt,$t,At,Dt,Lt,Xt){var nn=vn();try{return $n(gt)(Tt,$t,At,Dt,Lt,Xt)}catch(_n){if(yn(nn),_n!==_n+0)throw _n;wn(1,0)}},L:function(gt,Tt,$t,At,Dt,Lt,Xt,nn){var _n=vn();try{return $n(gt)(Tt,$t,At,Dt,Lt,Xt,nn)}catch(Tn){if(yn(_n),Tn!==Tn+0)throw Tn;wn(1,0)}},E:function(gt,Tt,$t,At,Dt,Lt,Xt,nn,_n,Tn,Rn,ar){var Jn=vn();try{return $n(gt)(Tt,$t,At,Dt,Lt,Xt,nn,_n,Tn,Rn,ar)}catch(Bt){if(yn(Jn),Bt!==Bt+0)throw Bt;wn(1,0)}},aa:function(gt,Tt,$t,At,Dt,Lt,Xt,nn){var _n=vn();try{return Rs(gt,Tt,$t,At,Dt,Lt,Xt,nn)}catch(Tn){if(yn(_n),Tn!==Tn+0)throw Tn;wn(1,0)}},_:function(gt,Tt,$t,At,Dt,Lt,Xt){var nn=vn();try{return ks(gt,Tt,$t,At,Dt,Lt,Xt)}catch(_n){if(yn(nn),_n!==_n+0)throw _n;wn(1,0)}},Z:function(gt,Tt,$t,At,Dt){var Lt=vn();try{return Fs(gt,Tt,$t,At,Dt)}catch(Xt){if(yn(Lt),Xt!==Xt+0)throw Xt;wn(1,0)}},ca:function(gt,Tt,$t,At){var Dt=vn();try{return Ds(gt,Tt,$t,At)}catch(Lt){if(yn(Dt),Lt!==Lt+0)throw Lt;wn(1,0)}},$:function(gt){var Tt=vn();try{return Is(gt)}catch($t){if(yn(Tt),$t!==$t+0)throw $t;wn(1,0)}},ba:function(gt,Tt){var $t=vn();try{return Ms(gt,Tt)}catch(At){if(yn($t),At!==At+0)throw At;wn(1,0)}},Y:function(gt,Tt,$t){var At=vn();try{return As(gt,Tt,$t)}catch(Dt){if(yn(At),Dt!==Dt+0)throw Dt;wn(1,0)}},g:function(gt){var Tt=vn();try{$n(gt)()}catch($t){if(yn(Tt),$t!==$t+0)throw $t;wn(1,0)}},r:function(gt,Tt){var $t=vn();try{$n(gt)(Tt)}catch(At){if(yn($t),At!==At+0)throw At;wn(1,0)}},i:function(gt,Tt,$t){var At=vn();try{$n(gt)(Tt,$t)}catch(Dt){if(yn(At),Dt!==Dt+0)throw Dt;wn(1,0)}},ha:function(gt,Tt,$t,At){var Dt=vn();try{$n(gt)(Tt,$t,At)}catch(Lt){if(yn(Dt),Lt!==Lt+0)throw Lt;wn(1,0)}},m:function(gt,Tt,$t,At){var Dt=vn();try{$n(gt)(Tt,$t,At)}catch(Lt){if(yn(Dt),Lt!==Lt+0)throw Lt;wn(1,0)}},v:function(gt,Tt,$t,At,Dt){var Lt=vn();try{$n(gt)(Tt,$t,At,Dt)}catch(Xt){if(yn(Lt),Xt!==Xt+0)throw Xt;wn(1,0)}},u:function(gt,Tt,$t,At,Dt,Lt){var Xt=vn();try{$n(gt)(Tt,$t,At,Dt,Lt)}catch(nn){if(yn(Xt),nn!==nn+0)throw nn;wn(1,0)}},O:function(gt,Tt,$t,At,Dt,Lt,Xt){var nn=vn();try{$n(gt)(Tt,$t,At,Dt,Lt,Xt)}catch(_n){if(yn(nn),_n!==_n+0)throw _n;wn(1,0)}},A:function(gt,Tt,$t,At,Dt,Lt,Xt,nn){var _n=vn();try{$n(gt)(Tt,$t,At,Dt,Lt,Xt,nn)}catch(Tn){if(yn(_n),Tn!==Tn+0)throw Tn;wn(1,0)}},ka:function(gt,Tt,$t,At,Dt,Lt,Xt,nn,_n){var Tn=vn();try{$n(gt)(Tt,$t,At,Dt,Lt,Xt,nn,_n)}catch(Rn){if(yn(Tn),Rn!==Rn+0)throw Rn;wn(1,0)}},C:function(gt,Tt,$t,At,Dt,Lt,Xt,nn,_n,Tn,Rn){var ar=vn();try{$n(gt)(Tt,$t,At,Dt,Lt,Xt,nn,_n,Tn,Rn)}catch(Jn){if(yn(ar),Jn!==Jn+0)throw Jn;wn(1,0)}},D:function(gt,Tt,$t,At,Dt,Lt,Xt,nn,_n,Tn,Rn,ar,Jn,Bt,Cn,Pn){var pr=vn();try{$n(gt)(Tt,$t,At,Dt,Lt,Xt,nn,_n,Tn,Rn,ar,Jn,Bt,Cn,Pn)}catch(kr){if(yn(pr),kr!==kr+0)throw kr;wn(1,0)}},fa:function(gt,Tt,$t,At,Dt,Lt,Xt,nn){var _n=vn();try{Ns(gt,Tt,$t,At,Dt,Lt,Xt,nn)}catch(Tn){if(yn(_n),Tn!==Tn+0)throw Tn;wn(1,0)}},da:function(gt,Tt,$t,At,Dt,Lt,Xt,nn,_n,Tn,Rn,ar){var Jn=vn();try{Os(gt,Tt,$t,At,Dt,Lt,Xt,nn,_n,Tn,Rn,ar)}catch(Bt){if(yn(Jn),Bt!==Bt+0)throw Bt;wn(1,0)}},ea:function(gt,Tt,$t,At,Dt,Lt){var Xt=vn();try{Ps(gt,Tt,$t,At,Dt,Lt)}catch(nn){if(yn(Xt),nn!==nn+0)throw nn;wn(1,0)}},o:function(gt){return gt},a:Ct||_.wasmMemory,G:function(gt){Kn=gt},la:bs,z:function(gt,Tt,$t,At){return bs(gt,Tt,$t,At)}};(function(){function gt(Dt,Lt){_.asm=Dt.exports,an.qc.push(_.asm.sb),pn=_.asm.ub,mn.unshift(_.asm.Va),kt=Lt,ft||(Dn--,_.monitorRunDependencies&&_.monitorRunDependencies(Dn),Dn==0&&Mn&&(Dt=Mn,Mn=null,Dt()))}function Tt(Dt){gt(Dt.instance,Dt.module)}function $t(Dt){return function(){if(!xt&&(dt||pt)){if(typeof fetch=="function"&&!xn.startsWith("file://"))return fetch(xn,{credentials:"same-origin"}).then(function(Lt){if(!Lt.ok)throw"failed to load wasm binary file at '"+xn+"'";return Lt.arrayBuffer()}).catch(function(){return jn()});if(rt)return new Promise(function(Lt,Xt){rt(xn,function(nn){Lt(new Uint8Array(nn))},Xt)})}return Promise.resolve().then(function(){return jn()})}().then(function(Lt){return WebAssembly.instantiate(Lt,At)}).then(function(Lt){return Lt}).then(Dt,function(Lt){vt("failed to asynchronously prepare wasm: "+Lt),ln(Lt)})}var At={a:Qs};if(ft||(Dn++,_.monitorRunDependencies&&_.monitorRunDependencies(Dn)),_.instantiateWasm)try{return _.instantiateWasm(At,gt)}catch(Dt){return vt("Module.instantiateWasm callback failed with error: "+Dt),!1}(xt||typeof WebAssembly.instantiateStreaming!="function"||qn()||xn.startsWith("file://")||ht||typeof fetch!="function"?$t(Tt):fetch(xn,{credentials:"same-origin"}).then(function(Dt){return WebAssembly.instantiateStreaming(Dt,At).then(Tt,function(Lt){return vt("wasm streaming compile failed: "+Lt),vt("falling back to ArrayBuffer instantiation"),$t(Tt)})})).catch(tt)})(),_.___wasm_call_ctors=function(){return(_.___wasm_call_ctors=_.asm.Va).apply(null,arguments)},_._OrtInit=function(){return(_._OrtInit=_.asm.Wa).apply(null,arguments)},_._OrtCreateSessionOptions=function(){return(_._OrtCreateSessionOptions=_.asm.Xa).apply(null,arguments)},_._OrtAppendExecutionProvider=function(){return(_._OrtAppendExecutionProvider=_.asm.Ya).apply(null,arguments)},_._OrtAddSessionConfigEntry=function(){return(_._OrtAddSessionConfigEntry=_.asm.Za).apply(null,arguments)},_._OrtReleaseSessionOptions=function(){return(_._OrtReleaseSessionOptions=_.asm._a).apply(null,arguments)},_._OrtCreateSession=function(){return(_._OrtCreateSession=_.asm.$a).apply(null,arguments)},_._OrtReleaseSession=function(){return(_._OrtReleaseSession=_.asm.ab).apply(null,arguments)},_._OrtGetInputCount=function(){return(_._OrtGetInputCount=_.asm.bb).apply(null,arguments)},_._OrtGetOutputCount=function(){return(_._OrtGetOutputCount=_.asm.cb).apply(null,arguments)},_._OrtGetInputName=function(){return(_._OrtGetInputName=_.asm.db).apply(null,arguments)},_._OrtGetOutputName=function(){return(_._OrtGetOutputName=_.asm.eb).apply(null,arguments)},_._OrtFree=function(){return(_._OrtFree=_.asm.fb).apply(null,arguments)},_._OrtCreateTensor=function(){return(_._OrtCreateTensor=_.asm.gb).apply(null,arguments)},_._OrtGetTensorData=function(){return(_._OrtGetTensorData=_.asm.hb).apply(null,arguments)},_._OrtReleaseTensor=function(){return(_._OrtReleaseTensor=_.asm.ib).apply(null,arguments)},_._OrtCreateRunOptions=function(){return(_._OrtCreateRunOptions=_.asm.jb).apply(null,arguments)},_._OrtAddRunConfigEntry=function(){return(_._OrtAddRunConfigEntry=_.asm.kb).apply(null,arguments)},_._OrtReleaseRunOptions=function(){return(_._OrtReleaseRunOptions=_.asm.lb).apply(null,arguments)},_._OrtRun=function(){return(_._OrtRun=_.asm.mb).apply(null,arguments)},_._OrtEndProfiling=function(){return(_._OrtEndProfiling=_.asm.nb).apply(null,arguments)};var os=_._pthread_self=function(){return(os=_._pthread_self=_.asm.ob).apply(null,arguments)},ds=_._malloc=function(){return(ds=_._malloc=_.asm.pb).apply(null,arguments)},xs=_._free=function(){return(xs=_._free=_.asm.qb).apply(null,arguments)},vs=_._fflush=function(){return(vs=_._fflush=_.asm.rb).apply(null,arguments)};_.__emscripten_tls_init=function(){return(_.__emscripten_tls_init=_.asm.sb).apply(null,arguments)};var ws=_.___funcs_on_exit=function(){return(ws=_.___funcs_on_exit=_.asm.tb).apply(null,arguments)},_s=_.__emscripten_thread_init=function(){return(_s=_.__emscripten_thread_init=_.asm.vb).apply(null,arguments)};_.__emscripten_thread_crashed=function(){return(_.__emscripten_thread_crashed=_.asm.wb).apply(null,arguments)};var is,Ts=_._emscripten_run_in_main_runtime_thread_js=function(){return(Ts=_._emscripten_run_in_main_runtime_thread_js=_.asm.xb).apply(null,arguments)},Ss=_.__emscripten_proxy_execute_task_queue=function(){return(Ss=_.__emscripten_proxy_execute_task_queue=_.asm.yb).apply(null,arguments)},hs=_.__emscripten_thread_free_data=function(){return(hs=_.__emscripten_thread_free_data=_.asm.zb).apply(null,arguments)},Es=_.__emscripten_thread_exit=function(){return(Es=_.__emscripten_thread_exit=_.asm.Ab).apply(null,arguments)},wn=_._setThrew=function(){return(wn=_._setThrew=_.asm.Bb).apply(null,arguments)},Cs=_._emscripten_stack_set_limits=function(){return(Cs=_._emscripten_stack_set_limits=_.asm.Cb).apply(null,arguments)},vn=_.stackSave=function(){return(vn=_.stackSave=_.asm.Db).apply(null,arguments)},yn=_.stackRestore=function(){return(yn=_.stackRestore=_.asm.Eb).apply(null,arguments)},ps=_.stackAlloc=function(){return(ps=_.stackAlloc=_.asm.Fb).apply(null,arguments)},as=_.___cxa_can_catch=function(){return(as=_.___cxa_can_catch=_.asm.Gb).apply(null,arguments)},$s=_.___cxa_is_pointer_type=function(){return($s=_.___cxa_is_pointer_type=_.asm.Hb).apply(null,arguments)},Is=_.dynCall_j=function(){return(Is=_.dynCall_j=_.asm.Ib).apply(null,arguments)},ks=_.dynCall_iiiiij=function(){return(ks=_.dynCall_iiiiij=_.asm.Jb).apply(null,arguments)},As=_.dynCall_jii=function(){return(As=_.dynCall_jii=_.asm.Kb).apply(null,arguments)},Ns=_.dynCall_viiiiij=function(){return(Ns=_.dynCall_viiiiij=_.asm.Lb).apply(null,arguments)},Ps=_.dynCall_vjji=function(){return(Ps=_.dynCall_vjji=_.asm.Mb).apply(null,arguments)},Os=_.dynCall_viiijjjii=function(){return(Os=_.dynCall_viiijjjii=_.asm.Nb).apply(null,arguments)},Ds=_.dynCall_iij=function(){return(Ds=_.dynCall_iij=_.asm.Ob).apply(null,arguments)},Ms=_.dynCall_ji=function(){return(Ms=_.dynCall_ji=_.asm.Pb).apply(null,arguments)},Rs=_.dynCall_iiiiiij=function(){return(Rs=_.dynCall_iiiiiij=_.asm.Qb).apply(null,arguments)},Fs=_.dynCall_iiij=function(){return(Fs=_.dynCall_iiij=_.asm.Rb).apply(null,arguments)};function Ls(){function gt(){if(!is&&(is=!0,_.calledRun=!0,!qt)&&(ft||ir(mn),b(_),_.onRuntimeInitialized&&_.onRuntimeInitialized(),!ft)){if(_.postRun)for(typeof _.postRun=="function"&&(_.postRun=[_.postRun]);_.postRun.length;){var Tt=_.postRun.shift();Ln.unshift(Tt)}ir(Ln)}}if(!(0<Dn))if(ft)b(_),ft||ir(mn),postMessage({cmd:"loaded"});else{if(_.preRun)for(typeof _.preRun=="function"&&(_.preRun=[_.preRun]);_.preRun.length;)On();ir(dn),0<Dn||(_.setStatus?(_.setStatus("Running..."),setTimeout(function(){setTimeout(function(){_.setStatus("")},1),gt()},1)):gt())}}if(_.UTF8ToString=Zt,_.stringToUTF8=function(gt,Tt,$t){return en(gt,$(),Tt,$t)},_.lengthBytesUTF8=on,_.keepRuntimeAlive=In,_.wasmMemory=Ct,_.stackSave=vn,_.stackRestore=yn,_.stackAlloc=ps,_.ExitStatus=Wn,_.PThread=an,Mn=function gt(){is||Ls(),is||(Mn=gt)},_.preInit)for(typeof _.preInit=="function"&&(_.preInit=[_.preInit]);0<_.preInit.length;)_.preInit.pop()();return Ls(),d.ready});i.exports=c},932:(i,s,o)=>{var a,c=(a=(a=typeof document<"u"&&document.currentScript?document.currentScript.src:void 0)||"/index.js",function(d){var g,$,j;d=d||{},g||(g=d!==void 0?d:{}),g.ready=new Promise(function(St,It){$=St,j=It});var _e,et,_,b,tt,nt,rt=Object.assign({},g),st="./this.program",ot=(St,It)=>{throw It},it=typeof window=="object",at=typeof importScripts=="function",lt=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string",ut="";lt?(ut=at?o(908).dirname(ut)+"/":"//",nt=()=>{tt||(b=o(1384),tt=o(908))},_e=function(St,It){return nt(),St=tt.normalize(St),b.readFileSync(St,It?void 0:"utf8")},_=St=>((St=_e(St,!0)).buffer||(St=new Uint8Array(St)),St),et=(St,It,Pt)=>{nt(),St=tt.normalize(St),b.readFile(St,function(Ot,Rt){Ot?Pt(Ot):It(Rt.buffer)})},1<process.argv.length&&(st=process.argv[1].replace(/\\/g,"/")),process.argv.slice(2),process.on("uncaughtException",function(St){if(!(St instanceof mn))throw St}),process.on("unhandledRejection",function(St){throw St}),ot=(St,It)=>{if(ht||0<Yt)throw process.exitCode=St,It;It instanceof mn||pt("exiting due to exception: "+It),process.exit(St)},g.inspect=function(){return"[Emscripten Module object]"}):(it||at)&&(at?ut=self.location.href:typeof document<"u"&&document.currentScript&&(ut=document.currentScript.src),a&&(ut=a),ut=ut.indexOf("blob:")!==0?ut.substr(0,ut.replace(/[?#].*/,"").lastIndexOf("/")+1):"",_e=St=>{var It=new XMLHttpRequest;return It.open("GET",St,!1),It.send(null),It.responseText},at&&(_=St=>{var It=new XMLHttpRequest;return It.open("GET",St,!1),It.responseType="arraybuffer",It.send(null),new Uint8Array(It.response)}),et=(St,It,Pt)=>{var Ot=new XMLHttpRequest;Ot.open("GET",St,!0),Ot.responseType="arraybuffer",Ot.onload=()=>{Ot.status==200||Ot.status==0&&Ot.response?It(Ot.response):Pt()},Ot.onerror=Pt,Ot.send(null)});var ct,dt=g.print||console.log.bind(console),pt=g.printErr||console.warn.bind(console);Object.assign(g,rt),rt=null,g.thisProgram&&(st=g.thisProgram),g.quit&&(ot=g.quit),g.wasmBinary&&(ct=g.wasmBinary);var ht=g.noExitRuntime||!1;typeof WebAssembly!="object"&&rn("no native wasm support detected");var ft,yt,wt,_t,bt,xt,mt=!1,vt=typeof TextDecoder<"u"?new TextDecoder("utf8"):void 0;function Et(St,It,Pt){var Ot=(It>>>=0)+Pt;for(Pt=It;St[Pt]&&!(Pt>=Ot);)++Pt;if(16<Pt-It&&St.buffer&&vt)return vt.decode(St.subarray(It,Pt));for(Ot="";It<Pt;){var Rt=St[It++];if(128&Rt){var Ut=63&St[It++];if((224&Rt)==192)Ot+=String.fromCharCode((31&Rt)<<6|Ut);else{var Kt=63&St[It++];65536>(Rt=(240&Rt)==224?(15&Rt)<<12|Ut<<6|Kt:(7&Rt)<<18|Ut<<12|Kt<<6|63&St[It++])?Ot+=String.fromCharCode(Rt):(Rt-=65536,Ot+=String.fromCharCode(55296|Rt>>10,56320|1023&Rt))}}else Ot+=String.fromCharCode(Rt)}return Ot}function Ct(St,It){return(St>>>=0)?Et(_t,St,It):""}function kt(St,It,Pt,Ot){if(!(0<Ot))return 0;var Rt=Pt>>>=0;Ot=Pt+Ot-1;for(var Ut=0;Ut<St.length;++Ut){var Kt=St.charCodeAt(Ut);if(55296<=Kt&&57343>=Kt&&(Kt=65536+((1023&Kt)<<10)|1023&St.charCodeAt(++Ut)),127>=Kt){if(Pt>=Ot)break;It[Pt++>>>0]=Kt}else{if(2047>=Kt){if(Pt+1>=Ot)break;It[Pt++>>>0]=192|Kt>>6}else{if(65535>=Kt){if(Pt+2>=Ot)break;It[Pt++>>>0]=224|Kt>>12}else{if(Pt+3>=Ot)break;It[Pt++>>>0]=240|Kt>>18,It[Pt++>>>0]=128|Kt>>12&63}It[Pt++>>>0]=128|Kt>>6&63}It[Pt++>>>0]=128|63&Kt}}return It[Pt>>>0]=0,Pt-Rt}function Nt(St){for(var It=0,Pt=0;Pt<St.length;++Pt){var Ot=St.charCodeAt(Pt);127>=Ot?It++:2047>=Ot?It+=2:55296<=Ot&&57343>=Ot?(It+=4,++Pt):It+=3}return It}function Mt(){var St=ft.buffer;yt=St,g.HEAP8=wt=new Int8Array(St),g.HEAP16=new Int16Array(St),g.HEAP32=bt=new Int32Array(St),g.HEAPU8=_t=new Uint8Array(St),g.HEAPU16=new Uint16Array(St),g.HEAPU32=xt=new Uint32Array(St),g.HEAPF32=new Float32Array(St),g.HEAPF64=new Float64Array(St)}var Vt,Gt=[],Ft=[],jt=[],qt=[],Yt=0;function Qt(){var St=g.preRun.shift();Gt.unshift(St)}var Zt,en=0,on=null;function rn(St){throw g.onAbort&&g.onAbort(St),pt(St="Aborted("+St+")"),mt=!0,St=new WebAssembly.RuntimeError(St+". Build with -sASSERTIONS for more info."),j(St),St}function sn(){return Zt.startsWith("data:application/octet-stream;base64,")}if(Zt="ort-wasm.wasm",!sn()){var pn=Zt;Zt=g.locateFile?g.locateFile(pn,ut):ut+pn}function dn(){var St=Zt;try{if(St==Zt&&ct)return new Uint8Array(ct);if(_)return _(St);throw"both async and sync fetching of the wasm failed"}catch(It){rn(It)}}function mn(St){this.name="ExitStatus",this.message="Program terminated with exit("+St+")",this.status=St}function Sn(St){for(;0<St.length;)St.shift()(g)}var Ln=[],In=0,On=0;function xn(St){this.Db=St,this.zb=St-24,this.Ub=function(It){xt[this.zb+4>>2>>>0]=It},this.Eb=function(){return xt[this.zb+4>>2>>>0]},this.Sb=function(It){xt[this.zb+8>>2>>>0]=It},this.Wb=function(){return xt[this.zb+8>>2>>>0]},this.Tb=function(){bt[this.zb>>2>>>0]=0},this.Ib=function(It){wt[this.zb+12>>0>>>0]=It?1:0},this.Pb=function(){return wt[this.zb+12>>0>>>0]!=0},this.Jb=function(It){wt[this.zb+13>>0>>>0]=It?1:0},this.Lb=function(){return wt[this.zb+13>>0>>>0]!=0},this.Rb=function(It,Pt){this.Fb(0),this.Ub(It),this.Sb(Pt),this.Tb(),this.Ib(!1),this.Jb(!1)},this.Nb=function(){bt[this.zb>>2>>>0]+=1},this.Xb=function(){var It=bt[this.zb>>2>>>0];return bt[this.zb>>2>>>0]=It-1,It===1},this.Fb=function(It){xt[this.zb+16>>2>>>0]=It},this.Ob=function(){return xt[this.zb+16>>2>>>0]},this.Qb=function(){if(Vr(this.Eb()))return xt[this.Db>>2>>>0];var It=this.Ob();return It!==0?It:this.Db}}function Dn(St){return wr(new xn(St).zb)}var Mn=[];function ln(St){var It=Mn[St];return It||(St>=Mn.length&&(Mn.length=St+1),Mn[St]=It=Vt.get(St)),It}function qn(St){var It=Nt(St)+1,Pt=$n(It);return Pt&&kt(St,wt,Pt,It),Pt}var jn={};function Xn(){if(!Wn){var St,It={USER:"web_user",LOGNAME:"web_user",PATH:"/",PWD:"/",HOME:"/home/web_user",LANG:(typeof navigator=="object"&&navigator.languages&&navigator.languages[0]||"C").replace("-","_")+".UTF-8",_:st||"./this.program"};for(St in jn)jn[St]===void 0?delete It[St]:It[St]=jn[St];var Pt=[];for(St in It)Pt.push(St+"="+It[St]);Wn=Pt}return Wn}var Wn,rr=[null,[],[]];function or(St,It){var Pt=rr[St];It===0||It===10?((St===1?dt:pt)(Et(Pt,0)),Pt.length=0):Pt.push(It)}var zn=0;function Qn(St){return St%4==0&&(St%100!=0||St%400==0)}var an=[31,29,31,30,31,30,31,31,30,31,30,31],ir=[31,28,31,30,31,30,31,31,30,31,30,31];function ns(St,It,Pt,Ot){function Rt(zt,En,Nn){for(zt=typeof zt=="number"?zt.toString():zt||"";zt.length<En;)zt=Nn[0]+zt;return zt}function Ut(zt,En){return Rt(zt,En,"0")}function Kt(zt,En){function Nn(hr){return 0>hr?-1:0<hr?1:0}var Zn;return(Zn=Nn(zt.getFullYear()-En.getFullYear()))===0&&(Zn=Nn(zt.getMonth()-En.getMonth()))===0&&(Zn=Nn(zt.getDate()-En.getDate())),Zn}function tn(zt){switch(zt.getDay()){case 0:return new Date(zt.getFullYear()-1,11,29);case 1:return zt;case 2:return new Date(zt.getFullYear(),0,3);case 3:return new Date(zt.getFullYear(),0,2);case 4:return new Date(zt.getFullYear(),0,1);case 5:return new Date(zt.getFullYear()-1,11,31);case 6:return new Date(zt.getFullYear()-1,11,30)}}function Jt(zt){var En=zt.Bb;for(zt=new Date(new Date(zt.Cb+1900,0,1).getTime());0<En;){var Nn=zt.getMonth(),Zn=(Qn(zt.getFullYear())?an:ir)[Nn];if(!(En>Zn-zt.getDate())){zt.setDate(zt.getDate()+En);break}En-=Zn-zt.getDate()+1,zt.setDate(1),11>Nn?zt.setMonth(Nn+1):(zt.setMonth(0),zt.setFullYear(zt.getFullYear()+1))}return Nn=new Date(zt.getFullYear()+1,0,4),En=tn(new Date(zt.getFullYear(),0,4)),Nn=tn(Nn),0>=Kt(En,zt)?0>=Kt(Nn,zt)?zt.getFullYear()+1:zt.getFullYear():zt.getFullYear()-1}var gn=bt[Ot+40>>2>>>0];for(var An in Ot={$b:bt[Ot>>2>>>0],Zb:bt[Ot+4>>2>>>0],Gb:bt[Ot+8>>2>>>0],Kb:bt[Ot+12>>2>>>0],Hb:bt[Ot+16>>2>>>0],Cb:bt[Ot+20>>2>>>0],Ab:bt[Ot+24>>2>>>0],Bb:bt[Ot+28>>2>>>0],bc:bt[Ot+32>>2>>>0],Yb:bt[Ot+36>>2>>>0],ac:gn?Ct(gn):""},Pt=Ct(Pt),gn={"%c":"%a %b %d %H:%M:%S %Y","%D":"%m/%d/%y","%F":"%Y-%m-%d","%h":"%b","%r":"%I:%M:%S %p","%R":"%H:%M","%T":"%H:%M:%S","%x":"%m/%d/%y","%X":"%H:%M:%S","%Ec":"%c","%EC":"%C","%Ex":"%m/%d/%y","%EX":"%H:%M:%S","%Ey":"%y","%EY":"%Y","%Od":"%d","%Oe":"%e","%OH":"%H","%OI":"%I","%Om":"%m","%OM":"%M","%OS":"%S","%Ou":"%u","%OU":"%U","%OV":"%V","%Ow":"%w","%OW":"%W","%Oy":"%y"})Pt=Pt.replace(new RegExp(An,"g"),gn[An]);var Vn="Sunday Monday Tuesday Wednesday Thursday Friday Saturday".split(" "),Bn="January February March April May June July August September October November December".split(" ");for(An in gn={"%a":function(zt){return Vn[zt.Ab].substring(0,3)},"%A":function(zt){return Vn[zt.Ab]},"%b":function(zt){return Bn[zt.Hb].substring(0,3)},"%B":function(zt){return Bn[zt.Hb]},"%C":function(zt){return Ut((zt.Cb+1900)/100|0,2)},"%d":function(zt){return Ut(zt.Kb,2)},"%e":function(zt){return Rt(zt.Kb,2," ")},"%g":function(zt){return Jt(zt).toString().substring(2)},"%G":function(zt){return Jt(zt)},"%H":function(zt){return Ut(zt.Gb,2)},"%I":function(zt){return(zt=zt.Gb)==0?zt=12:12<zt&&(zt-=12),Ut(zt,2)},"%j":function(zt){for(var En=0,Nn=0;Nn<=zt.Hb-1;En+=(Qn(zt.Cb+1900)?an:ir)[Nn++]);return Ut(zt.Kb+En,3)},"%m":function(zt){return Ut(zt.Hb+1,2)},"%M":function(zt){return Ut(zt.Zb,2)},"%n":function(){return`
`},"%p":function(zt){return 0<=zt.Gb&&12>zt.Gb?"AM":"PM"},"%S":function(zt){return Ut(zt.$b,2)},"%t":function(){return"	"},"%u":function(zt){return zt.Ab||7},"%U":function(zt){return Ut(Math.floor((zt.Bb+7-zt.Ab)/7),2)},"%V":function(zt){var En=Math.floor((zt.Bb+7-(zt.Ab+6)%7)/7);if(2>=(zt.Ab+371-zt.Bb-2)%7&&En++,En)En==53&&((Nn=(zt.Ab+371-zt.Bb)%7)==4||Nn==3&&Qn(zt.Cb)||(En=1));else{En=52;var Nn=(zt.Ab+7-zt.Bb-1)%7;(Nn==4||Nn==5&&Qn(zt.Cb%400-1))&&En++}return Ut(En,2)},"%w":function(zt){return zt.Ab},"%W":function(zt){return Ut(Math.floor((zt.Bb+7-(zt.Ab+6)%7)/7),2)},"%y":function(zt){return(zt.Cb+1900).toString().substring(2)},"%Y":function(zt){return zt.Cb+1900},"%z":function(zt){var En=0<=(zt=zt.Yb);return zt=Math.abs(zt)/60,(En?"+":"-")+("0000"+(zt/60*100+zt%60)).slice(-4)},"%Z":function(zt){return zt.ac},"%%":function(){return"%"}},Pt=Pt.replace(/%%/g,"\0\0"),gn)Pt.includes(An)&&(Pt=Pt.replace(new RegExp(An,"g"),gn[An](Ot)));return An=function(zt){var En=Array(Nt(zt)+1);return kt(zt,En,0,En.length),En}(Pt=Pt.replace(/\0\0/g,"%")),An.length>It?0:(wt.set(An,St>>>0),An.length-1)}var rs={a:function(St){return $n(St+24)+24},m:function(St){return(St=new xn(St)).Pb()||(St.Ib(!0),In--),St.Jb(!1),Ln.push(St),St.Nb(),St.Qb()},ia:function(St){throw pt("Unexpected exception thrown, this is not properly supported - aborting"),mt=!0,St},w:function(){fn(0);var St=Ln.pop();if(St.Xb()&&!St.Lb()){var It=St.Wb();It&&ln(It)(St.Db),Dn(St.Db)}On=0},d:function(){var St=On;if(!St)return zn=0;var It=new xn(St);It.Fb(St);var Pt=It.Eb();if(!Pt)return zn=0,St;for(var Ot=Array.prototype.slice.call(arguments),Rt=0;Rt<Ot.length;Rt++){var Ut=Ot[Rt];if(Ut===0||Ut===Pt)break;if(Tr(Ut,Pt,It.zb+16))return zn=Ut,St}return zn=Pt,St},k:function(){var St=On;if(!St)return zn=0;var It=new xn(St);It.Fb(St);var Pt=It.Eb();if(!Pt)return zn=0,St;for(var Ot=Array.prototype.slice.call(arguments),Rt=0;Rt<Ot.length;Rt++){var Ut=Ot[Rt];if(Ut===0||Ut===Pt)break;if(Tr(Ut,Pt,It.zb+16))return zn=Ut,St}return zn=Pt,St},g:function(){var St=On;if(!St)return zn=0;var It=new xn(St);It.Fb(St);var Pt=It.Eb();if(!Pt)return zn=0,St;for(var Ot=Array.prototype.slice.call(arguments),Rt=0;Rt<Ot.length;Rt++){var Ut=Ot[Rt];if(Ut===0||Ut===Pt)break;if(Tr(Ut,Pt,It.zb+16))return zn=Ut,St}return zn=Pt,St},s:Dn,L:function(){var St=Ln.pop();St||rn("no exception to throw");var It=St.Db;throw St.Lb()||(Ln.push(St),St.Jb(!0),St.Ib(!1),In++),On=It,It},b:function(St,It,Pt){throw new xn(St).Rb(It,Pt),On=St,In++,St},la:function(){return In},i:function(St){throw On||(On=St),St},H:function(){return 0},Ba:function(){},pa:function(){},ra:function(){},ka:function(){return 0},za:function(){},ua:function(){},ya:function(){},R:function(){},qa:function(){},na:function(){},Aa:function(){},oa:function(){},Ha:function(){},Ja:function(){rn("To use dlopen, you need enable dynamic linking, see https://github.com/emscripten-core/emscripten/wiki/Linking")},Ia:function(){rn("To use dlopen, you need enable dynamic linking, see https://github.com/emscripten-core/emscripten/wiki/Linking")},S:function(){return Date.now()},Ca:function(){return!0},Da:function(St,It){St=new Date(1e3*(xt[St>>>2]+4294967296*bt[St+4>>>2])),bt[It>>2>>>0]=St.getUTCSeconds(),bt[It+4>>2>>>0]=St.getUTCMinutes(),bt[It+8>>2>>>0]=St.getUTCHours(),bt[It+12>>2>>>0]=St.getUTCDate(),bt[It+16>>2>>>0]=St.getUTCMonth(),bt[It+20>>2>>>0]=St.getUTCFullYear()-1900,bt[It+24>>2>>>0]=St.getUTCDay(),bt[It+28>>2>>>0]=(St.getTime()-Date.UTC(St.getUTCFullYear(),0,1,0,0,0,0))/864e5|0},Ea:function(St,It){St=new Date(1e3*(xt[St>>>2]+4294967296*bt[St+4>>>2])),bt[It>>2>>>0]=St.getSeconds(),bt[It+4>>2>>>0]=St.getMinutes(),bt[It+8>>2>>>0]=St.getHours(),bt[It+12>>2>>>0]=St.getDate(),bt[It+16>>2>>>0]=St.getMonth(),bt[It+20>>2>>>0]=St.getFullYear()-1900,bt[It+24>>2>>>0]=St.getDay();var Pt=new Date(St.getFullYear(),0,1);bt[It+28>>2>>>0]=(St.getTime()-Pt.getTime())/864e5|0,bt[It+36>>2>>>0]=-60*St.getTimezoneOffset();var Ot=new Date(St.getFullYear(),6,1).getTimezoneOffset();Pt=Pt.getTimezoneOffset(),bt[It+32>>2>>>0]=0|(Ot!=Pt&&St.getTimezoneOffset()==Math.min(Pt,Ot))},Fa:function(St){var It=new Date(bt[St+20>>2>>>0]+1900,bt[St+16>>2>>>0],bt[St+12>>2>>>0],bt[St+8>>2>>>0],bt[St+4>>2>>>0],bt[St>>2>>>0],0),Pt=bt[St+32>>2>>>0],Ot=It.getTimezoneOffset(),Rt=new Date(It.getFullYear(),0,1),Ut=new Date(It.getFullYear(),6,1).getTimezoneOffset(),Kt=Rt.getTimezoneOffset(),tn=Math.min(Kt,Ut);return 0>Pt?bt[St+32>>2>>>0]=+(Ut!=Kt&&tn==Ot):0<Pt!=(tn==Ot)&&(Ut=Math.max(Kt,Ut),It.setTime(It.getTime()+6e4*((0<Pt?tn:Ut)-Ot))),bt[St+24>>2>>>0]=It.getDay(),bt[St+28>>2>>>0]=(It.getTime()-Rt.getTime())/864e5|0,bt[St>>2>>>0]=It.getSeconds(),bt[St+4>>2>>>0]=It.getMinutes(),bt[St+8>>2>>>0]=It.getHours(),bt[St+12>>2>>>0]=It.getDate(),bt[St+16>>2>>>0]=It.getMonth(),It.getTime()/1e3|0},sa:function(){return-52},ta:function(){},Ga:function St(It,Pt,Ot){St.Vb||(St.Vb=!0,function(Rt,Ut,Kt){function tn(Bn){return(Bn=Bn.toTimeString().match(/\(([A-Za-z ]+)\)$/))?Bn[1]:"GMT"}var Jt=new Date().getFullYear(),gn=new Date(Jt,0,1),An=new Date(Jt,6,1);Jt=gn.getTimezoneOffset();var Vn=An.getTimezoneOffset();bt[Rt>>2>>>0]=60*Math.max(Jt,Vn),bt[Ut>>2>>>0]=+(Jt!=Vn),Rt=tn(gn),Ut=tn(An),Rt=qn(Rt),Ut=qn(Ut),Vn<Jt?(xt[Kt>>2>>>0]=Rt,xt[Kt+4>>2>>>0]=Ut):(xt[Kt>>2>>>0]=Ut,xt[Kt+4>>2>>>0]=Rt)}(It,Pt,Ot))},B:function(){rn("")},ma:function(){return 4294901760},I:lt?()=>{var St=process.hrtime();return 1e3*St[0]+St[1]/1e6}:()=>performance.now(),xa:function(St,It,Pt){_t.copyWithin(St>>>0,It>>>0,It+Pt>>>0)},G:function(St){var It=_t.length;if(4294901760<(St>>>=0))return!1;for(var Pt=1;4>=Pt;Pt*=2){var Ot=It*(1+.2/Pt);Ot=Math.min(Ot,St+100663296);var Rt=Math;Ot=Math.max(St,Ot),Rt=Rt.min.call(Rt,4294901760,Ot+(65536-Ot%65536)%65536);e:{try{ft.grow(Rt-yt.byteLength+65535>>>16),Mt();var Ut=1;break e}catch{}Ut=void 0}if(Ut)return!0}return!1},va:function(St,It){var Pt=0;return Xn().forEach(function(Ot,Rt){var Ut=It+Pt;for(Rt=xt[St+4*Rt>>2>>>0]=Ut,Ut=0;Ut<Ot.length;++Ut)wt[Rt++>>0>>>0]=Ot.charCodeAt(Ut);wt[Rt>>0>>>0]=0,Pt+=Ot.length+1}),0},wa:function(St,It){var Pt=Xn();xt[St>>2>>>0]=Pt.length;var Ot=0;return Pt.forEach(function(Rt){Ot+=Rt.length+1}),xt[It>>2>>>0]=Ot,0},ba:function(St){ht||0<Yt||(_r(),Sn(jt),zr(0),rr[1].length&&or(1,10),rr[2].length&&or(2,10)),ht||0<Yt||(g.onExit&&g.onExit(St),mt=!0),ot(St,new mn(St))},E:function(){return 52},Q:function(){return 52},ca:function(){return 70},P:function(St,It,Pt,Ot){for(var Rt=0,Ut=0;Ut<Pt;Ut++){var Kt=xt[It>>2>>>0],tn=xt[It+4>>2>>>0];It+=8;for(var Jt=0;Jt<tn;Jt++)or(St,_t[Kt+Jt>>>0]);Rt+=tn}return xt[Ot>>2>>>0]=Rt,0},c:function(){return zn},ja:function St(It,Pt){St.Mb||(St.Mb=function(){if(typeof crypto=="object"&&typeof crypto.getRandomValues=="function"){var Rt=new Uint8Array(1);return()=>(crypto.getRandomValues(Rt),Rt[0])}if(lt)try{var Ut=o(Object(function(){var Kt=new Error("Cannot find module 'crypto'");throw Kt.code="MODULE_NOT_FOUND",Kt}()));return()=>Ut.randomBytes(1)[0]}catch{}return()=>rn("randomDevice")}());for(var Ot=0;Ot<Pt;Ot++)wt[It+Ot>>0>>>0]=St.Mb();return 0},ea:function(St,It,Pt){var Ot=un();try{return ln(St)(It,Pt)}catch(Rt){if(hn(Ot),Rt!==Rt+0)throw Rt;fn(1,0)}},fa:function(St,It,Pt){var Ot=un();try{return ln(St)(It,Pt)}catch(Rt){if(hn(Ot),Rt!==Rt+0)throw Rt;fn(1,0)}},J:function(St){var It=un();try{return ln(St)()}catch(Pt){if(hn(It),Pt!==Pt+0)throw Pt;fn(1,0)}},e:function(St,It){var Pt=un();try{return ln(St)(It)}catch(Ot){if(hn(Pt),Ot!==Ot+0)throw Ot;fn(1,0)}},N:function(St,It,Pt){var Ot=un();try{return ln(St)(It,Pt)}catch(Rt){if(hn(Ot),Rt!==Rt+0)throw Rt;fn(1,0)}},O:function(St,It,Pt){var Ot=un();try{return ln(St)(It,Pt)}catch(Rt){if(hn(Ot),Rt!==Rt+0)throw Rt;fn(1,0)}},j:function(St,It,Pt){var Ot=un();try{return ln(St)(It,Pt)}catch(Rt){if(hn(Ot),Rt!==Rt+0)throw Rt;fn(1,0)}},o:function(St,It,Pt,Ot){var Rt=un();try{return ln(St)(It,Pt,Ot)}catch(Ut){if(hn(Rt),Ut!==Ut+0)throw Ut;fn(1,0)}},p:function(St,It,Pt,Ot,Rt){var Ut=un();try{return ln(St)(It,Pt,Ot,Rt)}catch(Kt){if(hn(Ut),Kt!==Kt+0)throw Kt;fn(1,0)}},M:function(St,It,Pt,Ot,Rt,Ut){var Kt=un();try{return ln(St)(It,Pt,Ot,Rt,Ut)}catch(tn){if(hn(Kt),tn!==tn+0)throw tn;fn(1,0)}},r:function(St,It,Pt,Ot,Rt,Ut){var Kt=un();try{return ln(St)(It,Pt,Ot,Rt,Ut)}catch(tn){if(hn(Kt),tn!==tn+0)throw tn;fn(1,0)}},v:function(St,It,Pt,Ot,Rt,Ut,Kt){var tn=un();try{return ln(St)(It,Pt,Ot,Rt,Ut,Kt)}catch(Jt){if(hn(tn),Jt!==Jt+0)throw Jt;fn(1,0)}},K:function(St,It,Pt,Ot,Rt,Ut,Kt,tn){var Jt=un();try{return ln(St)(It,Pt,Ot,Rt,Ut,Kt,tn)}catch(gn){if(hn(Jt),gn!==gn+0)throw gn;fn(1,0)}},D:function(St,It,Pt,Ot,Rt,Ut,Kt,tn,Jt,gn,An,Vn){var Bn=un();try{return ln(St)(It,Pt,Ot,Rt,Ut,Kt,tn,Jt,gn,An,Vn)}catch(zt){if(hn(Bn),zt!==zt+0)throw zt;fn(1,0)}},X:function(St,It,Pt,Ot,Rt,Ut,Kt,tn){var Jt=un();try{return Qr(St,It,Pt,Ot,Rt,Ut,Kt,tn)}catch(gn){if(hn(Jt),gn!==gn+0)throw gn;fn(1,0)}},V:function(St,It,Pt,Ot,Rt,Ut,Kt){var tn=un();try{return Gr(St,It,Pt,Ot,Rt,Ut,Kt)}catch(Jt){if(hn(tn),Jt!==Jt+0)throw Jt;fn(1,0)}},U:function(St,It,Pt,Ot,Rt){var Ut=un();try{return Zr(St,It,Pt,Ot,Rt)}catch(Kt){if(hn(Ut),Kt!==Kt+0)throw Kt;fn(1,0)}},Z:function(St,It,Pt,Ot){var Rt=un();try{return Xr(St,It,Pt,Ot)}catch(Ut){if(hn(Rt),Ut!==Ut+0)throw Ut;fn(1,0)}},W:function(St){var It=un();try{return Ur(St)}catch(Pt){if(hn(It),Pt!==Pt+0)throw Pt;fn(1,0)}},Y:function(St,It){var Pt=un();try{return Yr(St,It)}catch(Ot){if(hn(Pt),Ot!==Ot+0)throw Ot;fn(1,0)}},T:function(St,It,Pt){var Ot=un();try{return jr(St,It,Pt)}catch(Rt){if(hn(Ot),Rt!==Rt+0)throw Rt;fn(1,0)}},f:function(St){var It=un();try{ln(St)()}catch(Pt){if(hn(It),Pt!==Pt+0)throw Pt;fn(1,0)}},q:function(St,It){var Pt=un();try{ln(St)(It)}catch(Ot){if(hn(Pt),Ot!==Ot+0)throw Ot;fn(1,0)}},h:function(St,It,Pt){var Ot=un();try{ln(St)(It,Pt)}catch(Rt){if(hn(Ot),Rt!==Rt+0)throw Rt;fn(1,0)}},da:function(St,It,Pt,Ot){var Rt=un();try{ln(St)(It,Pt,Ot)}catch(Ut){if(hn(Rt),Ut!==Ut+0)throw Ut;fn(1,0)}},l:function(St,It,Pt,Ot){var Rt=un();try{ln(St)(It,Pt,Ot)}catch(Ut){if(hn(Rt),Ut!==Ut+0)throw Ut;fn(1,0)}},t:function(St,It,Pt,Ot,Rt){var Ut=un();try{ln(St)(It,Pt,Ot,Rt)}catch(Kt){if(hn(Ut),Kt!==Kt+0)throw Kt;fn(1,0)}},u:function(St,It,Pt,Ot,Rt,Ut){var Kt=un();try{ln(St)(It,Pt,Ot,Rt,Ut)}catch(tn){if(hn(Kt),tn!==tn+0)throw tn;fn(1,0)}},x:function(St,It,Pt,Ot,Rt,Ut,Kt){var tn=un();try{ln(St)(It,Pt,Ot,Rt,Ut,Kt)}catch(Jt){if(hn(tn),Jt!==Jt+0)throw Jt;fn(1,0)}},z:function(St,It,Pt,Ot,Rt,Ut,Kt,tn){var Jt=un();try{ln(St)(It,Pt,Ot,Rt,Ut,Kt,tn)}catch(gn){if(hn(Jt),gn!==gn+0)throw gn;fn(1,0)}},ga:function(St,It,Pt,Ot,Rt,Ut,Kt,tn,Jt){var gn=un();try{ln(St)(It,Pt,Ot,Rt,Ut,Kt,tn,Jt)}catch(An){if(hn(gn),An!==An+0)throw An;fn(1,0)}},A:function(St,It,Pt,Ot,Rt,Ut,Kt,tn,Jt,gn,An){var Vn=un();try{ln(St)(It,Pt,Ot,Rt,Ut,Kt,tn,Jt,gn,An)}catch(Bn){if(hn(Vn),Bn!==Bn+0)throw Bn;fn(1,0)}},C:function(St,It,Pt,Ot,Rt,Ut,Kt,tn,Jt,gn,An,Vn,Bn,zt,En,Nn){var Zn=un();try{ln(St)(It,Pt,Ot,Rt,Ut,Kt,tn,Jt,gn,An,Vn,Bn,zt,En,Nn)}catch(hr){if(hn(Zn),hr!==hr+0)throw hr;fn(1,0)}},aa:function(St,It,Pt,Ot,Rt,Ut,Kt,tn){var Jt=un();try{Wr(St,It,Pt,Ot,Rt,Ut,Kt,tn)}catch(gn){if(hn(Jt),gn!==gn+0)throw gn;fn(1,0)}},_:function(St,It,Pt,Ot,Rt,Ut,Kt,tn,Jt,gn,An,Vn){var Bn=un();try{Kr(St,It,Pt,Ot,Rt,Ut,Kt,tn,Jt,gn,An,Vn)}catch(zt){if(hn(Bn),zt!==zt+0)throw zt;fn(1,0)}},$:function(St,It,Pt,Ot,Rt,Ut){var Kt=un();try{Hr(St,It,Pt,Ot,Rt,Ut)}catch(tn){if(hn(Kt),tn!==tn+0)throw tn;fn(1,0)}},n:function(St){return St},F:function(St){zn=St},ha:ns,y:function(St,It,Pt,Ot){return ns(St,It,Pt,Ot)}};(function(){function St(Rt){g.asm=Rt.exports,ft=g.asm.Ka,Mt(),Vt=g.asm.ib,Ft.unshift(g.asm.La),en--,g.monitorRunDependencies&&g.monitorRunDependencies(en),en==0&&on&&(Rt=on,on=null,Rt())}function It(Rt){St(Rt.instance)}function Pt(Rt){return function(){if(!ct&&(it||at)){if(typeof fetch=="function"&&!Zt.startsWith("file://"))return fetch(Zt,{credentials:"same-origin"}).then(function(Ut){if(!Ut.ok)throw"failed to load wasm binary file at '"+Zt+"'";return Ut.arrayBuffer()}).catch(function(){return dn()});if(et)return new Promise(function(Ut,Kt){et(Zt,function(tn){Ut(new Uint8Array(tn))},Kt)})}return Promise.resolve().then(function(){return dn()})}().then(function(Ut){return WebAssembly.instantiate(Ut,Ot)}).then(function(Ut){return Ut}).then(Rt,function(Ut){pt("failed to asynchronously prepare wasm: "+Ut),rn(Ut)})}var Ot={a:rs};if(en++,g.monitorRunDependencies&&g.monitorRunDependencies(en),g.instantiateWasm)try{return g.instantiateWasm(Ot,St)}catch(Rt){return pt("Module.instantiateWasm callback failed with error: "+Rt),!1}(ct||typeof WebAssembly.instantiateStreaming!="function"||sn()||Zt.startsWith("file://")||lt||typeof fetch!="function"?Pt(It):fetch(Zt,{credentials:"same-origin"}).then(function(Rt){return WebAssembly.instantiateStreaming(Rt,Ot).then(It,function(Ut){return pt("wasm streaming compile failed: "+Ut),pt("falling back to ArrayBuffer instantiation"),Pt(It)})})).catch(j)})(),g.___wasm_call_ctors=function(){return(g.___wasm_call_ctors=g.asm.La).apply(null,arguments)},g._OrtInit=function(){return(g._OrtInit=g.asm.Ma).apply(null,arguments)},g._OrtCreateSessionOptions=function(){return(g._OrtCreateSessionOptions=g.asm.Na).apply(null,arguments)},g._OrtAppendExecutionProvider=function(){return(g._OrtAppendExecutionProvider=g.asm.Oa).apply(null,arguments)},g._OrtAddSessionConfigEntry=function(){return(g._OrtAddSessionConfigEntry=g.asm.Pa).apply(null,arguments)},g._OrtReleaseSessionOptions=function(){return(g._OrtReleaseSessionOptions=g.asm.Qa).apply(null,arguments)},g._OrtCreateSession=function(){return(g._OrtCreateSession=g.asm.Ra).apply(null,arguments)},g._OrtReleaseSession=function(){return(g._OrtReleaseSession=g.asm.Sa).apply(null,arguments)},g._OrtGetInputCount=function(){return(g._OrtGetInputCount=g.asm.Ta).apply(null,arguments)},g._OrtGetOutputCount=function(){return(g._OrtGetOutputCount=g.asm.Ua).apply(null,arguments)},g._OrtGetInputName=function(){return(g._OrtGetInputName=g.asm.Va).apply(null,arguments)},g._OrtGetOutputName=function(){return(g._OrtGetOutputName=g.asm.Wa).apply(null,arguments)},g._OrtFree=function(){return(g._OrtFree=g.asm.Xa).apply(null,arguments)},g._OrtCreateTensor=function(){return(g._OrtCreateTensor=g.asm.Ya).apply(null,arguments)},g._OrtGetTensorData=function(){return(g._OrtGetTensorData=g.asm.Za).apply(null,arguments)},g._OrtReleaseTensor=function(){return(g._OrtReleaseTensor=g.asm._a).apply(null,arguments)},g._OrtCreateRunOptions=function(){return(g._OrtCreateRunOptions=g.asm.$a).apply(null,arguments)},g._OrtAddRunConfigEntry=function(){return(g._OrtAddRunConfigEntry=g.asm.ab).apply(null,arguments)},g._OrtReleaseRunOptions=function(){return(g._OrtReleaseRunOptions=g.asm.bb).apply(null,arguments)},g._OrtRun=function(){return(g._OrtRun=g.asm.cb).apply(null,arguments)},g._OrtEndProfiling=function(){return(g._OrtEndProfiling=g.asm.db).apply(null,arguments)};var dr,$n=g._malloc=function(){return($n=g._malloc=g.asm.eb).apply(null,arguments)},wr=g._free=function(){return(wr=g._free=g.asm.fb).apply(null,arguments)},zr=g._fflush=function(){return(zr=g._fflush=g.asm.gb).apply(null,arguments)},_r=g.___funcs_on_exit=function(){return(_r=g.___funcs_on_exit=g.asm.hb).apply(null,arguments)},fn=g._setThrew=function(){return(fn=g._setThrew=g.asm.jb).apply(null,arguments)},un=g.stackSave=function(){return(un=g.stackSave=g.asm.kb).apply(null,arguments)},hn=g.stackRestore=function(){return(hn=g.stackRestore=g.asm.lb).apply(null,arguments)},Br=g.stackAlloc=function(){return(Br=g.stackAlloc=g.asm.mb).apply(null,arguments)},Tr=g.___cxa_can_catch=function(){return(Tr=g.___cxa_can_catch=g.asm.nb).apply(null,arguments)},Vr=g.___cxa_is_pointer_type=function(){return(Vr=g.___cxa_is_pointer_type=g.asm.ob).apply(null,arguments)},Ur=g.dynCall_j=function(){return(Ur=g.dynCall_j=g.asm.pb).apply(null,arguments)},Gr=g.dynCall_iiiiij=function(){return(Gr=g.dynCall_iiiiij=g.asm.qb).apply(null,arguments)},jr=g.dynCall_jii=function(){return(jr=g.dynCall_jii=g.asm.rb).apply(null,arguments)},Wr=g.dynCall_viiiiij=function(){return(Wr=g.dynCall_viiiiij=g.asm.sb).apply(null,arguments)},Hr=g.dynCall_vjji=function(){return(Hr=g.dynCall_vjji=g.asm.tb).apply(null,arguments)},Kr=g.dynCall_viiijjjii=function(){return(Kr=g.dynCall_viiijjjii=g.asm.ub).apply(null,arguments)},Xr=g.dynCall_iij=function(){return(Xr=g.dynCall_iij=g.asm.vb).apply(null,arguments)},Yr=g.dynCall_ji=function(){return(Yr=g.dynCall_ji=g.asm.wb).apply(null,arguments)},Qr=g.dynCall_iiiiiij=function(){return(Qr=g.dynCall_iiiiiij=g.asm.xb).apply(null,arguments)},Zr=g.dynCall_iiij=function(){return(Zr=g.dynCall_iiij=g.asm.yb).apply(null,arguments)};function Jr(){function St(){if(!dr&&(dr=!0,g.calledRun=!0,!mt)){if(Sn(Ft),$(g),g.onRuntimeInitialized&&g.onRuntimeInitialized(),g.postRun)for(typeof g.postRun=="function"&&(g.postRun=[g.postRun]);g.postRun.length;){var It=g.postRun.shift();qt.unshift(It)}Sn(qt)}}if(!(0<en)){if(g.preRun)for(typeof g.preRun=="function"&&(g.preRun=[g.preRun]);g.preRun.length;)Qt();Sn(Gt),0<en||(g.setStatus?(g.setStatus("Running..."),setTimeout(function(){setTimeout(function(){g.setStatus("")},1),St()},1)):St())}}if(g.UTF8ToString=Ct,g.stringToUTF8=function(St,It,Pt){return kt(St,_t,It,Pt)},g.lengthBytesUTF8=Nt,g.stackSave=un,g.stackRestore=hn,g.stackAlloc=Br,on=function St(){dr||Jr(),dr||(on=St)},g.preInit)for(typeof g.preInit=="function"&&(g.preInit=[g.preInit]);0<g.preInit.length;)g.preInit.pop()();return Jr(),d.ready});i.exports=c},4537:i=>{i.exports=function(s,o){for(var a=new Array(arguments.length-1),c=0,d=2,g=!0;d<arguments.length;)a[c++]=arguments[d++];return new Promise(function($,j){a[c]=function(_e){if(g)if(g=!1,_e)j(_e);else{for(var et=new Array(arguments.length-1),_=0;_<et.length;)et[_++]=arguments[_];$.apply(null,et)}};try{s.apply(o||null,a)}catch(_e){g&&(g=!1,j(_e))}})}},7419:(i,s)=>{var o=s;o.length=function($){var j=$.length;if(!j)return 0;for(var _e=0;--j%4>1&&$.charAt(j)==="=";)++_e;return Math.ceil(3*$.length)/4-_e};for(var a=new Array(64),c=new Array(123),d=0;d<64;)c[a[d]=d<26?d+65:d<52?d+71:d<62?d-4:d-59|43]=d++;o.encode=function($,j,_e){for(var et,_=null,b=[],tt=0,nt=0;j<_e;){var rt=$[j++];switch(nt){case 0:b[tt++]=a[rt>>2],et=(3&rt)<<4,nt=1;break;case 1:b[tt++]=a[et|rt>>4],et=(15&rt)<<2,nt=2;break;case 2:b[tt++]=a[et|rt>>6],b[tt++]=a[63&rt],nt=0}tt>8191&&((_||(_=[])).push(String.fromCharCode.apply(String,b)),tt=0)}return nt&&(b[tt++]=a[et],b[tt++]=61,nt===1&&(b[tt++]=61)),_?(tt&&_.push(String.fromCharCode.apply(String,b.slice(0,tt))),_.join("")):String.fromCharCode.apply(String,b.slice(0,tt))};var g="invalid encoding";o.decode=function($,j,_e){for(var et,_=_e,b=0,tt=0;tt<$.length;){var nt=$.charCodeAt(tt++);if(nt===61&&b>1)break;if((nt=c[nt])===void 0)throw Error(g);switch(b){case 0:et=nt,b=1;break;case 1:j[_e++]=et<<2|(48&nt)>>4,et=nt,b=2;break;case 2:j[_e++]=(15&et)<<4|(60&nt)>>2,et=nt,b=3;break;case 3:j[_e++]=(3&et)<<6|nt,b=0}}if(b===1)throw Error(g);return _e-_},o.test=function($){return/^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$/.test($)}},9211:i=>{function s(){this._listeners={}}i.exports=s,s.prototype.on=function(o,a,c){return(this._listeners[o]||(this._listeners[o]=[])).push({fn:a,ctx:c||this}),this},s.prototype.off=function(o,a){if(o===void 0)this._listeners={};else if(a===void 0)this._listeners[o]=[];else for(var c=this._listeners[o],d=0;d<c.length;)c[d].fn===a?c.splice(d,1):++d;return this},s.prototype.emit=function(o){var a=this._listeners[o];if(a){for(var c=[],d=1;d<arguments.length;)c.push(arguments[d++]);for(d=0;d<a.length;)a[d].fn.apply(a[d++].ctx,c)}return this}},945:i=>{function s(g){return typeof Float32Array<"u"?function(){var $=new Float32Array([-0]),j=new Uint8Array($.buffer),_e=j[3]===128;function et(nt,rt,st){$[0]=nt,rt[st]=j[0],rt[st+1]=j[1],rt[st+2]=j[2],rt[st+3]=j[3]}function _(nt,rt,st){$[0]=nt,rt[st]=j[3],rt[st+1]=j[2],rt[st+2]=j[1],rt[st+3]=j[0]}function b(nt,rt){return j[0]=nt[rt],j[1]=nt[rt+1],j[2]=nt[rt+2],j[3]=nt[rt+3],$[0]}function tt(nt,rt){return j[3]=nt[rt],j[2]=nt[rt+1],j[1]=nt[rt+2],j[0]=nt[rt+3],$[0]}g.writeFloatLE=_e?et:_,g.writeFloatBE=_e?_:et,g.readFloatLE=_e?b:tt,g.readFloatBE=_e?tt:b}():function(){function $(_e,et,_,b){var tt=et<0?1:0;if(tt&&(et=-et),et===0)_e(1/et>0?0:2147483648,_,b);else if(isNaN(et))_e(2143289344,_,b);else if(et>34028234663852886e22)_e((tt<<31|2139095040)>>>0,_,b);else if(et<11754943508222875e-54)_e((tt<<31|Math.round(et/1401298464324817e-60))>>>0,_,b);else{var nt=Math.floor(Math.log(et)/Math.LN2);_e((tt<<31|nt+127<<23|8388607&Math.round(et*Math.pow(2,-nt)*8388608))>>>0,_,b)}}function j(_e,et,_){var b=_e(et,_),tt=2*(b>>31)+1,nt=b>>>23&255,rt=8388607&b;return nt===255?rt?NaN:tt*(1/0):nt===0?1401298464324817e-60*tt*rt:tt*Math.pow(2,nt-150)*(rt+8388608)}g.writeFloatLE=$.bind(null,o),g.writeFloatBE=$.bind(null,a),g.readFloatLE=j.bind(null,c),g.readFloatBE=j.bind(null,d)}(),typeof Float64Array<"u"?function(){var $=new Float64Array([-0]),j=new Uint8Array($.buffer),_e=j[7]===128;function et(nt,rt,st){$[0]=nt,rt[st]=j[0],rt[st+1]=j[1],rt[st+2]=j[2],rt[st+3]=j[3],rt[st+4]=j[4],rt[st+5]=j[5],rt[st+6]=j[6],rt[st+7]=j[7]}function _(nt,rt,st){$[0]=nt,rt[st]=j[7],rt[st+1]=j[6],rt[st+2]=j[5],rt[st+3]=j[4],rt[st+4]=j[3],rt[st+5]=j[2],rt[st+6]=j[1],rt[st+7]=j[0]}function b(nt,rt){return j[0]=nt[rt],j[1]=nt[rt+1],j[2]=nt[rt+2],j[3]=nt[rt+3],j[4]=nt[rt+4],j[5]=nt[rt+5],j[6]=nt[rt+6],j[7]=nt[rt+7],$[0]}function tt(nt,rt){return j[7]=nt[rt],j[6]=nt[rt+1],j[5]=nt[rt+2],j[4]=nt[rt+3],j[3]=nt[rt+4],j[2]=nt[rt+5],j[1]=nt[rt+6],j[0]=nt[rt+7],$[0]}g.writeDoubleLE=_e?et:_,g.writeDoubleBE=_e?_:et,g.readDoubleLE=_e?b:tt,g.readDoubleBE=_e?tt:b}():function(){function $(_e,et,_,b,tt,nt){var rt=b<0?1:0;if(rt&&(b=-b),b===0)_e(0,tt,nt+et),_e(1/b>0?0:2147483648,tt,nt+_);else if(isNaN(b))_e(0,tt,nt+et),_e(2146959360,tt,nt+_);else if(b>17976931348623157e292)_e(0,tt,nt+et),_e((rt<<31|2146435072)>>>0,tt,nt+_);else{var st;if(b<22250738585072014e-324)_e((st=b/5e-324)>>>0,tt,nt+et),_e((rt<<31|st/4294967296)>>>0,tt,nt+_);else{var ot=Math.floor(Math.log(b)/Math.LN2);ot===1024&&(ot=1023),_e(4503599627370496*(st=b*Math.pow(2,-ot))>>>0,tt,nt+et),_e((rt<<31|ot+1023<<20|1048576*st&1048575)>>>0,tt,nt+_)}}}function j(_e,et,_,b,tt){var nt=_e(b,tt+et),rt=_e(b,tt+_),st=2*(rt>>31)+1,ot=rt>>>20&2047,it=4294967296*(1048575&rt)+nt;return ot===2047?it?NaN:st*(1/0):ot===0?5e-324*st*it:st*Math.pow(2,ot-1075)*(it+4503599627370496)}g.writeDoubleLE=$.bind(null,o,0,4),g.writeDoubleBE=$.bind(null,a,4,0),g.readDoubleLE=j.bind(null,c,0,4),g.readDoubleBE=j.bind(null,d,4,0)}(),g}function o(g,$,j){$[j]=255&g,$[j+1]=g>>>8&255,$[j+2]=g>>>16&255,$[j+3]=g>>>24}function a(g,$,j){$[j]=g>>>24,$[j+1]=g>>>16&255,$[j+2]=g>>>8&255,$[j+3]=255&g}function c(g,$){return(g[$]|g[$+1]<<8|g[$+2]<<16|g[$+3]<<24)>>>0}function d(g,$){return(g[$]<<24|g[$+1]<<16|g[$+2]<<8|g[$+3])>>>0}i.exports=s(s)},7199:module=>{function inquire(moduleName){try{var mod=eval("quire".replace(/^/,"re"))(moduleName);if(mod&&(mod.length||Object.keys(mod).length))return mod}catch(i){}return null}module.exports=inquire},6662:i=>{i.exports=function(s,o,a){var c=a||8192,d=c>>>1,g=null,$=c;return function(j){if(j<1||j>d)return s(j);$+j>c&&(g=s(c),$=0);var _e=o.call(g,$,$+=j);return 7&$&&($=1+(7|$)),_e}}},4997:(i,s)=>{var o=s;o.length=function(a){for(var c=0,d=0,g=0;g<a.length;++g)(d=a.charCodeAt(g))<128?c+=1:d<2048?c+=2:(64512&d)==55296&&(64512&a.charCodeAt(g+1))==56320?(++g,c+=4):c+=3;return c},o.read=function(a,c,d){if(d-c<1)return"";for(var g,$=null,j=[],_e=0;c<d;)(g=a[c++])<128?j[_e++]=g:g>191&&g<224?j[_e++]=(31&g)<<6|63&a[c++]:g>239&&g<365?(g=((7&g)<<18|(63&a[c++])<<12|(63&a[c++])<<6|63&a[c++])-65536,j[_e++]=55296+(g>>10),j[_e++]=56320+(1023&g)):j[_e++]=(15&g)<<12|(63&a[c++])<<6|63&a[c++],_e>8191&&(($||($=[])).push(String.fromCharCode.apply(String,j)),_e=0);return $?(_e&&$.push(String.fromCharCode.apply(String,j.slice(0,_e))),$.join("")):String.fromCharCode.apply(String,j.slice(0,_e))},o.write=function(a,c,d){for(var g,$,j=d,_e=0;_e<a.length;++_e)(g=a.charCodeAt(_e))<128?c[d++]=g:g<2048?(c[d++]=g>>6|192,c[d++]=63&g|128):(64512&g)==55296&&(64512&($=a.charCodeAt(_e+1)))==56320?(g=65536+((1023&g)<<10)+(1023&$),++_e,c[d++]=g>>18|240,c[d++]=g>>12&63|128,c[d++]=g>>6&63|128,c[d++]=63&g|128):(c[d++]=g>>12|224,c[d++]=g>>6&63|128,c[d++]=63&g|128);return d-j}},3442:(i,s)=>{s.__esModule=!0;var o=function(){function a(c){if(!c)throw new TypeError("Invalid argument; `value` has no value.");this.value=a.EMPTY,c&&a.isGuid(c)&&(this.value=c)}return a.isGuid=function(c){var d=c.toString();return c&&(c instanceof a||a.validator.test(d))},a.create=function(){return new a([a.gen(2),a.gen(1),a.gen(1),a.gen(1),a.gen(3)].join("-"))},a.createEmpty=function(){return new a("emptyguid")},a.parse=function(c){return new a(c)},a.raw=function(){return[a.gen(2),a.gen(1),a.gen(1),a.gen(1),a.gen(3)].join("-")},a.gen=function(c){for(var d="",g=0;g<c;g++)d+=(65536*(1+Math.random())|0).toString(16).substring(1);return d},a.prototype.equals=function(c){return a.isGuid(c)&&this.value===c.toString()},a.prototype.isEmpty=function(){return this.value===a.EMPTY},a.prototype.toString=function(){return this.value},a.prototype.toJSON=function(){return{value:this.value}},a.validator=new RegExp("^[a-z0-9]{8}-[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{12}$","i"),a.EMPTY="00000000-0000-0000-0000-000000000000",a}();s.Guid=o},3720:i=>{i.exports=o;var s=null;try{s=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch{}function o(ht,ft,yt){this.low=0|ht,this.high=0|ft,this.unsigned=!!yt}function a(ht){return(ht&&ht.__isLong__)===!0}o.prototype.__isLong__,Object.defineProperty(o.prototype,"__isLong__",{value:!0}),o.isLong=a;var c={},d={};function g(ht,ft){var yt,wt,_t;return ft?(_t=0<=(ht>>>=0)&&ht<256)&&(wt=d[ht])?wt:(yt=j(ht,(0|ht)<0?-1:0,!0),_t&&(d[ht]=yt),yt):(_t=-128<=(ht|=0)&&ht<128)&&(wt=c[ht])?wt:(yt=j(ht,ht<0?-1:0,!1),_t&&(c[ht]=yt),yt)}function $(ht,ft){if(isNaN(ht))return ft?ot:st;if(ft){if(ht<0)return ot;if(ht>=tt)return ct}else{if(ht<=-nt)return dt;if(ht+1>=nt)return ut}return ht<0?$(-ht,ft).neg():j(ht%b|0,ht/b|0,ft)}function j(ht,ft,yt){return new o(ht,ft,yt)}o.fromInt=g,o.fromNumber=$,o.fromBits=j;var _e=Math.pow;function et(ht,ft,yt){if(ht.length===0)throw Error("empty string");if(ht==="NaN"||ht==="Infinity"||ht==="+Infinity"||ht==="-Infinity")return st;if(typeof ft=="number"?(yt=ft,ft=!1):ft=!!ft,(yt=yt||10)<2||36<yt)throw RangeError("radix");var wt;if((wt=ht.indexOf("-"))>0)throw Error("interior hyphen");if(wt===0)return et(ht.substring(1),ft,yt).neg();for(var _t=$(_e(yt,8)),bt=st,xt=0;xt<ht.length;xt+=8){var mt=Math.min(8,ht.length-xt),vt=parseInt(ht.substring(xt,xt+mt),yt);if(mt<8){var Et=$(_e(yt,mt));bt=bt.mul(Et).add($(vt))}else bt=(bt=bt.mul(_t)).add($(vt))}return bt.unsigned=ft,bt}function _(ht,ft){return typeof ht=="number"?$(ht,ft):typeof ht=="string"?et(ht,ft):j(ht.low,ht.high,typeof ft=="boolean"?ft:ht.unsigned)}o.fromString=et,o.fromValue=_;var b=4294967296,tt=b*b,nt=tt/2,rt=g(1<<24),st=g(0);o.ZERO=st;var ot=g(0,!0);o.UZERO=ot;var it=g(1);o.ONE=it;var at=g(1,!0);o.UONE=at;var lt=g(-1);o.NEG_ONE=lt;var ut=j(-1,2147483647,!1);o.MAX_VALUE=ut;var ct=j(-1,-1,!0);o.MAX_UNSIGNED_VALUE=ct;var dt=j(0,-2147483648,!1);o.MIN_VALUE=dt;var pt=o.prototype;pt.toInt=function(){return this.unsigned?this.low>>>0:this.low},pt.toNumber=function(){return this.unsigned?(this.high>>>0)*b+(this.low>>>0):this.high*b+(this.low>>>0)},pt.toString=function(ht){if((ht=ht||10)<2||36<ht)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative()){if(this.eq(dt)){var ft=$(ht),yt=this.div(ft),wt=yt.mul(ft).sub(this);return yt.toString(ht)+wt.toInt().toString(ht)}return"-"+this.neg().toString(ht)}for(var _t=$(_e(ht,6),this.unsigned),bt=this,xt="";;){var mt=bt.div(_t),vt=(bt.sub(mt.mul(_t)).toInt()>>>0).toString(ht);if((bt=mt).isZero())return vt+xt;for(;vt.length<6;)vt="0"+vt;xt=""+vt+xt}},pt.getHighBits=function(){return this.high},pt.getHighBitsUnsigned=function(){return this.high>>>0},pt.getLowBits=function(){return this.low},pt.getLowBitsUnsigned=function(){return this.low>>>0},pt.getNumBitsAbs=function(){if(this.isNegative())return this.eq(dt)?64:this.neg().getNumBitsAbs();for(var ht=this.high!=0?this.high:this.low,ft=31;ft>0&&!(ht&1<<ft);ft--);return this.high!=0?ft+33:ft+1},pt.isZero=function(){return this.high===0&&this.low===0},pt.eqz=pt.isZero,pt.isNegative=function(){return!this.unsigned&&this.high<0},pt.isPositive=function(){return this.unsigned||this.high>=0},pt.isOdd=function(){return(1&this.low)==1},pt.isEven=function(){return(1&this.low)==0},pt.equals=function(ht){return a(ht)||(ht=_(ht)),(this.unsigned===ht.unsigned||this.high>>>31!=1||ht.high>>>31!=1)&&this.high===ht.high&&this.low===ht.low},pt.eq=pt.equals,pt.notEquals=function(ht){return!this.eq(ht)},pt.neq=pt.notEquals,pt.ne=pt.notEquals,pt.lessThan=function(ht){return this.comp(ht)<0},pt.lt=pt.lessThan,pt.lessThanOrEqual=function(ht){return this.comp(ht)<=0},pt.lte=pt.lessThanOrEqual,pt.le=pt.lessThanOrEqual,pt.greaterThan=function(ht){return this.comp(ht)>0},pt.gt=pt.greaterThan,pt.greaterThanOrEqual=function(ht){return this.comp(ht)>=0},pt.gte=pt.greaterThanOrEqual,pt.ge=pt.greaterThanOrEqual,pt.compare=function(ht){if(a(ht)||(ht=_(ht)),this.eq(ht))return 0;var ft=this.isNegative(),yt=ht.isNegative();return ft&&!yt?-1:!ft&&yt?1:this.unsigned?ht.high>>>0>this.high>>>0||ht.high===this.high&&ht.low>>>0>this.low>>>0?-1:1:this.sub(ht).isNegative()?-1:1},pt.comp=pt.compare,pt.negate=function(){return!this.unsigned&&this.eq(dt)?dt:this.not().add(it)},pt.neg=pt.negate,pt.add=function(ht){a(ht)||(ht=_(ht));var ft=this.high>>>16,yt=65535&this.high,wt=this.low>>>16,_t=65535&this.low,bt=ht.high>>>16,xt=65535&ht.high,mt=ht.low>>>16,vt=0,Et=0,Ct=0,kt=0;return Ct+=(kt+=_t+(65535&ht.low))>>>16,Et+=(Ct+=wt+mt)>>>16,vt+=(Et+=yt+xt)>>>16,vt+=ft+bt,j((Ct&=65535)<<16|(kt&=65535),(vt&=65535)<<16|(Et&=65535),this.unsigned)},pt.subtract=function(ht){return a(ht)||(ht=_(ht)),this.add(ht.neg())},pt.sub=pt.subtract,pt.multiply=function(ht){if(this.isZero())return st;if(a(ht)||(ht=_(ht)),s)return j(s.mul(this.low,this.high,ht.low,ht.high),s.get_high(),this.unsigned);if(ht.isZero())return st;if(this.eq(dt))return ht.isOdd()?dt:st;if(ht.eq(dt))return this.isOdd()?dt:st;if(this.isNegative())return ht.isNegative()?this.neg().mul(ht.neg()):this.neg().mul(ht).neg();if(ht.isNegative())return this.mul(ht.neg()).neg();if(this.lt(rt)&&ht.lt(rt))return $(this.toNumber()*ht.toNumber(),this.unsigned);var ft=this.high>>>16,yt=65535&this.high,wt=this.low>>>16,_t=65535&this.low,bt=ht.high>>>16,xt=65535&ht.high,mt=ht.low>>>16,vt=65535&ht.low,Et=0,Ct=0,kt=0,Nt=0;return kt+=(Nt+=_t*vt)>>>16,Ct+=(kt+=wt*vt)>>>16,kt&=65535,Ct+=(kt+=_t*mt)>>>16,Et+=(Ct+=yt*vt)>>>16,Ct&=65535,Et+=(Ct+=wt*mt)>>>16,Ct&=65535,Et+=(Ct+=_t*xt)>>>16,Et+=ft*vt+yt*mt+wt*xt+_t*bt,j((kt&=65535)<<16|(Nt&=65535),(Et&=65535)<<16|(Ct&=65535),this.unsigned)},pt.mul=pt.multiply,pt.divide=function(ht){if(a(ht)||(ht=_(ht)),ht.isZero())throw Error("division by zero");var ft,yt,wt;if(s)return this.unsigned||this.high!==-2147483648||ht.low!==-1||ht.high!==-1?j((this.unsigned?s.div_u:s.div_s)(this.low,this.high,ht.low,ht.high),s.get_high(),this.unsigned):this;if(this.isZero())return this.unsigned?ot:st;if(this.unsigned){if(ht.unsigned||(ht=ht.toUnsigned()),ht.gt(this))return ot;if(ht.gt(this.shru(1)))return at;wt=ot}else{if(this.eq(dt))return ht.eq(it)||ht.eq(lt)?dt:ht.eq(dt)?it:(ft=this.shr(1).div(ht).shl(1)).eq(st)?ht.isNegative()?it:lt:(yt=this.sub(ht.mul(ft)),wt=ft.add(yt.div(ht)));if(ht.eq(dt))return this.unsigned?ot:st;if(this.isNegative())return ht.isNegative()?this.neg().div(ht.neg()):this.neg().div(ht).neg();if(ht.isNegative())return this.div(ht.neg()).neg();wt=st}for(yt=this;yt.gte(ht);){ft=Math.max(1,Math.floor(yt.toNumber()/ht.toNumber()));for(var _t=Math.ceil(Math.log(ft)/Math.LN2),bt=_t<=48?1:_e(2,_t-48),xt=$(ft),mt=xt.mul(ht);mt.isNegative()||mt.gt(yt);)mt=(xt=$(ft-=bt,this.unsigned)).mul(ht);xt.isZero()&&(xt=it),wt=wt.add(xt),yt=yt.sub(mt)}return wt},pt.div=pt.divide,pt.modulo=function(ht){return a(ht)||(ht=_(ht)),s?j((this.unsigned?s.rem_u:s.rem_s)(this.low,this.high,ht.low,ht.high),s.get_high(),this.unsigned):this.sub(this.div(ht).mul(ht))},pt.mod=pt.modulo,pt.rem=pt.modulo,pt.not=function(){return j(~this.low,~this.high,this.unsigned)},pt.and=function(ht){return a(ht)||(ht=_(ht)),j(this.low&ht.low,this.high&ht.high,this.unsigned)},pt.or=function(ht){return a(ht)||(ht=_(ht)),j(this.low|ht.low,this.high|ht.high,this.unsigned)},pt.xor=function(ht){return a(ht)||(ht=_(ht)),j(this.low^ht.low,this.high^ht.high,this.unsigned)},pt.shiftLeft=function(ht){return a(ht)&&(ht=ht.toInt()),(ht&=63)==0?this:ht<32?j(this.low<<ht,this.high<<ht|this.low>>>32-ht,this.unsigned):j(0,this.low<<ht-32,this.unsigned)},pt.shl=pt.shiftLeft,pt.shiftRight=function(ht){return a(ht)&&(ht=ht.toInt()),(ht&=63)==0?this:ht<32?j(this.low>>>ht|this.high<<32-ht,this.high>>ht,this.unsigned):j(this.high>>ht-32,this.high>=0?0:-1,this.unsigned)},pt.shr=pt.shiftRight,pt.shiftRightUnsigned=function(ht){if(a(ht)&&(ht=ht.toInt()),(ht&=63)==0)return this;var ft=this.high;return ht<32?j(this.low>>>ht|ft<<32-ht,ft>>>ht,this.unsigned):j(ht===32?ft:ft>>>ht-32,0,this.unsigned)},pt.shru=pt.shiftRightUnsigned,pt.shr_u=pt.shiftRightUnsigned,pt.toSigned=function(){return this.unsigned?j(this.low,this.high,!1):this},pt.toUnsigned=function(){return this.unsigned?this:j(this.low,this.high,!0)},pt.toBytes=function(ht){return ht?this.toBytesLE():this.toBytesBE()},pt.toBytesLE=function(){var ht=this.high,ft=this.low;return[255&ft,ft>>>8&255,ft>>>16&255,ft>>>24,255&ht,ht>>>8&255,ht>>>16&255,ht>>>24]},pt.toBytesBE=function(){var ht=this.high,ft=this.low;return[ht>>>24,ht>>>16&255,ht>>>8&255,255&ht,ft>>>24,ft>>>16&255,ft>>>8&255,255&ft]},o.fromBytes=function(ht,ft,yt){return yt?o.fromBytesLE(ht,ft):o.fromBytesBE(ht,ft)},o.fromBytesLE=function(ht,ft){return new o(ht[0]|ht[1]<<8|ht[2]<<16|ht[3]<<24,ht[4]|ht[5]<<8|ht[6]<<16|ht[7]<<24,ft)},o.fromBytesBE=function(ht,ft){return new o(ht[4]<<24|ht[5]<<16|ht[6]<<8|ht[7],ht[0]<<24|ht[1]<<16|ht[2]<<8|ht[3],ft)}},1446:(i,s,o)=>{var a,c,d,g=o(2100),$=g.Reader,j=g.Writer,_e=g.util,et=g.roots.default||(g.roots.default={});et.onnx=((d={}).Version=(a={},(c=Object.create(a))[a[0]="_START_VERSION"]=0,c[a[1]="IR_VERSION_2017_10_10"]=1,c[a[2]="IR_VERSION_2017_10_30"]=2,c[a[3]="IR_VERSION_2017_11_3"]=3,c[a[4]="IR_VERSION_2019_1_22"]=4,c[a[5]="IR_VERSION"]=5,c),d.AttributeProto=function(){function _(b){if(this.floats=[],this.ints=[],this.strings=[],this.tensors=[],this.graphs=[],b)for(var tt=Object.keys(b),nt=0;nt<tt.length;++nt)b[tt[nt]]!=null&&(this[tt[nt]]=b[tt[nt]])}return _.prototype.name="",_.prototype.refAttrName="",_.prototype.docString="",_.prototype.type=0,_.prototype.f=0,_.prototype.i=_e.Long?_e.Long.fromBits(0,0,!1):0,_.prototype.s=_e.newBuffer([]),_.prototype.t=null,_.prototype.g=null,_.prototype.floats=_e.emptyArray,_.prototype.ints=_e.emptyArray,_.prototype.strings=_e.emptyArray,_.prototype.tensors=_e.emptyArray,_.prototype.graphs=_e.emptyArray,_.create=function(b){return new _(b)},_.encode=function(b,tt){if(tt||(tt=j.create()),b.name!=null&&b.hasOwnProperty("name")&&tt.uint32(10).string(b.name),b.f!=null&&b.hasOwnProperty("f")&&tt.uint32(21).float(b.f),b.i!=null&&b.hasOwnProperty("i")&&tt.uint32(24).int64(b.i),b.s!=null&&b.hasOwnProperty("s")&&tt.uint32(34).bytes(b.s),b.t!=null&&b.hasOwnProperty("t")&&et.onnx.TensorProto.encode(b.t,tt.uint32(42).fork()).ldelim(),b.g!=null&&b.hasOwnProperty("g")&&et.onnx.GraphProto.encode(b.g,tt.uint32(50).fork()).ldelim(),b.floats!=null&&b.floats.length){tt.uint32(58).fork();for(var nt=0;nt<b.floats.length;++nt)tt.float(b.floats[nt]);tt.ldelim()}if(b.ints!=null&&b.ints.length){for(tt.uint32(66).fork(),nt=0;nt<b.ints.length;++nt)tt.int64(b.ints[nt]);tt.ldelim()}if(b.strings!=null&&b.strings.length)for(nt=0;nt<b.strings.length;++nt)tt.uint32(74).bytes(b.strings[nt]);if(b.tensors!=null&&b.tensors.length)for(nt=0;nt<b.tensors.length;++nt)et.onnx.TensorProto.encode(b.tensors[nt],tt.uint32(82).fork()).ldelim();if(b.graphs!=null&&b.graphs.length)for(nt=0;nt<b.graphs.length;++nt)et.onnx.GraphProto.encode(b.graphs[nt],tt.uint32(90).fork()).ldelim();return b.docString!=null&&b.hasOwnProperty("docString")&&tt.uint32(106).string(b.docString),b.type!=null&&b.hasOwnProperty("type")&&tt.uint32(160).int32(b.type),b.refAttrName!=null&&b.hasOwnProperty("refAttrName")&&tt.uint32(170).string(b.refAttrName),tt},_.encodeDelimited=function(b,tt){return this.encode(b,tt).ldelim()},_.decode=function(b,tt){b instanceof $||(b=$.create(b));for(var nt=tt===void 0?b.len:b.pos+tt,rt=new et.onnx.AttributeProto;b.pos<nt;){var st=b.uint32();switch(st>>>3){case 1:rt.name=b.string();break;case 21:rt.refAttrName=b.string();break;case 13:rt.docString=b.string();break;case 20:rt.type=b.int32();break;case 2:rt.f=b.float();break;case 3:rt.i=b.int64();break;case 4:rt.s=b.bytes();break;case 5:rt.t=et.onnx.TensorProto.decode(b,b.uint32());break;case 6:rt.g=et.onnx.GraphProto.decode(b,b.uint32());break;case 7:if(rt.floats&&rt.floats.length||(rt.floats=[]),(7&st)==2)for(var ot=b.uint32()+b.pos;b.pos<ot;)rt.floats.push(b.float());else rt.floats.push(b.float());break;case 8:if(rt.ints&&rt.ints.length||(rt.ints=[]),(7&st)==2)for(ot=b.uint32()+b.pos;b.pos<ot;)rt.ints.push(b.int64());else rt.ints.push(b.int64());break;case 9:rt.strings&&rt.strings.length||(rt.strings=[]),rt.strings.push(b.bytes());break;case 10:rt.tensors&&rt.tensors.length||(rt.tensors=[]),rt.tensors.push(et.onnx.TensorProto.decode(b,b.uint32()));break;case 11:rt.graphs&&rt.graphs.length||(rt.graphs=[]),rt.graphs.push(et.onnx.GraphProto.decode(b,b.uint32()));break;default:b.skipType(7&st)}}return rt},_.decodeDelimited=function(b){return b instanceof $||(b=new $(b)),this.decode(b,b.uint32())},_.verify=function(b){if(typeof b!="object"||b===null)return"object expected";if(b.name!=null&&b.hasOwnProperty("name")&&!_e.isString(b.name))return"name: string expected";if(b.refAttrName!=null&&b.hasOwnProperty("refAttrName")&&!_e.isString(b.refAttrName))return"refAttrName: string expected";if(b.docString!=null&&b.hasOwnProperty("docString")&&!_e.isString(b.docString))return"docString: string expected";if(b.type!=null&&b.hasOwnProperty("type"))switch(b.type){default:return"type: enum value expected";case 0:case 1:case 2:case 3:case 4:case 5:case 6:case 7:case 8:case 9:case 10:}if(b.f!=null&&b.hasOwnProperty("f")&&typeof b.f!="number")return"f: number expected";if(b.i!=null&&b.hasOwnProperty("i")&&!(_e.isInteger(b.i)||b.i&&_e.isInteger(b.i.low)&&_e.isInteger(b.i.high)))return"i: integer|Long expected";if(b.s!=null&&b.hasOwnProperty("s")&&!(b.s&&typeof b.s.length=="number"||_e.isString(b.s)))return"s: buffer expected";if(b.t!=null&&b.hasOwnProperty("t")&&(nt=et.onnx.TensorProto.verify(b.t)))return"t."+nt;if(b.g!=null&&b.hasOwnProperty("g")&&(nt=et.onnx.GraphProto.verify(b.g)))return"g."+nt;if(b.floats!=null&&b.hasOwnProperty("floats")){if(!Array.isArray(b.floats))return"floats: array expected";for(var tt=0;tt<b.floats.length;++tt)if(typeof b.floats[tt]!="number")return"floats: number[] expected"}if(b.ints!=null&&b.hasOwnProperty("ints")){if(!Array.isArray(b.ints))return"ints: array expected";for(tt=0;tt<b.ints.length;++tt)if(!(_e.isInteger(b.ints[tt])||b.ints[tt]&&_e.isInteger(b.ints[tt].low)&&_e.isInteger(b.ints[tt].high)))return"ints: integer|Long[] expected"}if(b.strings!=null&&b.hasOwnProperty("strings")){if(!Array.isArray(b.strings))return"strings: array expected";for(tt=0;tt<b.strings.length;++tt)if(!(b.strings[tt]&&typeof b.strings[tt].length=="number"||_e.isString(b.strings[tt])))return"strings: buffer[] expected"}if(b.tensors!=null&&b.hasOwnProperty("tensors")){if(!Array.isArray(b.tensors))return"tensors: array expected";for(tt=0;tt<b.tensors.length;++tt)if(nt=et.onnx.TensorProto.verify(b.tensors[tt]))return"tensors."+nt}if(b.graphs!=null&&b.hasOwnProperty("graphs")){if(!Array.isArray(b.graphs))return"graphs: array expected";for(tt=0;tt<b.graphs.length;++tt){var nt;if(nt=et.onnx.GraphProto.verify(b.graphs[tt]))return"graphs."+nt}}return null},_.fromObject=function(b){if(b instanceof et.onnx.AttributeProto)return b;var tt=new et.onnx.AttributeProto;switch(b.name!=null&&(tt.name=String(b.name)),b.refAttrName!=null&&(tt.refAttrName=String(b.refAttrName)),b.docString!=null&&(tt.docString=String(b.docString)),b.type){case"UNDEFINED":case 0:tt.type=0;break;case"FLOAT":case 1:tt.type=1;break;case"INT":case 2:tt.type=2;break;case"STRING":case 3:tt.type=3;break;case"TENSOR":case 4:tt.type=4;break;case"GRAPH":case 5:tt.type=5;break;case"FLOATS":case 6:tt.type=6;break;case"INTS":case 7:tt.type=7;break;case"STRINGS":case 8:tt.type=8;break;case"TENSORS":case 9:tt.type=9;break;case"GRAPHS":case 10:tt.type=10}if(b.f!=null&&(tt.f=Number(b.f)),b.i!=null&&(_e.Long?(tt.i=_e.Long.fromValue(b.i)).unsigned=!1:typeof b.i=="string"?tt.i=parseInt(b.i,10):typeof b.i=="number"?tt.i=b.i:typeof b.i=="object"&&(tt.i=new _e.LongBits(b.i.low>>>0,b.i.high>>>0).toNumber())),b.s!=null&&(typeof b.s=="string"?_e.base64.decode(b.s,tt.s=_e.newBuffer(_e.base64.length(b.s)),0):b.s.length&&(tt.s=b.s)),b.t!=null){if(typeof b.t!="object")throw TypeError(".onnx.AttributeProto.t: object expected");tt.t=et.onnx.TensorProto.fromObject(b.t)}if(b.g!=null){if(typeof b.g!="object")throw TypeError(".onnx.AttributeProto.g: object expected");tt.g=et.onnx.GraphProto.fromObject(b.g)}if(b.floats){if(!Array.isArray(b.floats))throw TypeError(".onnx.AttributeProto.floats: array expected");tt.floats=[];for(var nt=0;nt<b.floats.length;++nt)tt.floats[nt]=Number(b.floats[nt])}if(b.ints){if(!Array.isArray(b.ints))throw TypeError(".onnx.AttributeProto.ints: array expected");for(tt.ints=[],nt=0;nt<b.ints.length;++nt)_e.Long?(tt.ints[nt]=_e.Long.fromValue(b.ints[nt])).unsigned=!1:typeof b.ints[nt]=="string"?tt.ints[nt]=parseInt(b.ints[nt],10):typeof b.ints[nt]=="number"?tt.ints[nt]=b.ints[nt]:typeof b.ints[nt]=="object"&&(tt.ints[nt]=new _e.LongBits(b.ints[nt].low>>>0,b.ints[nt].high>>>0).toNumber())}if(b.strings){if(!Array.isArray(b.strings))throw TypeError(".onnx.AttributeProto.strings: array expected");for(tt.strings=[],nt=0;nt<b.strings.length;++nt)typeof b.strings[nt]=="string"?_e.base64.decode(b.strings[nt],tt.strings[nt]=_e.newBuffer(_e.base64.length(b.strings[nt])),0):b.strings[nt].length&&(tt.strings[nt]=b.strings[nt])}if(b.tensors){if(!Array.isArray(b.tensors))throw TypeError(".onnx.AttributeProto.tensors: array expected");for(tt.tensors=[],nt=0;nt<b.tensors.length;++nt){if(typeof b.tensors[nt]!="object")throw TypeError(".onnx.AttributeProto.tensors: object expected");tt.tensors[nt]=et.onnx.TensorProto.fromObject(b.tensors[nt])}}if(b.graphs){if(!Array.isArray(b.graphs))throw TypeError(".onnx.AttributeProto.graphs: array expected");for(tt.graphs=[],nt=0;nt<b.graphs.length;++nt){if(typeof b.graphs[nt]!="object")throw TypeError(".onnx.AttributeProto.graphs: object expected");tt.graphs[nt]=et.onnx.GraphProto.fromObject(b.graphs[nt])}}return tt},_.toObject=function(b,tt){tt||(tt={});var nt={};if((tt.arrays||tt.defaults)&&(nt.floats=[],nt.ints=[],nt.strings=[],nt.tensors=[],nt.graphs=[]),tt.defaults){if(nt.name="",nt.f=0,_e.Long){var rt=new _e.Long(0,0,!1);nt.i=tt.longs===String?rt.toString():tt.longs===Number?rt.toNumber():rt}else nt.i=tt.longs===String?"0":0;tt.bytes===String?nt.s="":(nt.s=[],tt.bytes!==Array&&(nt.s=_e.newBuffer(nt.s))),nt.t=null,nt.g=null,nt.docString="",nt.type=tt.enums===String?"UNDEFINED":0,nt.refAttrName=""}if(b.name!=null&&b.hasOwnProperty("name")&&(nt.name=b.name),b.f!=null&&b.hasOwnProperty("f")&&(nt.f=tt.json&&!isFinite(b.f)?String(b.f):b.f),b.i!=null&&b.hasOwnProperty("i")&&(typeof b.i=="number"?nt.i=tt.longs===String?String(b.i):b.i:nt.i=tt.longs===String?_e.Long.prototype.toString.call(b.i):tt.longs===Number?new _e.LongBits(b.i.low>>>0,b.i.high>>>0).toNumber():b.i),b.s!=null&&b.hasOwnProperty("s")&&(nt.s=tt.bytes===String?_e.base64.encode(b.s,0,b.s.length):tt.bytes===Array?Array.prototype.slice.call(b.s):b.s),b.t!=null&&b.hasOwnProperty("t")&&(nt.t=et.onnx.TensorProto.toObject(b.t,tt)),b.g!=null&&b.hasOwnProperty("g")&&(nt.g=et.onnx.GraphProto.toObject(b.g,tt)),b.floats&&b.floats.length){nt.floats=[];for(var st=0;st<b.floats.length;++st)nt.floats[st]=tt.json&&!isFinite(b.floats[st])?String(b.floats[st]):b.floats[st]}if(b.ints&&b.ints.length)for(nt.ints=[],st=0;st<b.ints.length;++st)typeof b.ints[st]=="number"?nt.ints[st]=tt.longs===String?String(b.ints[st]):b.ints[st]:nt.ints[st]=tt.longs===String?_e.Long.prototype.toString.call(b.ints[st]):tt.longs===Number?new _e.LongBits(b.ints[st].low>>>0,b.ints[st].high>>>0).toNumber():b.ints[st];if(b.strings&&b.strings.length)for(nt.strings=[],st=0;st<b.strings.length;++st)nt.strings[st]=tt.bytes===String?_e.base64.encode(b.strings[st],0,b.strings[st].length):tt.bytes===Array?Array.prototype.slice.call(b.strings[st]):b.strings[st];if(b.tensors&&b.tensors.length)for(nt.tensors=[],st=0;st<b.tensors.length;++st)nt.tensors[st]=et.onnx.TensorProto.toObject(b.tensors[st],tt);if(b.graphs&&b.graphs.length)for(nt.graphs=[],st=0;st<b.graphs.length;++st)nt.graphs[st]=et.onnx.GraphProto.toObject(b.graphs[st],tt);return b.docString!=null&&b.hasOwnProperty("docString")&&(nt.docString=b.docString),b.type!=null&&b.hasOwnProperty("type")&&(nt.type=tt.enums===String?et.onnx.AttributeProto.AttributeType[b.type]:b.type),b.refAttrName!=null&&b.hasOwnProperty("refAttrName")&&(nt.refAttrName=b.refAttrName),nt},_.prototype.toJSON=function(){return this.constructor.toObject(this,g.util.toJSONOptions)},_.AttributeType=function(){var b={},tt=Object.create(b);return tt[b[0]="UNDEFINED"]=0,tt[b[1]="FLOAT"]=1,tt[b[2]="INT"]=2,tt[b[3]="STRING"]=3,tt[b[4]="TENSOR"]=4,tt[b[5]="GRAPH"]=5,tt[b[6]="FLOATS"]=6,tt[b[7]="INTS"]=7,tt[b[8]="STRINGS"]=8,tt[b[9]="TENSORS"]=9,tt[b[10]="GRAPHS"]=10,tt}(),_}(),d.ValueInfoProto=function(){function _(b){if(b)for(var tt=Object.keys(b),nt=0;nt<tt.length;++nt)b[tt[nt]]!=null&&(this[tt[nt]]=b[tt[nt]])}return _.prototype.name="",_.prototype.type=null,_.prototype.docString="",_.create=function(b){return new _(b)},_.encode=function(b,tt){return tt||(tt=j.create()),b.name!=null&&b.hasOwnProperty("name")&&tt.uint32(10).string(b.name),b.type!=null&&b.hasOwnProperty("type")&&et.onnx.TypeProto.encode(b.type,tt.uint32(18).fork()).ldelim(),b.docString!=null&&b.hasOwnProperty("docString")&&tt.uint32(26).string(b.docString),tt},_.encodeDelimited=function(b,tt){return this.encode(b,tt).ldelim()},_.decode=function(b,tt){b instanceof $||(b=$.create(b));for(var nt=tt===void 0?b.len:b.pos+tt,rt=new et.onnx.ValueInfoProto;b.pos<nt;){var st=b.uint32();switch(st>>>3){case 1:rt.name=b.string();break;case 2:rt.type=et.onnx.TypeProto.decode(b,b.uint32());break;case 3:rt.docString=b.string();break;default:b.skipType(7&st)}}return rt},_.decodeDelimited=function(b){return b instanceof $||(b=new $(b)),this.decode(b,b.uint32())},_.verify=function(b){if(typeof b!="object"||b===null)return"object expected";if(b.name!=null&&b.hasOwnProperty("name")&&!_e.isString(b.name))return"name: string expected";if(b.type!=null&&b.hasOwnProperty("type")){var tt=et.onnx.TypeProto.verify(b.type);if(tt)return"type."+tt}return b.docString!=null&&b.hasOwnProperty("docString")&&!_e.isString(b.docString)?"docString: string expected":null},_.fromObject=function(b){if(b instanceof et.onnx.ValueInfoProto)return b;var tt=new et.onnx.ValueInfoProto;if(b.name!=null&&(tt.name=String(b.name)),b.type!=null){if(typeof b.type!="object")throw TypeError(".onnx.ValueInfoProto.type: object expected");tt.type=et.onnx.TypeProto.fromObject(b.type)}return b.docString!=null&&(tt.docString=String(b.docString)),tt},_.toObject=function(b,tt){tt||(tt={});var nt={};return tt.defaults&&(nt.name="",nt.type=null,nt.docString=""),b.name!=null&&b.hasOwnProperty("name")&&(nt.name=b.name),b.type!=null&&b.hasOwnProperty("type")&&(nt.type=et.onnx.TypeProto.toObject(b.type,tt)),b.docString!=null&&b.hasOwnProperty("docString")&&(nt.docString=b.docString),nt},_.prototype.toJSON=function(){return this.constructor.toObject(this,g.util.toJSONOptions)},_}(),d.NodeProto=function(){function _(b){if(this.input=[],this.output=[],this.attribute=[],b)for(var tt=Object.keys(b),nt=0;nt<tt.length;++nt)b[tt[nt]]!=null&&(this[tt[nt]]=b[tt[nt]])}return _.prototype.input=_e.emptyArray,_.prototype.output=_e.emptyArray,_.prototype.name="",_.prototype.opType="",_.prototype.domain="",_.prototype.attribute=_e.emptyArray,_.prototype.docString="",_.create=function(b){return new _(b)},_.encode=function(b,tt){if(tt||(tt=j.create()),b.input!=null&&b.input.length)for(var nt=0;nt<b.input.length;++nt)tt.uint32(10).string(b.input[nt]);if(b.output!=null&&b.output.length)for(nt=0;nt<b.output.length;++nt)tt.uint32(18).string(b.output[nt]);if(b.name!=null&&b.hasOwnProperty("name")&&tt.uint32(26).string(b.name),b.opType!=null&&b.hasOwnProperty("opType")&&tt.uint32(34).string(b.opType),b.attribute!=null&&b.attribute.length)for(nt=0;nt<b.attribute.length;++nt)et.onnx.AttributeProto.encode(b.attribute[nt],tt.uint32(42).fork()).ldelim();return b.docString!=null&&b.hasOwnProperty("docString")&&tt.uint32(50).string(b.docString),b.domain!=null&&b.hasOwnProperty("domain")&&tt.uint32(58).string(b.domain),tt},_.encodeDelimited=function(b,tt){return this.encode(b,tt).ldelim()},_.decode=function(b,tt){b instanceof $||(b=$.create(b));for(var nt=tt===void 0?b.len:b.pos+tt,rt=new et.onnx.NodeProto;b.pos<nt;){var st=b.uint32();switch(st>>>3){case 1:rt.input&&rt.input.length||(rt.input=[]),rt.input.push(b.string());break;case 2:rt.output&&rt.output.length||(rt.output=[]),rt.output.push(b.string());break;case 3:rt.name=b.string();break;case 4:rt.opType=b.string();break;case 7:rt.domain=b.string();break;case 5:rt.attribute&&rt.attribute.length||(rt.attribute=[]),rt.attribute.push(et.onnx.AttributeProto.decode(b,b.uint32()));break;case 6:rt.docString=b.string();break;default:b.skipType(7&st)}}return rt},_.decodeDelimited=function(b){return b instanceof $||(b=new $(b)),this.decode(b,b.uint32())},_.verify=function(b){if(typeof b!="object"||b===null)return"object expected";if(b.input!=null&&b.hasOwnProperty("input")){if(!Array.isArray(b.input))return"input: array expected";for(var tt=0;tt<b.input.length;++tt)if(!_e.isString(b.input[tt]))return"input: string[] expected"}if(b.output!=null&&b.hasOwnProperty("output")){if(!Array.isArray(b.output))return"output: array expected";for(tt=0;tt<b.output.length;++tt)if(!_e.isString(b.output[tt]))return"output: string[] expected"}if(b.name!=null&&b.hasOwnProperty("name")&&!_e.isString(b.name))return"name: string expected";if(b.opType!=null&&b.hasOwnProperty("opType")&&!_e.isString(b.opType))return"opType: string expected";if(b.domain!=null&&b.hasOwnProperty("domain")&&!_e.isString(b.domain))return"domain: string expected";if(b.attribute!=null&&b.hasOwnProperty("attribute")){if(!Array.isArray(b.attribute))return"attribute: array expected";for(tt=0;tt<b.attribute.length;++tt){var nt=et.onnx.AttributeProto.verify(b.attribute[tt]);if(nt)return"attribute."+nt}}return b.docString!=null&&b.hasOwnProperty("docString")&&!_e.isString(b.docString)?"docString: string expected":null},_.fromObject=function(b){if(b instanceof et.onnx.NodeProto)return b;var tt=new et.onnx.NodeProto;if(b.input){if(!Array.isArray(b.input))throw TypeError(".onnx.NodeProto.input: array expected");tt.input=[];for(var nt=0;nt<b.input.length;++nt)tt.input[nt]=String(b.input[nt])}if(b.output){if(!Array.isArray(b.output))throw TypeError(".onnx.NodeProto.output: array expected");for(tt.output=[],nt=0;nt<b.output.length;++nt)tt.output[nt]=String(b.output[nt])}if(b.name!=null&&(tt.name=String(b.name)),b.opType!=null&&(tt.opType=String(b.opType)),b.domain!=null&&(tt.domain=String(b.domain)),b.attribute){if(!Array.isArray(b.attribute))throw TypeError(".onnx.NodeProto.attribute: array expected");for(tt.attribute=[],nt=0;nt<b.attribute.length;++nt){if(typeof b.attribute[nt]!="object")throw TypeError(".onnx.NodeProto.attribute: object expected");tt.attribute[nt]=et.onnx.AttributeProto.fromObject(b.attribute[nt])}}return b.docString!=null&&(tt.docString=String(b.docString)),tt},_.toObject=function(b,tt){tt||(tt={});var nt={};if((tt.arrays||tt.defaults)&&(nt.input=[],nt.output=[],nt.attribute=[]),tt.defaults&&(nt.name="",nt.opType="",nt.docString="",nt.domain=""),b.input&&b.input.length){nt.input=[];for(var rt=0;rt<b.input.length;++rt)nt.input[rt]=b.input[rt]}if(b.output&&b.output.length)for(nt.output=[],rt=0;rt<b.output.length;++rt)nt.output[rt]=b.output[rt];if(b.name!=null&&b.hasOwnProperty("name")&&(nt.name=b.name),b.opType!=null&&b.hasOwnProperty("opType")&&(nt.opType=b.opType),b.attribute&&b.attribute.length)for(nt.attribute=[],rt=0;rt<b.attribute.length;++rt)nt.attribute[rt]=et.onnx.AttributeProto.toObject(b.attribute[rt],tt);return b.docString!=null&&b.hasOwnProperty("docString")&&(nt.docString=b.docString),b.domain!=null&&b.hasOwnProperty("domain")&&(nt.domain=b.domain),nt},_.prototype.toJSON=function(){return this.constructor.toObject(this,g.util.toJSONOptions)},_}(),d.ModelProto=function(){function _(b){if(this.opsetImport=[],this.metadataProps=[],b)for(var tt=Object.keys(b),nt=0;nt<tt.length;++nt)b[tt[nt]]!=null&&(this[tt[nt]]=b[tt[nt]])}return _.prototype.irVersion=_e.Long?_e.Long.fromBits(0,0,!1):0,_.prototype.opsetImport=_e.emptyArray,_.prototype.producerName="",_.prototype.producerVersion="",_.prototype.domain="",_.prototype.modelVersion=_e.Long?_e.Long.fromBits(0,0,!1):0,_.prototype.docString="",_.prototype.graph=null,_.prototype.metadataProps=_e.emptyArray,_.create=function(b){return new _(b)},_.encode=function(b,tt){if(tt||(tt=j.create()),b.irVersion!=null&&b.hasOwnProperty("irVersion")&&tt.uint32(8).int64(b.irVersion),b.producerName!=null&&b.hasOwnProperty("producerName")&&tt.uint32(18).string(b.producerName),b.producerVersion!=null&&b.hasOwnProperty("producerVersion")&&tt.uint32(26).string(b.producerVersion),b.domain!=null&&b.hasOwnProperty("domain")&&tt.uint32(34).string(b.domain),b.modelVersion!=null&&b.hasOwnProperty("modelVersion")&&tt.uint32(40).int64(b.modelVersion),b.docString!=null&&b.hasOwnProperty("docString")&&tt.uint32(50).string(b.docString),b.graph!=null&&b.hasOwnProperty("graph")&&et.onnx.GraphProto.encode(b.graph,tt.uint32(58).fork()).ldelim(),b.opsetImport!=null&&b.opsetImport.length)for(var nt=0;nt<b.opsetImport.length;++nt)et.onnx.OperatorSetIdProto.encode(b.opsetImport[nt],tt.uint32(66).fork()).ldelim();if(b.metadataProps!=null&&b.metadataProps.length)for(nt=0;nt<b.metadataProps.length;++nt)et.onnx.StringStringEntryProto.encode(b.metadataProps[nt],tt.uint32(114).fork()).ldelim();return tt},_.encodeDelimited=function(b,tt){return this.encode(b,tt).ldelim()},_.decode=function(b,tt){b instanceof $||(b=$.create(b));for(var nt=tt===void 0?b.len:b.pos+tt,rt=new et.onnx.ModelProto;b.pos<nt;){var st=b.uint32();switch(st>>>3){case 1:rt.irVersion=b.int64();break;case 8:rt.opsetImport&&rt.opsetImport.length||(rt.opsetImport=[]),rt.opsetImport.push(et.onnx.OperatorSetIdProto.decode(b,b.uint32()));break;case 2:rt.producerName=b.string();break;case 3:rt.producerVersion=b.string();break;case 4:rt.domain=b.string();break;case 5:rt.modelVersion=b.int64();break;case 6:rt.docString=b.string();break;case 7:rt.graph=et.onnx.GraphProto.decode(b,b.uint32());break;case 14:rt.metadataProps&&rt.metadataProps.length||(rt.metadataProps=[]),rt.metadataProps.push(et.onnx.StringStringEntryProto.decode(b,b.uint32()));break;default:b.skipType(7&st)}}return rt},_.decodeDelimited=function(b){return b instanceof $||(b=new $(b)),this.decode(b,b.uint32())},_.verify=function(b){if(typeof b!="object"||b===null)return"object expected";if(b.irVersion!=null&&b.hasOwnProperty("irVersion")&&!(_e.isInteger(b.irVersion)||b.irVersion&&_e.isInteger(b.irVersion.low)&&_e.isInteger(b.irVersion.high)))return"irVersion: integer|Long expected";if(b.opsetImport!=null&&b.hasOwnProperty("opsetImport")){if(!Array.isArray(b.opsetImport))return"opsetImport: array expected";for(var tt=0;tt<b.opsetImport.length;++tt)if(nt=et.onnx.OperatorSetIdProto.verify(b.opsetImport[tt]))return"opsetImport."+nt}if(b.producerName!=null&&b.hasOwnProperty("producerName")&&!_e.isString(b.producerName))return"producerName: string expected";if(b.producerVersion!=null&&b.hasOwnProperty("producerVersion")&&!_e.isString(b.producerVersion))return"producerVersion: string expected";if(b.domain!=null&&b.hasOwnProperty("domain")&&!_e.isString(b.domain))return"domain: string expected";if(b.modelVersion!=null&&b.hasOwnProperty("modelVersion")&&!(_e.isInteger(b.modelVersion)||b.modelVersion&&_e.isInteger(b.modelVersion.low)&&_e.isInteger(b.modelVersion.high)))return"modelVersion: integer|Long expected";if(b.docString!=null&&b.hasOwnProperty("docString")&&!_e.isString(b.docString))return"docString: string expected";if(b.graph!=null&&b.hasOwnProperty("graph")&&(nt=et.onnx.GraphProto.verify(b.graph)))return"graph."+nt;if(b.metadataProps!=null&&b.hasOwnProperty("metadataProps")){if(!Array.isArray(b.metadataProps))return"metadataProps: array expected";for(tt=0;tt<b.metadataProps.length;++tt){var nt;if(nt=et.onnx.StringStringEntryProto.verify(b.metadataProps[tt]))return"metadataProps."+nt}}return null},_.fromObject=function(b){if(b instanceof et.onnx.ModelProto)return b;var tt=new et.onnx.ModelProto;if(b.irVersion!=null&&(_e.Long?(tt.irVersion=_e.Long.fromValue(b.irVersion)).unsigned=!1:typeof b.irVersion=="string"?tt.irVersion=parseInt(b.irVersion,10):typeof b.irVersion=="number"?tt.irVersion=b.irVersion:typeof b.irVersion=="object"&&(tt.irVersion=new _e.LongBits(b.irVersion.low>>>0,b.irVersion.high>>>0).toNumber())),b.opsetImport){if(!Array.isArray(b.opsetImport))throw TypeError(".onnx.ModelProto.opsetImport: array expected");tt.opsetImport=[];for(var nt=0;nt<b.opsetImport.length;++nt){if(typeof b.opsetImport[nt]!="object")throw TypeError(".onnx.ModelProto.opsetImport: object expected");tt.opsetImport[nt]=et.onnx.OperatorSetIdProto.fromObject(b.opsetImport[nt])}}if(b.producerName!=null&&(tt.producerName=String(b.producerName)),b.producerVersion!=null&&(tt.producerVersion=String(b.producerVersion)),b.domain!=null&&(tt.domain=String(b.domain)),b.modelVersion!=null&&(_e.Long?(tt.modelVersion=_e.Long.fromValue(b.modelVersion)).unsigned=!1:typeof b.modelVersion=="string"?tt.modelVersion=parseInt(b.modelVersion,10):typeof b.modelVersion=="number"?tt.modelVersion=b.modelVersion:typeof b.modelVersion=="object"&&(tt.modelVersion=new _e.LongBits(b.modelVersion.low>>>0,b.modelVersion.high>>>0).toNumber())),b.docString!=null&&(tt.docString=String(b.docString)),b.graph!=null){if(typeof b.graph!="object")throw TypeError(".onnx.ModelProto.graph: object expected");tt.graph=et.onnx.GraphProto.fromObject(b.graph)}if(b.metadataProps){if(!Array.isArray(b.metadataProps))throw TypeError(".onnx.ModelProto.metadataProps: array expected");for(tt.metadataProps=[],nt=0;nt<b.metadataProps.length;++nt){if(typeof b.metadataProps[nt]!="object")throw TypeError(".onnx.ModelProto.metadataProps: object expected");tt.metadataProps[nt]=et.onnx.StringStringEntryProto.fromObject(b.metadataProps[nt])}}return tt},_.toObject=function(b,tt){tt||(tt={});var nt={};if((tt.arrays||tt.defaults)&&(nt.opsetImport=[],nt.metadataProps=[]),tt.defaults){if(_e.Long){var rt=new _e.Long(0,0,!1);nt.irVersion=tt.longs===String?rt.toString():tt.longs===Number?rt.toNumber():rt}else nt.irVersion=tt.longs===String?"0":0;nt.producerName="",nt.producerVersion="",nt.domain="",_e.Long?(rt=new _e.Long(0,0,!1),nt.modelVersion=tt.longs===String?rt.toString():tt.longs===Number?rt.toNumber():rt):nt.modelVersion=tt.longs===String?"0":0,nt.docString="",nt.graph=null}if(b.irVersion!=null&&b.hasOwnProperty("irVersion")&&(typeof b.irVersion=="number"?nt.irVersion=tt.longs===String?String(b.irVersion):b.irVersion:nt.irVersion=tt.longs===String?_e.Long.prototype.toString.call(b.irVersion):tt.longs===Number?new _e.LongBits(b.irVersion.low>>>0,b.irVersion.high>>>0).toNumber():b.irVersion),b.producerName!=null&&b.hasOwnProperty("producerName")&&(nt.producerName=b.producerName),b.producerVersion!=null&&b.hasOwnProperty("producerVersion")&&(nt.producerVersion=b.producerVersion),b.domain!=null&&b.hasOwnProperty("domain")&&(nt.domain=b.domain),b.modelVersion!=null&&b.hasOwnProperty("modelVersion")&&(typeof b.modelVersion=="number"?nt.modelVersion=tt.longs===String?String(b.modelVersion):b.modelVersion:nt.modelVersion=tt.longs===String?_e.Long.prototype.toString.call(b.modelVersion):tt.longs===Number?new _e.LongBits(b.modelVersion.low>>>0,b.modelVersion.high>>>0).toNumber():b.modelVersion),b.docString!=null&&b.hasOwnProperty("docString")&&(nt.docString=b.docString),b.graph!=null&&b.hasOwnProperty("graph")&&(nt.graph=et.onnx.GraphProto.toObject(b.graph,tt)),b.opsetImport&&b.opsetImport.length){nt.opsetImport=[];for(var st=0;st<b.opsetImport.length;++st)nt.opsetImport[st]=et.onnx.OperatorSetIdProto.toObject(b.opsetImport[st],tt)}if(b.metadataProps&&b.metadataProps.length)for(nt.metadataProps=[],st=0;st<b.metadataProps.length;++st)nt.metadataProps[st]=et.onnx.StringStringEntryProto.toObject(b.metadataProps[st],tt);return nt},_.prototype.toJSON=function(){return this.constructor.toObject(this,g.util.toJSONOptions)},_}(),d.StringStringEntryProto=function(){function _(b){if(b)for(var tt=Object.keys(b),nt=0;nt<tt.length;++nt)b[tt[nt]]!=null&&(this[tt[nt]]=b[tt[nt]])}return _.prototype.key="",_.prototype.value="",_.create=function(b){return new _(b)},_.encode=function(b,tt){return tt||(tt=j.create()),b.key!=null&&b.hasOwnProperty("key")&&tt.uint32(10).string(b.key),b.value!=null&&b.hasOwnProperty("value")&&tt.uint32(18).string(b.value),tt},_.encodeDelimited=function(b,tt){return this.encode(b,tt).ldelim()},_.decode=function(b,tt){b instanceof $||(b=$.create(b));for(var nt=tt===void 0?b.len:b.pos+tt,rt=new et.onnx.StringStringEntryProto;b.pos<nt;){var st=b.uint32();switch(st>>>3){case 1:rt.key=b.string();break;case 2:rt.value=b.string();break;default:b.skipType(7&st)}}return rt},_.decodeDelimited=function(b){return b instanceof $||(b=new $(b)),this.decode(b,b.uint32())},_.verify=function(b){return typeof b!="object"||b===null?"object expected":b.key!=null&&b.hasOwnProperty("key")&&!_e.isString(b.key)?"key: string expected":b.value!=null&&b.hasOwnProperty("value")&&!_e.isString(b.value)?"value: string expected":null},_.fromObject=function(b){if(b instanceof et.onnx.StringStringEntryProto)return b;var tt=new et.onnx.StringStringEntryProto;return b.key!=null&&(tt.key=String(b.key)),b.value!=null&&(tt.value=String(b.value)),tt},_.toObject=function(b,tt){tt||(tt={});var nt={};return tt.defaults&&(nt.key="",nt.value=""),b.key!=null&&b.hasOwnProperty("key")&&(nt.key=b.key),b.value!=null&&b.hasOwnProperty("value")&&(nt.value=b.value),nt},_.prototype.toJSON=function(){return this.constructor.toObject(this,g.util.toJSONOptions)},_}(),d.TensorAnnotation=function(){function _(b){if(this.quantParameterTensorNames=[],b)for(var tt=Object.keys(b),nt=0;nt<tt.length;++nt)b[tt[nt]]!=null&&(this[tt[nt]]=b[tt[nt]])}return _.prototype.tensorName="",_.prototype.quantParameterTensorNames=_e.emptyArray,_.create=function(b){return new _(b)},_.encode=function(b,tt){if(tt||(tt=j.create()),b.tensorName!=null&&b.hasOwnProperty("tensorName")&&tt.uint32(10).string(b.tensorName),b.quantParameterTensorNames!=null&&b.quantParameterTensorNames.length)for(var nt=0;nt<b.quantParameterTensorNames.length;++nt)et.onnx.StringStringEntryProto.encode(b.quantParameterTensorNames[nt],tt.uint32(18).fork()).ldelim();return tt},_.encodeDelimited=function(b,tt){return this.encode(b,tt).ldelim()},_.decode=function(b,tt){b instanceof $||(b=$.create(b));for(var nt=tt===void 0?b.len:b.pos+tt,rt=new et.onnx.TensorAnnotation;b.pos<nt;){var st=b.uint32();switch(st>>>3){case 1:rt.tensorName=b.string();break;case 2:rt.quantParameterTensorNames&&rt.quantParameterTensorNames.length||(rt.quantParameterTensorNames=[]),rt.quantParameterTensorNames.push(et.onnx.StringStringEntryProto.decode(b,b.uint32()));break;default:b.skipType(7&st)}}return rt},_.decodeDelimited=function(b){return b instanceof $||(b=new $(b)),this.decode(b,b.uint32())},_.verify=function(b){if(typeof b!="object"||b===null)return"object expected";if(b.tensorName!=null&&b.hasOwnProperty("tensorName")&&!_e.isString(b.tensorName))return"tensorName: string expected";if(b.quantParameterTensorNames!=null&&b.hasOwnProperty("quantParameterTensorNames")){if(!Array.isArray(b.quantParameterTensorNames))return"quantParameterTensorNames: array expected";for(var tt=0;tt<b.quantParameterTensorNames.length;++tt){var nt=et.onnx.StringStringEntryProto.verify(b.quantParameterTensorNames[tt]);if(nt)return"quantParameterTensorNames."+nt}}return null},_.fromObject=function(b){if(b instanceof et.onnx.TensorAnnotation)return b;var tt=new et.onnx.TensorAnnotation;if(b.tensorName!=null&&(tt.tensorName=String(b.tensorName)),b.quantParameterTensorNames){if(!Array.isArray(b.quantParameterTensorNames))throw TypeError(".onnx.TensorAnnotation.quantParameterTensorNames: array expected");tt.quantParameterTensorNames=[];for(var nt=0;nt<b.quantParameterTensorNames.length;++nt){if(typeof b.quantParameterTensorNames[nt]!="object")throw TypeError(".onnx.TensorAnnotation.quantParameterTensorNames: object expected");tt.quantParameterTensorNames[nt]=et.onnx.StringStringEntryProto.fromObject(b.quantParameterTensorNames[nt])}}return tt},_.toObject=function(b,tt){tt||(tt={});var nt={};if((tt.arrays||tt.defaults)&&(nt.quantParameterTensorNames=[]),tt.defaults&&(nt.tensorName=""),b.tensorName!=null&&b.hasOwnProperty("tensorName")&&(nt.tensorName=b.tensorName),b.quantParameterTensorNames&&b.quantParameterTensorNames.length){nt.quantParameterTensorNames=[];for(var rt=0;rt<b.quantParameterTensorNames.length;++rt)nt.quantParameterTensorNames[rt]=et.onnx.StringStringEntryProto.toObject(b.quantParameterTensorNames[rt],tt)}return nt},_.prototype.toJSON=function(){return this.constructor.toObject(this,g.util.toJSONOptions)},_}(),d.GraphProto=function(){function _(b){if(this.node=[],this.initializer=[],this.input=[],this.output=[],this.valueInfo=[],this.quantizationAnnotation=[],b)for(var tt=Object.keys(b),nt=0;nt<tt.length;++nt)b[tt[nt]]!=null&&(this[tt[nt]]=b[tt[nt]])}return _.prototype.node=_e.emptyArray,_.prototype.name="",_.prototype.initializer=_e.emptyArray,_.prototype.docString="",_.prototype.input=_e.emptyArray,_.prototype.output=_e.emptyArray,_.prototype.valueInfo=_e.emptyArray,_.prototype.quantizationAnnotation=_e.emptyArray,_.create=function(b){return new _(b)},_.encode=function(b,tt){if(tt||(tt=j.create()),b.node!=null&&b.node.length)for(var nt=0;nt<b.node.length;++nt)et.onnx.NodeProto.encode(b.node[nt],tt.uint32(10).fork()).ldelim();if(b.name!=null&&b.hasOwnProperty("name")&&tt.uint32(18).string(b.name),b.initializer!=null&&b.initializer.length)for(nt=0;nt<b.initializer.length;++nt)et.onnx.TensorProto.encode(b.initializer[nt],tt.uint32(42).fork()).ldelim();if(b.docString!=null&&b.hasOwnProperty("docString")&&tt.uint32(82).string(b.docString),b.input!=null&&b.input.length)for(nt=0;nt<b.input.length;++nt)et.onnx.ValueInfoProto.encode(b.input[nt],tt.uint32(90).fork()).ldelim();if(b.output!=null&&b.output.length)for(nt=0;nt<b.output.length;++nt)et.onnx.ValueInfoProto.encode(b.output[nt],tt.uint32(98).fork()).ldelim();if(b.valueInfo!=null&&b.valueInfo.length)for(nt=0;nt<b.valueInfo.length;++nt)et.onnx.ValueInfoProto.encode(b.valueInfo[nt],tt.uint32(106).fork()).ldelim();if(b.quantizationAnnotation!=null&&b.quantizationAnnotation.length)for(nt=0;nt<b.quantizationAnnotation.length;++nt)et.onnx.TensorAnnotation.encode(b.quantizationAnnotation[nt],tt.uint32(114).fork()).ldelim();return tt},_.encodeDelimited=function(b,tt){return this.encode(b,tt).ldelim()},_.decode=function(b,tt){b instanceof $||(b=$.create(b));for(var nt=tt===void 0?b.len:b.pos+tt,rt=new et.onnx.GraphProto;b.pos<nt;){var st=b.uint32();switch(st>>>3){case 1:rt.node&&rt.node.length||(rt.node=[]),rt.node.push(et.onnx.NodeProto.decode(b,b.uint32()));break;case 2:rt.name=b.string();break;case 5:rt.initializer&&rt.initializer.length||(rt.initializer=[]),rt.initializer.push(et.onnx.TensorProto.decode(b,b.uint32()));break;case 10:rt.docString=b.string();break;case 11:rt.input&&rt.input.length||(rt.input=[]),rt.input.push(et.onnx.ValueInfoProto.decode(b,b.uint32()));break;case 12:rt.output&&rt.output.length||(rt.output=[]),rt.output.push(et.onnx.ValueInfoProto.decode(b,b.uint32()));break;case 13:rt.valueInfo&&rt.valueInfo.length||(rt.valueInfo=[]),rt.valueInfo.push(et.onnx.ValueInfoProto.decode(b,b.uint32()));break;case 14:rt.quantizationAnnotation&&rt.quantizationAnnotation.length||(rt.quantizationAnnotation=[]),rt.quantizationAnnotation.push(et.onnx.TensorAnnotation.decode(b,b.uint32()));break;default:b.skipType(7&st)}}return rt},_.decodeDelimited=function(b){return b instanceof $||(b=new $(b)),this.decode(b,b.uint32())},_.verify=function(b){if(typeof b!="object"||b===null)return"object expected";if(b.node!=null&&b.hasOwnProperty("node")){if(!Array.isArray(b.node))return"node: array expected";for(var tt=0;tt<b.node.length;++tt)if(nt=et.onnx.NodeProto.verify(b.node[tt]))return"node."+nt}if(b.name!=null&&b.hasOwnProperty("name")&&!_e.isString(b.name))return"name: string expected";if(b.initializer!=null&&b.hasOwnProperty("initializer")){if(!Array.isArray(b.initializer))return"initializer: array expected";for(tt=0;tt<b.initializer.length;++tt)if(nt=et.onnx.TensorProto.verify(b.initializer[tt]))return"initializer."+nt}if(b.docString!=null&&b.hasOwnProperty("docString")&&!_e.isString(b.docString))return"docString: string expected";if(b.input!=null&&b.hasOwnProperty("input")){if(!Array.isArray(b.input))return"input: array expected";for(tt=0;tt<b.input.length;++tt)if(nt=et.onnx.ValueInfoProto.verify(b.input[tt]))return"input."+nt}if(b.output!=null&&b.hasOwnProperty("output")){if(!Array.isArray(b.output))return"output: array expected";for(tt=0;tt<b.output.length;++tt)if(nt=et.onnx.ValueInfoProto.verify(b.output[tt]))return"output."+nt}if(b.valueInfo!=null&&b.hasOwnProperty("valueInfo")){if(!Array.isArray(b.valueInfo))return"valueInfo: array expected";for(tt=0;tt<b.valueInfo.length;++tt)if(nt=et.onnx.ValueInfoProto.verify(b.valueInfo[tt]))return"valueInfo."+nt}if(b.quantizationAnnotation!=null&&b.hasOwnProperty("quantizationAnnotation")){if(!Array.isArray(b.quantizationAnnotation))return"quantizationAnnotation: array expected";for(tt=0;tt<b.quantizationAnnotation.length;++tt){var nt;if(nt=et.onnx.TensorAnnotation.verify(b.quantizationAnnotation[tt]))return"quantizationAnnotation."+nt}}return null},_.fromObject=function(b){if(b instanceof et.onnx.GraphProto)return b;var tt=new et.onnx.GraphProto;if(b.node){if(!Array.isArray(b.node))throw TypeError(".onnx.GraphProto.node: array expected");tt.node=[];for(var nt=0;nt<b.node.length;++nt){if(typeof b.node[nt]!="object")throw TypeError(".onnx.GraphProto.node: object expected");tt.node[nt]=et.onnx.NodeProto.fromObject(b.node[nt])}}if(b.name!=null&&(tt.name=String(b.name)),b.initializer){if(!Array.isArray(b.initializer))throw TypeError(".onnx.GraphProto.initializer: array expected");for(tt.initializer=[],nt=0;nt<b.initializer.length;++nt){if(typeof b.initializer[nt]!="object")throw TypeError(".onnx.GraphProto.initializer: object expected");tt.initializer[nt]=et.onnx.TensorProto.fromObject(b.initializer[nt])}}if(b.docString!=null&&(tt.docString=String(b.docString)),b.input){if(!Array.isArray(b.input))throw TypeError(".onnx.GraphProto.input: array expected");for(tt.input=[],nt=0;nt<b.input.length;++nt){if(typeof b.input[nt]!="object")throw TypeError(".onnx.GraphProto.input: object expected");tt.input[nt]=et.onnx.ValueInfoProto.fromObject(b.input[nt])}}if(b.output){if(!Array.isArray(b.output))throw TypeError(".onnx.GraphProto.output: array expected");for(tt.output=[],nt=0;nt<b.output.length;++nt){if(typeof b.output[nt]!="object")throw TypeError(".onnx.GraphProto.output: object expected");tt.output[nt]=et.onnx.ValueInfoProto.fromObject(b.output[nt])}}if(b.valueInfo){if(!Array.isArray(b.valueInfo))throw TypeError(".onnx.GraphProto.valueInfo: array expected");for(tt.valueInfo=[],nt=0;nt<b.valueInfo.length;++nt){if(typeof b.valueInfo[nt]!="object")throw TypeError(".onnx.GraphProto.valueInfo: object expected");tt.valueInfo[nt]=et.onnx.ValueInfoProto.fromObject(b.valueInfo[nt])}}if(b.quantizationAnnotation){if(!Array.isArray(b.quantizationAnnotation))throw TypeError(".onnx.GraphProto.quantizationAnnotation: array expected");for(tt.quantizationAnnotation=[],nt=0;nt<b.quantizationAnnotation.length;++nt){if(typeof b.quantizationAnnotation[nt]!="object")throw TypeError(".onnx.GraphProto.quantizationAnnotation: object expected");tt.quantizationAnnotation[nt]=et.onnx.TensorAnnotation.fromObject(b.quantizationAnnotation[nt])}}return tt},_.toObject=function(b,tt){tt||(tt={});var nt={};if((tt.arrays||tt.defaults)&&(nt.node=[],nt.initializer=[],nt.input=[],nt.output=[],nt.valueInfo=[],nt.quantizationAnnotation=[]),tt.defaults&&(nt.name="",nt.docString=""),b.node&&b.node.length){nt.node=[];for(var rt=0;rt<b.node.length;++rt)nt.node[rt]=et.onnx.NodeProto.toObject(b.node[rt],tt)}if(b.name!=null&&b.hasOwnProperty("name")&&(nt.name=b.name),b.initializer&&b.initializer.length)for(nt.initializer=[],rt=0;rt<b.initializer.length;++rt)nt.initializer[rt]=et.onnx.TensorProto.toObject(b.initializer[rt],tt);if(b.docString!=null&&b.hasOwnProperty("docString")&&(nt.docString=b.docString),b.input&&b.input.length)for(nt.input=[],rt=0;rt<b.input.length;++rt)nt.input[rt]=et.onnx.ValueInfoProto.toObject(b.input[rt],tt);if(b.output&&b.output.length)for(nt.output=[],rt=0;rt<b.output.length;++rt)nt.output[rt]=et.onnx.ValueInfoProto.toObject(b.output[rt],tt);if(b.valueInfo&&b.valueInfo.length)for(nt.valueInfo=[],rt=0;rt<b.valueInfo.length;++rt)nt.valueInfo[rt]=et.onnx.ValueInfoProto.toObject(b.valueInfo[rt],tt);if(b.quantizationAnnotation&&b.quantizationAnnotation.length)for(nt.quantizationAnnotation=[],rt=0;rt<b.quantizationAnnotation.length;++rt)nt.quantizationAnnotation[rt]=et.onnx.TensorAnnotation.toObject(b.quantizationAnnotation[rt],tt);return nt},_.prototype.toJSON=function(){return this.constructor.toObject(this,g.util.toJSONOptions)},_}(),d.TensorProto=function(){function _(b){if(this.dims=[],this.floatData=[],this.int32Data=[],this.stringData=[],this.int64Data=[],this.externalData=[],this.doubleData=[],this.uint64Data=[],b)for(var tt=Object.keys(b),nt=0;nt<tt.length;++nt)b[tt[nt]]!=null&&(this[tt[nt]]=b[tt[nt]])}return _.prototype.dims=_e.emptyArray,_.prototype.dataType=0,_.prototype.segment=null,_.prototype.floatData=_e.emptyArray,_.prototype.int32Data=_e.emptyArray,_.prototype.stringData=_e.emptyArray,_.prototype.int64Data=_e.emptyArray,_.prototype.name="",_.prototype.docString="",_.prototype.rawData=_e.newBuffer([]),_.prototype.externalData=_e.emptyArray,_.prototype.dataLocation=0,_.prototype.doubleData=_e.emptyArray,_.prototype.uint64Data=_e.emptyArray,_.create=function(b){return new _(b)},_.encode=function(b,tt){if(tt||(tt=j.create()),b.dims!=null&&b.dims.length){tt.uint32(10).fork();for(var nt=0;nt<b.dims.length;++nt)tt.int64(b.dims[nt]);tt.ldelim()}if(b.dataType!=null&&b.hasOwnProperty("dataType")&&tt.uint32(16).int32(b.dataType),b.segment!=null&&b.hasOwnProperty("segment")&&et.onnx.TensorProto.Segment.encode(b.segment,tt.uint32(26).fork()).ldelim(),b.floatData!=null&&b.floatData.length){for(tt.uint32(34).fork(),nt=0;nt<b.floatData.length;++nt)tt.float(b.floatData[nt]);tt.ldelim()}if(b.int32Data!=null&&b.int32Data.length){for(tt.uint32(42).fork(),nt=0;nt<b.int32Data.length;++nt)tt.int32(b.int32Data[nt]);tt.ldelim()}if(b.stringData!=null&&b.stringData.length)for(nt=0;nt<b.stringData.length;++nt)tt.uint32(50).bytes(b.stringData[nt]);if(b.int64Data!=null&&b.int64Data.length){for(tt.uint32(58).fork(),nt=0;nt<b.int64Data.length;++nt)tt.int64(b.int64Data[nt]);tt.ldelim()}if(b.name!=null&&b.hasOwnProperty("name")&&tt.uint32(66).string(b.name),b.rawData!=null&&b.hasOwnProperty("rawData")&&tt.uint32(74).bytes(b.rawData),b.doubleData!=null&&b.doubleData.length){for(tt.uint32(82).fork(),nt=0;nt<b.doubleData.length;++nt)tt.double(b.doubleData[nt]);tt.ldelim()}if(b.uint64Data!=null&&b.uint64Data.length){for(tt.uint32(90).fork(),nt=0;nt<b.uint64Data.length;++nt)tt.uint64(b.uint64Data[nt]);tt.ldelim()}if(b.docString!=null&&b.hasOwnProperty("docString")&&tt.uint32(98).string(b.docString),b.externalData!=null&&b.externalData.length)for(nt=0;nt<b.externalData.length;++nt)et.onnx.StringStringEntryProto.encode(b.externalData[nt],tt.uint32(106).fork()).ldelim();return b.dataLocation!=null&&b.hasOwnProperty("dataLocation")&&tt.uint32(112).int32(b.dataLocation),tt},_.encodeDelimited=function(b,tt){return this.encode(b,tt).ldelim()},_.decode=function(b,tt){b instanceof $||(b=$.create(b));for(var nt=tt===void 0?b.len:b.pos+tt,rt=new et.onnx.TensorProto;b.pos<nt;){var st=b.uint32();switch(st>>>3){case 1:if(rt.dims&&rt.dims.length||(rt.dims=[]),(7&st)==2)for(var ot=b.uint32()+b.pos;b.pos<ot;)rt.dims.push(b.int64());else rt.dims.push(b.int64());break;case 2:rt.dataType=b.int32();break;case 3:rt.segment=et.onnx.TensorProto.Segment.decode(b,b.uint32());break;case 4:if(rt.floatData&&rt.floatData.length||(rt.floatData=[]),(7&st)==2)for(ot=b.uint32()+b.pos;b.pos<ot;)rt.floatData.push(b.float());else rt.floatData.push(b.float());break;case 5:if(rt.int32Data&&rt.int32Data.length||(rt.int32Data=[]),(7&st)==2)for(ot=b.uint32()+b.pos;b.pos<ot;)rt.int32Data.push(b.int32());else rt.int32Data.push(b.int32());break;case 6:rt.stringData&&rt.stringData.length||(rt.stringData=[]),rt.stringData.push(b.bytes());break;case 7:if(rt.int64Data&&rt.int64Data.length||(rt.int64Data=[]),(7&st)==2)for(ot=b.uint32()+b.pos;b.pos<ot;)rt.int64Data.push(b.int64());else rt.int64Data.push(b.int64());break;case 8:rt.name=b.string();break;case 12:rt.docString=b.string();break;case 9:rt.rawData=b.bytes();break;case 13:rt.externalData&&rt.externalData.length||(rt.externalData=[]),rt.externalData.push(et.onnx.StringStringEntryProto.decode(b,b.uint32()));break;case 14:rt.dataLocation=b.int32();break;case 10:if(rt.doubleData&&rt.doubleData.length||(rt.doubleData=[]),(7&st)==2)for(ot=b.uint32()+b.pos;b.pos<ot;)rt.doubleData.push(b.double());else rt.doubleData.push(b.double());break;case 11:if(rt.uint64Data&&rt.uint64Data.length||(rt.uint64Data=[]),(7&st)==2)for(ot=b.uint32()+b.pos;b.pos<ot;)rt.uint64Data.push(b.uint64());else rt.uint64Data.push(b.uint64());break;default:b.skipType(7&st)}}return rt},_.decodeDelimited=function(b){return b instanceof $||(b=new $(b)),this.decode(b,b.uint32())},_.verify=function(b){if(typeof b!="object"||b===null)return"object expected";if(b.dims!=null&&b.hasOwnProperty("dims")){if(!Array.isArray(b.dims))return"dims: array expected";for(var tt=0;tt<b.dims.length;++tt)if(!(_e.isInteger(b.dims[tt])||b.dims[tt]&&_e.isInteger(b.dims[tt].low)&&_e.isInteger(b.dims[tt].high)))return"dims: integer|Long[] expected"}if(b.dataType!=null&&b.hasOwnProperty("dataType")&&!_e.isInteger(b.dataType))return"dataType: integer expected";if(b.segment!=null&&b.hasOwnProperty("segment")&&(nt=et.onnx.TensorProto.Segment.verify(b.segment)))return"segment."+nt;if(b.floatData!=null&&b.hasOwnProperty("floatData")){if(!Array.isArray(b.floatData))return"floatData: array expected";for(tt=0;tt<b.floatData.length;++tt)if(typeof b.floatData[tt]!="number")return"floatData: number[] expected"}if(b.int32Data!=null&&b.hasOwnProperty("int32Data")){if(!Array.isArray(b.int32Data))return"int32Data: array expected";for(tt=0;tt<b.int32Data.length;++tt)if(!_e.isInteger(b.int32Data[tt]))return"int32Data: integer[] expected"}if(b.stringData!=null&&b.hasOwnProperty("stringData")){if(!Array.isArray(b.stringData))return"stringData: array expected";for(tt=0;tt<b.stringData.length;++tt)if(!(b.stringData[tt]&&typeof b.stringData[tt].length=="number"||_e.isString(b.stringData[tt])))return"stringData: buffer[] expected"}if(b.int64Data!=null&&b.hasOwnProperty("int64Data")){if(!Array.isArray(b.int64Data))return"int64Data: array expected";for(tt=0;tt<b.int64Data.length;++tt)if(!(_e.isInteger(b.int64Data[tt])||b.int64Data[tt]&&_e.isInteger(b.int64Data[tt].low)&&_e.isInteger(b.int64Data[tt].high)))return"int64Data: integer|Long[] expected"}if(b.name!=null&&b.hasOwnProperty("name")&&!_e.isString(b.name))return"name: string expected";if(b.docString!=null&&b.hasOwnProperty("docString")&&!_e.isString(b.docString))return"docString: string expected";if(b.rawData!=null&&b.hasOwnProperty("rawData")&&!(b.rawData&&typeof b.rawData.length=="number"||_e.isString(b.rawData)))return"rawData: buffer expected";if(b.externalData!=null&&b.hasOwnProperty("externalData")){if(!Array.isArray(b.externalData))return"externalData: array expected";for(tt=0;tt<b.externalData.length;++tt){var nt;if(nt=et.onnx.StringStringEntryProto.verify(b.externalData[tt]))return"externalData."+nt}}if(b.dataLocation!=null&&b.hasOwnProperty("dataLocation"))switch(b.dataLocation){default:return"dataLocation: enum value expected";case 0:case 1:}if(b.doubleData!=null&&b.hasOwnProperty("doubleData")){if(!Array.isArray(b.doubleData))return"doubleData: array expected";for(tt=0;tt<b.doubleData.length;++tt)if(typeof b.doubleData[tt]!="number")return"doubleData: number[] expected"}if(b.uint64Data!=null&&b.hasOwnProperty("uint64Data")){if(!Array.isArray(b.uint64Data))return"uint64Data: array expected";for(tt=0;tt<b.uint64Data.length;++tt)if(!(_e.isInteger(b.uint64Data[tt])||b.uint64Data[tt]&&_e.isInteger(b.uint64Data[tt].low)&&_e.isInteger(b.uint64Data[tt].high)))return"uint64Data: integer|Long[] expected"}return null},_.fromObject=function(b){if(b instanceof et.onnx.TensorProto)return b;var tt=new et.onnx.TensorProto;if(b.dims){if(!Array.isArray(b.dims))throw TypeError(".onnx.TensorProto.dims: array expected");tt.dims=[];for(var nt=0;nt<b.dims.length;++nt)_e.Long?(tt.dims[nt]=_e.Long.fromValue(b.dims[nt])).unsigned=!1:typeof b.dims[nt]=="string"?tt.dims[nt]=parseInt(b.dims[nt],10):typeof b.dims[nt]=="number"?tt.dims[nt]=b.dims[nt]:typeof b.dims[nt]=="object"&&(tt.dims[nt]=new _e.LongBits(b.dims[nt].low>>>0,b.dims[nt].high>>>0).toNumber())}if(b.dataType!=null&&(tt.dataType=0|b.dataType),b.segment!=null){if(typeof b.segment!="object")throw TypeError(".onnx.TensorProto.segment: object expected");tt.segment=et.onnx.TensorProto.Segment.fromObject(b.segment)}if(b.floatData){if(!Array.isArray(b.floatData))throw TypeError(".onnx.TensorProto.floatData: array expected");for(tt.floatData=[],nt=0;nt<b.floatData.length;++nt)tt.floatData[nt]=Number(b.floatData[nt])}if(b.int32Data){if(!Array.isArray(b.int32Data))throw TypeError(".onnx.TensorProto.int32Data: array expected");for(tt.int32Data=[],nt=0;nt<b.int32Data.length;++nt)tt.int32Data[nt]=0|b.int32Data[nt]}if(b.stringData){if(!Array.isArray(b.stringData))throw TypeError(".onnx.TensorProto.stringData: array expected");for(tt.stringData=[],nt=0;nt<b.stringData.length;++nt)typeof b.stringData[nt]=="string"?_e.base64.decode(b.stringData[nt],tt.stringData[nt]=_e.newBuffer(_e.base64.length(b.stringData[nt])),0):b.stringData[nt].length&&(tt.stringData[nt]=b.stringData[nt])}if(b.int64Data){if(!Array.isArray(b.int64Data))throw TypeError(".onnx.TensorProto.int64Data: array expected");for(tt.int64Data=[],nt=0;nt<b.int64Data.length;++nt)_e.Long?(tt.int64Data[nt]=_e.Long.fromValue(b.int64Data[nt])).unsigned=!1:typeof b.int64Data[nt]=="string"?tt.int64Data[nt]=parseInt(b.int64Data[nt],10):typeof b.int64Data[nt]=="number"?tt.int64Data[nt]=b.int64Data[nt]:typeof b.int64Data[nt]=="object"&&(tt.int64Data[nt]=new _e.LongBits(b.int64Data[nt].low>>>0,b.int64Data[nt].high>>>0).toNumber())}if(b.name!=null&&(tt.name=String(b.name)),b.docString!=null&&(tt.docString=String(b.docString)),b.rawData!=null&&(typeof b.rawData=="string"?_e.base64.decode(b.rawData,tt.rawData=_e.newBuffer(_e.base64.length(b.rawData)),0):b.rawData.length&&(tt.rawData=b.rawData)),b.externalData){if(!Array.isArray(b.externalData))throw TypeError(".onnx.TensorProto.externalData: array expected");for(tt.externalData=[],nt=0;nt<b.externalData.length;++nt){if(typeof b.externalData[nt]!="object")throw TypeError(".onnx.TensorProto.externalData: object expected");tt.externalData[nt]=et.onnx.StringStringEntryProto.fromObject(b.externalData[nt])}}switch(b.dataLocation){case"DEFAULT":case 0:tt.dataLocation=0;break;case"EXTERNAL":case 1:tt.dataLocation=1}if(b.doubleData){if(!Array.isArray(b.doubleData))throw TypeError(".onnx.TensorProto.doubleData: array expected");for(tt.doubleData=[],nt=0;nt<b.doubleData.length;++nt)tt.doubleData[nt]=Number(b.doubleData[nt])}if(b.uint64Data){if(!Array.isArray(b.uint64Data))throw TypeError(".onnx.TensorProto.uint64Data: array expected");for(tt.uint64Data=[],nt=0;nt<b.uint64Data.length;++nt)_e.Long?(tt.uint64Data[nt]=_e.Long.fromValue(b.uint64Data[nt])).unsigned=!0:typeof b.uint64Data[nt]=="string"?tt.uint64Data[nt]=parseInt(b.uint64Data[nt],10):typeof b.uint64Data[nt]=="number"?tt.uint64Data[nt]=b.uint64Data[nt]:typeof b.uint64Data[nt]=="object"&&(tt.uint64Data[nt]=new _e.LongBits(b.uint64Data[nt].low>>>0,b.uint64Data[nt].high>>>0).toNumber(!0))}return tt},_.toObject=function(b,tt){tt||(tt={});var nt={};if((tt.arrays||tt.defaults)&&(nt.dims=[],nt.floatData=[],nt.int32Data=[],nt.stringData=[],nt.int64Data=[],nt.doubleData=[],nt.uint64Data=[],nt.externalData=[]),tt.defaults&&(nt.dataType=0,nt.segment=null,nt.name="",tt.bytes===String?nt.rawData="":(nt.rawData=[],tt.bytes!==Array&&(nt.rawData=_e.newBuffer(nt.rawData))),nt.docString="",nt.dataLocation=tt.enums===String?"DEFAULT":0),b.dims&&b.dims.length){nt.dims=[];for(var rt=0;rt<b.dims.length;++rt)typeof b.dims[rt]=="number"?nt.dims[rt]=tt.longs===String?String(b.dims[rt]):b.dims[rt]:nt.dims[rt]=tt.longs===String?_e.Long.prototype.toString.call(b.dims[rt]):tt.longs===Number?new _e.LongBits(b.dims[rt].low>>>0,b.dims[rt].high>>>0).toNumber():b.dims[rt]}if(b.dataType!=null&&b.hasOwnProperty("dataType")&&(nt.dataType=b.dataType),b.segment!=null&&b.hasOwnProperty("segment")&&(nt.segment=et.onnx.TensorProto.Segment.toObject(b.segment,tt)),b.floatData&&b.floatData.length)for(nt.floatData=[],rt=0;rt<b.floatData.length;++rt)nt.floatData[rt]=tt.json&&!isFinite(b.floatData[rt])?String(b.floatData[rt]):b.floatData[rt];if(b.int32Data&&b.int32Data.length)for(nt.int32Data=[],rt=0;rt<b.int32Data.length;++rt)nt.int32Data[rt]=b.int32Data[rt];if(b.stringData&&b.stringData.length)for(nt.stringData=[],rt=0;rt<b.stringData.length;++rt)nt.stringData[rt]=tt.bytes===String?_e.base64.encode(b.stringData[rt],0,b.stringData[rt].length):tt.bytes===Array?Array.prototype.slice.call(b.stringData[rt]):b.stringData[rt];if(b.int64Data&&b.int64Data.length)for(nt.int64Data=[],rt=0;rt<b.int64Data.length;++rt)typeof b.int64Data[rt]=="number"?nt.int64Data[rt]=tt.longs===String?String(b.int64Data[rt]):b.int64Data[rt]:nt.int64Data[rt]=tt.longs===String?_e.Long.prototype.toString.call(b.int64Data[rt]):tt.longs===Number?new _e.LongBits(b.int64Data[rt].low>>>0,b.int64Data[rt].high>>>0).toNumber():b.int64Data[rt];if(b.name!=null&&b.hasOwnProperty("name")&&(nt.name=b.name),b.rawData!=null&&b.hasOwnProperty("rawData")&&(nt.rawData=tt.bytes===String?_e.base64.encode(b.rawData,0,b.rawData.length):tt.bytes===Array?Array.prototype.slice.call(b.rawData):b.rawData),b.doubleData&&b.doubleData.length)for(nt.doubleData=[],rt=0;rt<b.doubleData.length;++rt)nt.doubleData[rt]=tt.json&&!isFinite(b.doubleData[rt])?String(b.doubleData[rt]):b.doubleData[rt];if(b.uint64Data&&b.uint64Data.length)for(nt.uint64Data=[],rt=0;rt<b.uint64Data.length;++rt)typeof b.uint64Data[rt]=="number"?nt.uint64Data[rt]=tt.longs===String?String(b.uint64Data[rt]):b.uint64Data[rt]:nt.uint64Data[rt]=tt.longs===String?_e.Long.prototype.toString.call(b.uint64Data[rt]):tt.longs===Number?new _e.LongBits(b.uint64Data[rt].low>>>0,b.uint64Data[rt].high>>>0).toNumber(!0):b.uint64Data[rt];if(b.docString!=null&&b.hasOwnProperty("docString")&&(nt.docString=b.docString),b.externalData&&b.externalData.length)for(nt.externalData=[],rt=0;rt<b.externalData.length;++rt)nt.externalData[rt]=et.onnx.StringStringEntryProto.toObject(b.externalData[rt],tt);return b.dataLocation!=null&&b.hasOwnProperty("dataLocation")&&(nt.dataLocation=tt.enums===String?et.onnx.TensorProto.DataLocation[b.dataLocation]:b.dataLocation),nt},_.prototype.toJSON=function(){return this.constructor.toObject(this,g.util.toJSONOptions)},_.DataType=function(){var b={},tt=Object.create(b);return tt[b[0]="UNDEFINED"]=0,tt[b[1]="FLOAT"]=1,tt[b[2]="UINT8"]=2,tt[b[3]="INT8"]=3,tt[b[4]="UINT16"]=4,tt[b[5]="INT16"]=5,tt[b[6]="INT32"]=6,tt[b[7]="INT64"]=7,tt[b[8]="STRING"]=8,tt[b[9]="BOOL"]=9,tt[b[10]="FLOAT16"]=10,tt[b[11]="DOUBLE"]=11,tt[b[12]="UINT32"]=12,tt[b[13]="UINT64"]=13,tt[b[14]="COMPLEX64"]=14,tt[b[15]="COMPLEX128"]=15,tt[b[16]="BFLOAT16"]=16,tt}(),_.Segment=function(){function b(tt){if(tt)for(var nt=Object.keys(tt),rt=0;rt<nt.length;++rt)tt[nt[rt]]!=null&&(this[nt[rt]]=tt[nt[rt]])}return b.prototype.begin=_e.Long?_e.Long.fromBits(0,0,!1):0,b.prototype.end=_e.Long?_e.Long.fromBits(0,0,!1):0,b.create=function(tt){return new b(tt)},b.encode=function(tt,nt){return nt||(nt=j.create()),tt.begin!=null&&tt.hasOwnProperty("begin")&&nt.uint32(8).int64(tt.begin),tt.end!=null&&tt.hasOwnProperty("end")&&nt.uint32(16).int64(tt.end),nt},b.encodeDelimited=function(tt,nt){return this.encode(tt,nt).ldelim()},b.decode=function(tt,nt){tt instanceof $||(tt=$.create(tt));for(var rt=nt===void 0?tt.len:tt.pos+nt,st=new et.onnx.TensorProto.Segment;tt.pos<rt;){var ot=tt.uint32();switch(ot>>>3){case 1:st.begin=tt.int64();break;case 2:st.end=tt.int64();break;default:tt.skipType(7&ot)}}return st},b.decodeDelimited=function(tt){return tt instanceof $||(tt=new $(tt)),this.decode(tt,tt.uint32())},b.verify=function(tt){return typeof tt!="object"||tt===null?"object expected":tt.begin!=null&&tt.hasOwnProperty("begin")&&!(_e.isInteger(tt.begin)||tt.begin&&_e.isInteger(tt.begin.low)&&_e.isInteger(tt.begin.high))?"begin: integer|Long expected":tt.end!=null&&tt.hasOwnProperty("end")&&!(_e.isInteger(tt.end)||tt.end&&_e.isInteger(tt.end.low)&&_e.isInteger(tt.end.high))?"end: integer|Long expected":null},b.fromObject=function(tt){if(tt instanceof et.onnx.TensorProto.Segment)return tt;var nt=new et.onnx.TensorProto.Segment;return tt.begin!=null&&(_e.Long?(nt.begin=_e.Long.fromValue(tt.begin)).unsigned=!1:typeof tt.begin=="string"?nt.begin=parseInt(tt.begin,10):typeof tt.begin=="number"?nt.begin=tt.begin:typeof tt.begin=="object"&&(nt.begin=new _e.LongBits(tt.begin.low>>>0,tt.begin.high>>>0).toNumber())),tt.end!=null&&(_e.Long?(nt.end=_e.Long.fromValue(tt.end)).unsigned=!1:typeof tt.end=="string"?nt.end=parseInt(tt.end,10):typeof tt.end=="number"?nt.end=tt.end:typeof tt.end=="object"&&(nt.end=new _e.LongBits(tt.end.low>>>0,tt.end.high>>>0).toNumber())),nt},b.toObject=function(tt,nt){nt||(nt={});var rt={};if(nt.defaults){if(_e.Long){var st=new _e.Long(0,0,!1);rt.begin=nt.longs===String?st.toString():nt.longs===Number?st.toNumber():st}else rt.begin=nt.longs===String?"0":0;_e.Long?(st=new _e.Long(0,0,!1),rt.end=nt.longs===String?st.toString():nt.longs===Number?st.toNumber():st):rt.end=nt.longs===String?"0":0}return tt.begin!=null&&tt.hasOwnProperty("begin")&&(typeof tt.begin=="number"?rt.begin=nt.longs===String?String(tt.begin):tt.begin:rt.begin=nt.longs===String?_e.Long.prototype.toString.call(tt.begin):nt.longs===Number?new _e.LongBits(tt.begin.low>>>0,tt.begin.high>>>0).toNumber():tt.begin),tt.end!=null&&tt.hasOwnProperty("end")&&(typeof tt.end=="number"?rt.end=nt.longs===String?String(tt.end):tt.end:rt.end=nt.longs===String?_e.Long.prototype.toString.call(tt.end):nt.longs===Number?new _e.LongBits(tt.end.low>>>0,tt.end.high>>>0).toNumber():tt.end),rt},b.prototype.toJSON=function(){return this.constructor.toObject(this,g.util.toJSONOptions)},b}(),_.DataLocation=function(){var b={},tt=Object.create(b);return tt[b[0]="DEFAULT"]=0,tt[b[1]="EXTERNAL"]=1,tt}(),_}(),d.TensorShapeProto=function(){function _(b){if(this.dim=[],b)for(var tt=Object.keys(b),nt=0;nt<tt.length;++nt)b[tt[nt]]!=null&&(this[tt[nt]]=b[tt[nt]])}return _.prototype.dim=_e.emptyArray,_.create=function(b){return new _(b)},_.encode=function(b,tt){if(tt||(tt=j.create()),b.dim!=null&&b.dim.length)for(var nt=0;nt<b.dim.length;++nt)et.onnx.TensorShapeProto.Dimension.encode(b.dim[nt],tt.uint32(10).fork()).ldelim();return tt},_.encodeDelimited=function(b,tt){return this.encode(b,tt).ldelim()},_.decode=function(b,tt){b instanceof $||(b=$.create(b));for(var nt=tt===void 0?b.len:b.pos+tt,rt=new et.onnx.TensorShapeProto;b.pos<nt;){var st=b.uint32();st>>>3==1?(rt.dim&&rt.dim.length||(rt.dim=[]),rt.dim.push(et.onnx.TensorShapeProto.Dimension.decode(b,b.uint32()))):b.skipType(7&st)}return rt},_.decodeDelimited=function(b){return b instanceof $||(b=new $(b)),this.decode(b,b.uint32())},_.verify=function(b){if(typeof b!="object"||b===null)return"object expected";if(b.dim!=null&&b.hasOwnProperty("dim")){if(!Array.isArray(b.dim))return"dim: array expected";for(var tt=0;tt<b.dim.length;++tt){var nt=et.onnx.TensorShapeProto.Dimension.verify(b.dim[tt]);if(nt)return"dim."+nt}}return null},_.fromObject=function(b){if(b instanceof et.onnx.TensorShapeProto)return b;var tt=new et.onnx.TensorShapeProto;if(b.dim){if(!Array.isArray(b.dim))throw TypeError(".onnx.TensorShapeProto.dim: array expected");tt.dim=[];for(var nt=0;nt<b.dim.length;++nt){if(typeof b.dim[nt]!="object")throw TypeError(".onnx.TensorShapeProto.dim: object expected");tt.dim[nt]=et.onnx.TensorShapeProto.Dimension.fromObject(b.dim[nt])}}return tt},_.toObject=function(b,tt){tt||(tt={});var nt={};if((tt.arrays||tt.defaults)&&(nt.dim=[]),b.dim&&b.dim.length){nt.dim=[];for(var rt=0;rt<b.dim.length;++rt)nt.dim[rt]=et.onnx.TensorShapeProto.Dimension.toObject(b.dim[rt],tt)}return nt},_.prototype.toJSON=function(){return this.constructor.toObject(this,g.util.toJSONOptions)},_.Dimension=function(){function b(nt){if(nt)for(var rt=Object.keys(nt),st=0;st<rt.length;++st)nt[rt[st]]!=null&&(this[rt[st]]=nt[rt[st]])}var tt;return b.prototype.dimValue=_e.Long?_e.Long.fromBits(0,0,!1):0,b.prototype.dimParam="",b.prototype.denotation="",Object.defineProperty(b.prototype,"value",{get:_e.oneOfGetter(tt=["dimValue","dimParam"]),set:_e.oneOfSetter(tt)}),b.create=function(nt){return new b(nt)},b.encode=function(nt,rt){return rt||(rt=j.create()),nt.dimValue!=null&&nt.hasOwnProperty("dimValue")&&rt.uint32(8).int64(nt.dimValue),nt.dimParam!=null&&nt.hasOwnProperty("dimParam")&&rt.uint32(18).string(nt.dimParam),nt.denotation!=null&&nt.hasOwnProperty("denotation")&&rt.uint32(26).string(nt.denotation),rt},b.encodeDelimited=function(nt,rt){return this.encode(nt,rt).ldelim()},b.decode=function(nt,rt){nt instanceof $||(nt=$.create(nt));for(var st=rt===void 0?nt.len:nt.pos+rt,ot=new et.onnx.TensorShapeProto.Dimension;nt.pos<st;){var it=nt.uint32();switch(it>>>3){case 1:ot.dimValue=nt.int64();break;case 2:ot.dimParam=nt.string();break;case 3:ot.denotation=nt.string();break;default:nt.skipType(7&it)}}return ot},b.decodeDelimited=function(nt){return nt instanceof $||(nt=new $(nt)),this.decode(nt,nt.uint32())},b.verify=function(nt){if(typeof nt!="object"||nt===null)return"object expected";var rt={};if(nt.dimValue!=null&&nt.hasOwnProperty("dimValue")&&(rt.value=1,!(_e.isInteger(nt.dimValue)||nt.dimValue&&_e.isInteger(nt.dimValue.low)&&_e.isInteger(nt.dimValue.high))))return"dimValue: integer|Long expected";if(nt.dimParam!=null&&nt.hasOwnProperty("dimParam")){if(rt.value===1)return"value: multiple values";if(rt.value=1,!_e.isString(nt.dimParam))return"dimParam: string expected"}return nt.denotation!=null&&nt.hasOwnProperty("denotation")&&!_e.isString(nt.denotation)?"denotation: string expected":null},b.fromObject=function(nt){if(nt instanceof et.onnx.TensorShapeProto.Dimension)return nt;var rt=new et.onnx.TensorShapeProto.Dimension;return nt.dimValue!=null&&(_e.Long?(rt.dimValue=_e.Long.fromValue(nt.dimValue)).unsigned=!1:typeof nt.dimValue=="string"?rt.dimValue=parseInt(nt.dimValue,10):typeof nt.dimValue=="number"?rt.dimValue=nt.dimValue:typeof nt.dimValue=="object"&&(rt.dimValue=new _e.LongBits(nt.dimValue.low>>>0,nt.dimValue.high>>>0).toNumber())),nt.dimParam!=null&&(rt.dimParam=String(nt.dimParam)),nt.denotation!=null&&(rt.denotation=String(nt.denotation)),rt},b.toObject=function(nt,rt){rt||(rt={});var st={};return rt.defaults&&(st.denotation=""),nt.dimValue!=null&&nt.hasOwnProperty("dimValue")&&(typeof nt.dimValue=="number"?st.dimValue=rt.longs===String?String(nt.dimValue):nt.dimValue:st.dimValue=rt.longs===String?_e.Long.prototype.toString.call(nt.dimValue):rt.longs===Number?new _e.LongBits(nt.dimValue.low>>>0,nt.dimValue.high>>>0).toNumber():nt.dimValue,rt.oneofs&&(st.value="dimValue")),nt.dimParam!=null&&nt.hasOwnProperty("dimParam")&&(st.dimParam=nt.dimParam,rt.oneofs&&(st.value="dimParam")),nt.denotation!=null&&nt.hasOwnProperty("denotation")&&(st.denotation=nt.denotation),st},b.prototype.toJSON=function(){return this.constructor.toObject(this,g.util.toJSONOptions)},b}(),_}(),d.TypeProto=function(){function _(tt){if(tt)for(var nt=Object.keys(tt),rt=0;rt<nt.length;++rt)tt[nt[rt]]!=null&&(this[nt[rt]]=tt[nt[rt]])}var b;return _.prototype.tensorType=null,_.prototype.denotation="",Object.defineProperty(_.prototype,"value",{get:_e.oneOfGetter(b=["tensorType"]),set:_e.oneOfSetter(b)}),_.create=function(tt){return new _(tt)},_.encode=function(tt,nt){return nt||(nt=j.create()),tt.tensorType!=null&&tt.hasOwnProperty("tensorType")&&et.onnx.TypeProto.Tensor.encode(tt.tensorType,nt.uint32(10).fork()).ldelim(),tt.denotation!=null&&tt.hasOwnProperty("denotation")&&nt.uint32(50).string(tt.denotation),nt},_.encodeDelimited=function(tt,nt){return this.encode(tt,nt).ldelim()},_.decode=function(tt,nt){tt instanceof $||(tt=$.create(tt));for(var rt=nt===void 0?tt.len:tt.pos+nt,st=new et.onnx.TypeProto;tt.pos<rt;){var ot=tt.uint32();switch(ot>>>3){case 1:st.tensorType=et.onnx.TypeProto.Tensor.decode(tt,tt.uint32());break;case 6:st.denotation=tt.string();break;default:tt.skipType(7&ot)}}return st},_.decodeDelimited=function(tt){return tt instanceof $||(tt=new $(tt)),this.decode(tt,tt.uint32())},_.verify=function(tt){if(typeof tt!="object"||tt===null)return"object expected";if(tt.tensorType!=null&&tt.hasOwnProperty("tensorType")){var nt=et.onnx.TypeProto.Tensor.verify(tt.tensorType);if(nt)return"tensorType."+nt}return tt.denotation!=null&&tt.hasOwnProperty("denotation")&&!_e.isString(tt.denotation)?"denotation: string expected":null},_.fromObject=function(tt){if(tt instanceof et.onnx.TypeProto)return tt;var nt=new et.onnx.TypeProto;if(tt.tensorType!=null){if(typeof tt.tensorType!="object")throw TypeError(".onnx.TypeProto.tensorType: object expected");nt.tensorType=et.onnx.TypeProto.Tensor.fromObject(tt.tensorType)}return tt.denotation!=null&&(nt.denotation=String(tt.denotation)),nt},_.toObject=function(tt,nt){nt||(nt={});var rt={};return nt.defaults&&(rt.denotation=""),tt.tensorType!=null&&tt.hasOwnProperty("tensorType")&&(rt.tensorType=et.onnx.TypeProto.Tensor.toObject(tt.tensorType,nt),nt.oneofs&&(rt.value="tensorType")),tt.denotation!=null&&tt.hasOwnProperty("denotation")&&(rt.denotation=tt.denotation),rt},_.prototype.toJSON=function(){return this.constructor.toObject(this,g.util.toJSONOptions)},_.Tensor=function(){function tt(nt){if(nt)for(var rt=Object.keys(nt),st=0;st<rt.length;++st)nt[rt[st]]!=null&&(this[rt[st]]=nt[rt[st]])}return tt.prototype.elemType=0,tt.prototype.shape=null,tt.create=function(nt){return new tt(nt)},tt.encode=function(nt,rt){return rt||(rt=j.create()),nt.elemType!=null&&nt.hasOwnProperty("elemType")&&rt.uint32(8).int32(nt.elemType),nt.shape!=null&&nt.hasOwnProperty("shape")&&et.onnx.TensorShapeProto.encode(nt.shape,rt.uint32(18).fork()).ldelim(),rt},tt.encodeDelimited=function(nt,rt){return this.encode(nt,rt).ldelim()},tt.decode=function(nt,rt){nt instanceof $||(nt=$.create(nt));for(var st=rt===void 0?nt.len:nt.pos+rt,ot=new et.onnx.TypeProto.Tensor;nt.pos<st;){var it=nt.uint32();switch(it>>>3){case 1:ot.elemType=nt.int32();break;case 2:ot.shape=et.onnx.TensorShapeProto.decode(nt,nt.uint32());break;default:nt.skipType(7&it)}}return ot},tt.decodeDelimited=function(nt){return nt instanceof $||(nt=new $(nt)),this.decode(nt,nt.uint32())},tt.verify=function(nt){if(typeof nt!="object"||nt===null)return"object expected";if(nt.elemType!=null&&nt.hasOwnProperty("elemType")&&!_e.isInteger(nt.elemType))return"elemType: integer expected";if(nt.shape!=null&&nt.hasOwnProperty("shape")){var rt=et.onnx.TensorShapeProto.verify(nt.shape);if(rt)return"shape."+rt}return null},tt.fromObject=function(nt){if(nt instanceof et.onnx.TypeProto.Tensor)return nt;var rt=new et.onnx.TypeProto.Tensor;if(nt.elemType!=null&&(rt.elemType=0|nt.elemType),nt.shape!=null){if(typeof nt.shape!="object")throw TypeError(".onnx.TypeProto.Tensor.shape: object expected");rt.shape=et.onnx.TensorShapeProto.fromObject(nt.shape)}return rt},tt.toObject=function(nt,rt){rt||(rt={});var st={};return rt.defaults&&(st.elemType=0,st.shape=null),nt.elemType!=null&&nt.hasOwnProperty("elemType")&&(st.elemType=nt.elemType),nt.shape!=null&&nt.hasOwnProperty("shape")&&(st.shape=et.onnx.TensorShapeProto.toObject(nt.shape,rt)),st},tt.prototype.toJSON=function(){return this.constructor.toObject(this,g.util.toJSONOptions)},tt}(),_}(),d.OperatorSetIdProto=function(){function _(b){if(b)for(var tt=Object.keys(b),nt=0;nt<tt.length;++nt)b[tt[nt]]!=null&&(this[tt[nt]]=b[tt[nt]])}return _.prototype.domain="",_.prototype.version=_e.Long?_e.Long.fromBits(0,0,!1):0,_.create=function(b){return new _(b)},_.encode=function(b,tt){return tt||(tt=j.create()),b.domain!=null&&b.hasOwnProperty("domain")&&tt.uint32(10).string(b.domain),b.version!=null&&b.hasOwnProperty("version")&&tt.uint32(16).int64(b.version),tt},_.encodeDelimited=function(b,tt){return this.encode(b,tt).ldelim()},_.decode=function(b,tt){b instanceof $||(b=$.create(b));for(var nt=tt===void 0?b.len:b.pos+tt,rt=new et.onnx.OperatorSetIdProto;b.pos<nt;){var st=b.uint32();switch(st>>>3){case 1:rt.domain=b.string();break;case 2:rt.version=b.int64();break;default:b.skipType(7&st)}}return rt},_.decodeDelimited=function(b){return b instanceof $||(b=new $(b)),this.decode(b,b.uint32())},_.verify=function(b){return typeof b!="object"||b===null?"object expected":b.domain!=null&&b.hasOwnProperty("domain")&&!_e.isString(b.domain)?"domain: string expected":b.version!=null&&b.hasOwnProperty("version")&&!(_e.isInteger(b.version)||b.version&&_e.isInteger(b.version.low)&&_e.isInteger(b.version.high))?"version: integer|Long expected":null},_.fromObject=function(b){if(b instanceof et.onnx.OperatorSetIdProto)return b;var tt=new et.onnx.OperatorSetIdProto;return b.domain!=null&&(tt.domain=String(b.domain)),b.version!=null&&(_e.Long?(tt.version=_e.Long.fromValue(b.version)).unsigned=!1:typeof b.version=="string"?tt.version=parseInt(b.version,10):typeof b.version=="number"?tt.version=b.version:typeof b.version=="object"&&(tt.version=new _e.LongBits(b.version.low>>>0,b.version.high>>>0).toNumber())),tt},_.toObject=function(b,tt){tt||(tt={});var nt={};if(tt.defaults)if(nt.domain="",_e.Long){var rt=new _e.Long(0,0,!1);nt.version=tt.longs===String?rt.toString():tt.longs===Number?rt.toNumber():rt}else nt.version=tt.longs===String?"0":0;return b.domain!=null&&b.hasOwnProperty("domain")&&(nt.domain=b.domain),b.version!=null&&b.hasOwnProperty("version")&&(typeof b.version=="number"?nt.version=tt.longs===String?String(b.version):b.version:nt.version=tt.longs===String?_e.Long.prototype.toString.call(b.version):tt.longs===Number?new _e.LongBits(b.version.low>>>0,b.version.high>>>0).toNumber():b.version),nt},_.prototype.toJSON=function(){return this.constructor.toObject(this,g.util.toJSONOptions)},_}(),d),i.exports=et},2100:(i,s,o)=>{i.exports=o(9482)},9482:(i,s,o)=>{var a=s;function c(){a.util._configure(),a.Writer._configure(a.BufferWriter),a.Reader._configure(a.BufferReader)}a.build="minimal",a.Writer=o(1173),a.BufferWriter=o(3155),a.Reader=o(1408),a.BufferReader=o(593),a.util=o(9693),a.rpc=o(5994),a.roots=o(5054),a.configure=c,c()},1408:(i,s,o)=>{i.exports=j;var a,c=o(9693),d=c.LongBits,g=c.utf8;function $(rt,st){return RangeError("index out of range: "+rt.pos+" + "+(st||1)+" > "+rt.len)}function j(rt){this.buf=rt,this.pos=0,this.len=rt.length}var _e,et=typeof Uint8Array<"u"?function(rt){if(rt instanceof Uint8Array||Array.isArray(rt))return new j(rt);throw Error("illegal buffer")}:function(rt){if(Array.isArray(rt))return new j(rt);throw Error("illegal buffer")},_=function(){return c.Buffer?function(rt){return(j.create=function(st){return c.Buffer.isBuffer(st)?new a(st):et(st)})(rt)}:et};function b(){var rt=new d(0,0),st=0;if(!(this.len-this.pos>4)){for(;st<3;++st){if(this.pos>=this.len)throw $(this);if(rt.lo=(rt.lo|(127&this.buf[this.pos])<<7*st)>>>0,this.buf[this.pos++]<128)return rt}return rt.lo=(rt.lo|(127&this.buf[this.pos++])<<7*st)>>>0,rt}for(;st<4;++st)if(rt.lo=(rt.lo|(127&this.buf[this.pos])<<7*st)>>>0,this.buf[this.pos++]<128)return rt;if(rt.lo=(rt.lo|(127&this.buf[this.pos])<<28)>>>0,rt.hi=(rt.hi|(127&this.buf[this.pos])>>4)>>>0,this.buf[this.pos++]<128)return rt;if(st=0,this.len-this.pos>4){for(;st<5;++st)if(rt.hi=(rt.hi|(127&this.buf[this.pos])<<7*st+3)>>>0,this.buf[this.pos++]<128)return rt}else for(;st<5;++st){if(this.pos>=this.len)throw $(this);if(rt.hi=(rt.hi|(127&this.buf[this.pos])<<7*st+3)>>>0,this.buf[this.pos++]<128)return rt}throw Error("invalid varint encoding")}function tt(rt,st){return(rt[st-4]|rt[st-3]<<8|rt[st-2]<<16|rt[st-1]<<24)>>>0}function nt(){if(this.pos+8>this.len)throw $(this,8);return new d(tt(this.buf,this.pos+=4),tt(this.buf,this.pos+=4))}j.create=_(),j.prototype._slice=c.Array.prototype.subarray||c.Array.prototype.slice,j.prototype.uint32=(_e=4294967295,function(){if(_e=(127&this.buf[this.pos])>>>0,this.buf[this.pos++]<128||(_e=(_e|(127&this.buf[this.pos])<<7)>>>0,this.buf[this.pos++]<128)||(_e=(_e|(127&this.buf[this.pos])<<14)>>>0,this.buf[this.pos++]<128)||(_e=(_e|(127&this.buf[this.pos])<<21)>>>0,this.buf[this.pos++]<128)||(_e=(_e|(15&this.buf[this.pos])<<28)>>>0,this.buf[this.pos++]<128))return _e;if((this.pos+=5)>this.len)throw this.pos=this.len,$(this,10);return _e}),j.prototype.int32=function(){return 0|this.uint32()},j.prototype.sint32=function(){var rt=this.uint32();return rt>>>1^-(1&rt)|0},j.prototype.bool=function(){return this.uint32()!==0},j.prototype.fixed32=function(){if(this.pos+4>this.len)throw $(this,4);return tt(this.buf,this.pos+=4)},j.prototype.sfixed32=function(){if(this.pos+4>this.len)throw $(this,4);return 0|tt(this.buf,this.pos+=4)},j.prototype.float=function(){if(this.pos+4>this.len)throw $(this,4);var rt=c.float.readFloatLE(this.buf,this.pos);return this.pos+=4,rt},j.prototype.double=function(){if(this.pos+8>this.len)throw $(this,4);var rt=c.float.readDoubleLE(this.buf,this.pos);return this.pos+=8,rt},j.prototype.bytes=function(){var rt=this.uint32(),st=this.pos,ot=this.pos+rt;if(ot>this.len)throw $(this,rt);return this.pos+=rt,Array.isArray(this.buf)?this.buf.slice(st,ot):st===ot?new this.buf.constructor(0):this._slice.call(this.buf,st,ot)},j.prototype.string=function(){var rt=this.bytes();return g.read(rt,0,rt.length)},j.prototype.skip=function(rt){if(typeof rt=="number"){if(this.pos+rt>this.len)throw $(this,rt);this.pos+=rt}else do if(this.pos>=this.len)throw $(this);while(128&this.buf[this.pos++]);return this},j.prototype.skipType=function(rt){switch(rt){case 0:this.skip();break;case 1:this.skip(8);break;case 2:this.skip(this.uint32());break;case 3:for(;(rt=7&this.uint32())!=4;)this.skipType(rt);break;case 5:this.skip(4);break;default:throw Error("invalid wire type "+rt+" at offset "+this.pos)}return this},j._configure=function(rt){a=rt,j.create=_(),a._configure();var st=c.Long?"toLong":"toNumber";c.merge(j.prototype,{int64:function(){return b.call(this)[st](!1)},uint64:function(){return b.call(this)[st](!0)},sint64:function(){return b.call(this).zzDecode()[st](!1)},fixed64:function(){return nt.call(this)[st](!0)},sfixed64:function(){return nt.call(this)[st](!1)}})}},593:(i,s,o)=>{i.exports=d;var a=o(1408);(d.prototype=Object.create(a.prototype)).constructor=d;var c=o(9693);function d(g){a.call(this,g)}d._configure=function(){c.Buffer&&(d.prototype._slice=c.Buffer.prototype.slice)},d.prototype.string=function(){var g=this.uint32();return this.buf.utf8Slice?this.buf.utf8Slice(this.pos,this.pos=Math.min(this.pos+g,this.len)):this.buf.toString("utf-8",this.pos,this.pos=Math.min(this.pos+g,this.len))},d._configure()},5054:i=>{i.exports={}},5994:(i,s,o)=>{s.Service=o(7948)},7948:(i,s,o)=>{i.exports=c;var a=o(9693);function c(d,g,$){if(typeof d!="function")throw TypeError("rpcImpl must be a function");a.EventEmitter.call(this),this.rpcImpl=d,this.requestDelimited=!!g,this.responseDelimited=!!$}(c.prototype=Object.create(a.EventEmitter.prototype)).constructor=c,c.prototype.rpcCall=function d(g,$,j,_e,et){if(!_e)throw TypeError("request must be specified");var _=this;if(!et)return a.asPromise(d,_,g,$,j,_e);if(_.rpcImpl)try{return _.rpcImpl(g,$[_.requestDelimited?"encodeDelimited":"encode"](_e).finish(),function(b,tt){if(b)return _.emit("error",b,g),et(b);if(tt!==null){if(!(tt instanceof j))try{tt=j[_.responseDelimited?"decodeDelimited":"decode"](tt)}catch(nt){return _.emit("error",nt,g),et(nt)}return _.emit("data",tt,g),et(null,tt)}_.end(!0)})}catch(b){return _.emit("error",b,g),void setTimeout(function(){et(b)},0)}else setTimeout(function(){et(Error("already ended"))},0)},c.prototype.end=function(d){return this.rpcImpl&&(d||this.rpcImpl(null,null,null),this.rpcImpl=null,this.emit("end").off()),this}},1945:(i,s,o)=>{i.exports=c;var a=o(9693);function c(j,_e){this.lo=j>>>0,this.hi=_e>>>0}var d=c.zero=new c(0,0);d.toNumber=function(){return 0},d.zzEncode=d.zzDecode=function(){return this},d.length=function(){return 1};var g=c.zeroHash="\0\0\0\0\0\0\0\0";c.fromNumber=function(j){if(j===0)return d;var _e=j<0;_e&&(j=-j);var et=j>>>0,_=(j-et)/4294967296>>>0;return _e&&(_=~_>>>0,et=~et>>>0,++et>4294967295&&(et=0,++_>4294967295&&(_=0))),new c(et,_)},c.from=function(j){if(typeof j=="number")return c.fromNumber(j);if(a.isString(j)){if(!a.Long)return c.fromNumber(parseInt(j,10));j=a.Long.fromString(j)}return j.low||j.high?new c(j.low>>>0,j.high>>>0):d},c.prototype.toNumber=function(j){if(!j&&this.hi>>>31){var _e=1+~this.lo>>>0,et=~this.hi>>>0;return _e||(et=et+1>>>0),-(_e+4294967296*et)}return this.lo+4294967296*this.hi},c.prototype.toLong=function(j){return a.Long?new a.Long(0|this.lo,0|this.hi,!!j):{low:0|this.lo,high:0|this.hi,unsigned:!!j}};var $=String.prototype.charCodeAt;c.fromHash=function(j){return j===g?d:new c(($.call(j,0)|$.call(j,1)<<8|$.call(j,2)<<16|$.call(j,3)<<24)>>>0,($.call(j,4)|$.call(j,5)<<8|$.call(j,6)<<16|$.call(j,7)<<24)>>>0)},c.prototype.toHash=function(){return String.fromCharCode(255&this.lo,this.lo>>>8&255,this.lo>>>16&255,this.lo>>>24,255&this.hi,this.hi>>>8&255,this.hi>>>16&255,this.hi>>>24)},c.prototype.zzEncode=function(){var j=this.hi>>31;return this.hi=((this.hi<<1|this.lo>>>31)^j)>>>0,this.lo=(this.lo<<1^j)>>>0,this},c.prototype.zzDecode=function(){var j=-(1&this.lo);return this.lo=((this.lo>>>1|this.hi<<31)^j)>>>0,this.hi=(this.hi>>>1^j)>>>0,this},c.prototype.length=function(){var j=this.lo,_e=(this.lo>>>28|this.hi<<4)>>>0,et=this.hi>>>24;return et===0?_e===0?j<16384?j<128?1:2:j<2097152?3:4:_e<16384?_e<128?5:6:_e<2097152?7:8:et<128?9:10}},9693:function(i,s,o){var a=s;function c(g,$,j){for(var _e=Object.keys($),et=0;et<_e.length;++et)g[_e[et]]!==void 0&&j||(g[_e[et]]=$[_e[et]]);return g}function d(g){function $(j,_e){if(!(this instanceof $))return new $(j,_e);Object.defineProperty(this,"message",{get:function(){return j}}),Error.captureStackTrace?Error.captureStackTrace(this,$):Object.defineProperty(this,"stack",{value:new Error().stack||""}),_e&&c(this,_e)}return($.prototype=Object.create(Error.prototype)).constructor=$,Object.defineProperty($.prototype,"name",{get:function(){return g}}),$.prototype.toString=function(){return this.name+": "+this.message},$}a.asPromise=o(4537),a.base64=o(7419),a.EventEmitter=o(9211),a.float=o(945),a.inquire=o(7199),a.utf8=o(4997),a.pool=o(6662),a.LongBits=o(1945),a.isNode=!!(o.g!==void 0&&o.g&&o.g.process&&o.g.process.versions&&o.g.process.versions.node),a.global=a.isNode&&o.g||typeof window<"u"&&window||typeof self<"u"&&self||this,a.emptyArray=Object.freeze?Object.freeze([]):[],a.emptyObject=Object.freeze?Object.freeze({}):{},a.isInteger=Number.isInteger||function(g){return typeof g=="number"&&isFinite(g)&&Math.floor(g)===g},a.isString=function(g){return typeof g=="string"||g instanceof String},a.isObject=function(g){return g&&typeof g=="object"},a.isset=a.isSet=function(g,$){var j=g[$];return!(j==null||!g.hasOwnProperty($))&&(typeof j!="object"||(Array.isArray(j)?j.length:Object.keys(j).length)>0)},a.Buffer=function(){try{var g=a.inquire("buffer").Buffer;return g.prototype.utf8Write?g:null}catch{return null}}(),a._Buffer_from=null,a._Buffer_allocUnsafe=null,a.newBuffer=function(g){return typeof g=="number"?a.Buffer?a._Buffer_allocUnsafe(g):new a.Array(g):a.Buffer?a._Buffer_from(g):typeof Uint8Array>"u"?g:new Uint8Array(g)},a.Array=typeof Uint8Array<"u"?Uint8Array:Array,a.Long=a.global.dcodeIO&&a.global.dcodeIO.Long||a.global.Long||a.inquire("long"),a.key2Re=/^true|false|0|1$/,a.key32Re=/^-?(?:0|[1-9][0-9]*)$/,a.key64Re=/^(?:[\\x00-\\xff]{8}|-?(?:0|[1-9][0-9]*))$/,a.longToHash=function(g){return g?a.LongBits.from(g).toHash():a.LongBits.zeroHash},a.longFromHash=function(g,$){var j=a.LongBits.fromHash(g);return a.Long?a.Long.fromBits(j.lo,j.hi,$):j.toNumber(!!$)},a.merge=c,a.lcFirst=function(g){return g.charAt(0).toLowerCase()+g.substring(1)},a.newError=d,a.ProtocolError=d("ProtocolError"),a.oneOfGetter=function(g){for(var $={},j=0;j<g.length;++j)$[g[j]]=1;return function(){for(var _e=Object.keys(this),et=_e.length-1;et>-1;--et)if($[_e[et]]===1&&this[_e[et]]!==void 0&&this[_e[et]]!==null)return _e[et]}},a.oneOfSetter=function(g){return function($){for(var j=0;j<g.length;++j)g[j]!==$&&delete this[g[j]]}},a.toJSONOptions={longs:String,enums:String,bytes:String,json:!0},a._configure=function(){var g=a.Buffer;g?(a._Buffer_from=g.from!==Uint8Array.from&&g.from||function($,j){return new g($,j)},a._Buffer_allocUnsafe=g.allocUnsafe||function($){return new g($)}):a._Buffer_from=a._Buffer_allocUnsafe=null}},1173:(i,s,o)=>{i.exports=_;var a,c=o(9693),d=c.LongBits,g=c.base64,$=c.utf8;function j(it,at,lt){this.fn=it,this.len=at,this.next=void 0,this.val=lt}function _e(){}function et(it){this.head=it.head,this.tail=it.tail,this.len=it.len,this.next=it.states}function _(){this.len=0,this.head=new j(_e,0,0),this.tail=this.head,this.states=null}var b=function(){return c.Buffer?function(){return(_.create=function(){return new a})()}:function(){return new _}};function tt(it,at,lt){at[lt]=255&it}function nt(it,at){this.len=it,this.next=void 0,this.val=at}function rt(it,at,lt){for(;it.hi;)at[lt++]=127&it.lo|128,it.lo=(it.lo>>>7|it.hi<<25)>>>0,it.hi>>>=7;for(;it.lo>127;)at[lt++]=127&it.lo|128,it.lo=it.lo>>>7;at[lt++]=it.lo}function st(it,at,lt){at[lt]=255&it,at[lt+1]=it>>>8&255,at[lt+2]=it>>>16&255,at[lt+3]=it>>>24}_.create=b(),_.alloc=function(it){return new c.Array(it)},c.Array!==Array&&(_.alloc=c.pool(_.alloc,c.Array.prototype.subarray)),_.prototype._push=function(it,at,lt){return this.tail=this.tail.next=new j(it,at,lt),this.len+=at,this},nt.prototype=Object.create(j.prototype),nt.prototype.fn=function(it,at,lt){for(;it>127;)at[lt++]=127&it|128,it>>>=7;at[lt]=it},_.prototype.uint32=function(it){return this.len+=(this.tail=this.tail.next=new nt((it>>>=0)<128?1:it<16384?2:it<2097152?3:it<268435456?4:5,it)).len,this},_.prototype.int32=function(it){return it<0?this._push(rt,10,d.fromNumber(it)):this.uint32(it)},_.prototype.sint32=function(it){return this.uint32((it<<1^it>>31)>>>0)},_.prototype.uint64=function(it){var at=d.from(it);return this._push(rt,at.length(),at)},_.prototype.int64=_.prototype.uint64,_.prototype.sint64=function(it){var at=d.from(it).zzEncode();return this._push(rt,at.length(),at)},_.prototype.bool=function(it){return this._push(tt,1,it?1:0)},_.prototype.fixed32=function(it){return this._push(st,4,it>>>0)},_.prototype.sfixed32=_.prototype.fixed32,_.prototype.fixed64=function(it){var at=d.from(it);return this._push(st,4,at.lo)._push(st,4,at.hi)},_.prototype.sfixed64=_.prototype.fixed64,_.prototype.float=function(it){return this._push(c.float.writeFloatLE,4,it)},_.prototype.double=function(it){return this._push(c.float.writeDoubleLE,8,it)};var ot=c.Array.prototype.set?function(it,at,lt){at.set(it,lt)}:function(it,at,lt){for(var ut=0;ut<it.length;++ut)at[lt+ut]=it[ut]};_.prototype.bytes=function(it){var at=it.length>>>0;if(!at)return this._push(tt,1,0);if(c.isString(it)){var lt=_.alloc(at=g.length(it));g.decode(it,lt,0),it=lt}return this.uint32(at)._push(ot,at,it)},_.prototype.string=function(it){var at=$.length(it);return at?this.uint32(at)._push($.write,at,it):this._push(tt,1,0)},_.prototype.fork=function(){return this.states=new et(this),this.head=this.tail=new j(_e,0,0),this.len=0,this},_.prototype.reset=function(){return this.states?(this.head=this.states.head,this.tail=this.states.tail,this.len=this.states.len,this.states=this.states.next):(this.head=this.tail=new j(_e,0,0),this.len=0),this},_.prototype.ldelim=function(){var it=this.head,at=this.tail,lt=this.len;return this.reset().uint32(lt),lt&&(this.tail.next=it.next,this.tail=at,this.len+=lt),this},_.prototype.finish=function(){for(var it=this.head.next,at=this.constructor.alloc(this.len),lt=0;it;)it.fn(it.val,at,lt),lt+=it.len,it=it.next;return at},_._configure=function(it){a=it,_.create=b(),a._configure()}},3155:(i,s,o)=>{i.exports=d;var a=o(1173);(d.prototype=Object.create(a.prototype)).constructor=d;var c=o(9693);function d(){a.call(this)}function g($,j,_e){$.length<40?c.utf8.write($,j,_e):j.utf8Write?j.utf8Write($,_e):j.write($,_e)}d._configure=function(){d.alloc=c._Buffer_allocUnsafe,d.writeBytesBuffer=c.Buffer&&c.Buffer.prototype instanceof Uint8Array&&c.Buffer.prototype.set.name==="set"?function($,j,_e){j.set($,_e)}:function($,j,_e){if($.copy)$.copy(j,_e,0,$.length);else for(var et=0;et<$.length;)j[_e++]=$[et++]}},d.prototype.bytes=function($){c.isString($)&&($=c._Buffer_from($,"base64"));var j=$.length>>>0;return this.uint32(j),j&&this._push(d.writeBytesBuffer,j,$),this},d.prototype.string=function($){var j=c.Buffer.byteLength($);return this.uint32(j),j&&this._push(g,j,$),this},d._configure()},7714:(i,s,o)=>{s.R=void 0;const a=o(6919),c=o(7448);s.R=new class{async init(){}async createSessionHandler(d,g){const $=new a.Session(g);return await $.loadModel(d),new c.OnnxjsSessionHandler($)}}},4200:(i,s,o)=>{s.c8=s.rX=void 0;const a=o(1670),c=o(5381),d=o(2157),g=o(2306);s.rX=()=>{if((typeof a.env.wasm.initTimeout!="number"||a.env.wasm.initTimeout<0)&&(a.env.wasm.initTimeout=0),typeof a.env.wasm.simd!="boolean"&&(a.env.wasm.simd=!0),typeof a.env.wasm.proxy!="boolean"&&(a.env.wasm.proxy=!1),typeof a.env.wasm.numThreads!="number"||!Number.isInteger(a.env.wasm.numThreads)||a.env.wasm.numThreads<=0){const $=typeof navigator>"u"?(0,c.cpus)().length:navigator.hardwareConcurrency;a.env.wasm.numThreads=Math.min(4,Math.ceil(($||1)/2))}},s.c8=new class{async init(){(0,s.rX)(),await(0,d.initWasm)()}async createSessionHandler($,j){const _e=new g.OnnxruntimeWebAssemblySessionHandler;return await _e.loadModel($,j),Promise.resolve(_e)}}},6018:function(i,s,o){var a=this&&this.__createBinding||(Object.create?function(g,$,j,_e){_e===void 0&&(_e=j);var et=Object.getOwnPropertyDescriptor($,j);et&&!("get"in et?!$.__esModule:et.writable||et.configurable)||(et={enumerable:!0,get:function(){return $[j]}}),Object.defineProperty(g,_e,et)}:function(g,$,j,_e){_e===void 0&&(_e=j),g[_e]=$[j]}),c=this&&this.__exportStar||function(g,$){for(var j in g)j==="default"||Object.prototype.hasOwnProperty.call($,j)||a($,g,j)};Object.defineProperty(s,"__esModule",{value:!0}),c(o(1670),s);const d=o(1670);{const g=o(7714).R;(0,d.registerBackend)("webgl",g,-10)}{const g=o(4200).c8;(0,d.registerBackend)("cpu",g,10),(0,d.registerBackend)("wasm",g,10),(0,d.registerBackend)("xnnpack",g,9)}},246:(i,s)=>{Object.defineProperty(s,"__esModule",{value:!0}),s.createAttributeWithCacheKey=void 0;class o{constructor(c){Object.assign(this,c)}get cacheKey(){return this._cacheKey||(this._cacheKey=Object.getOwnPropertyNames(this).sort().map(c=>`${this[c]}`).join(";")),this._cacheKey}}s.createAttributeWithCacheKey=a=>new o(a)},7778:(i,s,o)=>{Object.defineProperty(s,"__esModule",{value:!0}),s.Attribute=void 0;const a=o(1446),c=o(9395),d=o(9162),g=o(2517);var $=c.onnxruntime.experimental.fbs;class j{constructor(et){if(this._attributes=new Map,et!=null){for(const _ of et)_ instanceof a.onnx.AttributeProto?this._attributes.set(_.name,[j.getValue(_),j.getType(_)]):_ instanceof $.Attribute&&this._attributes.set(_.name(),[j.getValue(_),j.getType(_)]);if(this._attributes.size<et.length)throw new Error("duplicated attribute names")}}set(et,_,b){this._attributes.set(et,[b,_])}delete(et){this._attributes.delete(et)}getFloat(et,_){return this.get(et,"float",_)}getInt(et,_){return this.get(et,"int",_)}getString(et,_){return this.get(et,"string",_)}getTensor(et,_){return this.get(et,"tensor",_)}getFloats(et,_){return this.get(et,"floats",_)}getInts(et,_){return this.get(et,"ints",_)}getStrings(et,_){return this.get(et,"strings",_)}getTensors(et,_){return this.get(et,"tensors",_)}get(et,_,b){const tt=this._attributes.get(et);if(tt===void 0){if(b!==void 0)return b;throw new Error(`required attribute not found: ${et}`)}if(tt[1]!==_)throw new Error(`type mismatch: expected ${_} but got ${tt[1]}`);return tt[0]}static getType(et){const _=et instanceof a.onnx.AttributeProto?et.type:et.type();switch(_){case a.onnx.AttributeProto.AttributeType.FLOAT:return"float";case a.onnx.AttributeProto.AttributeType.INT:return"int";case a.onnx.AttributeProto.AttributeType.STRING:return"string";case a.onnx.AttributeProto.AttributeType.TENSOR:return"tensor";case a.onnx.AttributeProto.AttributeType.FLOATS:return"floats";case a.onnx.AttributeProto.AttributeType.INTS:return"ints";case a.onnx.AttributeProto.AttributeType.STRINGS:return"strings";case a.onnx.AttributeProto.AttributeType.TENSORS:return"tensors";default:throw new Error(`attribute type is not supported yet: ${a.onnx.AttributeProto.AttributeType[_]}`)}}static getValue(et){const _=et instanceof a.onnx.AttributeProto?et.type:et.type();if(_===a.onnx.AttributeProto.AttributeType.GRAPH||_===a.onnx.AttributeProto.AttributeType.GRAPHS)throw new Error("graph attribute is not supported yet");const b=this.getValueNoCheck(et);if(_===a.onnx.AttributeProto.AttributeType.INT&&g.LongUtil.isLong(b))return g.LongUtil.longToNumber(b);if(_===a.onnx.AttributeProto.AttributeType.INTS){const tt=b,nt=new Array(tt.length);for(let rt=0;rt<tt.length;rt++){const st=tt[rt];nt[rt]=g.LongUtil.longToNumber(st)}return nt}if(_===a.onnx.AttributeProto.AttributeType.TENSOR)return et instanceof a.onnx.AttributeProto?d.Tensor.fromProto(b):d.Tensor.fromOrtTensor(b);if(_===a.onnx.AttributeProto.AttributeType.TENSORS){if(et instanceof a.onnx.AttributeProto)return b.map(tt=>d.Tensor.fromProto(tt));if(et instanceof $.Attribute)return b.map(tt=>d.Tensor.fromOrtTensor(tt))}if(_===a.onnx.AttributeProto.AttributeType.STRING&&et instanceof a.onnx.AttributeProto){const tt=b;return(0,g.decodeUtf8String)(tt)}return _===a.onnx.AttributeProto.AttributeType.STRINGS&&et instanceof a.onnx.AttributeProto?b.map(g.decodeUtf8String):b}static getValueNoCheck(et){return et instanceof a.onnx.AttributeProto?this.getValueNoCheckFromOnnxFormat(et):this.getValueNoCheckFromOrtFormat(et)}static getValueNoCheckFromOnnxFormat(et){switch(et.type){case a.onnx.AttributeProto.AttributeType.FLOAT:return et.f;case a.onnx.AttributeProto.AttributeType.INT:return et.i;case a.onnx.AttributeProto.AttributeType.STRING:return et.s;case a.onnx.AttributeProto.AttributeType.TENSOR:return et.t;case a.onnx.AttributeProto.AttributeType.GRAPH:return et.g;case a.onnx.AttributeProto.AttributeType.FLOATS:return et.floats;case a.onnx.AttributeProto.AttributeType.INTS:return et.ints;case a.onnx.AttributeProto.AttributeType.STRINGS:return et.strings;case a.onnx.AttributeProto.AttributeType.TENSORS:return et.tensors;case a.onnx.AttributeProto.AttributeType.GRAPHS:return et.graphs;default:throw new Error(`unsupported attribute type: ${a.onnx.AttributeProto.AttributeType[et.type]}`)}}static getValueNoCheckFromOrtFormat(et){switch(et.type()){case $.AttributeType.FLOAT:return et.f();case $.AttributeType.INT:return et.i();case $.AttributeType.STRING:return et.s();case $.AttributeType.TENSOR:return et.t();case $.AttributeType.GRAPH:return et.g();case $.AttributeType.FLOATS:return et.floatsArray();case $.AttributeType.INTS:{const _=[];for(let b=0;b<et.intsLength();b++)_.push(et.ints(b));return _}case $.AttributeType.STRINGS:{const _=[];for(let b=0;b<et.stringsLength();b++)_.push(et.strings(b));return _}case $.AttributeType.TENSORS:{const _=[];for(let b=0;b<et.tensorsLength();b++)_.push(et.tensors(b));return _}default:throw new Error(`unsupported attribute type: ${$.AttributeType[et.type()]}`)}}}s.Attribute=j},7091:(i,s,o)=>{Object.defineProperty(s,"__esModule",{value:!0}),s.resolveBackend=s.backend=void 0;const a=o(5038),c=new Map;async function d(g){const $=s.backend;if($[g]!==void 0&&function(j){const _e=j;return"initialize"in _e&&typeof _e.initialize=="function"&&"createSessionHandler"in _e&&typeof _e.createSessionHandler=="function"&&"dispose"in _e&&typeof _e.dispose=="function"}($[g])){const j=$[g];let _e=j.initialize();if(typeof _e=="object"&&"then"in _e&&(_e=await _e),_e)return c.set(g,j),j}}s.backend={webgl:new a.WebGLBackend},s.resolveBackend=async function g($){if(!$)return g(["webgl"]);{const j=typeof $=="string"?[$]:$;for(const _e of j){const et=c.get(_e);if(et)return et;const _=await d(_e);if(_)return _}}throw new Error("no available backend to use")}},5038:(i,s,o)=>{Object.defineProperty(s,"__esModule",{value:!0}),s.WebGLBackend=void 0;const a=o(1670),c=o(6231),d=o(6416),g=o(7305);s.WebGLBackend=class{get contextId(){return a.env.webgl.contextId}set contextId($){a.env.webgl.contextId=$}get matmulMaxBatchSize(){return a.env.webgl.matmulMaxBatchSize}set matmulMaxBatchSize($){a.env.webgl.matmulMaxBatchSize=$}get textureCacheMode(){return a.env.webgl.textureCacheMode}set textureCacheMode($){a.env.webgl.textureCacheMode=$}get pack(){return a.env.webgl.pack}set pack($){a.env.webgl.pack=$}get async(){return a.env.webgl.async}set async($){a.env.webgl.async=$}initialize(){try{return this.glContext=(0,g.createWebGLContext)(this.contextId),typeof this.matmulMaxBatchSize!="number"&&(this.matmulMaxBatchSize=16),typeof this.textureCacheMode!="string"&&(this.textureCacheMode="full"),typeof this.pack!="boolean"&&(this.pack=!1),typeof this.async!="boolean"&&(this.async=!1),c.Logger.setWithEnv(a.env),c.Logger.verbose("WebGLBackend",`Created WebGLContext: ${typeof this.glContext} with matmulMaxBatchSize: ${this.matmulMaxBatchSize}; textureCacheMode: ${this.textureCacheMode}; pack: ${this.pack}; async: ${this.async}.`),!0}catch($){return c.Logger.warning("WebGLBackend",`Unable to initialize WebGLBackend. ${$}`),!1}}createSessionHandler($){return new d.WebGLSessionHandler(this,$)}dispose(){this.glContext.dispose()}}},5107:(i,s,o)=>{Object.defineProperty(s,"__esModule",{value:!0}),s.CoordsGlslLib=void 0;const a=o(2517),c=o(8520),d=o(5060),g=o(7859),$=o(9390);class j extends c.GlslLib{constructor(et){super(et)}getFunctions(){return Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({},this.offsetToCoords()),this.coordsToOffset()),this.toVec()),this.valueFrom()),this.getCommonUtilFuncs()),this.getInputsSamplingSnippets()),this.getOutputSamplingSnippet())}getCustomTypes(){return{}}offsetToCoords(){return{offsetToCoords:new c.GlslLibRoutine(`
      vec2 offsetToCoords(int offset, int width, int height) {
        int t = offset / width;
        int s = offset - t*width;
        vec2 coords = (vec2(s,t) + vec2(0.5,0.5)) / vec2(width, height);
        return coords;
      }
      `)}}coordsToOffset(){return{coordsToOffset:new c.GlslLibRoutine(`
      int coordsToOffset(vec2 coords, int width, int height) {
        float s = coords.s * float(width);
        float t = coords.t * float(height);
        int offset = int(t) * width + int(s);
        return offset;
      }
      `)}}getOutputSamplingSnippet(){const et=this.context.outputTextureLayout;return et.isPacked?this.getPackedOutputSamplingSnippet(et):this.getUnpackedOutputSamplingSnippet(et)}getPackedOutputSamplingSnippet(et){const _=et.unpackedShape,b=[et.width,et.height],tt={},nt="getOutputCoords";switch(_.length){case 0:tt[nt]=this.getOutputScalarCoords();break;case 1:tt[nt]=this.getOutputPacked1DCoords(_,b);break;case 2:tt[nt]=this.getOutputPacked2DCoords(_,b);break;case 3:tt[nt]=this.getOutputPacked3DCoords(_,b);break;default:tt[nt]=this.getOutputPackedNDCoords(_,b)}const rt=`
      void setOutput(vec4 val) {
        ${(0,d.getGlsl)(this.context.glContext.version).output} = val;
      }
    `;return tt.floatTextureSetRGBA=new c.GlslLibRoutine(rt),tt}getUnpackedOutputSamplingSnippet(et){const _=et.unpackedShape,b=[et.width,et.height],tt={},nt="getOutputCoords";switch(_.length){case 0:tt[nt]=this.getOutputScalarCoords();break;case 1:tt[nt]=this.getOutputUnpacked1DCoords(_,b);break;case 2:tt[nt]=this.getOutputUnpacked2DCoords(_,b);break;case 3:tt[nt]=this.getOutputUnpacked3DCoords(_,b);break;case 4:tt[nt]=this.getOutputUnpacked4DCoords(_,b);break;case 5:tt[nt]=this.getOutputUnpacked5DCoords(_,b);break;case 6:tt[nt]=this.getOutputUnpacked6DCoords(_,b);break;default:throw new Error(`Unsupported output dimensionality: ${_.length}`)}const rt=`
        void setOutput(float val) {
          ${(0,d.getGlsl)(this.context.glContext.version).output} = vec4(val, 0, 0, 0);
        }
    `;return tt.floatTextureSetR=new c.GlslLibRoutine(rt),tt}getOutputScalarCoords(){return new c.GlslLibRoutine(`
      int getOutputCoords() {
        return 0;
      }
    `)}getOutputPacked1DCoords(et,_){const b=_;let tt="";return b[0]===1?(tt=`
          int getOutputCoords() {
            return 2 * int(TexCoords.y * ${b[1]}.0);
          }
        `,new c.GlslLibRoutine(tt)):b[1]===1?(tt=`
          int getOutputCoords() {
            return 2 * int(TexCoords.x * ${b[0]}.0);
          }
        `,new c.GlslLibRoutine(tt)):(tt=`
        int getOutputCoords() {
          ivec2 resTexRC = ivec2(TexCoords.xy *
                                 vec2(${b[0]}, ${b[1]}));
          return 2 * (resTexRC.y * ${b[0]} + resTexRC.x);
        }
      `,new c.GlslLibRoutine(tt))}getOutputPacked2DCoords(et,_){let b="";if(a.ArrayUtil.arraysEqual(et,_))return b=`
        ivec2 getOutputCoords() {
          return 2 * ivec2(TexCoords.xy * vec2(${_[0]}, ${_[1]}));
        }
      `,new c.GlslLibRoutine(b);const tt=_,nt=Math.ceil(et[1]/2);return b=`
        ivec2 getOutputCoords() {
          ivec2 resTexRC = ivec2(TexCoords.xy *
                                vec2(${tt[0]}, ${tt[1]}));

          int index = resTexRC.y * ${tt[0]} + resTexRC.x;

          // reverse r and c order for packed texture
          int r = imod(index, ${nt}) * 2;
          int c = 2 * (index / ${nt});

          return ivec2(r, c);
        }
      `,new c.GlslLibRoutine(b)}getOutputPacked3DCoords(et,_){const b=[_[0],_[1]],tt=Math.ceil(et[2]/2),nt=tt*Math.ceil(et[1]/2),rt=`
        ivec3 getOutputCoords() {
          ivec2 resTexRC = ivec2(TexCoords.xy *
                                vec2(${b[0]}, ${b[1]}));
          int index = resTexRC.y * ${b[0]} + resTexRC.x;

          int b = index / ${nt};
          index -= b * ${nt};

          // reverse r and c order for packed texture
          int r = imod(index, ${tt}) * 2;
          int c = 2 * (index / ${tt});

          return ivec3(b, r, c);
        }
      `;return new c.GlslLibRoutine(rt)}getOutputPackedNDCoords(et,_){const b=[_[0],_[1]],tt=Math.ceil(et[et.length-1]/2),nt=tt*Math.ceil(et[et.length-2]/2);let rt=nt,st="",ot="b, r, c";for(let at=2;at<et.length-1;at++)rt*=et[et.length-at-1],st=`
      int b${at} = index / ${rt};
      index -= b${at} * ${rt};
    `+st,ot=`b${at}, `+ot;const it=`
      ivec${et.length} getOutputCoords() {
        ivec2 resTexRC = ivec2(TexCoords.xy *
                              vec2(${b[0]}, ${b[1]}));
        int index = resTexRC.y * ${b[0]} + resTexRC.x;

        ${st}

        int b = index / ${nt};
        index -= b * ${nt};

        // reverse r and c order for packed texture
        int r = imod(index, ${tt}) * 2;
        int c = 2 * (index / ${tt});

        return ivec${et.length}(${ot});
      }
    `;return new c.GlslLibRoutine(it)}getOutputUnpacked1DCoords(et,_){const b=`
        int getOutputCoords() {
          ivec2 resTexRC = ivec2(TexCoords.xy *
                                vec2(${_[0]}, ${_[1]}));
          return resTexRC.y * ${_[0]} + resTexRC.x;
        }
      `;return new c.GlslLibRoutine(b)}getOutputUnpacked2DCoords(et,_){const b=`
        ivec2 getOutputCoords() {
          ivec2 resTexRC = ivec2(TexCoords.xy *
                                vec2(${_[0]}, ${_[1]}));
          int index = resTexRC.y * ${_[0]} + resTexRC.x;
          int r = index / ${et[1]};
          int c = index - r * ${et[1]};
          return ivec2(r, c);
        }
      `;return new c.GlslLibRoutine(b)}getOutputUnpacked3DCoords(et,_){let b="";const tt=et.length;let nt=null;tt<2&&(nt=[]),nt=new Array(tt-1),nt[tt-2]=et[tt-1];for(let ot=tt-3;ot>=0;--ot)nt[ot]=nt[ot+1]*et[ot+1];const rt=["r","c","d"],st=nt.map((ot,it)=>`int ${rt[it]} = index / ${ot}; ${it===nt.length-1?`int ${rt[it+1]} = index - ${rt[it]} * ${ot}`:`index -= ${rt[it]} * ${ot}`};`).join("");return b=`
        ivec3 getOutputCoords() {
          ivec2 resTexRC = ivec2(TexCoords.xy *
                                vec2(${_[0]}, ${_[1]}));
          int index = resTexRC.y * ${_[0]} + resTexRC.x;
          ${st}
          return ivec3(r, c, d);
        }
      `,new c.GlslLibRoutine(b)}getOutputUnpacked4DCoords(et,_){let b="";const tt=et.length;let nt=null;tt<2&&(nt=[]),nt=new Array(tt-1),nt[tt-2]=et[tt-1];for(let ot=tt-3;ot>=0;--ot)nt[ot]=nt[ot+1]*et[ot+1];const rt=["r","c","d","d2"],st=nt.map((ot,it)=>`int ${rt[it]} = index / ${ot}; ${it===nt.length-1?`int ${rt[it+1]} = index - ${rt[it]} * ${ot}`:`index -= ${rt[it]} * ${ot}`};`).join("");return b=`
      ivec4 getOutputCoords() {
          ivec2 resTexRC = ivec2(TexCoords.xy *
                                vec2(${_[0]}, ${_[1]}));
          int index = resTexRC.y * ${_[0]} + resTexRC.x;
          ${st}
          return ivec4(r, c, d, d2);
        }
      `,new c.GlslLibRoutine(b)}getOutputUnpacked5DCoords(et,_){let b="";const tt=et.length;let nt=null;tt<2&&(nt=[]),nt=new Array(tt-1),nt[tt-2]=et[tt-1];for(let ot=tt-3;ot>=0;--ot)nt[ot]=nt[ot+1]*et[ot+1];const rt=["r","c","d","d2","d3"],st=nt.map((ot,it)=>`int ${rt[it]} = index / ${ot}; ${it===nt.length-1?`int ${rt[it+1]} = index - ${rt[it]} * ${ot}`:`index -= ${rt[it]} * ${ot}`};`).join("");return b=`
      ivec5 getOutputCoords() {
          ivec2 resTexRC = ivec2(TexCoords.xy *
                                vec2(${_[0]}, ${_[1]}));
          int index = resTexRC.y * ${_[0]} + resTexRC.x;
          ${st}
          return ivec5(r, c, d, d2, d3);
        }
      `,new c.GlslLibRoutine(b)}getOutputUnpacked6DCoords(et,_){let b="";const tt=et.length;let nt=null;tt<2&&(nt=[]),nt=new Array(tt-1),nt[tt-2]=et[tt-1];for(let ot=tt-3;ot>=0;--ot)nt[ot]=nt[ot+1]*et[ot+1];const rt=["r","c","d","d2","d3","d4"],st=nt.map((ot,it)=>`int ${rt[it]} = index / ${ot}; ${it===nt.length-1?`int ${rt[it+1]} = index - ${rt[it]} * ${ot}`:`index -= ${rt[it]} * ${ot}`};`).join("");return b=`
     ivec6 getOutputCoords() {
         ivec2 resTexRC = ivec2(TexCoords.xy *
                               vec2(${_[0]}, ${_[1]}));
         int index = resTexRC.y * ${_[0]} + resTexRC.x;
         ${st}
         return ivec6(r, c, d, d2, d3, d4);
       }
     `,new c.GlslLibRoutine(b)}getCommonUtilFuncs(){const et={};let _="uvFromFlat";et[_]=new c.GlslLibRoutine(`
    vec2 uvFromFlat(int texNumR, int texNumC, int index) {
      int texC = index / texNumR;
      int texR = index - texC * texNumR;
      // TODO: swap texR, texC order in following function so row is corresponding to u and column is corresponding to
      //       v.
      return (vec2(texR, texC) + halfCR) / vec2(texNumR, texNumC);
    }
    `),_="packedUVfrom1D",et[_]=new c.GlslLibRoutine(`
      vec2 packedUVfrom1D(int texNumR, int texNumC, int index) {
        int texelIndex = index / 2;
        int texR = texelIndex / texNumC;
        int texC = texelIndex - texR * texNumC;
        return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
      }
      `),_="packedUVfrom2D",et[_]=new c.GlslLibRoutine(`
      vec2 packedUVfrom2D(int texNumR, int texNumC, int texelsInLogicalRow, int row, int col) {
        int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);
        int texR = texelIndex / texNumC;
        int texC = texelIndex - texR * texNumC;
        return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
      }
      `),_="packedUVfrom3D",et[_]=new c.GlslLibRoutine(`
      vec2 packedUVfrom3D(int texNumR, int texNumC,
          int texelsInBatch, int texelsInLogicalRow, int b,
          int row, int col) {
        int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);
        int texR = index / texNumC;
        int texC = index - texR * texNumC;
        return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
      }
      `),_="sampleTexture";const b=(0,d.getGlsl)(this.context.glContext.version);return et[_]=new c.GlslLibRoutine(`
        float sampleTexture(sampler2D textureSampler, vec2 uv) {
            return ${b.texture2D}(textureSampler, uv).r;
        }`),et}getInputsSamplingSnippets(){const et={},_=this.context.outputTextureLayout;return this.context.programInfo.inputNames.forEach((b,tt)=>{const nt=this.context.inputTextureLayouts[tt],rt=(0,$.generateShaderFuncNameFromInputSamplerName)(b);nt.isPacked?et[rt]=this.getPackedSamplerFromInput(rt,b,nt):et[rt]=this.getUnpackedSamplerFromInput(rt,b,nt);const st=(0,$.generateShaderFuncNameFromInputSamplerNameAtOutCoords)(b);nt.unpackedShape.length<=_.unpackedShape.length&&(nt.isPacked?et[st]=this.getPackedSamplerAtOutputCoords(st,nt,_,b):et[st]=this.getUnpackedSamplerAtOutputCoords(st,nt,_,b))}),et}getPackedSamplerAtOutputCoords(et,_,b,tt){const nt=_.unpackedShape,rt=b.unpackedShape,st=tt,ot=(0,$.generateShaderFuncNameFromInputSamplerName)(st),it=nt.length,at=rt.length,lt=a.BroadcastUtil.getBroadcastDims(nt,rt),ut=(0,$.getCoordsDataType)(at),ct=at-it;let dt;const pt=(0,$.getGlChannels)();dt=it===0?"":at<2&&lt.length>=1?"coords = 0;":lt.map(bt=>`coords.${pt[bt+ct]} = 0;`).join(`
`);let ht="";ht=at<2&&it>0?"coords":nt.map((bt,xt)=>`coords.${pt[xt+ct]}`).join(", ");let ft="return outputValue;";const yt=a.ShapeUtil.size(nt)===1,wt=a.ShapeUtil.size(rt)===1;if(it!==1||yt||wt){if(yt&&!wt)ft=at===1?`
          return vec4(outputValue.x, outputValue.x, 0., 0.);
        `:`
          return vec4(outputValue.x);
        `;else if(lt.length){const bt=it-2,xt=it-1;lt.indexOf(bt)>-1&&lt.indexOf(xt)>-1?ft="return vec4(outputValue.x);":lt.indexOf(bt)>-1?ft="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":lt.indexOf(xt)>-1&&(ft="return vec4(outputValue.xx, outputValue.zz);")}}else ft=`
        return vec4(outputValue.xy, outputValue.xy);
      `;const _t=`
      vec4 ${et}() {
        ${ut} coords = getOutputCoords();
        
        int lastDim = coords.${pt[at-1]};
        coords.${pt[at-1]} = coords.${pt[at-2]};
        coords.${pt[at-2]} = lastDim;
      
        ${dt}
        vec4 outputValue = ${ot}(${ht});
        ${ft}
      }
    `;return new c.GlslLibRoutine(_t,["coordinates.getOutputCoords"])}getUnpackedSamplerAtOutputCoords(et,_,b,tt){const nt=[b.width,b.height],rt=[_.width,_.height],st=_.unpackedShape.length,ot=b.unpackedShape.length,it=_.unpackedShape,at=b.unpackedShape,lt=(0,$.generateShaderFuncNameFromInputSamplerName)(tt);if(st===ot&&a.ArrayUtil.arraysEqual(rt,nt)){const wt=`
          float ${et}() {
            return sampleTexture(${tt}, TexCoords);
          }
        `;return new c.GlslLibRoutine(wt,["coordinates.sampleTexture"])}const ut=(0,$.getCoordsDataType)(ot),ct=a.BroadcastUtil.getBroadcastDims(it,at),dt=ot-st;let pt;const ht=(0,$.getGlChannels)();pt=st===0?"":ot<2&&ct.length>=1?"coords = 0;":ct.map(wt=>`coords.${ht[wt+dt]} = 0;`).join(`
`);let ft="";ft=ot<2&&st>0?"coords":_.unpackedShape.map((wt,_t)=>`coords.${ht[_t+dt]}`).join(", ");const yt=`
        float ${et}() {
          ${ut} coords = getOutputCoords();
          ${pt}
          return ${lt}(${ft});
        }
      `;return new c.GlslLibRoutine(yt,["coordinates.getOutputCoords"])}getPackedSamplerFromInput(et,_,b){switch(b.unpackedShape.length){case 0:return this.getPackedSamplerScalar(et,_);case 1:return this.getPackedSampler1D(et,_,b);case 2:return this.getPackedSampler2D(et,_,b);case 3:return this.getPackedSampler3D(et,_,b);default:return this.getPackedSamplerND(et,_,b)}}getUnpackedSamplerFromInput(et,_,b){const tt=b.unpackedShape;switch(tt.length){case 0:return this.getUnpackedSamplerScalar(et,_,b);case 1:return this.getUnpackedSampler1D(et,_,b);case 2:return this.getUnpackedSampler2D(et,_,b);case 3:return this.getUnpackedSampler3D(et,_,b);case 4:return this.getUnpackedSampler4D(et,_,b);case 5:return this.getUnpackedSampler5D(et,_,b);case 6:return this.getUnpackedSampler6D(et,_,b);default:throw new Error(`Unsupported dimension ${tt.length}-D`)}}getPackedSamplerScalar(et,_){const b=`
          vec4 ${et}() {
            return ${(0,d.getGlsl)(this.context.glContext.version).texture2D}(${_}, halfCR);
          }
        `;return new c.GlslLibRoutine(b)}getPackedSampler1D(et,_,b){const tt=[b.width,b.height],nt=[tt[1],tt[0]],rt=(0,d.getGlsl)(this.context.glContext.version),st=`vec4 ${et}(int index) {
      vec2 uv = packedUVfrom1D(
      ${nt[0]}, ${nt[1]}, index);
      return ${rt.texture2D}(${_}, uv);
    }`;return new c.GlslLibRoutine(st,["coordinates.packedUVfrom1D"])}getPackedSampler2D(et,_,b){const tt=b.unpackedShape,nt=[b.width,b.height],rt=(0,d.getGlsl)(this.context.glContext.version),st=nt[0],ot=nt[1];if(nt!=null&&a.ArrayUtil.arraysEqual(tt,nt)){const ut=`vec4 ${et}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${ot}.0, ${st}.0);
        return ${rt.texture2D}(${_}, uv);
      }`;return new c.GlslLibRoutine(ut)}const it=nt,at=Math.ceil(tt[1]/2),lt=`vec4 ${et}(int row, int col) {
      vec2 uv = packedUVfrom2D(${it[1]}, ${it[0]}, ${at}, row, col);
      return ${rt.texture2D}(${_}, uv);
    }`;return new c.GlslLibRoutine(lt,["coordinates.packedUVfrom2D"])}getPackedSampler3D(et,_,b){const tt=b.unpackedShape,nt=[b.width,b.height],rt=[nt[0],nt[1]],st=(0,d.getGlsl)(this.context.glContext.version);if(tt[0]===1){const ut=tt.slice(1),ct=[1,2],dt=(0,$.squeezeInputShape)(tt,ut),pt=["b","row","col"],ht=JSON.parse(JSON.stringify(b));ht.unpackedShape=dt;const ft=this.getPackedSamplerFromInput(et,_,ht),yt=`${ft.routineBody}
      vec4 ${et}(int b, int row, int col) {
        return ${et}(${(0,$.getSqueezedParams)(pt,ct)});
      } `;return new c.GlslLibRoutine(yt,ft.dependencies)}const ot=rt[0],it=rt[1],at=Math.ceil(tt[2]/2),lt=`vec4 ${et}(int b, int row, int col) {
      vec2 uv = packedUVfrom3D(
        ${it}, ${ot}, ${at*Math.ceil(tt[1]/2)}, ${at}, b, row, col);
      return ${st.texture2D}(${_}, uv);}`;return new c.GlslLibRoutine(lt,["coordinates.packedUVfrom3D"])}getPackedSamplerND(et,_,b){const tt=b.unpackedShape,nt=tt.length,rt=[b.width,b.height],st=(0,d.getGlsl)(this.context.glContext.version),ot=[rt[0],rt[1]],it=ot[1],at=ot[0],lt=Math.ceil(tt[nt-1]/2);let ut=lt*Math.ceil(tt[nt-2]/2),ct="int b, int row, int col",dt=`b * ${ut} + (row / 2) * ${lt} + (col / 2)`;for(let ht=2;ht<nt-1;ht++)ct=`int b${ht}, `+ct,ut*=tt[nt-ht-1],dt=`b${ht} * ${ut} + `+dt;const pt=`vec4 ${et}(${ct}) {
      int index = ${dt};
      int texR = index / ${at};
      int texC = index - texR * ${at};
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${at}, ${it});
      return ${st.texture2D}(${_}, uv);
    }`;return new c.GlslLibRoutine(pt)}getUnpackedSamplerScalar(et,_,b){const[tt,nt]=[b.width,b.height];if(tt===1&&nt===1){const st=`
          float ${et}() {
            return sampleTexture(${_}, halfCR);
          }
        `;return new c.GlslLibRoutine(st,["coordinates.sampleTexture"])}const rt=`
        float ${et}() {
          int offset_${_} = coordsToOffset(TexCoords, ${tt}, ${nt});
          vec2 uv = uvFromFlat(${tt}, ${nt}, offset_${_});
          return sampleTexture(${_}, uv);
        }
      `;return new c.GlslLibRoutine(rt,["coordinates.uvFromFlat","coordinates.sampleTexture","coordinates.coordsToOffset"])}getUnpackedSampler1D(et,_,b){const tt=b.width,nt=b.height;if(nt===1&&tt===1){const st=`
        float ${et}(int index) {
          return sampleTexture(${_}, halfCR);
        }
      `;return new c.GlslLibRoutine(st,["coordinates.sampleTexture"])}if(nt===1){const st=`
          float ${et}(int index) {
            vec2 uv = vec2((float(index) + 0.5) / ${tt}.0, 0.5);
            return sampleTexture(${_}, uv);
          }
        `;return new c.GlslLibRoutine(st,["coordinates.sampleTexture"])}if(tt===1){const st=`
          float ${et}(int index) {
            vec2 uv = vec2(0.5, (float(index) + 0.5) / ${nt}.0);
            return sampleTexture(${_}, uv);
          }
        `;return new c.GlslLibRoutine(st,["coordinates.sampleTexture"])}const rt=`
        float ${et}(int index) {
          vec2 uv = uvFromFlat(${tt}, ${nt}, index);
          return sampleTexture(${_}, uv);
        }
      `;return new c.GlslLibRoutine(rt,["coordinates.uvFromFlat","coordinates.sampleTexture"])}getUnpackedSampler2D(et,_,b){const tt=b.unpackedShape,nt=[b.height,b.width];if(nt!=null&&a.ArrayUtil.arraysEqual(tt,nt)){const ut=`
          float ${et}(int row, int col) {
            vec2 uv = (vec2(row, col) + halfCR) / vec2(${nt[1]}.0, ${nt[0]}.0);
            return sampleTexture(${_}, uv);
          }
        `;return new c.GlslLibRoutine(ut,["coordinates.sampleTexture"])}const{newShape:rt,keptDims:st}=(0,g.squeezeShape)(tt),ot=rt;if(ot.length<tt.length){const ut=(0,$.squeezeInputShape)(tt,ot),ct=JSON.parse(JSON.stringify(b));ct.unpackedShape=ut;const dt=["col","row"],pt=`
          ${this.getUnpackedSamplerFromInput(et,_,ct).routineBody}
          float ${et}(int row, int col) {
            return ${et}(${(0,$.getSqueezedParams)(dt,st)});
          }
        `;return new c.GlslLibRoutine(pt,["coordinates.sampleTexture"])}const it=nt[1],at=nt[0];if(at===1){const ut=`
          float ${et}(int row, int col) {
            int offset_${_} = coordsToOffset(TexCoords, ${it}, ${at});
            float index = dot(vec3(row, col, offset_${_}), vec3(${tt[1]}, 1, 1));
            vec2 uv = vec2(0.5, (index + 0.5) / ${it}.0);
            return sampleTexture(${_}, uv);
          }
        `;return new c.GlslLibRoutine(ut,["coordinates.sampleTexture","coordinates.coordsToOffset"])}if(it===1){const ut=`
          float ${et}(int row, int col) {
            int offset_${_} = coordsToOffset(TexCoords, ${it}, ${at});
            float index = dot(vec3(row, col, offset_${_}), vec3(${tt[1]}, 1, 1));
            vec2 uv = vec2((index + 0.5) / ${at}.0, 0.5);
            return sampleTexture(${_}, uv);
          }
        `;return new c.GlslLibRoutine(ut,["coordinates.sampleTexture","coordinates.coordsToOffset"])}const lt=`
        float ${et}(int row, int col) {
          int index = col * ${tt[1]} + row;
          vec2 uv = uvFromFlat(${it}, ${at}, index);
          return sampleTexture(${_}, uv);
        }
      `;return new c.GlslLibRoutine(lt,["coordinates.uvFromFlat","coordinates.sampleTexture","coordinates.coordsToOffset"])}getUnpackedSampler3D(et,_,b){const tt=b.unpackedShape,nt=tt[1]*tt[2],rt=tt[2],{newShape:st,keptDims:ot}=(0,g.squeezeShape)(tt),it=st;if(it.length<tt.length){const lt=(0,$.squeezeInputShape)(tt,it),ut=["batch","col","row"],ct=JSON.parse(JSON.stringify(b));ct.unpackedShape=lt;const dt=this.getUnpackedSamplerFromInput(et,_,ct),pt=ot.reverse(),ht=`
          ${dt.routineBody}
          float ${et}(int batch, int row, int col) {
            return ${et}(${(0,$.getSqueezedParams)(ut,pt)});
          }
        `;return new c.GlslLibRoutine(ht,dt.dependencies)}const at=`
          float ${et}(int depth, int row, int col) {
            // Explicitly use integer operations as dot() only works on floats.
            int index = depth * ${nt} + col * ${rt} + row;
            vec2 uv = uvFromFlat(${b.width}, ${b.height}, index);
            return sampleTexture(${_}, uv);
          }
      `;return new c.GlslLibRoutine(at,["coordinates.uvFromFlat","coordinates.sampleTexture","coordinates.coordsToOffset"])}getUnpackedSampler4D(et,_,b){const tt=b.unpackedShape,nt=tt[3],rt=tt[2]*nt,st=`
        float ${et}(int row, int col, int depth, int depth2) {
          int index = row * ${tt[1]*rt} + col * ${rt} +
              depth2 * ${nt} + depth;
          vec2 uv = uvFromFlat(${b.width}, ${b.height}, index);
          return sampleTexture(${_}, uv);
        }
      `;return new c.GlslLibRoutine(st,["coordinates.uvFromFlat","coordinates.sampleTexture"])}getUnpackedSampler5D(et,_,b){const tt=b.unpackedShape,nt=tt[4],rt=tt[3]*nt,st=tt[2]*rt,ot=tt[1]*st,{newShape:it,keptDims:at}=(0,g.squeezeShape)(tt);if(it.length<tt.length){const ut=(0,$.squeezeInputShape)(tt,it),ct=["row","col","depth","depth2","depth3"],dt=JSON.parse(JSON.stringify(b));dt.unpackedShape=ut;const pt=`
          ${this.getUnpackedSamplerFromInput(et,_,dt).routineBody}
          float ${et}(int row, int col, int depth, int depth2, int depth3) {
            return ${et}(${(0,$.getSqueezedParams)(ct,at)});
          }
        `;return new c.GlslLibRoutine(pt,["coordinates.sampleTexture","coordinates.uvFromFlat"])}const lt=`
        float ${et}(int row, int col, int depth, int depth2, int depth3) {
          int index = row * ${ot} + col * ${st} + depth * ${rt} +
          depth3 * ${nt} + depth2;
          vec2 uv = uvFromFlat(${b.width}, ${b.height}, index);
          return sampleTexture(${_}, uv);
        }
      `;return new c.GlslLibRoutine(lt,["coordinates.sampleTexture","coordinates.uvFromFlat"])}getUnpackedSampler6D(et,_,b){const tt=b.unpackedShape,nt=tt[5],rt=tt[4]*nt,st=tt[3]*rt,ot=tt[2]*st,it=tt[1]*ot,{newShape:at,keptDims:lt}=(0,g.squeezeShape)(tt);if(at.length<tt.length){const ct=(0,$.squeezeInputShape)(tt,at),dt=["row","col","depth","depth2","depth3","depth4"],pt=JSON.parse(JSON.stringify(b));pt.unpackedShape=ct;const ht=`
            ${this.getUnpackedSamplerFromInput(et,_,pt).routineBody}
            float ${et}(int row, int col, int depth,
              int depth2, int depth3, int depth4) {
              return ${et}(${(0,$.getSqueezedParams)(dt,lt)});
            }
          `;return new c.GlslLibRoutine(ht,["coordinates.sampleTexture","coordinates.uvFromFlat"])}const ut=`
          float ${et}(int row, int col, int depth,
            int depth2, int depth3, int depth4) {
            int index = row * ${it} + col * ${ot} + depth * ${st} +
            depth2 * ${rt} + depth3 * ${nt} + depth4;
            vec2 uv = uvFromFlat(${b.width}, ${b.height}, index);
            return sampleTexture(${_}, uv);
          }
        `;return new c.GlslLibRoutine(ut,["coordinates.uvFromFlat","coordinates.sampleTexture","coordinates.coordsToOffset"])}toVec(){const et=this.context.outputTextureLayout,_=et.shape.length,b=et.strides,tt=et.width,nt=et.height,rt=[];for(let ot=0;ot<_-1;++ot)rt.push(`
        c[${ot}] = offset / ${b[ot]};`),rt.push(`
        offset -= c[${ot}] * ${b[ot]};`);rt.push(`
        c[${_-1}] = offset;`);const st=`
      void toVec(vec2 texCoords, out int c[${_}]) {
        int offset = coordsToOffset(texCoords, ${tt}, ${nt});
        ${rt.join("")}
      }
      void toVec(int offset, out int c[${_}]) {
        ${rt.join("")}
      }
    `;return{toVec:new c.GlslLibRoutine(st,["coordinates.coordsToOffset"])}}valueFrom(){const et={};return this.context.programInfo.inputNames.forEach((_,b)=>{const tt=this.context.inputTextureLayouts[b],nt=(tt.unpackedShape.length>0?tt.unpackedShape:tt.shape).length;let rt=`_${_}`;et[rt]=new c.GlslLibRoutine(this.getValueFromSingle(_,nt,tt.width,tt.height,!1),[`shapeUtils.indicesToOffset${rt}`,"coordinates.offsetToCoords","fragcolor.getColorAsFloat"]),rt+="_T",et[rt]=new c.GlslLibRoutine(this.getValueFromSingle(_,nt,tt.width,tt.height,!0),[`shapeUtils.indicesToOffset${rt}`,"coordinates.offsetToCoords","fragcolor.getColorAsFloat"])}),et}getValueFromSingle(et,_,b,tt,nt){let rt=`_${et}`;return nt&&(rt+="_T"),`
        float ${rt}(int m[${_}]) {
          int offset = indicesToOffset${rt}(m);
          vec2 coords = offsetToCoords(offset, ${b}, ${tt});
          float value = getColorAsFloat(${(0,d.getGlsl)(this.context.glContext.version).texture2D}(${et}, coords));
          return value;
        }
        `}getPackedValueFrom(et,_,b,tt,nt){let rt=`_${et}_Pack`;return nt&&(rt+="_T"),`
        vec4 ${rt}(int m[${_}]) {
          int offset = indicesToOffset_${et}(m);
          vec2 coords = offsetToCoords(offset, ${b}, ${tt});
          return ${(0,d.getGlsl)(this.context.glContext.version).texture2D}(${et}, coords);
        }
        `}}s.CoordsGlslLib=j},8520:(i,s)=>{var o;Object.defineProperty(s,"__esModule",{value:!0}),s.TopologicalSortGlslRoutines=s.GlslLibRoutineNode=s.GlslLibRoutine=s.GlslLib=s.GlslContext=s.FunctionType=void 0,(o=s.FunctionType||(s.FunctionType={}))[o.ValueBased=0]="ValueBased",o[o.Positional=1]="Positional",s.GlslContext=class{constructor(a,c,d,g){this.glContext=a,this.programInfo=c,this.inputTextureLayouts=d,this.outputTextureLayout=g}},s.GlslLib=class{constructor(a){this.context=a}},s.GlslLibRoutine=class{constructor(a,c){this.routineBody=a,this.dependencies=c}},s.GlslLibRoutineNode=class{constructor(a,c,d){this.name=a,this.dependencies=d||[],c&&(this.routineBody=c)}addDependency(a){a&&this.dependencies.push(a)}},s.TopologicalSortGlslRoutines=class{static returnOrderedNodes(a){if(!a||a.length===0)return[];if(a.length===1)return a;const c=new Set,d=new Set,g=new Array;return this.createOrderedNodes(a,c,d,g),g}static createOrderedNodes(a,c,d,g){for(let $=0;$<a.length;++$)this.dfsTraverse(a[$],c,d,g)}static dfsTraverse(a,c,d,g){if(!a||d.has(a.name))return;if(c.has(a.name))throw new Error("Cyclic dependency detected. Can't topologically sort routines needed for shader.");c.add(a.name);const $=a.dependencies;if($&&$.length>0)for(let j=0;j<$.length;++j)this.dfsTraverse($[j],c,d,g);g.push(a),d.add(a.name),c.delete(a.name)}}},7341:(i,s,o)=>{Object.defineProperty(s,"__esModule",{value:!0}),s.EncodingGlslLib=void 0;const a=o(8520);class c extends a.GlslLib{constructor(g){super(g)}getFunctions(){return Object.assign(Object.assign({},this.encodeFloat32()),this.decodeFloat32())}getCustomTypes(){return{}}encodeFloat32(){return{encode:new a.GlslLibRoutine(`highp vec4 encode(highp float f) {
        return vec4(f, 0.0, 0.0, 0.0);
      }
        `)}}decodeFloat32(){return{decode:new a.GlslLibRoutine(`highp float decode(highp vec4 rgba) {
        return rgba.r;
      }
        `)}}encodeUint8(){const g=c.isLittleEndian()?"rgba.rgba=rgba.abgr;":"";return{encode:new a.GlslLibRoutine(`
      highp vec4 encode(highp float f) {
        highp float F = abs(f);
        highp float Sign = step(0.0,-f);
        highp float Exponent = floor(log2(F));
        highp float Mantissa = (exp2(- Exponent) * F);
        Exponent = floor(log2(F) + 127.0) + floor(log2(Mantissa));
        highp vec4 rgba;
        rgba[0] = 128.0 * Sign  + floor(Exponent*exp2(-1.0));
        rgba[1] = 128.0 * mod(Exponent,2.0) + mod(floor(Mantissa*128.0),128.0);
        rgba[2] = floor(mod(floor(Mantissa*exp2(23.0 -8.0)),exp2(8.0)));
        rgba[3] = floor(exp2(23.0)*mod(Mantissa,exp2(-15.0)));
        ${g}
        rgba = rgba / 255.0; // values need to be normalized to [0,1]
        return rgba;
    }
        `)}}decodeUint8(){const g=c.isLittleEndian()?"rgba.rgba=rgba.abgr;":"";return{decode:new a.GlslLibRoutine(`
        highp float decode(highp vec4 rgba) {
          rgba = rgba * 255.0; // values need to be de-normalized from [0,1] to [0,255]
          ${g}
          highp float Sign = 1.0 - step(128.0,rgba[0])*2.0;
          highp float Exponent = 2.0 * mod(rgba[0],128.0) + step(128.0,rgba[1]) - 127.0;
          highp float Mantissa = mod(rgba[1],128.0)*65536.0 + rgba[2]*256.0 +rgba[3] + float(0x800000);
          highp float Result =  Sign * exp2(Exponent) * (Mantissa * exp2(-23.0 ));
          return Result;
      }
        `)}}static isLittleEndian(){const g=new ArrayBuffer(4),$=new Uint32Array(g),j=new Uint8Array(g);if($[0]=3735928559,j[0]===239)return!0;if(j[0]===222)return!1;throw new Error("unknown endianness")}}s.EncodingGlslLib=c},9894:(i,s,o)=>{Object.defineProperty(s,"__esModule",{value:!0}),s.FragColorGlslLib=void 0;const a=o(8520),c=o(5060);class d extends a.GlslLib{constructor($){super($)}getFunctions(){return Object.assign(Object.assign({},this.setFragColor()),this.getColorAsFloat())}getCustomTypes(){return{}}setFragColor(){const $=(0,c.getGlsl)(this.context.glContext.version);return{setFragColor:new a.GlslLibRoutine(`
        void setFragColor(float value) {
            ${$.output} = encode(value);
        }
        `,["encoding.encode"])}}getColorAsFloat(){return{getColorAsFloat:new a.GlslLibRoutine(`
        float getColorAsFloat(vec4 color) {
            return decode(color);
        }
        `,["encoding.decode"])}}}s.FragColorGlslLib=d},2848:(i,s)=>{Object.defineProperty(s,"__esModule",{value:!0}),s.replaceInlines=void 0;const o=/@inline[\s\n\r]+(\w+)[\s\n\r]+([0-9a-zA-Z_]+)\s*\(([^)]*)\)\s*{(([^}]|[\n\r])*)}/gm;s.replaceInlines=function(a){const c={};let d;for(;(d=o.exec(a))!==null;){const g=d[3].split(",").map($=>{const j=$.trim().split(" ");return j&&j.length===2?{type:j[0],name:j[1]}:null}).filter($=>$!==null);c[d[2]]={params:g,body:d[4]}}for(const g in c){const $="(\\w+)?\\s+([_0-9a-zA-Z]+)\\s+=\\s+__FUNC__\\((.*)\\)\\s*;".replace("__FUNC__",g),j=new RegExp($,"gm");for(;(d=j.exec(a))!==null;){const _e=d[1],et=d[2],_=d[3].split(","),b=_e?`${_e} ${et};`:"";let tt=c[g].body,nt="";c[g].params.forEach((st,ot)=>{st&&(nt+=`${st.type} ${st.name} = ${_[ot]};
`)}),tt=`${nt}
 ${tt}`,tt=tt.replace("return",`${et} = `);const rt=`
      ${b}
      {
        ${tt}
      }
      `;a=a.replace(d[0],rt)}}return a.replace(o,"")}},8879:(i,s,o)=>{Object.defineProperty(s,"__esModule",{value:!0}),s.GlslPreprocessor=void 0;const a=o(8520),c=o(2848),d=o(5483),g=o(5060);s.GlslPreprocessor=class{constructor($,j,_e,et){this.libs={},this.glslLibRoutineDependencyGraph={},this.context=new a.GlslContext($,j,_e,et),Object.keys(d.glslRegistry).forEach(b=>{const tt=new d.glslRegistry[b](this.context);this.libs[b]=tt});const _=this.glslLibRoutineDependencyGraph;for(const b in this.libs){const tt=this.libs[b].getFunctions();for(const nt in tt){const rt=b+"."+nt;let st;_[rt]?(st=_[rt],st.routineBody=tt[nt].routineBody):(st=new a.GlslLibRoutineNode(rt,tt[nt].routineBody),_[rt]=st);const ot=tt[nt].dependencies;if(ot)for(let it=0;it<ot.length;++it)if(_[ot[it]])st.addDependency(_[ot[it]]);else{const at=new a.GlslLibRoutineNode(ot[it]);_[ot[it]]=at,st.addDependency(at)}}}}preprocess(){const $=this.context.programInfo;let j=$.shaderSource;return this.context.programInfo.hasMain||(j=`${j}
      ${(0,g.getDefaultFragShaderMain)(this.context.glContext.version,this.context.outputTextureLayout.shape.length)}`),j=(0,c.replaceInlines)(j),`${(0,g.getFragShaderPreamble)(this.context.glContext.version)}
    ${this.getUniforms($.inputNames,$.variables)}
    ${this.getImports(j)}
    ${j}`}getImports($){const j=this.selectGlslLibRoutinesToBeIncluded($);if(j.length===0)return"";let _e="";for(let et=0;et<j.length;++et){if(!j[et].routineBody)throw new Error(`Missing body for the Glsl Library routine: ${j[et].name}`);_e+=j[et].routineBody+`
`}return _e}selectGlslLibRoutinesToBeIncluded($){const j=[];return Object.keys(this.glslLibRoutineDependencyGraph).forEach(_e=>{const et=_e.split(".")[1];$.indexOf(et)!==-1&&j.push(this.glslLibRoutineDependencyGraph[_e])}),a.TopologicalSortGlslRoutines.returnOrderedNodes(j)}getUniforms($,j){const _e=[];if($)for(const et of $)_e.push(`uniform sampler2D ${et};`);if(j)for(const et of j)_e.push(`uniform ${et.type} ${et.name}${et.arrayLength?`[${et.arrayLength}]`:""};`);return _e.join(`
`)}}},5483:(i,s,o)=>{Object.defineProperty(s,"__esModule",{value:!0}),s.glslRegistry=void 0;const a=o(5107),c=o(7341),d=o(9894),g=o(2655),$=o(3891);s.glslRegistry={encoding:c.EncodingGlslLib,fragcolor:d.FragColorGlslLib,vec:$.VecGlslLib,shapeUtils:g.ShapeUtilsGlslLib,coordinates:a.CoordsGlslLib}},2655:(i,s,o)=>{Object.defineProperty(s,"__esModule",{value:!0}),s.ShapeUtilsGlslLib=void 0;const a=o(8520);class c extends a.GlslLib{constructor(g){super(g)}getFunctions(){return Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({},this.bcastIndex()),this.bcastMatmulIndex()),this.offsetToIndices()),this.indicesToOffset()),this.incrementIndices())}getCustomTypes(){return{}}bcastIndex(){const g=this.context.outputTextureLayout.shape.length,$={};return this.context.programInfo.inputNames.forEach((j,_e)=>{const et=this.context.inputTextureLayouts[_e].unpackedShape;if(et.length<=g){const _=et.length,b=g-_,tt=`bcastIndices_${j}`;let nt="";for(let st=0;st<_;++st)nt+=`
          realIndices[${st}] = int( mod(float(bcastedIndices[${b+st}]), ${et[st]}.0) );
          `;const rt=`
        void ${tt} (int bcastedIndices[${g}], out int realIndices[${_}]) {
          ${nt}
        }
        `;$[tt]=new a.GlslLibRoutine(rt)}}),$}bcastMatmulIndex(){const g=this.context.outputTextureLayout.shape.length,$={};return this.context.programInfo.inputNames.forEach((j,_e)=>{const et=this.context.inputTextureLayouts[_e].shape;if(!(et.length<2||et.length>g)){const _=et.length,b=g-_,tt=`bcastMatmulIndices_${j}`;let nt="";for(let st=0;st<_-2;++st)nt+=`
          realIndices[${st}] = int( mod(float(bcastedIndices[${b+st}]), ${et[st]}.0) );
          `;const rt=`
        void ${tt}(int bcastedIndices[${g}], out int realIndices[${_}]) {
          ${nt}
          realIndices[${_-1}] = bcastedIndices[${g-1}];
          realIndices[${_-2}] = bcastedIndices[${g-2}];
        }
        `;$[tt]=new a.GlslLibRoutine(rt)}}),$}indicesToOffset(){const g={};return this.context.programInfo.inputNames.forEach(($,j)=>{const _e=this.context.inputTextureLayouts[j].shape,et=this.context.inputTextureLayouts[j].strides,_=_e.length;let b=`indicesToOffset_${$}`;g[b]=new a.GlslLibRoutine(c.indexToOffsetSingle(b,_,et)),b=`indicesToOffset_${$}_T`,g[b]=new a.GlslLibRoutine(c.indexToOffsetSingle(b,_,et.slice().reverse()))}),g}static indexToOffsetSingle(g,$,j){let _e="";for(let et=$-1;et>=0;--et)_e+=`
        offset += indices[${et}] * ${j[et]};
        `;return`
      int ${g}(int indices[${$}]) {
        int offset = 0;
        ${_e}
        return offset;
      }
      `}offsetToIndices(){const g={};return this.context.programInfo.inputNames.forEach(($,j)=>{const _e=this.context.inputTextureLayouts[j].shape,et=this.context.inputTextureLayouts[j].strides,_=_e.length;let b=`offsetToIndices_${$}`;g[b]=new a.GlslLibRoutine(c.offsetToIndicesSingle(b,_,et)),b=`offsetToIndices_${$}_T`,g[b]=new a.GlslLibRoutine(c.offsetToIndicesSingle(b,_,et.slice().reverse()))}),g}static offsetToIndicesSingle(g,$,j){const _e=[];for(let et=0;et<$-1;++et)_e.push(`
      indices[${et}] = offset / ${j[et]};`),_e.push(`
        offset -= indices[${et}] * ${j[et]};`);return _e.push(`
      indices[${$-1}] = offset;`),`
      void ${g}(int offset, out int indices[${$}]) {
        ${_e.join("")}
      }
      `}incrementIndices(){const g={};return this.context.programInfo.inputNames.forEach(($,j)=>{const _e=this.context.inputTextureLayouts[j].shape,et=_e.length,_=`incrementIndices_${$}`;let b="";for(let nt=0;nt<et;++nt)b+=`
        shape[${nt}] = ${_e[nt]};`;const tt=`
        void ${_}(int axis, out int indices[${et}]) {
          int shape[${et}];
          ${b};
          for(int i = ${et} -1 ; i >= 0; --i) {
            if(i > axis) continue;
            indices[i] += 1;
            if(indices[i] < shape[i]) {
              break;
            }
            indices[i] = 0;
          }
        }
        `;g[_]=new a.GlslLibRoutine(tt)}),g}}s.ShapeUtilsGlslLib=c},5060:(i,s)=>{Object.defineProperty(s,"__esModule",{value:!0}),s.getDefaultFragShaderMain=s.getFragShaderPreamble=s.getVertexShaderSource=s.getGlsl=void 0;const o={version:"",attribute:"attribute",varyingVertex:"varying",varyingFrag:"varying",texture2D:"texture2D",output:"gl_FragColor",outputDeclaration:""},a={version:"#version 300 es",attribute:"in",varyingVertex:"out",varyingFrag:"in",texture2D:"texture",output:"outputColor",outputDeclaration:"out vec4 outputColor;"};function c(d){return d===1?o:a}s.getGlsl=c,s.getVertexShaderSource=function(d){const g=c(d);return`${g.version}
      precision highp float;
      ${g.attribute} vec3 position;
      ${g.attribute} vec2 textureCoord;

      ${g.varyingVertex} vec2 TexCoords;

      void main()
      {
          gl_Position = vec4(position, 1.0);
          TexCoords = textureCoord;
      }`},s.getFragShaderPreamble=function(d){const g=c(d);return`${g.version}
    precision highp float;
    precision highp int;
    precision highp sampler2D;
    ${g.varyingFrag} vec2 TexCoords;
    ${g.outputDeclaration}
    const vec2 halfCR = vec2(0.5, 0.5);

    // Custom vector types to handle higher dimenalities.
    struct ivec5
    {
      int x;
      int y;
      int z;
      int w;
      int u;
    };

    struct ivec6
    {
      int x;
      int y;
      int z;
      int w;
      int u;
      int v;
    };

    int imod(int x, int y) {
      return x - y * (x / y);
    }

    `},s.getDefaultFragShaderMain=function(d,g){return`
  void main() {
    int indices[${g}];
    toVec(TexCoords, indices);
    vec4 result = vec4(process(indices));
    ${c(d).output} = result;
  }
  `}},3891:(i,s,o)=>{Object.defineProperty(s,"__esModule",{value:!0}),s.VecGlslLib=void 0;const a=o(8520);class c extends a.GlslLib{constructor(g){super(g)}getCustomTypes(){return{}}getFunctions(){return Object.assign(Object.assign(Object.assign(Object.assign({},this.binaryVecFunctions()),this.copyVec()),this.setVecItem()),this.getVecItem())}binaryVecFunctions(){const g=this.context.outputTextureLayout.shape.length,$={add:"+=",sub:"-=",mul:"*=",div:"/="},j={};for(const _e in $){const et=`${_e}Vec`;let _="";for(let tt=0;tt<g;++tt)_+=`
          dest[${tt}] ${$[_e]} src[${tt}];
          `;const b=`
        void ${et}(int src[${g}], out int dest[${g}]) {
          ${_}
        }
        `;j[et]=new a.GlslLibRoutine(b)}return j}copyVec(){const g=this.context.outputTextureLayout.shape.length;let $="";for(let _e=0;_e<g;++_e)$+=`
        dest[${_e}] = src[${_e}];
        `;const j=`
      void copyVec(int src[${g}], out int dest[${g}]) {
        ${$}
      }
      `;return{copyVec:new a.GlslLibRoutine(j)}}setVecItem(){const g=this.context.outputTextureLayout.shape.length;let $=`
        if(index < 0)
            index =${g} + index;
        if (index == 0)
            m[0] = value;
        `;for(let _e=1;_e<g-1;++_e)$+=`
        else if (index == ${_e})
            m[${_e}] = value;
            `;$+=`
        else
            m[${g-1}] = value;
        `;const j=`
      void setVecItem(out int m[${g}], int index, int value) {
        ${$}
      }
        `;return{setVecItem:new a.GlslLibRoutine(j)}}getVecItem(){const g=this.context.outputTextureLayout.shape.length;let $=`
        if(index < 0)
            index = ${g} + index;
        if (index == 0)
            return m[0];
      `;for(let _e=1;_e<g-1;++_e)$+=`
        else if (index == ${_e})
            return m[${_e}];
      `;$+=`
        else
            return m[${g-1}];
        `;const j=`
      int getVecItem(int m[${g}], int index) {
        ${$}
      }
    `;return{getVecItem:new a.GlslLibRoutine(j)}}}s.VecGlslLib=c},8316:(i,s,o)=>{Object.defineProperty(s,"__esModule",{value:!0}),s.WebGLInferenceHandler=void 0;const a=o(6231),c=o(9162),d=o(2517),g=o(2403),$=o(7019),j=o(8710),_e=o(5611),et=o(4057),_=o(2039);s.WebGLInferenceHandler=class{constructor(b){this.session=b,this.packedTextureDataCache=new Map,this.unpackedTextureDataCache=new Map}calculateTextureWidthAndHeight(b,tt){return(0,et.calculateTextureWidthAndHeight)(this.session.layoutStrategy,b,tt)}executeProgram(b,tt){if(tt.length<b.inputNames.length)throw new Error(`Input size mustn't be less than ${b.inputNames.length}.`);if(b.inputNames.length!==b.inputTypes.length)throw new Error("input names size does not match input types");const nt=[];for(let lt=0;lt<b.inputNames.length;++lt)nt[lt]=this.getOrCreateTextureData(tt[lt],b.inputTypes[lt]);const rt=((lt,ut)=>{const ct=ut.map(pt=>`${pt.unpackedShape.join(",")};${pt.width}x${pt.height}`).join("_");let dt=lt.name;return lt.cacheHint&&(dt+="["+lt.cacheHint+"]"),dt+=":"+ct,dt})(b,nt);let st=this.session.programManager.getArtifact(rt);const ot=st?st.programInfo:typeof b.get=="function"?b.get():b,it=(0,et.createTextureLayoutFromTextureType)(this.session.layoutStrategy,ot.output.dims,ot.output.textureType),at=this.createTextureData(it,ot.output.type);return st||(st=this.session.programManager.build(ot,nt,at),this.session.programManager.setArtifact(rt,st)),this.runProgram(st,nt,at),at}run(b,tt){return this.executeProgram(b,tt).tensor}runProgram(b,tt,nt){for(let rt=0;rt<tt.length;++rt)if(!!tt[rt].isPacked!=(b.programInfo.inputTypes[rt]===_.TextureType.packed))throw new Error(`input[${rt}] property packed inconsistent`);if(!!nt.isPacked!=(b.programInfo.output.textureType===_.TextureType.packed))throw new Error("output property packed inconsistent");this.session.programManager.run(b,tt,nt)}getOrCreateTextureData(b,tt){let nt=this.getTextureData(b.dataId,tt===_.TextureType.packed);if(!nt&&(nt=this.getTextureData(b.dataId,tt!==_.TextureType.packed),nt))return tt===_.TextureType.packed?this.pack(nt):this.unpack(nt);if(!nt){const rt=(0,et.createTextureLayoutFromTextureType)(this.session.layoutStrategy,b.dims,tt);if(tt===_.TextureType.packedLastDimension){const it=b.dims;if(it.length===4){const at=[it[0],Math.ceil(it[1]*it[2]*it[3]/4)],lt=(0,et.createTextureLayoutFromTextureType)(this.session.layoutStrategy,at,tt);let ut=b.numberData;if(it[1]*it[2]*it[3]%4!=0){const ct=it[0],dt=it[1]*it[2]*it[3],pt=Math.ceil(dt*1/4)*4;ut=new Float32Array(ct*pt);for(let ht=0;ht<ct;++ht){const ft=ht*dt,yt=ht*pt+ht%1*dt;ut.set(b.numberData.subarray(ft,ft+dt),yt)}}return this.createTextureData(lt,b.type,ut,b,1)}}if(tt===_.TextureType.packed){const st=(0,et.createTextureLayoutFromShape)(this.session.layoutStrategy,b.dims,1,[],{reverseWH:!0}),ot=this.createTextureData(st,b.type,b.numberData,b,1);nt=this.pack(ot)}else nt=this.createTextureData(rt,b.type,b.numberData,b,1)}return nt}createTextureDataFromLayoutBindTensor(b,tt,nt,rt){return this.createTextureData(b,tt,nt,rt,1)}createTextureData(b,tt,nt,rt,st){a.Logger.verbose("InferenceHandler",`Creating TextureData: layout:[${JSON.stringify(b)}]`);const ot=this.session.textureManager.createTextureFromLayout(tt,b,nt,st);return this.createTextureDataFromTexture(b,tt,ot,rt)}reshapeUnpacked(b,tt){const nt=this.getOrCreateTextureData(b,_.TextureType.unpacked),rt={channels:nt.channels,height:nt.height,width:nt.width,shape:tt.length!==0?tt:[1],strides:d.ShapeUtil.computeStrides(tt),unpackedShape:tt};return this.createTextureDataFromTexture(rt,b.type,nt.texture).tensor}reshapePacked(b,tt){const nt=this.getOrCreateTextureData(b,_.TextureType.packed);if((0,$.isReshapeCheap)(b.dims,tt)){const at={channels:nt.channels,height:nt.height,width:nt.width,shape:tt.length!==0?tt:[1],strides:d.ShapeUtil.computeStrides(tt),unpackedShape:tt,isPacked:!0};return this.createTextureDataFromTexture(at,b.type,nt.texture).tensor}const rt=(0,$.processDims3D)(b.dims),st=(0,$.processDims3D)(tt),ot=this.reshapePacked(b,rt),it=this.run((0,$.createPackedReshape3DProgramInfoLoader)(this,ot,st),[ot]);return this.reshapePacked(it,tt)}cast(b,tt){const nt=this.getOrCreateTextureData(b,_.TextureType.unpacked);return this.createTextureDataFromTexture(nt,tt,nt.texture).tensor}createTextureDataFromTexture(b,tt,nt,rt,st){const ot=Object.assign(Object.assign({},b),{tensor:rt||new c.Tensor(b.unpackedShape,tt,it=>this.readTexture(ot),async it=>this.readTextureAsync(ot),void 0,st),texture:nt});return this.setTextureData(ot.tensor.dataId,ot,b.isPacked),ot}getTextureData(b,tt=!1){return this.session.isInitializer(b)?this.session.getTextureData(b,tt):tt?this.packedTextureDataCache.get(b):this.unpackedTextureDataCache.get(b)}setTextureData(b,tt,nt=!1){this.session.isInitializer(b)?this.session.setTextureData(b,tt,nt):(nt?this.packedTextureDataCache:this.unpackedTextureDataCache).set(b,tt)}isTextureLayoutCached(b,tt=!1){return!!this.getTextureData(b.dataId,tt)}dispose(){this.session.textureManager.clearActiveTextures(),this.packedTextureDataCache.forEach(b=>this.session.textureManager.releaseTexture(b)),this.packedTextureDataCache=new Map,this.unpackedTextureDataCache.forEach(b=>this.session.textureManager.releaseTexture(b)),this.unpackedTextureDataCache=new Map}readTexture(b){return b.isPacked?this.readTexture(this.unpack(b)):this.session.backend.glContext.isFloat32DownloadSupported?this.session.textureManager.readTexture(b,b.tensor.type,b.channels):this.session.textureManager.readUint8TextureAsFloat((0,j.encodeAsUint8)(this,b))}async readTextureAsync(b){return b.isPacked?this.readTextureAsync(this.unpack(b)):this.session.backend.glContext.isFloat32DownloadSupported?this.session.textureManager.readTextureAsync(b,b.tensor.type,b.channels):this.session.textureManager.readUint8TextureAsFloat((0,j.encodeAsUint8)(this,b))}pack(b){return this.executeProgram((0,g.createPackProgramInfoLoader)(this,b.tensor),[b.tensor])}unpack(b){return this.executeProgram((0,_e.createUnpackProgramInfoLoader)(this,b.tensor),[b.tensor])}}},1640:function(i,s,o){var a=this&&this.__createBinding||(Object.create?function(Ct,kt,Nt,Mt){Mt===void 0&&(Mt=Nt);var Vt=Object.getOwnPropertyDescriptor(kt,Nt);Vt&&!("get"in Vt?!kt.__esModule:Vt.writable||Vt.configurable)||(Vt={enumerable:!0,get:function(){return kt[Nt]}}),Object.defineProperty(Ct,Mt,Vt)}:function(Ct,kt,Nt,Mt){Mt===void 0&&(Mt=Nt),Ct[Mt]=kt[Nt]}),c=this&&this.__setModuleDefault||(Object.create?function(Ct,kt){Object.defineProperty(Ct,"default",{enumerable:!0,value:kt})}:function(Ct,kt){Ct.default=kt}),d=this&&this.__importStar||function(Ct){if(Ct&&Ct.__esModule)return Ct;var kt={};if(Ct!=null)for(var Nt in Ct)Nt!=="default"&&Object.prototype.hasOwnProperty.call(Ct,Nt)&&a(kt,Ct,Nt);return c(kt,Ct),kt};Object.defineProperty(s,"__esModule",{value:!0}),s.WEBGL_OP_RESOLVE_RULES=void 0;const g=o(2898),$=d(o(7839)),j=o(4196),_e=o(2069),et=o(8138),_=o(9663),b=o(5193),tt=o(7992),nt=o(1253),rt=o(4776),st=o(6572),ot=o(3346),it=o(5623),at=o(2870),lt=o(2143),ut=o(4939),ct=o(718),dt=o(2268),pt=o(8117),ht=o(2278),ft=o(5524),yt=o(5975),wt=o(3933),_t=o(6558),bt=o(5723),xt=o(3738),mt=d(o(4909)),vt=o(8428),Et=o(9793);s.WEBGL_OP_RESOLVE_RULES=[["Abs","","6+",mt.abs],["Acos","","7+",mt.acos],["Add","","7+",$.add],["And","","7+",$.and],["Asin","","7+",mt.asin],["Atan","","7+",mt.atan],["AveragePool","","7+",lt.averagePool,lt.parseAveragePoolAttributes],["BatchNormalization","","7+",g.batchNormalization,g.parseBatchNormalizationAttributes],["Cast","","6+",j.cast,j.parseCastAttributes],["Ceil","","6+",mt.ceil],["Clip","","6-10",mt.clip,mt.parseClipAttributes],["Clip","","11+",mt.clipV11],["Concat","","4+",_e.concat,_e.parseConcatAttributes],["Conv","","1+",et.conv,et.parseConvAttributes],["ConvTranspose","","1+",_.convTranspose,_.parseConvTransposeAttributes],["Cos","","7+",mt.cos],["Div","","7+",$.div],["Dropout","","7+",mt.identity],["DepthToSpace","","1+",b.depthToSpace,b.parseDepthToSpaceAttributes],["Equal","","7+",$.equal],["Elu","","6+",mt.elu,mt.parseEluAttributes],["Exp","","6+",mt.exp],["Flatten","","1+",tt.flatten,tt.parseFlattenAttributes],["Floor","","6+",mt.floor],["FusedConv","com.microsoft","1+",et.conv,et.parseConvAttributes],["Gather","","1+",nt.gather,nt.parseGatherAttributes],["Gemm","","7-10",rt.gemm,rt.parseGemmAttributesV7],["Gemm","","11+",rt.gemm,rt.parseGemmAttributesV11],["GlobalAveragePool","","1+",lt.globalAveragePool,lt.parseGlobalAveragePoolAttributes],["GlobalMaxPool","","1+",lt.globalMaxPool],["Greater","","7+",$.greater],["Identity","","1+",mt.identity],["ImageScaler","","1+",st.imageScaler,st.parseImageScalerAttributes],["InstanceNormalization","","6+",ot.instanceNormalization,ot.parseInstanceNormalizationAttributes],["LeakyRelu","","6+",mt.leakyRelu,mt.parseLeakyReluAttributes],["Less","","7+",$.less],["Log","","6+",mt.log],["MatMul","","1+",it.matMul,it.parseMatMulAttributes],["MaxPool","","1+",lt.maxPool,lt.parseMaxPoolAttributes],["Mul","","7+",$.mul],["Neg","","6+",mt.neg],["Not","","1+",mt.not],["Or","","7+",$.or],["Pad","","2-10",at.padV2,at.parsePadAttributesV2],["Pad","","11+",at.padV11,at.parsePadAttributesV11],["Pow","","7+",$.pow],["PRelu","","7+",$.pRelu],["ReduceLogSum","","1+",ut.reduceLogSum,ut.parseReduceAttributes],["ReduceMax","","1+",ut.reduceMax,ut.parseReduceAttributes],["ReduceMean","","1+",ut.reduceMean,ut.parseReduceAttributes],["ReduceMin","","1+",ut.reduceMin,ut.parseReduceAttributes],["ReduceProd","","1+",ut.reduceProd,ut.parseReduceAttributes],["ReduceSum","","1-12",ut.reduceSum,ut.parseReduceAttributes],["ReduceSumSquare","","1+",ut.reduceLogSumSquare,ut.parseReduceAttributes],["Relu","","6+",mt.relu],["Reshape","","5+",ct.reshape],["Resize","","10",dt.resize,dt.parseResizeAttributesV10],["Resize","","11+",dt.resize,dt.parseResizeAttributesV11],["Shape","","1+",pt.shape],["Sigmoid","","6+",mt.sigmoid],["Sin","","7+",mt.sin],["Slice","","10+",ht.sliceV10],["Slice","","1-9",ht.slice,ht.parseSliceAttributes],["Softmax","","1-12",ft.softmax,ft.parseSoftmaxAttributes],["Softmax","","13+",ft.softmaxV13,ft.parseSoftmaxAttributesV13],["Split","","2-12",yt.split,yt.parseSplitAttributes],["Sqrt","","6+",mt.sqrt],["Squeeze","","1-12",wt.squeeze,wt.parseSqueezeAttributes],["Squeeze","","13+",wt.squeezeV13],["Sub","","7+",$.sub],["Sum","","6+",_t.sum],["Tan","","7+",mt.tan],["Tanh","","6+",mt.tanh],["Tile","","6+",bt.tile],["Transpose","","1+",xt.transpose,xt.parseTransposeAttributes],["Upsample","","7-8",Et.upsample,Et.parseUpsampleAttributesV7],["Upsample","","9",Et.upsample,Et.parseUpsampleAttributesV9],["Unsqueeze","","1-12",vt.unsqueeze,vt.parseUnsqueezeAttributes],["Unsqueeze","","13+",vt.unsqueezeV13],["Xor","","7+",$.xor]]},2898:(i,s,o)=>{Object.defineProperty(s,"__esModule",{value:!0}),s.parseBatchNormalizationAttributes=s.batchNormalization=void 0;const a=o(246),c=o(5060),d=o(2039),g={name:"BatchNormalization",inputNames:["A","Scale","B","Mean","Variance"],inputTypes:[d.TextureType.unpacked,d.TextureType.unpacked,d.TextureType.unpacked,d.TextureType.unpacked,d.TextureType.unpacked]};s.batchNormalization=(_e,et,_)=>(j(et),[_e.run(Object.assign(Object.assign({},g),{cacheHint:_.cacheKey,get:()=>$(_e,et,_)}),et)]),s.parseBatchNormalizationAttributes=_e=>{const et=_e.attributes.getFloat("epsilon",1e-5),_=_e.attributes.getFloat("momentum",.9),b=_e.attributes.getInt("spatial",1);return(0,a.createAttributeWithCacheKey)({epsilon:et,momentum:_,spatial:b})};const $=(_e,et,_)=>{const b=(0,c.getGlsl)(_e.session.backend.glContext.version),tt=et[0].dims.length,[nt,rt]=_e.calculateTextureWidthAndHeight(et[1].dims,d.TextureType.unpacked),st=`
  float process(int[${tt}] indices) {
    vec2 position = offsetToCoords(indices[1], ${nt}, ${rt});
    float scale = getColorAsFloat(${b.texture2D}(Scale, position));
    float mean = getColorAsFloat(${b.texture2D}(Mean, position));
    float variance = getColorAsFloat(${b.texture2D}(Variance, position));
    float b = getColorAsFloat(${b.texture2D}(B, position));

    return scale * ( (_A(indices) - mean) / sqrt(variance + float(${_.epsilon})) ) + b;
  }`;return Object.assign(Object.assign({},g),{output:{dims:et[0].dims,type:et[0].type,textureType:d.TextureType.unpacked},shaderSource:st})},j=_e=>{if(!_e||_e.length!==5)throw new Error("BatchNormalization requires 5 inputs.");const et=_e[0],_=_e[1],b=_e[2],tt=_e[3],nt=_e[4];if(et.dims.length<3||_.dims.length!==1||b.dims.length!==1||tt.dims.length!==1||nt.dims.length!==1)throw new Error("invalid input shape.");if(_.dims[0]!==et.dims[1]||b.dims[0]!==et.dims[1]||tt.dims[0]!==et.dims[1]||nt.dims[0]!==et.dims[1])throw new Error("invalid input shape.");if(et.type!=="float32"&&et.type!=="float64"||_.type!=="float32"&&_.type!=="float64"||b.type!=="float32"&&b.type!=="float64"||tt.type!=="float32"&&tt.type!=="float64"||nt.type!=="float32"&&nt.type!=="float64")throw new Error("invalid input tensor types.")}},7839:(i,s,o)=>{Object.defineProperty(s,"__esModule",{value:!0}),s.xor=s.sub=s.pRelu=s.pow=s.or=s.mul=s.less=s.greater=s.equal=s.div=s.and=s.add=s.glslPRelu=s.glslPow=s.glslXor=s.glslOr=s.glslAnd=s.glslLess=s.glslGreater=s.glslEqual=s.glslSub=s.glslMul=s.glslDiv=s.glslAdd=void 0;const a=o(2517),c=o(8520),d=o(5060),g=o(2039);function $(){const ut="add_";return{body:`
  float ${ut}(float a, float b) {
    return a + b;
  }
  vec4 ${ut}(vec4 v1, vec4 v2) {
    return v1 + v2;
  }
  `,name:ut,type:c.FunctionType.ValueBased}}function j(){const ut="div_";return{body:`
  float ${ut}(float a, float b) {
    return a / b;
  }
  vec4 ${ut}(vec4 v1, vec4 v2) {
    return v1 / v2;
  }
  `,name:ut,type:c.FunctionType.ValueBased}}function _e(){const ut="mul_";return{body:`
  float ${ut}(float a, float b) {
    return a * b;
  }
  vec4 ${ut}(vec4 v1, vec4 v2) {
    return v1 * v2;
  }
  `,name:ut,type:c.FunctionType.ValueBased}}function et(){const ut="sub_";return{body:`
  float ${ut}(float a, float b) {
    return a - b;
  }
  vec4 ${ut}(vec4 v1, vec4 v2) {
    return v1 - v2;
  }
  `,name:ut,type:c.FunctionType.ValueBased}}function _(){const ut="equal_";return{body:`
  float ${ut}(float a, float b) {
    return float(a == b);
  }
  vec4 ${ut}(vec4 v1, vec4 v2) {
    return vec4(equal(v1, v2));
  }
  `,name:ut,type:c.FunctionType.ValueBased}}function b(){const ut="greater_";return{body:`
  float ${ut}(float a, float b) {
    return float(a > b);
  }
  vec4 ${ut}(vec4 v1, vec4 v2) {
    return vec4( v1.r > v2.r ,
      v1.g > v2.g,
      v1.b > v2.b,
      v1.a > v2.a );
  }
  `,name:ut,type:c.FunctionType.ValueBased}}function tt(){const ut="less_";return{body:`
  float ${ut}(float a, float b) {
    return float(a < b);
  }
  vec4 ${ut}(vec4 v1, vec4 v2) {
    return vec4( v1.r < v2.r ,
                v1.g < v2.g,
                v1.b < v2.b,
                v1.a < v2.a );
  }
  `,name:ut,type:c.FunctionType.ValueBased}}function nt(){const ut="and_";return{body:`
  float ${ut}(float a, float b) {
    return float( bool(a) && bool(b) );
  }
  vec4 ${ut}(vec4 v1, vec4 v2) {
    bvec4 b1 = bvec4(v1);
    bvec4 b2 = bvec4(v2);
    return vec4( b1.r && b2.r ,
                b1.g && b2.g,
                b1.b && b2.b,
                b1.a && b2.a );
  }
  `,name:ut,type:c.FunctionType.ValueBased}}function rt(){const ut="or_";return{body:`
  float ${ut}(float a, float b) {
    return float( bool(a) || bool(b) );
  }
  vec4 ${ut}(vec4 v1, vec4 v2) {
    bvec4 b1 = bvec4(v1);
    bvec4 b2 = bvec4(v2);
    return vec4( b1.r || b2.r ,
                b1.g || b2.g,
                b1.b || b2.b,
                b1.a || b2.a );
  }
  `,name:ut,type:c.FunctionType.ValueBased}}function st(){const ut="xor_";return{body:`
  float ${ut}(float a, float b) {
    return float( bool(a) ^^ bool(b) );
  }
  vec4 ${ut}(vec4 v1, vec4 v2) {
    bvec4 b1 = bvec4(v1);
    bvec4 b2 = bvec4(v2);
    return vec4( b1.r ^^ b2.r ,
                b1.g ^^ b2.g,
                b1.b ^^ b2.b,
                b1.a ^^ b2.a );
  }
  `,name:ut,type:c.FunctionType.ValueBased}}function ot(){return function(ut){const ct=`${ut}_`;return{body:`
  float ${ct}(float a, float b) {
    return ${ut}(a, b);
  }
  vec4 ${ct}(vec4 v1, vec4 v2) {
    return ${ut}(v1, v2);
  }
  `,name:ct,type:c.FunctionType.ValueBased}}("pow")}function it(){const ut="prelu_";return{body:`
  float ${ut}(float a, float b) {
    return a < 0.0 ? a * b: a;
  }
  vec4 ${ut}(vec4 v1, vec4 v2) {
    return vec4(
      v1.r < 0.0 ? v1.r * v2.r: v1.r,
      v1.g < 0.0 ? v1.g * v2.g: v1.g,
      v1.b < 0.0 ? v1.b * v2.b: v1.b,
      v1.a < 0.0 ? v1.a * v2.a: v1.a
      );
  }
  `,name:ut,type:c.FunctionType.ValueBased}}s.glslAdd=$,s.glslDiv=j,s.glslMul=_e,s.glslSub=et,s.glslEqual=_,s.glslGreater=b,s.glslLess=tt,s.glslAnd=nt,s.glslOr=rt,s.glslXor=st,s.glslPow=ot,s.glslPRelu=it;const at=(ut,ct,dt,pt=ct[0].type,ht)=>{const ft=ut.session.pack?g.TextureType.packed:g.TextureType.unpacked;return{name:dt.name,inputNames:["A","B"],inputTypes:[ft,ft],cacheHint:ht,get:()=>lt(ut,ct,dt,pt)}},lt=(ut,ct,dt,pt=ct[0].type)=>{const ht=ut.session.pack?g.TextureType.packed:g.TextureType.unpacked,ft=!a.ShapeUtil.areEqual(ct[0].dims,ct[1].dims);let yt=ct[0].dims;const wt=ut.session.pack;if(ft){const xt=a.BroadcastUtil.calcShape(ct[0].dims,ct[1].dims,!1);if(!xt)throw new Error("Can't perform binary op on the given tensors");yt=xt;const mt=yt.length,vt=ct[0].dims.length!==0?ct[0].dims.length:1,Et=ct[1].dims.length!==0?ct[1].dims.length:1,Ct=ct[0].dims.length!==0?"bcastIndices_A(indices, aindices);":"aindices[0] = 0;",kt=ct[1].dims.length!==0?"bcastIndices_B(indices, bindices);":"bindices[0] = 0;",Nt=(0,d.getGlsl)(ut.session.backend.glContext.version),Mt=wt?`
      ${dt.body}
      void main() {
        vec4 a = getAAtOutCoords();
        vec4 b = getBAtOutCoords();
        vec4 result = ${dt.name}(a, b);
        ${Nt.output} = result;
      }`:`
      ${dt.body}
      float process(int indices[${mt}]) {
        int aindices[${vt}];
        int bindices[${Et}];
        ${Ct}
        ${kt}
        return ${dt.name}(_A(aindices), _B(bindices));
      }`;return{name:dt.name,inputNames:["A","B"],inputTypes:[ht,ht],output:{dims:yt,type:pt,textureType:ht},shaderSource:Mt,hasMain:wt}}const _t=(0,d.getGlsl)(ut.session.backend.glContext.version),bt=`
    ${dt.body}
    void main() {
      vec4 v1 = ${_t.texture2D}(A, TexCoords);
      vec4 v2 = ${_t.texture2D}(B, TexCoords);
      vec4 result = ${dt.name}(v1, v2);
      ${_t.output} = result;
    }
    `;return{name:dt.name,inputNames:["A","B"],inputTypes:[ht,ht],output:{dims:ct[0].dims,type:pt,textureType:ht},shaderSource:bt,hasMain:!0}};s.add=(ut,ct)=>[ut.run(at(ut,ct,$()),ct)],s.and=(ut,ct)=>[ut.run(at(ut,ct,nt(),"bool"),ct)],s.div=(ut,ct)=>[ut.run(at(ut,ct,j()),ct)],s.equal=(ut,ct)=>[ut.run(at(ut,ct,_(),"bool"),ct)],s.greater=(ut,ct)=>[ut.run(at(ut,ct,b(),"bool"),ct)],s.less=(ut,ct)=>[ut.run(at(ut,ct,tt(),"bool"),ct)],s.mul=(ut,ct)=>[ut.run(at(ut,ct,_e()),ct)],s.or=(ut,ct)=>[ut.run(at(ut,ct,rt(),"bool"),ct)],s.pow=(ut,ct)=>[ut.run(at(ut,ct,ot()),ct)],s.pRelu=(ut,ct)=>[ut.run(at(ut,ct,it()),ct)],s.sub=(ut,ct)=>[ut.run(at(ut,ct,et()),ct)],s.xor=(ut,ct)=>[ut.run(at(ut,ct,st(),"bool"),ct)]},4196:(i,s,o)=>{Object.defineProperty(s,"__esModule",{value:!0}),s.parseCastAttributes=s.cast=void 0;const a=o(2517);s.cast=(d,g,$)=>(c(g),[d.cast(g[0],$)]),s.parseCastAttributes=d=>a.ProtoUtil.tensorDataTypeFromProto(d.attributes.getInt("to"));const c=d=>{if(!d||d.length!==1)throw new Error("Cast requires 1 input.");if(d[0].type==="string")throw new Error("Invalid input type.")}},1163:(i,s,o)=>{Object.defineProperty(s,"__esModule",{value:!0}),s.createPackedConcatProgramInfoLoader=void 0;const a=o(5060),c=o(2039),d=o(9390),g=o(2827);s.createPackedConcatProgramInfoLoader=(j,_e,et)=>{const _=(b=_e.length,tt=et.cacheKey,{name:"Concat (packed)",inputNames:Array.from({length:b},(nt,rt)=>`X${rt}`),inputTypes:Array(b).fill(c.TextureType.packed),cacheHint:tt});var b,tt;return Object.assign(Object.assign({},_),{get:()=>((nt,rt,st,ot)=>{const it=st[0].dims.slice();if(ot>=it.length||ot<-1*it.length)throw new Error("axis specified for concat doesn't match input dimensionality");ot<0&&(ot=it.length+ot);const at=it.slice(0);for(let Ct=1;Ct<st.length;Ct++){const kt=st[Ct].dims.slice();for(let Nt=0;Nt<it.length;Nt++)if(Nt===ot)at[ot]+=kt[Nt];else if(it[Nt]!==kt[Nt])throw new Error("non concat dimensions must match")}const lt=at.length,ut=(0,g.getChannels)("coords",lt),ct=(0,d.getCoordsDataType)(lt),dt=(0,g.unpackFromChannel)(),pt=st.map(Ct=>Ct.dims),ht=(0,d.getGlChannels)(lt),ft=new Array(pt.length-1);ft[0]=pt[0][ot];for(let Ct=1;Ct<ft.length;Ct++)ft[Ct]=ft[Ct-1]+pt[Ct][ot];const yt=ht[ot],wt=ht.slice(-2),_t=ht.join();let bt=`if (${yt} < ${ft[0]}) {
        return getChannel(
            getX0(${_t}), vec2(${wt.join()}));
        }`;for(let Ct=1;Ct<ft.length;Ct++){const kt=ft[Ct-1];bt+=`
            if (${yt} < ${ft[Ct]}  && ${yt} >= ${ft[Ct-1]}) {
              return getChannel(
                getX${Ct}(${$(ht,yt,kt)}),
                vec2(${$(wt,yt,kt)}));
            }`}const xt=ft.length,mt=ft[ft.length-1];bt+=`
            return getChannel(
              getX${xt}(${$(ht,yt,mt)}),
              vec2(${$(wt,yt,mt)}));`;const vt=(0,a.getGlsl)(nt.session.backend.glContext.version),Et=`
          ${dt}
          float getValue(${ht.map(Ct=>"int "+Ct)}) {
            ${bt}
          }

          void main() {
            ${ct} coords = getOutputCoords();
            int lastDim = coords.${ht[lt-1]};
            coords.${ht[lt-1]} = coords.${ht[lt-2]};
            coords.${ht[lt-2]} = lastDim;

            vec4 result = vec4(getValue(${ut}), 0., 0., 0.);

            ${ut[lt-1]} = ${ut[lt-1]} + 1;
            if (${ut[lt-1]} < ${at[lt-1]}) {
              result.g = getValue(${ut});
            }

            ${ut[lt-2]} = ${ut[lt-2]} + 1;
            if (${ut[lt-2]} < ${at[lt-2]}) {
              result.a = getValue(${ut});
            }

            ${ut[lt-1]} = ${ut[lt-1]} - 1;
            if (${ut[lt-2]} < ${at[lt-2]} &&
                ${ut[lt-1]} < ${at[lt-1]}) {
              result.b = getValue(${ut});
            }
            ${vt.output} = result;
          }
        `;return Object.assign(Object.assign({},rt),{output:{dims:at,type:st[0].type,textureType:c.TextureType.packed},shaderSource:Et,hasMain:!0})})(j,_,_e,et.axis)})};const $=(j,_e,et)=>{const _=j.indexOf(_e);return j.map((b,tt)=>tt===_?`${b} - ${et}`:b).join()}},2069:(i,s,o)=>{Object.defineProperty(s,"__esModule",{value:!0}),s.parseConcatAttributes=s.concat=void 0;const a=o(246),c=o(2039),d=o(1163);s.concat=(b,tt,nt)=>(_(tt),b.session.pack&&tt[0].dims.length>1?[b.run((0,d.createPackedConcatProgramInfoLoader)(b,tt,nt),tt)]:[b.run(g(b,tt,nt),tt)]);const g=(b,tt,nt)=>{const rt=(st=tt.length,ot=nt.cacheKey,{name:"Concat",inputNames:Array.from({length:st},(it,at)=>`X${at}`),inputTypes:Array(st).fill(c.TextureType.unpacked),cacheHint:ot});var st,ot;return Object.assign(Object.assign({},rt),{get:()=>((it,at,lt,ut)=>{const ct=lt[0].dims.slice();if(ut>=ct.length||ut<-1*ct.length)throw new Error("axis specified for concat doesn't match input dimensionality");ut<0&&(ut=ct.length+ut);const dt=ct.slice(0);for(let _t=1;_t<lt.length;_t++){const bt=lt[_t].dims.slice();for(let xt=0;xt<ct.length;xt++)if(xt===ut)dt[ut]+=bt[xt];else if(ct[xt]!==bt[xt])throw new Error("non concat dimensions must match")}const pt=dt.length,ht=new Array(lt.length);let ft=0;for(let _t=0;_t<ht.length;++_t)ft+=lt[_t].dims[ut],ht[_t]=ft;let yt="";yt=lt.length<5?$(ht):j(ht);const wt=`
        ${_e(lt.length,pt)}
        ${et(ht)}
        ${yt}
        float process(int indices[${pt}]) {
          int textureIndex = getTextureWhereDataResides (indices[${ut}]);

          if(textureIndex != 0) {
            indices[${ut}] = indices[${ut}] - int(getSizeInConcatAxisValueFromIndex(textureIndex-int(1)));
          }

          return fetchDataFromCorrectTexture(textureIndex, indices);
        }`;return Object.assign(Object.assign({},at),{output:{dims:dt,type:lt[0].type,textureType:c.TextureType.unpacked},shaderSource:wt})})(0,rt,tt,nt.axis)})},$=b=>`int getTextureWhereDataResides(int index) {
      ${b.map((tt,nt)=>`if(index<${tt}) {return ${nt};}
`).join("")}
    }`,j=b=>$(b),_e=(b,tt)=>{const nt=[`float fetchDataFromCorrectTexture(int textureIndex, int indices[${tt}]) {`];for(let rt=0;rt<b;++rt)rt===0?nt.push(`	if (textureIndex == ${rt}) { return _X${rt}(indices); }`):rt===b-1?nt.push(`	else { return _X${rt}(indices); }`):nt.push(`	else if (textureIndex == ${rt}) { return _X${rt}(indices); }`);return nt.push("	}"),nt.join(`
`)},et=b=>{const tt=["int getSizeInConcatAxisValueFromIndex(int index) {"];for(let nt=0;nt<b.length;++nt)nt===0?tt.push(`	if (index == ${nt}) { return ${b[nt]}; }`):nt===b.length-1?tt.push(`	else { return ${b[nt]}; }`):tt.push(`	else if (index == ${nt}) { return ${b[nt]}; }`);return tt.push("	}"),tt.join(`
`)};s.parseConcatAttributes=b=>(0,a.createAttributeWithCacheKey)({axis:b.attributes.getInt("axis")});const _=b=>{if(!b||b.length<1)throw new Error("too few inputs");const tt=b[0].type,nt=b[0].dims.length;if(tt==="string")throw new Error("string tensor is not supported yet");for(const rt of b){if(rt.type!==tt)throw new Error("input tensors should be one type");if(rt.dims.length!==nt)throw new Error("input tensors should have the same shape")}}},4770:(i,s,o)=>{Object.defineProperty(s,"__esModule",{value:!0}),s.createUnpackedGroupedConvProgramInfoLoader=void 0;const a=o(6231),c=o(5060),d=o(2039),g=o(8138),$=o(2823);s.createUnpackedGroupedConvProgramInfoLoader=(j,_e,et)=>{const _=(b=_e.length>2,tt=et.cacheKey,{name:"GroupedConv",inputNames:b?["X","W","Bias"]:["X","W"],inputTypes:b?[d.TextureType.unpacked,d.TextureType.unpacked,d.TextureType.unpacked]:[d.TextureType.unpacked,d.TextureType.unpacked],cacheHint:tt});var b,tt;return Object.assign(Object.assign({},_),{get:()=>((nt,rt,st,ot)=>{const it=rt.length>2?"value += getBias(output_channel);":"",at=rt[0].dims.slice(),lt=rt[1].dims.slice(),ut=lt[0]/ot.group;a.Logger.verbose("GroupedConv",`autpPad:${ot.autoPad}, dilations:${ot.dilations}, group:${ot.group}, kernelShape:${ot.kernelShape}, pads:${ot.pads}, strides:${ot.strides}`);const ct=(0,g.calculateOutputShape)(at,lt,ot.dilations,ot.pads,ot.strides),dt=(0,c.getGlsl)(nt.session.backend.glContext.version),{activationFunction:pt,applyActivation:ht}=(0,$.getActivationSnippet)(ot),ft=`
  const ivec2 strides = ivec2(${ot.strides[0]}, ${ot.strides[1]});
  const ivec2 pads = ivec2(${ot.pads[0]}, ${ot.pads[1]});
  ${pt}
  void main() {
    ivec4 coords = getOutputCoords();
    int batch = coords.x;
    int output_channel = coords.y;
    ivec2 xRCCorner = coords.zw * strides - pads;
    int group_id = output_channel / ${ut};

    float value = 0.0;
    for (int wInChannel = 0; wInChannel < ${lt[1]}; wInChannel++) {
      int input_channel = group_id * ${lt[1]} + wInChannel;
      for (int wHeight = 0; wHeight < ${lt[2]}; wHeight++) {
        int xHeight = xRCCorner.x + wHeight * ${ot.dilations[0]};

        if (xHeight < 0 || xHeight >= ${at[2]}) {
          continue;
        }

        for (int wWidth = 0; wWidth < ${lt[3]}; wWidth++) {
          int xWidth = xRCCorner.y + wWidth * ${ot.dilations[1]};
          if (xWidth < 0 || xWidth >= ${at[3]}) {
            continue;
          }

          float xVal = getX(batch, input_channel, xWidth, xHeight);
          float wVal = getW(output_channel, wInChannel, wWidth, wHeight);
          value += xVal*wVal;
        }
      }
    }
    ${it}
    ${ht}
    ${dt.output} = vec4(value, .0, .0, .0);
  }
`;return Object.assign(Object.assign({},st),{output:{dims:ct,type:rt[0].type,textureType:d.TextureType.unpacked},shaderSource:ft,hasMain:!0})})(j,_e,_,et)})}},1386:(i,s,o)=>{Object.defineProperty(s,"__esModule",{value:!0}),s.conv2DPacked=s.conv2DPackedPointwise=void 0;const a=o(8138),c=o(8555),d=o(708);s.conv2DPackedPointwise=(g,$,j)=>{const _e=$[0].dims,et=$[1].dims,_=(0,a.calculateOutputShape)(_e,et,j.dilations,j.pads,j.strides),b=g.reshapePacked($[0],[_e[1],_e[2]*_e[3]]),tt=g.reshapePacked($[1],[et[0],et[1]]),nt=$.length>2?[tt,b,$[2]]:[tt,b],rt=g.run((0,d.createPackedMatmulProgramInfoLoader)(g,nt,j),nt);return g.reshapePacked(rt,_)},s.conv2DPacked=(g,$,j)=>{const _e=$[0].dims,et=$[1].dims,_=(0,a.calculateOutputShape)(_e,et,j.dilations,j.pads,j.strides),b=g.run((0,c.createPackedIm2ColProgramInfoLoader)(g,$[0],$[1],_,j),[$[0]]),tt=g.reshapePacked($[1],[et[0],et[1]*et[2]*et[3]]),nt=$.length===3?[tt,b,$[2]]:[tt,b],rt=g.run((0,d.createPackedMatmulProgramInfoLoader)(g,nt,j),nt);return g.reshapePacked(rt,_)}},9663:(i,s,o)=>{Object.defineProperty(s,"__esModule",{value:!0}),s.parseConvTransposeAttributes=s.convTranspose=void 0;const a=o(246),c=o(5060),d=o(2039),g=o(2823),$=(tt,nt,rt,st,ot,it)=>(tt-1)*nt+rt+(st-1)*ot+1-it,j=(tt,nt,rt,st,ot)=>{const it=Math.floor(tt/2);nt==="SAME_UPPER"?(rt[st]=it,rt[ot]=tt-it):nt==="SAME_LOWER"&&(rt[st]=tt-it,rt[ot]=it)};s.convTranspose=(tt,nt,rt)=>(b(nt,rt),_e(tt,nt,rt));const _e=(tt,nt,rt)=>{const st=_(rt,nt);return[et(tt,nt,st)]},et=(tt,nt,rt)=>tt.run(((st,ot,it)=>{const at=(lt=ot.length>2,ut=it.cacheKey,{name:"ConvTranspose",inputNames:lt?["X","W","B"]:["X","W"],inputTypes:lt?[d.TextureType.unpacked,d.TextureType.unpacked,d.TextureType.unpacked]:[d.TextureType.unpacked,d.TextureType.unpacked],cacheHint:ut});var lt,ut;return Object.assign(Object.assign({},at),{get:()=>((ct,dt,pt,ht)=>{const ft=dt.length>2?"getB(output_channel)":"0.0",yt=dt[0].dims,wt=dt[1].dims,_t=wt[1],bt=wt[0]/ht.group,xt=[dt[0].dims[0],dt[1].dims[1]*ht.group,...ht.outputShape],mt=(0,c.getGlsl)(ct.session.backend.glContext.version),{activationFunction:vt,applyActivation:Et}=(0,g.getActivationSnippet)(ht),Ct=`
  const ivec2 strides = ivec2(${ht.strides[0]}, ${ht.strides[1]});
  const ivec2 pads = ivec2(${ht.pads[0]}, ${ht.pads[1]});
  ${vt}
  void main() {
    ivec4 coords = getOutputCoords();
    int batch = coords.x;
    int output_channel = coords.y;

    ivec2 loc = coords.zw + pads;

    int group_id = output_channel / ${_t};
    int wOutChannel = output_channel - group_id * ${_t};

    float value = ${ft};
    for (int inChannelOffset = 0; inChannelOffset < ${bt}; inChannelOffset++) {
      int input_channel = group_id * ${bt} + inChannelOffset;
      for (int wWOff = 0; wWOff < ${wt[2]}; wWOff++) {
        for (int wHOff = 0; wHOff < ${wt[3]}; wHOff++) {
          ivec2 wOff = ivec2(wWOff * ${ht.dilations[0]}, wHOff * ${ht.dilations[1]});
          ivec2 wLoc = loc - wOff;
          ivec2 wLocIn = wLoc / strides;
          if (
            wLocIn * strides == wLoc &&
            wLocIn.x >= 0 && wLocIn.x < ${yt[2]} &&
            wLocIn.y >= 0 && wLocIn.y < ${yt[3]}
          ) {
            float xVal = getX(batch, input_channel, wLocIn.y, wLocIn.x);
            float wVal = getW(input_channel, wOutChannel, wHOff, wWOff);
            value += xVal * wVal;
          }
        }
      }
    }
    ${Et}
    ${mt.output} = vec4(value, .0, .0, .0);
  }
`;return Object.assign(Object.assign({},pt),{output:{dims:xt,type:dt[0].type,textureType:d.TextureType.unpacked},shaderSource:Ct,hasMain:!0})})(st,ot,at,it)})})(tt,nt,rt),nt),_=(tt,nt)=>{const rt=tt.kernelShape.slice();if(tt.kernelShape.length===0)for(let at=2;at<nt[1].dims.length;++at)rt.push(nt[1].dims[at]);const st=tt.pads.slice(),ot=tt.outputShape.slice();((at,lt,ut,ct,dt,pt,ht,ft)=>{const yt=at.length-2,wt=ft.length===0;for(let _t=0;_t<yt;++_t){const bt=wt?at[_t+2]*pt[_t]:ft[_t],xt=$(at[_t+2],pt[_t],dt[_t],lt[_t],ut[_t],bt);j(xt,ct,dt,_t,_t+yt),wt&&ft.push(pt[_t]*(at[_t+2]-1)+ht[_t]+(lt[_t]-1)*ut[_t]+1-dt[_t]-dt[_t+yt])}})(nt[0].dims,rt,tt.dilations,tt.autoPad,st,tt.strides,tt.outputPadding,ot);const it=Object.assign({},tt);return Object.assign(it,{kernelShape:rt,pads:st,outputShape:ot,cacheKey:tt.cacheKey}),it};s.parseConvTransposeAttributes=tt=>{const nt=tt.attributes,rt=(0,g.parseInternalActivationAttributes)(nt),st=nt.getString("auto_pad","NOTSET"),ot=nt.getInts("dilations",[1,1]),it=nt.getInt("group",1),at=nt.getInts("kernel_shape",[]),lt=nt.getInts("output_padding",[0,0]),ut=nt.getInts("output_shape",[]),ct=nt.getInts("pads",[0,0,0,0]),dt=nt.getInts("strides",[1,1]);return(0,a.createAttributeWithCacheKey)(Object.assign({autoPad:st,dilations:ot,group:it,kernelShape:at,outputPadding:lt,outputShape:ut,pads:ct,strides:dt},rt))};const b=(tt,nt)=>{if(!tt||tt.length!==2&&tt.length!==3)throw new Error("Conv requires 2 or 3 inputs");if(tt[0].dims.length!==4||tt[1].dims.length!==4)throw new Error("currently only support 2-dimensional conv");if(tt[0].dims[1]!==tt[1].dims[0])throw new Error("FILTER_IN_CHANNEL should be equal to DATA_CHANNEL");const rt=tt[1].dims[1]*nt.group;if(tt.length===3&&(tt[2].dims.length!==1||tt[2].dims[0]!==rt))throw new Error("invalid bias");const st=tt[0].dims.length-2;if(nt.dilations.length!==st)throw new Error(`dilations should be ${st}D`);if(nt.strides.length!==st)throw new Error(`strides should be ${st}D`);if(nt.pads.length!==2*st)throw new Error(`pads should be ${2*st}D`);if(nt.outputPadding.length!==st)throw new Error(`output_padding should be ${st}D`);if(nt.kernelShape.length!==0&&nt.kernelShape.length!==tt[1].dims.length-2)throw new Error("invalid kernel shape");if(nt.outputShape.length!==0&&nt.outputShape.length!==tt[0].dims.length-2)throw new Error("invalid output shape");if(tt[0].type!=="float32"||tt[1].type!=="float32")throw new Error("ConvTranspose input(X,W) should be float tensor");if(tt.length===3&&tt[2].type!=="float32")throw new Error("ConvTranspose input(bias) should be float tensor")}},8138:(i,s,o)=>{Object.defineProperty(s,"__esModule",{value:!0}),s.parseConvAttributes=s.conv=s.calculateOutputShape=void 0;const a=o(246),c=o(2517),d=o(4770),g=o(1386),$=o(9828),j=o(2823),_e=o(3248),et=o(5623);s.calculateOutputShape=(st,ot,it,at,lt)=>{const ut=st[0],ct=st.slice(2),dt=ct.length,pt=ot[0],ht=ot.slice(2).map((yt,wt)=>yt+(yt-1)*(it[wt]-1)),ft=ct.map((yt,wt)=>yt+at[wt]+at[wt+dt]).map((yt,wt)=>Math.floor((yt-ht[wt]+lt[wt])/lt[wt]));return[ut,pt].concat(...ft)},s.conv=(st,ot,it)=>(rt(ot,it),_(st,ot,it));const _=(st,ot,it)=>{const at=nt(it,ot),lt=st.session.pack,ut=at.kernelShape[0]===1&&at.kernelShape[1]===1;return at.group>1?[st.run((0,d.createUnpackedGroupedConvProgramInfoLoader)(st,ot,at),ot)]:ut&&lt?[b(st,ot,at)]:lt&&ot[0].dims.length===4&&ot[0].dims[0]===1&&!ut?[(0,g.conv2DPacked)(st,ot,at)]:[tt(st,ot,at)]},b=(st,ot,it)=>{const at=ot[0].dims,lt=ot[1].dims,ut=(0,s.calculateOutputShape)(at,lt,it.dilations,it.pads,it.strides),ct=st.reshapeUnpacked(ot[0],[at[1],at[2]*at[3]]),dt=st.reshapeUnpacked(ot[1],[lt[0],lt[1]]),pt=ot.length>2?[dt,ct,ot[2]]:[dt,ct],ht=st.run((0,et.createMatmulProgramInfoLoader)(pt,it),pt);return st.reshapeUnpacked(ht,ut)},tt=(st,ot,it)=>{const at=ot[0].dims,lt=ot[1].dims,ut=(0,s.calculateOutputShape)(at,lt,it.dilations,it.pads,it.strides),ct=st.run((0,_e.createIm2ColProgramInfoLoader)(st,ot[0],ot[1],ut,it),[ot[0]]),dt=ot.length===3?[ct,ot[1],ot[2]]:[ct,ot[1]];return st.run((0,$.createDotProductProgramInfoLoader)(st,ot,ut,it),dt)},nt=(st,ot)=>{const it=st.kernelShape.slice();if(st.kernelShape.length===0)for(let ut=2;ut<ot[1].dims.length;++ut)it.push(ot[1].dims[ut]);const at=st.pads.slice();c.PoolConvUtil.adjustPadsBasedOnAutoPad(ot[0].dims,st.strides,st.dilations,it,at,st.autoPad);const lt=Object.assign({},st);return Object.assign(lt,{kernelShape:it,pads:at,cacheKey:st.cacheKey}),lt};s.parseConvAttributes=st=>{const ot=st.attributes,it=(0,j.parseInternalActivationAttributes)(ot),at=ot.getString("auto_pad","NOTSET"),lt=ot.getInts("dilations",[1,1]),ut=ot.getInt("group",1),ct=ot.getInts("kernel_shape",[]),dt=ot.getInts("pads",[0,0,0,0]),pt=ot.getInts("strides",[1,1]);return(0,a.createAttributeWithCacheKey)(Object.assign({autoPad:at,dilations:lt,group:ut,kernelShape:ct,pads:dt,strides:pt},it))};const rt=(st,ot)=>{if(!st||st.length!==2&&st.length!==3)throw new Error("Conv requires 2 or 3 inputs");if(st[0].dims.length!==4||st[1].dims.length!==4)throw new Error("currently only support 2-dimensional conv");if(st[0].dims[1]!==st[1].dims[1]*ot.group)throw new Error("FILTER_IN_CHANNEL should be equal to DATA_CHANNEL");if(st.length===3&&(st[2].dims.length!==1||st[1].dims[0]!==st[2].dims[0]))throw new Error("invalid bias");const it=st[0].dims.length-2;if(ot.dilations.length!==it)throw new Error(`dilations should be ${it}D`);if(ot.strides.length!==it)throw new Error(`strides should be ${it}D`);if(ot.pads.length!==2*it)throw new Error(`pads should be ${2*it}D`);if(ot.kernelShape.length!==0&&ot.kernelShape.length!==st[1].dims.length-2)throw new Error("invalid kernel shape");if(st[0].type!=="float32"||st[1].type!=="float32")throw new Error("Conv input(X,W) should be float tensor");if(st.length===3&&st[2].type!=="float32")throw new Error("Conv input(bias) should be float tensor")}},5193:(i,s,o)=>{Object.defineProperty(s,"__esModule",{value:!0}),s.parseDepthToSpaceAttributes=s.depthToSpace=void 0;const a=o(3738);s.depthToSpace=(d,g,$)=>{c(g);const j=$.blocksize,_e=j*j,et=$.mode==="DCR"?[0,3,4,1,5,2]:[0,1,4,2,5,3],_=$.mode==="DCR"?[g[0].dims[0],j,j,g[0].dims[1]/_e,g[0].dims[2],g[0].dims[3]]:[g[0].dims[0],g[0].dims[1]/_e,j,j,g[0].dims[2],g[0].dims[3]],b=d.reshapeUnpacked(g[0],_),tt={perm:et,cacheKey:`${et}`},[nt]=(0,a.transpose)(d,[b],tt),rt=[g[0].dims[0],g[0].dims[1]/_e,g[0].dims[2]*j,g[0].dims[3]*j];return[d.reshapeUnpacked(nt,rt)]},s.parseDepthToSpaceAttributes=d=>{const g=d.attributes.getInt("blocksize");if(g<1)throw new Error(`blocksize must be >= 1, but got : ${g} for DepthToSpace`);const $=d.attributes.getString("mode","DCR");if($!=="DCR"&&$!=="CRD")throw new Error(`unrecognized mode: ${$} for DepthToSpace`);return{mode:$,blocksize:g}};const c=d=>{if(d.length!==1)throw new Error(`DepthToSpace expect 1 inputs, but got ${d.length}`);if(d[0].type==="string"||d[0].dims.length!==4)throw new TypeError("DepthToSpace input should be a 4-D numeric tensor")}},9828:(i,s,o)=>{Object.defineProperty(s,"__esModule",{value:!0}),s.createDotProductProgramInfoLoader=void 0;const a=o(2517),c=o(5060),d=o(2039),g=o(2823),$=o(3248);s.createDotProductProgramInfoLoader=(j,_e,et,_)=>{const b=((tt,nt)=>({name:"ConvDotProduct",inputNames:tt?["Im2Col","K","B"]:["Im2Col","K"],inputTypes:tt?[d.TextureType.unpacked,d.TextureType.packedLastDimension,d.TextureType.unpacked]:[d.TextureType.unpacked,d.TextureType.packedLastDimension],cacheKey:nt.activationCacheKey}))(_e.length>2,_);return Object.assign(Object.assign({},b),{get:()=>((tt,nt,rt,st,ot)=>{const it=rt[0].dims,at=rt[1].dims,lt=[at[0],Math.ceil(it[1]*at[2]*at[3]/4)],ut=(0,$.calculateIm2ColDims)(it,at,st),[ct,dt]=tt.calculateTextureWidthAndHeight(lt,d.TextureType.packedLastDimension),pt=a.ShapeUtil.computeStrides(ut),[ht,ft]=tt.calculateTextureWidthAndHeight(ut,d.TextureType.packedLastDimension),yt=st.length,wt=rt.length<3?"0.0":"_B(b)",_t=Math.ceil(it[1]*at[2]*at[3]/4),{activationFunction:bt,applyActivation:xt}=(0,g.getActivationSnippet)(ot),mt=(0,c.getGlsl)(tt.session.backend.glContext.version),vt=`
${bt}
float process(int indices[${yt}]) {
  int b[1];
  b[0] = indices[1];
  int im2col[4];
  im2col[0] = indices[0];
  im2col[1] = indices[2];
  im2col[2] = indices[3];
  int im2colOffset = im2col[0] * ${pt[0]} + im2col[1] * ${pt[1]} + im2col[2] * ${pt[2]};
  int kernelOffset = indices[1] * ${lt[1]};
  float value = ${wt};
  for (int i = 0; i < ${_t}; ++i) {
    vec2 im2colCoords = offsetToCoords(im2colOffset, ${ht}, ${ft});
    vec2 kernelCoords = offsetToCoords(kernelOffset, ${ct}, ${dt});
    value += dot(${mt.texture2D}(Im2Col, im2colCoords), ${mt.texture2D}(K, kernelCoords));
    ++im2colOffset;
    ++kernelOffset;
  }
  ${xt}
  return value;
}`;return Object.assign(Object.assign({},nt),{output:{dims:st,type:rt[0].type,textureType:d.TextureType.unpacked},shaderSource:vt})})(j,b,_e,et,_)})}},7992:(i,s,o)=>{Object.defineProperty(s,"__esModule",{value:!0}),s.parseFlattenAttributes=s.flatten=void 0;const a=o(2517);s.flatten=(d,g,$)=>{c(g,$);const j=a.ShapeUtil.flattenShape(g[0].dims,$);return[d.reshapeUnpacked(g[0],j)]},s.parseFlattenAttributes=d=>d.attributes.getInt("axis",1);const c=(d,g)=>{if(!d||d.length!==1)throw new Error("Flatten requires 1 input.");const $=d[0].dims.length;if($===0)throw new Error("scalar tensor is not supported.");if(g<-$||g>$)throw new Error("Invalid axis");if(d[0].type==="string")throw new Error("string tensor is not supported.")}},2823:(i,s,o)=>{Object.defineProperty(s,"__esModule",{value:!0}),s.parseInternalActivationAttributes=s.getActivationSnippet=void 0;const a=o(2517),c=o(4909);s.getActivationSnippet=function(d){let g;switch(d.activation){case"Relu":g=(0,c.glslRelu)();break;case"Sigmoid":g=(0,c.glslSigmoid)();break;case"Clip":g=(0,c.glslClip)(d.clipMin,d.clipMax);break;default:return{activationFunction:"",applyActivation:""}}const $=g.name;return{activationFunction:g.body,applyActivation:`value = ${$}_(value);`}},s.parseInternalActivationAttributes=d=>{const g=d.getString("activation","");if(g==="Clip"){const[$,j]=d.getFloats("activation_params",[a.MIN_CLIP,a.MAX_CLIP]);return{activation:g,clipMax:j,clipMin:$,activationCacheKey:`${g}:${$},${j}`}}return{activation:g,activationCacheKey:g}}},1253:(i,s,o)=>{Object.defineProperty(s,"__esModule",{value:!0}),s.parseGatherAttributes=s.gather=void 0;const a=o(246),c=o(782),d=o(2517),g=o(2039);s.gather=(et,_,b)=>(_e(_,b.axis),[et.run(j(et,_,b),_)]),s.parseGatherAttributes=et=>(0,a.createAttributeWithCacheKey)({axis:et.attributes.getInt("axis",0)});const $={name:"Gather",inputNames:["A","B"],inputTypes:[g.TextureType.unpacked,g.TextureType.unpacked]},j=(et,_,b)=>{const tt=Object.assign(Object.assign({},$),{cacheHint:b.cacheKey});return Object.assign(Object.assign({},tt),{get:()=>((nt,rt,st,ot)=>{const it=st[0].dims.slice(),at=st[1].dims.slice(),lt=new Array(it.length+at.length-1);ot=d.ShapeUtil.normalizeAxis(ot,it.length);const ut=[];for(let dt=0;dt<lt.length;dt++)dt<ot?(lt[dt]=it[dt],ut.push(`inputIdx[${dt}] = outputIdx[${dt}];`)):dt<ot+at.length?(lt[dt]=at[dt-ot],ut.push(`indexDataIdx[${dt-ot}] = outputIdx[${dt}];`)):(lt[dt]=it[dt-at.length+1],ut.push(`inputIdx[${dt-at.length+1}] = outputIdx[${dt}];`));const ct=`
      float process(int outputIdx[${lt.length||1}]) {
        int inputIdx[${it.length}];
        int indexDataIdx[${at.length||1}];
        indexDataIdx[0] = 0;
        ${ut.join(`
        `)}
        int idx = int(_B(indexDataIdx));
        inputIdx[${ot}] = idx < 0 ? idx + ${it[ot]} : idx;
        return _A(inputIdx);
      }`;return Object.assign(Object.assign({},rt),{output:{dims:lt,type:st[0].type,textureType:g.TextureType.unpacked},shaderSource:ct})})(0,tt,_,b.axis)})},_e=(et,_)=>{if(!et||et.length!==2)throw new Error("Gather requires 2 inputs.");const b=et[0].dims.length;if(b<1)throw new Error("Invalid input shape.");if(_<-b||_>b-1)throw new Error("Invalid axis.");if(c.NUMBER_TYPES.indexOf(et[0].type)===-1)throw new Error("Invaid input type.");if(et[1].type!=="int32"&&et[1].type!=="int16")throw new Error("Invaid input type.")}},4776:(i,s,o)=>{Object.defineProperty(s,"__esModule",{value:!0}),s.parseGemmAttributesV11=s.parseGemmAttributesV7=s.gemm=void 0;const a=o(246),c=o(2517),d=o(2039);s.gemm=(et,_,b)=>(_e(_,b),[et.run($(_,b),_)]);const g=(et,_)=>{const b=et.attributes.getInt("transA",0)!==0,tt=et.attributes.getInt("transB",0)!==0,nt=et.attributes.getFloat("alpha",1),rt=et.attributes.getFloat("beta",1);return(0,a.createAttributeWithCacheKey)({transA:b,transB:tt,alpha:nt,beta:rt,isOptionalC:_})};s.parseGemmAttributesV7=et=>g(et,!1),s.parseGemmAttributesV11=et=>g(et,!0);const $=(et,_)=>{const b={name:"Gemm",inputNames:et.length===3?["A","B","C"]:["A","B"],inputTypes:et.length===3?[d.TextureType.unpacked,d.TextureType.unpacked,d.TextureType.unpacked]:[d.TextureType.unpacked,d.TextureType.unpacked],key:_.cacheKey};return Object.assign(Object.assign({},b),{get:()=>j(b,et,_)})},j=(et,_,b)=>{const tt=_[0].dims.slice(),nt=_[1].dims.slice(),[rt,st]=c.GemmUtil.getShapeOfGemmResult(tt,b.transA,nt,b.transB,_.length===3?_[2].dims:void 0),ot=[rt,st];if(!ot)throw new Error("Can't use gemm on the given tensors");let it=tt[tt.length-1],at="";b.transA&&(it=tt[0]),b.transA&&b.transB?at="value += _A_T(a) * _B_T(b);":b.transA&&!b.transB?at="value += _A_T(a) * _B(b);":!b.transA&&b.transB?at="value += _A(a) * _B_T(b);":b.transA||b.transB||(at="value += _A(a) * _B(b);");const lt=ot.length,ut=`
      float process(int indices[${lt}]) {
          int a[${lt}];
          int b[${lt}];
          ${_.length===3?`int c[${_[2].dims.length}];`:""}

          copyVec(indices, a);
          copyVec(indices, b);
          ${_.length===3?"bcastIndices_C(indices, c);":""}

          float value = 0.0;
          for (int k=0; k<${it}; ++k) {
              a[${lt-1}] = k;
              b[${lt-2}] = k;
              ${at}
          }

          value = value * alpha;
          ${_.length===3?"value += beta * _C(c);":""}
          return value;
      }`;return Object.assign(Object.assign({},et),{output:{dims:ot,type:_[0].type,textureType:d.TextureType.unpacked},variables:[{name:"alpha",type:"float",data:b.alpha},{name:"beta",type:"float",data:b.beta}],shaderSource:ut})},_e=(et,_)=>{if(!et)throw new Error("Input is missing");if(_.isOptionalC&&(et.length<2||et.length>3))throw new Error("Invaid input shape.");if(!_.isOptionalC&&et.length!==3)throw new Error("Gemm requires 3 inputs");if(et.length===3&&et[2].dims.length!==1&&et[2].dims.length!==2)throw new Error("Invalid input shape of C");if(et[0].type!=="float32"&&et[0].type!=="float64"||et[1].type!=="float32"&&et[1].type!=="float64"||et.length===3&&et[2].type!=="float32"&&et[2].type!=="float64")throw new Error("Invalid input type.");if(et[0].type!==et[1].type||et.length===3&&et[0].type!==et[2].type)throw new Error("Input types are mismatched")}},8555:(i,s,o)=>{Object.defineProperty(s,"__esModule",{value:!0}),s.createPackedIm2ColProgramInfoLoader=void 0;const a=o(5060),c=o(2039),d=o(2827);s.createPackedIm2ColProgramInfoLoader=(g,$,j,_e,et)=>{const _=(b=et.cacheKey,{name:"Im2Col (packed)",inputNames:["A"],inputTypes:[c.TextureType.packed],cacheHint:b});var b;return Object.assign(Object.assign({},_),{get:()=>((tt,nt,rt,st,ot,it)=>{const at=rt.dims,lt=st.dims,ut=ot.length,ct=[lt[1]*lt[2]*lt[3],ot[2]*ot[3]],dt=lt[2]*lt[3],pt=(0,d.unpackFromChannel)(),ht=(0,a.getGlsl)(tt.session.backend.glContext.version);let ft="";for(let wt=0;wt<=1;wt++)for(let _t=0;_t<=1;_t++)ft+=`
            blockIndex = rc.x + ${_t};
            pos = rc.y + ${wt};

            if(blockIndex < ${ct[1]} && pos < ${ct[0]}) {
              offsetY = int(blockIndex / (${ot[ut-1]})) * ${it.strides[0]} -
                ${it.pads[0]};
              d0 = offsetY + ${it.dilations[0]} * (imod(pos, ${dt}) / ${lt[2]});

              if(d0 < ${at[2]} && d0 >= 0) {
                offsetX = imod(blockIndex, ${ot[ut-1]}) * ${it.strides[1]} -
                  ${it.pads[1]};
                d1 = offsetX + ${it.dilations[1]} * imod(imod(pos, ${dt}), ${lt[2]});

                if(d1 < ${at[3]} && d1 >= 0) {

                  ch = int(float(pos)/ ${dt}.);
                    innerDims = vec2(d0, d1);
                    result[${2*wt+_t}] = getChannel(
                      getA(0, ch, int(innerDims.x),
                      int(innerDims.y)), innerDims);
                }
              }
            }

          `;const yt=`
      ${pt}

      void main() {
        ivec2 rc = getOutputCoords();
          vec4 result = vec4(0.0);
          int blockIndex, pos, offsetY, d0, offsetX, d1, ch;
          vec2 innerDims;
          ${ft}
          ${ht.output} = result;
      }
            `;return Object.assign(Object.assign({},nt),{output:{dims:ct,type:rt.type,textureType:c.TextureType.packed},shaderSource:yt,hasMain:!0})})(g,_,$,j,_e,et)})}},3248:(i,s,o)=>{Object.defineProperty(s,"__esModule",{value:!0}),s.calculateIm2ColDims=s.createIm2ColProgramInfoLoader=void 0;const a=o(2039);s.createIm2ColProgramInfoLoader=(c,d,g,$,j)=>{const _e=(et=j.cacheKey,{name:"Im2Col",inputNames:["X"],inputTypes:[a.TextureType.unpacked],cacheHint:et});var et;return Object.assign(Object.assign({},_e),{get:()=>((_,b,tt,nt,rt,st)=>{const ot=tt.dims,it=nt.dims,at=rt.length,lt=(0,s.calculateIm2ColDims)(ot,it,rt,4),ut=`
        const int XC = ${ot[1]};
        const int XH = ${ot[2]};
        const int XW = ${ot[3]};
        const int KH = ${st.kernelShape[0]};
        const int KW = ${st.kernelShape[1]};
        const int dilationH = ${st.dilations[0]};
        const int dilationW = ${st.dilations[1]};
        const int strideH = ${st.strides[0]};
        const int strideW = ${st.strides[1]};
        const int padH = ${st.pads[0]};
        const int padW = ${st.pads[1]};
        const int KHKW = KH*KW;
        const int XCKHKW = XC * KHKW;
        const int outputChannels = 4;
        vec4 process(int indices[${at}]) {
          int b  = indices[0]; // batch size
          int oh = indices[1] * strideH - padH; //output height
          int ow = indices[2] * strideW - padW; //output width
          int p = indices[3] * outputChannels; //patch
          vec4 value = vec4(0.0);
          for(int i=0; i < outputChannels; ++i) {
            if(p < XCKHKW) {
              int patchC = p / KHKW;
              int patchH = (p - patchC*KHKW) / KW;
              int patchW = (p - patchC*KHKW) - patchH * KW;
              int xh2 = oh + patchH * dilationH;
              int xw2 = ow + patchW * dilationW;
              int x[${ot.length}];
              x[0] = b;
              x[1] = patchC;
              x[2] = xh2;
              x[3] = xw2;
              if(xh2 >= 0 &&
                  xh2 < XH &&
                  xw2 >= 0 &&
                  xw2 < XW) {
                value[i] = _X(x);
              }
            }
            ++p;
          }
          return value;
        }
        `;return Object.assign(Object.assign({},b),{output:{dims:lt,type:tt.type,textureType:a.TextureType.packedLastDimension},shaderSource:ut})})(0,_e,d,g,$,j)})},s.calculateIm2ColDims=(c,d,g,$=4)=>[g[0],g[2],g[3],Math.ceil(c[1]*d[2]*d[3]/$)]},6572:(i,s,o)=>{Object.defineProperty(s,"__esModule",{value:!0}),s.parseImageScalerAttributes=s.imageScaler=void 0;const a=o(246),c=o(2039);s.imageScaler=(_e,et,_)=>(j(et),[_e.run(g(_e,et,_),et)]),s.parseImageScalerAttributes=_e=>{const et=_e.attributes.getFloat("scale"),_=_e.attributes.getFloats("bias");return(0,a.createAttributeWithCacheKey)({scale:et,bias:_})};const d={name:"ImageScaler",inputNames:["X"],inputTypes:[c.TextureType.unpacked]},g=(_e,et,_)=>{const b=Object.assign(Object.assign({},d),{cacheHint:_.cacheKey});return Object.assign(Object.assign({},b),{get:()=>((tt,nt,rt,st)=>{const ot=rt[0].dims.slice(),it=ot.length,at=`
      ${$(st.bias.length)}
      float process(int indices[${it}]) {
        return _X(indices) * scale + getBias(bias, indices[1]);
      }`;return Object.assign(Object.assign({},nt),{output:{dims:ot,type:rt[0].type,textureType:c.TextureType.unpacked},variables:[{name:"bias",type:"float",arrayLength:st.bias.length,data:st.bias},{name:"scale",type:"float",data:st.scale}],shaderSource:at})})(0,b,et,_)})},$=_e=>{const et=[`float getBias(float bias[${_e}], int channel) {`];for(let _=0;_<_e;++_)_===0?et.push(`	if (channel == ${_}) { return bias[${_}]; }`):_===_e-1?et.push(`	else { return bias[${_}]; }`):et.push(`	else if (channel == ${_}) { return bias[${_}]; }`);return et.push("	}"),et.join(`
`)},j=_e=>{if(!_e||_e.length!==1)throw new Error("ImageScaler requires 1 input.");if(_e[0].dims.length!==4)throw new Error("Invalid input shape.");if(_e[0].type!=="float32"&&_e[0].type!=="float64")throw new Error("Invalid input type.")}},3346:(i,s,o)=>{Object.defineProperty(s,"__esModule",{value:!0}),s.parseInstanceNormalizationAttributes=s.instanceNormalization=void 0;const a=o(5060),c=o(2039);s.instanceNormalization=(et,_,b)=>{_e(_);const tt=et.run(g(_[0]),_);return[et.run(j(et,_[0],b,tt.dims),[_[0],tt,_[1],_[2]])]},s.parseInstanceNormalizationAttributes=et=>et.attributes.getFloat("epsilon",1e-5);const d={name:"InstanceNormalization_MeanAndVariance",inputNames:["X"],inputTypes:[c.TextureType.unpacked]},g=et=>Object.assign(Object.assign({},d),{get:()=>((_,b)=>{const tt=b.dims.slice(),nt=tt[1],rt=tt[2]*tt[3],st=[tt[0],nt],ot=`
      vec4 process(int[2] indices) {
        vec4 v = vec4(0.0);
        int a[4];
        a[0] = indices[0];
        a[1] = indices[1];
        float temp = 0.0;
        for(int a2=0; a2<${tt[2]}; a2++) {
          a[2] = a2;
          for(int a3=0; a3<${tt[3]}; a3++) {
            a[3] = a3;
            float x = _X(a);
            temp += x;
          }
        }
        float mean = temp / float(${rt});
        temp = 0.0;
        for(int a2=0; a2<${tt[2]}; a2++) {
          a[2] = a2;
          for(int a3=0; a3<${tt[3]}; a3++) {
            a[3] = a3;
            float x = _X(a);
            temp += (x - mean) * (x - mean);
          }
        }
        v.r = mean;
        v.g = temp / float(${rt});

        return v;
      }`;return Object.assign(Object.assign({},_),{output:{dims:st,type:b.type,textureType:c.TextureType.packedLastDimension},shaderSource:ot})})(d,et)}),$={name:"InstanceNormalization_ComputeOutput",inputNames:["X","MeanAndVariance","Scale","B"],inputTypes:[c.TextureType.unpacked,c.TextureType.packedLastDimension,c.TextureType.unpacked,c.TextureType.unpacked]},j=(et,_,b,tt)=>{const nt=Object.assign(Object.assign({},$),{cacheHint:`${b}`});return Object.assign(Object.assign({},nt),{get:()=>((rt,st,ot,it,at)=>{const lt=(0,a.getGlsl)(rt.session.backend.glContext.version),[ut,ct]=rt.calculateTextureWidthAndHeight(at,c.TextureType.packedLastDimension),[dt,pt]=[ut/4,ct],ht=`
      vec4 get_MeanAndVariance(int[2] mv) {
        int offset = indicesToOffset_MeanAndVariance(mv);
        vec2 coords = offsetToCoords(offset, ${dt}, ${pt});
        return ${lt.texture2D}(MeanAndVariance, coords);
      }

      float process(int[4] indices) {
        int mv[2];
        mv[0] = indices[0];
        mv[1] = indices[1];
        vec4 mean_and_variance = get_MeanAndVariance(mv);
        float mean = mean_and_variance.r;
        float variance = mean_and_variance.g;

        int sb[1];
        sb[0] = indices[1];
        float scale = _Scale(sb);
        float b = _B(sb);

        return scale * (_X(indices) - mean) / sqrt(variance + epsilon) + b;
      }`;return Object.assign(Object.assign({},st),{output:{dims:ot.dims,type:ot.type,textureType:c.TextureType.unpacked},variables:[{name:"epsilon",type:"float",data:it}],shaderSource:ht})})(et,nt,_,b,tt)})},_e=et=>{if(!et||et.length!==3)throw new Error("InstanceNormalization requires 3 inputs.");const _=et[0],b=et[1],tt=et[2];if(_.dims.length<3||b.dims.length!==1||tt.dims.length!==1)throw new Error("Invalid input shape.");if(b.dims[0]!==_.dims[1]||tt.dims[0]!==_.dims[1])throw new Error("Input shapes are mismatched.");if(_.type!=="float32"&&_.type!=="float64"||b.type!=="float32"&&b.type!=="float64"||tt.type!=="float32"&&tt.type!=="float64")throw new Error("Invalid input type.");if(et[0].dims.length!==4)throw new Error("Only support 4-D input shape.")}},708:(i,s,o)=>{Object.defineProperty(s,"__esModule",{value:!0}),s.createPackedMatmulProgramInfoLoader=void 0;const a=o(2517),c=o(5060),d=o(2039),g=o(9390),$=o(2823),j=o(5623);s.createPackedMatmulProgramInfoLoader=(_e,et,_)=>{const b=(tt=et.length>2,nt=_.activationCacheKey,{name:"MatMul (packed)",inputNames:tt?["A","B","Bias"]:["A","B"],inputTypes:tt?[d.TextureType.packed,d.TextureType.packed,d.TextureType.packed]:[d.TextureType.packed,d.TextureType.packed],cacheHint:nt});var tt,nt;return Object.assign(Object.assign({},b),{get:()=>((rt,st,ot,it)=>{const at=ot.length>2,lt=at?"value += getBiasForMatmul();":"",ut=ot[0].dims,ct=ot[1].dims,dt=a.BroadcastUtil.calcShape(ut,ct,!0),pt=!a.ShapeUtil.areEqual(ot[0].dims,ot[1].dims);if(!dt)throw new Error("Can't use matmul on the given tensors");const ht=ut[ut.length-1],ft=Math.ceil(ht/2),yt=ut.length,wt=ct.length,_t=(0,c.getGlsl)(rt.session.backend.glContext.version),bt=(0,g.getCoordsDataType)(dt.length),xt=dt.length,mt=(0,g.getGlChannels)(),{activationFunction:vt,applyActivation:Et}=(0,$.getActivationSnippet)(it),Ct=at?`${(0,j.getBiasForMatmul)(bt,mt,ot[2].dims,dt,!0)}`:"",kt=pt?`${function(Gt,Ft,jt,qt){let Yt=[],Qt=[];const Zt=jt[0].dims,en=jt[1].dims,on=Zt.length,rn=en.length,sn=qt.length,pn=sn-on,dn=sn-rn;Yt=Zt.map((xn,Dn)=>`coords.${Ft[Dn+pn]}`),Yt[on-1]="i*2",Yt.join(", "),Qt=en.map((xn,Dn)=>`coords.${Ft[Dn+dn]}`),Qt[rn-2]="i*2",Qt.join(", ");const mn=a.BroadcastUtil.getBroadcastDims(Zt,qt),Sn=a.BroadcastUtil.getBroadcastDims(en,qt),Ln=mn.map(xn=>`coords.${Ft[xn+pn]} = 0;`).join(`
`),In=Sn.map(xn=>`coords.${Ft[xn+dn]} = 0;`).join(`
`),On=`int lastDim = coords.${Ft[sn-1]};
  coords.${Ft[sn-1]} = coords.${Ft[sn-2]};
  coords.${Ft[sn-2]} = lastDim;`;return`
vec4 getAAtOutCoordsMatmul(int i) {
  ${Gt} coords = getOutputCoords();
  ${On}
  ${Ln}
  vec4 outputValue = getA(${Yt});
  return outputValue;
}

vec4 getBAtOutCoordsMatmul(int i) {
  ${Gt} coords = getOutputCoords();
  ${On}
  ${In}
  vec4 outputValue = getB(${Qt});
  return outputValue;
}`}(bt,mt,ot,dt)}`:"",Nt=pt?"getAAtOutCoordsMatmul(i)":`getA(${function(Gt,Ft){let jt="";for(let qt=0;qt<Ft-2;qt++)jt+=`rc.${Gt[qt]}, `;return jt+=`rc.${Gt[Ft-2]}, i*2`,jt}(mt,yt)})`,Mt=pt?"getBAtOutCoordsMatmul(i)":`getB(${function(Gt,Ft){let jt="";for(let qt=0;qt<Ft-2;qt++)jt+=`rc.${Gt[qt]}, `;return jt+=`i*2, rc.${Gt[Ft-1]}`,jt}(mt,wt)})`,Vt=`
            ${kt}
            ${Ct}
            ${vt}
            void main() {
              ${pt?"":`${bt} rc =
          getOutputCoords(); int lastDim = rc.${mt[xt-1]}; rc.${mt[xt-1]} =
          rc.${mt[xt-2]}; rc.${mt[xt-2]} = lastDim;
      `}

              vec4 value = vec4(0);
              for (int i = 0; i < ${ft}; i++) {
                vec4 a = ${Nt};
                vec4 b = ${Mt};

                value += (a.rrbb * b.rgrg);
                value += (a.ggaa * b.baba);
              }
              ${lt}
              ${Et}
              ${_t.output} = value;
            }`;return Object.assign(Object.assign({},st),{output:{dims:dt,type:ot[0].type,textureType:d.TextureType.packed},shaderSource:Vt,hasMain:!0})})(_e,b,et,_)})}},5623:(i,s,o)=>{Object.defineProperty(s,"__esModule",{value:!0}),s.getBiasForMatmul=s.createMatmulProgramInfoLoader=s.parseMatMulAttributes=s.matMul=void 0;const a=o(2517),c=o(2039),d=o(9390),g=o(2823),$=o(708);function j(_,b){const tt=(nt=_.length>2,rt=b.activationCacheKey,{name:"MatMul",inputNames:nt?["A","B","Bias"]:["A","B"],inputTypes:nt?[c.TextureType.unpacked,c.TextureType.unpacked,c.TextureType.unpacked]:[c.TextureType.unpacked,c.TextureType.unpacked],cacheHint:rt});var nt,rt;return Object.assign(Object.assign({},tt),{get:()=>function(st,ot,it){const at=ot[0].dims,lt=ot[1].dims,ut=a.BroadcastUtil.calcShape(at,lt,!0);if(!ut)throw new Error("Can't use matmul on the given tensors");const ct=(0,d.getCoordsDataType)(ut.length),dt=(0,d.getGlChannels)(),{activationFunction:pt,applyActivation:ht}=(0,g.getActivationSnippet)(it),ft=ot.length>2,yt=ft?"value += getBiasForMatmul();":"",wt=ft?`${et(ct,dt,ot[2].dims,ut,!1)}`:"",_t=ut.length,bt=at.length,xt=lt.length,mt=`
    ${pt}
    ${wt}
    float process(int indices[${_t}]) {
        int a[${bt}];
        int b[${xt}];
        bcastMatmulIndices_A(indices, a);
        bcastMatmulIndices_B(indices, b);

        float value;
        for (int k=0; k<${at[at.length-1]}; ++k) {
            a[${bt-1}] = k;
            b[${xt-2}] = k;
            value += _A(a) * _B(b);
        }
        ${yt}
        ${ht}
        return value;
    }`;return Object.assign(Object.assign({},st),{output:{dims:ut,type:ot[0].type,textureType:c.TextureType.unpacked},shaderSource:mt})}(tt,_,b)})}s.matMul=(_,b,tt)=>(_e(b),_.session.pack?[_.run((0,$.createPackedMatmulProgramInfoLoader)(_,b,tt),b)]:[_.run(j(b,tt),b)]),s.parseMatMulAttributes=_=>(0,g.parseInternalActivationAttributes)(_.attributes),s.createMatmulProgramInfoLoader=j;const _e=_=>{if(!_||_.length!==2)throw new Error("MatMul requires 2 inputs.");if(_[0].dims[_[0].dims.length-1]!==_[1].dims[_[1].dims.length-2])throw new Error("shared dimension does not match.");if(_[0].type!=="float32"&&_[0].type!=="float64"||_[1].type!=="float32"&&_[1].type!=="float64")throw new Error("inputs should be float type");if(_[0].type!==_[1].type)throw new Error("inputs types should match")};function et(_,b,tt,nt,rt){let st="";const ot=tt.length,it=nt.length,at=it-ot;st=it<2&&ot>0?"coords":tt.map((ct,dt)=>`coords.${b[dt+at]}`).join(", ");const lt=a.BroadcastUtil.getBroadcastDims(tt,nt).map(ct=>`coords.${b[ct+at]} = 0;`).join(`
`);let ut="vec4(outputValue.xx, outputValue.yy)";return a.ShapeUtil.size(tt)===1&&(ut="vec4(outputValue.x)"),rt?`
vec4 getBiasForMatmul() {
  ${_} coords = getOutputCoords();
  ${lt}
  vec4 outputValue = getBias(${st});
  return ${ut};
}`:`
float getBiasForMatmul() {
  ${_} coords = getOutputCoords();
  ${lt}
  return getBias(coords.x);
}`}s.getBiasForMatmul=et},2403:(i,s,o)=>{Object.defineProperty(s,"__esModule",{value:!0}),s.createPackProgramInfoLoader=void 0;const a=o(5060),c=o(2039),d=o(9390),g=o(2827),$={name:"pack",inputNames:["A"],inputTypes:[c.TextureType.unpackedReversed]};s.createPackProgramInfoLoader=(j,_e)=>Object.assign(Object.assign({},$),{get:()=>((et,_)=>{const b=(0,a.getGlsl)(et.session.backend.glContext.version),tt=_.dims,nt=tt.length,rt=_.dims.length,st=(0,d.getCoordsDataType)(rt),ot=(0,g.getChannels)("rc",rt),it=(at=rt,lt=ot,ut=tt[tt.length-2],ct=tt[tt.length-1],at===0||at===1?"":`
    int r = ${lt[at-2]};
    int c = ${lt[at-1]};
    int rp1 = ${lt[at-2]} + 1;
    int cp1 = ${lt[at-1]} + 1;
    bool rEdge = rp1 >= ${ct};
    bool cEdge = cp1 >= ${ut};
    `);var at,lt,ut,ct;let dt;dt=nt===0?[1,1]:nt===1?[tt[0],1]:[tt[rt-1],tt[rt-2]];const pt=function(yt,wt,_t){if(yt===0)return"false";if(yt===1)return`rc > ${wt[0]}`;let bt="";for(let xt=yt-2;xt<yt;xt++)bt+=`${_t[xt]} >= ${wt[xt-yt+2]}`,xt<yt-1&&(bt+="||");return bt}(rt,dt,ot),ht=function(yt,wt){const _t=yt.length;if(_t===0)return"getA(), 0, 0, 0";if(_t===1)return`getA(rc),
            rc + 1 >= ${yt[0]} ? 0. : getA(rc + 1),
            0, 0`;let bt="";if(_t>2)for(let xt=0;xt<_t-2;++xt)bt+=`${wt[xt]},`;return`getA(${bt}r, c),
          rEdge ? 0. : getA(${bt}rp1, c),
          cEdge ? 0. : getA(${bt}r, cp1),
          rEdge || cEdge ? 0. : getA(${bt}rp1, cp1)`}(tt,ot),ft=`
        void main() {
          ${st} rc = getOutputCoords();

          if(${pt}) {
            ${b.output} = vec4(0);
          } else {
            ${it}

            ${b.output} = vec4(${ht});
          }
        }
      `;return Object.assign(Object.assign({},$),{hasMain:!0,output:{dims:_.dims,type:_.type,textureType:c.TextureType.packed},shaderSource:ft})})(j,_e)})},2827:(i,s,o)=>{Object.defineProperty(s,"__esModule",{value:!0}),s.unpackFromChannel=s.getChannels=s.getVecChannels=void 0;const a=o(9390);function c(d,g){return(0,a.getGlChannels)(g).map($=>`${d}.${$}`)}s.getVecChannels=c,s.getChannels=function(d,g){return g===1?[d]:c(d,g)},s.unpackFromChannel=function(){return`
    float getChannel(vec4 frag, int dim) {
      int modCoord = imod(dim, 2);
      return modCoord == 0 ? frag.r : frag.g;
    }

    float getChannel(vec4 frag, vec2 innerDims) {
      vec2 modCoord = mod(innerDims, 2.);
      return modCoord.x == 0. ?
        (modCoord.y == 0. ? frag.r : frag.g) :
        (modCoord.y == 0. ? frag.b : frag.a);
    }
  `}},2870:(i,s,o)=>{Object.defineProperty(s,"__esModule",{value:!0}),s.parsePadAttributesV11=s.padV11=s.parsePadAttributesV2=s.padV2=void 0;const a=o(246),c=o(2517),d=o(5060),g=o(2039),$={name:"Pad",inputNames:["A"],inputTypes:[g.TextureType.unpacked]};s.padV2=(st,ot,it)=>(et(ot),[st.run(Object.assign(Object.assign({},$),{cacheHint:it.cacheKey,get:()=>_e(st,ot[0],it)}),ot)]),s.parsePadAttributesV2=st=>{const ot=st.attributes.getString("mode","constant"),it=st.attributes.getFloat("value",0),at=st.attributes.getInts("pads");return(0,a.createAttributeWithCacheKey)({mode:ot,value:it,pads:at})},s.padV11=(st,ot,it)=>{_(ot);const at=j(st,ot,it);return(0,s.padV2)(st,[ot[0]],at)},s.parsePadAttributesV11=st=>st.attributes.getString("mode","constant");const j=(st,ot,it)=>{if(!st.session.isInitializer(ot[1].dataId)||ot.length>=3&&!st.session.isInitializer(ot[2].dataId))throw new Error("dynamic pad attributes are not allowed");const at=Array.from(ot[1].integerData),lt=ot.length>=3?ot[2].floatData[0]:0;return(0,a.createAttributeWithCacheKey)({mode:it,pads:at,value:lt})},_e=(st,ot,it)=>{const at=c.ShapeUtil.padShape(ot.dims.slice(),it.pads),lt=at.length,ut=`
      ${b(st,ot,it)}
      float process(int[${lt}] indices) {
          return padA(indices);
      }`;return{name:"Pad",inputNames:["A"],inputTypes:[g.TextureType.unpacked],output:{dims:at,type:ot.type,textureType:g.TextureType.unpacked},shaderSource:ut}},et=st=>{if(!st||st.length!==1)throw new Error("Pad requires 1 input");if(st[0].type!=="float32"&&st[0].type!=="float64")throw new Error("Invalid input type.")},_=st=>{if(!st||st.length!==2&&st.length!==3)throw new Error("Pad requires 2 or 3 inputs");if(st[1].type!=="int32")throw new Error("Invalid input type.");if(st.length>=3&&st[2].type==="string")throw new Error("Invalid input type.")},b=(st,ot,it)=>{const at=(0,d.getGlsl)(st.session.backend.glContext.version),[lt,ut]=st.calculateTextureWidthAndHeight(ot.dims,g.TextureType.unpacked),ct=c.ShapeUtil.computeStrides(ot.dims);switch(it.mode){case"constant":return tt(at,ot.dims,ct,lt,ut,it.pads,it.value);case"reflect":return nt(at,ot.dims,ct,lt,ut,it.pads);case"edge":return rt(at,ot.dims,ct,lt,ut,it.pads);default:throw new Error("Invalid mode")}},tt=(st,ot,it,at,lt,ut,ct)=>{const dt=ot.length;let pt="";for(let ht=dt-1;ht>=0;--ht)pt+=`
        k = m[${ht}] - ${ut[ht]};
        if (k < 0)  return constant;
        if (k >= ${ot[ht]}) return constant;
        offset += k * ${it[ht]};
        `;return`
      float padA(int m[${dt}]) {
        const float constant = float(${ct});
        int offset = 0;
        int k = 0;
        ${pt}
        vec2 coords = offsetToCoords(offset, ${at}, ${lt});
        float value = getColorAsFloat(${st.texture2D}(A, coords));
        return value;
      }
      `},nt=(st,ot,it,at,lt,ut)=>{const ct=ot.length;let dt="";for(let pt=ct-1;pt>=0;--pt)dt+=`
        k = m[${pt}] - ${ut[pt]};
        if (k < 0) { k = -k; }
        {
          const int _2n_1 = ${2*(ot[pt]-1)};
          k = int( mod( float(k), float(_2n_1) ) ) ;
          if(k >= ${ot[pt]}) { k = _2n_1 - k; }
        }
        offset += k * ${it[pt]};
        `;return`
      float padA(int m[${ct}]) {
        int offset = 0;
        int k = 0;
        ${dt}
        vec2 coords = offsetToCoords(offset, ${at}, ${lt});
        float value = getColorAsFloat(${st.texture2D}(A, coords));
        return value;
      }
      `},rt=(st,ot,it,at,lt,ut)=>{const ct=ot.length;let dt="";for(let pt=ct-1;pt>=0;--pt)dt+=`
        k = m[${pt}] - ${ut[pt]};
        if (k < 0)  k = 0;
        if (k >= ${ot[pt]}) k = ${ot[pt]-1};
        offset += k * ${it[pt]};
      `;return`
      float padA(int m[${ct}]) {
        int offset = 0;
        int k = 0;
        ${dt}
        vec2 coords = offsetToCoords(offset, ${at}, ${lt});
        float value = getColorAsFloat(${st.texture2D}(A, coords));
        return value;
      }
      `}},2143:(i,s,o)=>{Object.defineProperty(s,"__esModule",{value:!0}),s.globalMaxPool=s.parseMaxPoolAttributes=s.maxPool=s.parseGlobalAveragePoolAttributes=s.globalAveragePool=s.parseAveragePoolAttributes=s.averagePool=void 0;const a=o(246),c=o(2517),d=o(2039);s.averagePool=(rt,st,ot)=>{_(st);const it={name:"AveragePool",inputNames:["X"],inputTypes:[d.TextureType.unpacked],cacheHint:ot.cacheKey};return[rt.run(Object.assign(Object.assign({},it),{get:()=>g(st,it,!1,ot)}),st)]},s.parseAveragePoolAttributes=rt=>{const st=rt.attributes.getString("auto_pad","NOTSET"),ot=rt.attributes.getInt("ceil_mode",0),it=rt.attributes.getInt("count_include_pad",0)!==0,at=rt.attributes.getInts("kernel_shape"),lt=rt.attributes.getInts("strides",[]),ut=rt.attributes.getInts("pads",[]);if(ot!==0)throw new Error("using ceil() in shape computation is not yet supported for AveragePool");return(0,a.createAttributeWithCacheKey)({autoPad:st,ceilMode:ot,countIncludePad:it,kernelShape:at,strides:lt,pads:ut})};const g=(rt,st,ot,it)=>{const[at,lt]=j(rt,it,ot),ut=c.ShapeUtil.size(at.kernelShape);let ct="";at.countIncludePad?ct+=`value /= float(${ut});`:ct+=`value /= float(${ut} - pad);`;const dt=`
        ${b(rt[0].dims,at,"value += _X(x);",ct,"0.0")}
      `;return Object.assign(Object.assign({},st),{output:{dims:lt,type:rt[0].type,textureType:d.TextureType.unpacked},shaderSource:dt})};s.globalAveragePool=(rt,st,ot)=>{_(st);const it={name:"GlobalAveragePool",inputNames:["X"],inputTypes:[d.TextureType.unpacked],cacheHint:`${ot.countIncludePad}`};return[rt.run(Object.assign(Object.assign({},it),{get:()=>g(st,it,!0,ot)}),st)]},s.parseGlobalAveragePoolAttributes=rt=>{const st=rt.attributes.getInt("count_include_pad",0)!==0;return(0,a.createAttributeWithCacheKey)({autoPad:"",ceilMode:0,countIncludePad:st,kernelShape:[],strides:[],pads:[]})},s.maxPool=(rt,st,ot)=>{_(st);const it={name:"MaxPool",inputNames:["X"],inputTypes:[d.TextureType.unpacked],cacheHint:ot.cacheKey};return[rt.run(Object.assign(Object.assign({},it),{get:()=>$(st,it,!1,ot)}),st)]},s.parseMaxPoolAttributes=rt=>{const st=rt.attributes.getString("auto_pad","NOTSET"),ot=rt.attributes.getInt("ceil_mode",0),it=rt.attributes.getInts("kernel_shape"),at=rt.attributes.getInts("strides",[]),lt=rt.attributes.getInts("pads",[]),ut=rt.attributes.getInt("storage_order",0),ct=rt.attributes.getInts("dilations",[]);if(ut!==0)throw new Error("column major storage order is not yet supported for MaxPool");if(ot!==0)throw new Error("using ceil() in shape computation is not yet supported for MaxPool");return(0,a.createAttributeWithCacheKey)({autoPad:st,ceilMode:ot,countIncludePad:!1,kernelShape:it,strides:at,pads:lt,storageOrder:ut,dilations:ct})};const $=(rt,st,ot,it)=>{const[at,lt]=j(rt,it,ot),ut=`
      ${b(rt[0].dims,at,`
      value = max(_X(x), value);
    `,"","-1e5")}
    `;return Object.assign(Object.assign({},st),{output:{dims:lt,type:rt[0].type,textureType:d.TextureType.unpacked},shaderSource:ut})},j=(rt,st,ot)=>{const it=rt[0].dims.slice(),at=Object.hasOwnProperty.call(st,"dilations"),lt=st.kernelShape.slice(),ut=st.strides.slice(),ct=at?st.dilations.slice():[],dt=st.pads.slice();c.PoolConvUtil.adjustPoolAttributes(ot,it,lt,ut,ct,dt);const pt=c.PoolConvUtil.computePoolOutputShape(ot,it,ut,ct,lt,dt,st.autoPad),ht=Object.assign({},st);return at?Object.assign(ht,{kernelShape:lt,strides:ut,pads:dt,dilations:ct,cacheKey:st.cacheKey}):Object.assign(ht,{kernelShape:lt,strides:ut,pads:dt,cacheKey:st.cacheKey}),[ht,pt]},_e={autoPad:"",ceilMode:0,countIncludePad:!1,kernelShape:[],strides:[],pads:[],storageOrder:0,dilations:[],cacheKey:""},et={name:"GlobalMaxPool",inputNames:["X"],inputTypes:[d.TextureType.unpacked]};s.globalMaxPool=(rt,st)=>(_(st),[rt.run(Object.assign(Object.assign({},et),{get:()=>$(st,et,!0,_e)}),st)]);const _=rt=>{if(!rt||rt.length!==1)throw new Error("Pool ops requires 1 input.");if(rt[0].type!=="float32"&&rt[0].type!=="float64")throw new Error("Invalid input type.")},b=(rt,st,ot,it,at)=>{const lt=rt.length;if(st.kernelShape.length<=2){const ut=st.kernelShape[st.kernelShape.length-1],ct=st.strides[st.strides.length-1],dt=st.pads[st.pads.length/2-1],pt=st.pads[st.pads.length-1],ht=rt[lt-1];let ft="",yt="",wt="";if(ft=dt+pt!==0?`
          for (int i = 0; i < ${ut}; i++) {
            x[${lt} - 1] = indices[${lt} - 1] * ${ct} - ${dt} + i;
            if (x[${lt} - 1] < 0 || x[${lt} - 1] >= ${ht}) {
              pad++;
              continue;
            }
            ${ot}
          }`:`
          for (int i = 0; i < ${ut}; i++) {
            x[${lt} - 1] = indices[${lt} - 1] * ${ct} - ${dt} + i;
            ${ot}
          }`,st.kernelShape.length===2){const _t=st.kernelShape[st.kernelShape.length-2],bt=st.strides[st.strides.length-2],xt=st.pads[st.pads.length/2-2],mt=st.pads[st.pads.length-2],vt=rt[lt-2];yt=xt+mt!==0?`
            for (int j = 0; j < ${_t}; j++) {
              x[${lt} - 2] = indices[${lt} - 2] * ${bt} - ${xt} + j;
              if (x[${lt} - 2] < 0 || x[${lt} - 2] >= ${vt}) {
                pad+= ${ut};
                continue;
              }
          `:`
            for (int j = 0; j < ${_t}; j++) {
              x[${lt} - 2] = indices[${lt} - 2] * ${bt} - ${xt} + j;
            `,wt=`
          }
        `}return`
        float process(int indices[${lt}]) {
          int x[${lt}];
          copyVec(indices, x);

          float value = ${at};
          int pad = 0;
          ${yt}
          ${ft}
          ${wt}
          ${it}
          return value;
        }
      `}{const ut=c.ShapeUtil.size(st.kernelShape),ct=c.ShapeUtil.computeStrides(st.kernelShape),dt=ct.length,pt=st.pads.length,ht=nt(dt),ft=tt(rt,"inputDims"),yt=tt(st.pads,"pads"),wt=tt(ct,"kernelStrides"),_t=tt(st.strides,"strides");let bt="";return bt=st.pads.reduce((xt,mt)=>xt+mt)?`
            if (x[j] >= inputDims[j] || x[j] < 0) {
              pad++;
              isPad = true;
              break;
            }
          }
          if (!isPad) {
            ${ot}
          }`:`
          }
          ${ot}
        `,`
        ${ht}
        float process(int indices[${lt}]) {
          int x[${lt}];
          copyVec(indices, x);
          int offset[${dt}];
          int pads[${pt}];
          int inputDims[${lt}];
          int kernelStrides[${dt}];
          int strides[${dt}];
          ${yt}
          ${ft}
          ${_t}
          ${wt}

          float value = ${at};
          int pad = 0;
          bool isPad = false;
          for (int i = 0; i < ${ut}; i++) {
            offsetToIndices(i, kernelStrides, offset);
            isPad = false;
            for (int j = ${lt} - ${dt}; j < ${lt}; j++) {
              x[j] = indices[j] * strides[j - ${lt} + ${dt}]
                + offset[j - ${lt} + ${dt}] - pads[j - 2];
              ${bt}
          }
          ${it}

          return value;
        }
      `}},tt=(rt,st)=>{let ot="";for(let it=0;it<rt.length;it++)ot+=`
      ${st}[${it}] = ${rt[it]};
    `;return ot},nt=rt=>`
  void offsetToIndices(int offset, int[${rt}] strides, out int[${rt}] indices) {
    if (${rt} == 0) {
      return;
    }
    for (int i = 0; i < ${rt} - 1; ++i) {
      indices[i] = offset / strides[i];
      offset -= indices[i] * strides[i];
    }
    indices[${rt} - 1] = offset;
  }`},4939:(i,s,o)=>{Object.defineProperty(s,"__esModule",{value:!0}),s.reduceLogSumSquare=s.reduceLogSum=s.reduceProd=s.reduceMin=s.reduceMax=s.reduceMean=s.reduceSum=s.parseReduceAttributes=void 0;const a=o(246),c=o(782),d=o(2517),g=o(2039),$=(et,_,b,tt,nt)=>{_e(_);const rt={name:tt,inputNames:["A"],inputTypes:[g.TextureType.unpacked]};return[et.run(Object.assign(Object.assign({},rt),{cacheHint:b.cacheKey,get:()=>j(et,_,b,tt,nt,rt)}),_)]};s.parseReduceAttributes=et=>{const _=et.attributes.getInts("axes",[]),b=et.attributes.getInt("keepdims",1)===1;return(0,a.createAttributeWithCacheKey)({axes:_,keepDims:b})};const j=(et,_,b,tt,nt,rt)=>{const st=[],ot=_[0].dims.length||1,it=[],at=d.ShapeUtil.normalizeAxes(b.axes,_[0].dims.length),lt=nt(_,at);let ut=lt[1];for(let dt=0;dt<_[0].dims.length;dt++)at.indexOf(dt)>=0||at.length===0?(b.keepDims&&st.push(1),ut=`
          for(int j${dt} = 0; j${dt} < ${_[0].dims[dt]}; j${dt}++) {
            inputIdx[${dt}] = j${dt};
            ${ut}
          }`):(it.push(`inputIdx[${dt}] = outputIdx[${st.length}];`),st.push(_[0].dims[dt]));const ct=`
      float process(int outputIdx[${st.length||1}]) {
        float value;                 // final result
        int inputIdx[${ot}];      // addressing input data
        ${it.join(`
`)}
        ${lt[0]}       // init ops for reduce max/min
        ${ut}
        ${lt[2]}       // final computation for reduce mean
        return value;
      }`;return Object.assign(Object.assign({},rt),{output:{dims:st,type:_[0].type,textureType:g.TextureType.unpacked},shaderSource:ct})},_e=et=>{if(!et||et.length!==1)throw new Error("Reduce op requires 1 input.");if(c.NUMBER_TYPES.indexOf(et[0].type)===-1)throw new Error("Invalid input type.")};s.reduceSum=(et,_,b)=>$(et,_,b,"ReduceSum",()=>["value = 0.0;","value += _A(inputIdx);",""]),s.reduceMean=(et,_,b)=>$(et,_,b,"ReduceMean",(tt,nt)=>{let rt=1;for(let st=0;st<tt[0].dims.length;st++)(nt.indexOf(st)>=0||nt.length===0)&&(rt*=tt[0].dims[st]);return["value = 0.0;","value += _A(inputIdx);",`value /= ${rt}.;`]}),s.reduceMax=(et,_,b)=>$(et,_,b,"ReduceMax",(tt,nt)=>{const rt=[];for(let st=0;st<tt[0].dims.length;st++)(nt.indexOf(st)>=0||nt.length===0)&&rt.push(`inputIdx[${st}] = 0;`);return[`${rt.join(`
`)}
value = _A(inputIdx);`,"value = max(value, _A(inputIdx));",""]}),s.reduceMin=(et,_,b)=>$(et,_,b,"ReduceMin",(tt,nt)=>{const rt=[];for(let st=0;st<tt[0].dims.length;st++)(nt.indexOf(st)>=0||nt.length===0)&&rt.push(`inputIdx[${st}] = 0;`);return[`${rt.join(`
`)}
value = _A(inputIdx);`,"value = min(value, _A(inputIdx));",""]}),s.reduceProd=(et,_,b)=>$(et,_,b,"ReduceProd",()=>["value = 1.0;","value *= _A(inputIdx);",""]),s.reduceLogSum=(et,_,b)=>$(et,_,b,"ReduceLogSum",()=>["value = 0.0;","value += _A(inputIdx);","value = log(value);"]),s.reduceLogSumSquare=(et,_,b)=>$(et,_,b,"ReduceLogSumSquare",()=>["float t; value = 0.0;","t = _A(inputIdx); value += t * t;",""])},7019:(i,s,o)=>{Object.defineProperty(s,"__esModule",{value:!0}),s.isReshapeCheap=s.processDims3D=s.createPackedReshape3DProgramInfoLoader=void 0;const a=o(2517),c=o(5060),d=o(2039),g=o(2827);s.createPackedReshape3DProgramInfoLoader=($,j,_e)=>{const et=(_=>({name:"Reshape (packed)",inputTypes:[d.TextureType.packed],inputNames:["A"],cacheHint:`${_}`}))(_e);return Object.assign(Object.assign({},et),{get:()=>((_,b,tt,nt)=>{const rt=b.dims,st=nt;let ot="";for(let lt=0;lt<4;lt++){let ut="";switch(lt){case 0:ut="outputCoords = rc;";break;case 1:ut="outputCoords = ivec3(rc.x, rc.y+1, rc.z);";break;case 2:ut="outputCoords = ivec3(rc.x, rc.y, rc.z+1);";break;case 3:ut="outputCoords = ivec3(rc.x, rc.y+1, rc.z+1);";break;default:throw new Error}ot+=`
        ${ut}
        ${lt>0?"if(outputCoords.y < rows && outputCoords.z < cols){":""}
          int flattenedIndex = getFlattenedIndex(outputCoords);

          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flattenedIndex);
          vec2 innerDims = vec2(float(inputRC.y),float(inputRC.z));

          result[${lt}] = getChannel(getA(inputRC.x, inputRC.y, inputRC.z), innerDims);

        ${lt>0?"}":""}
      `}const it=(0,c.getGlsl)(_.session.backend.glContext.version),at=`
      ${function(lt){const ut=a.ShapeUtil.computeStrides(lt),ct=["b","r","c"],dt="index";return`
    ivec3 inputCoordsFromReshapedOutCoords(int index) {
      ${ut.map((pt,ht)=>`int ${ct[ht]} = ${dt} / ${pt}; ${ht===ut.length-1?`int ${ct[ht+1]} = ${dt} - ${ct[ht]} * ${pt}`:`index -= ${ct[ht]} * ${pt}`};`).join("")}
      return ivec3(b, r, c);
    }
  `}(rt)}
      ${function(lt){const ut=a.ShapeUtil.computeStrides(lt);return`
  int getFlattenedIndex(ivec3 coords) {
    // reverse y, z order
    return coords.x * ${ut[0]} + coords.z * ${ut[1]} + coords.y;
  }
`}(st)}
      ${(0,g.unpackFromChannel)()}

      void main() {
        ivec3 rc = getOutputCoords();

        vec4 result = vec4(0.0);

        ivec3 outputCoords;
        int rows = ${st[2]};
        int cols = ${st[1]};

        ${ot}
        ${it.output} = result;
      }
    `;return Object.assign(Object.assign({},tt),{output:{dims:st,type:b.type,textureType:d.TextureType.packed},shaderSource:at,hasMain:!0})})($,j,et,_e)})},s.processDims3D=function($){if($.length===0)return[1,1,1];let j=1;for(let _e=0;_e<$.length-2;++_e)j*=$[_e];return[j,$.length>1?$[$.length-2]:1,$[$.length-1]]},s.isReshapeCheap=function($,j){let _e=!1;return _e=$.length===0||j.length===0||($.length<2||j.length<2?$[$.length-1]===j[j.length-1]:$[$.length-1]===j[j.length-1]&&$[$.length-2]===j[j.length-2]),_e}},718:(i,s,o)=>{Object.defineProperty(s,"__esModule",{value:!0}),s.reshape=void 0;const a=o(2517);s.reshape=(c,d)=>{const g=a.ShapeUtil.calculateReshapedDims(d[0].dims,d[1].integerData);return c.session.pack?[c.reshapePacked(d[0],g)]:[c.reshapeUnpacked(d[0],g)]}},2268:(i,s,o)=>{Object.defineProperty(s,"__esModule",{value:!0}),s.parseResizeAttributesV11=s.parseResizeAttributesV10=s.resize=void 0;const a=o(5060),c=o(2039),d=o(9390),g=o(2827),$=o(9793),j={name:"Resize",inputNames:["A"],inputTypes:[c.TextureType.packed]};s.resize=(tt,nt,rt)=>((0,$.validateInputs)(nt,rt),[tt.run(Object.assign(Object.assign({},j),{cacheHint:rt.cacheKey,get:()=>_e(tt,nt,rt)}),nt)]),s.parseResizeAttributesV10=tt=>(0,$.parseUpsampleAttributes)(tt,10),s.parseResizeAttributesV11=tt=>(0,$.parseUpsampleAttributes)(tt,11);const _e=(tt,nt,rt)=>{const st=(0,a.getGlsl)(tt.session.backend.glContext.version),[ot,it]=et(nt,rt);if(ot.every(bt=>bt===1)&&rt.coordinateTransformMode!=="tf_crop_and_resize")return Object.assign(Object.assign({},j),{output:{dims:it,type:nt[0].type,textureType:c.TextureType.packed},hasMain:!0,shaderSource:`void main() {
                    vec4 v = ${st.texture2D}(X, TexCoords);
                    ${st.output} = v;
                }`});const at=it.length;if(at<2)throw new Error(`output dimension should be at least 2, but got ${at}`);const lt=it[at-2],ut=it[at-1],ct=nt[0].dims;if(at!==ct.length)throw new Error(`output dimension should match input ${ct.length}, but got ${at}`);const dt=ct[at-2],pt=ct[at-1],ht=ot[at-2],ft=ot[at-1];let yt="";if(rt.mode!=="linear")throw new Error(`resize (packed) does not support mode: '${rt.mode}'`);switch(rt.coordinateTransformMode){case"asymmetric":yt=`
                    vec4 getSourceFracIndex(ivec4 coords) {
                        return vec4(coords) / scaleWHWH;
                    }
                `;break;case"half_pixel":yt=`
                    vec4 getSourceFracIndex(ivec4 coords) {
                        return (vec4(coords) + 0.5) / scaleWHWH - 0.5;
                    }
                `;break;case"pytorch_half_pixel":yt=`
                    vec4 getSourceFracIndex(ivec4 coords) {
                        vec4 fcoords = vec4(coords);
                        return vec4(
                            ${ut}.0 > 1.0 ? (fcoords.x + 0.5) / scaleWHWH.x - 0.5 : 0.0,
                            ${lt}.0 > 1.0 ? (fcoords.y + 0.5) / scaleWHWH.y - 0.5 : 0.0,
                            ${ut}.0 > 1.0 ? (fcoords.z + 0.5) / scaleWHWH.z - 0.5 : 0.0,
                            ${lt}.0 > 1.0 ? (fcoords.w + 0.5) / scaleWHWH.w - 0.5 : 0.0
                          );
                    }
                `;break;case"align_corners":yt=`
                    vec4 getSourceFracIndex(ivec4 coords) {
                        vec4 resized = vec4(${ut}.0 - 1.0, ${lt}.0 - 1.0, ${ut}.0 - 1.0,
                            ${lt}.0 - 1.0);
                        vec4 original = vec4(${pt}.0 - 1.0, ${dt}.0 - 1.0, ${pt}.0 - 1.0,
                            ${dt}.0 - 1.0);
                        vec4 new_scale = original / resized;
                        return vec4(coords) * new_scale;
                    }
                `;break;default:throw new Error(`resize (packed) does not support coordinateTransformMode:                                 '${rt.coordinateTransformMode}'`)}const wt=(0,d.getCoordsDataType)(at),_t=`
            const vec2 inputWH = vec2(${dt}.0, ${pt}.0);
            const vec4 scaleWHWH = vec4(float(${ht}), float(${ft}), float(${ht}), float(${ft}));
            ${(0,g.unpackFromChannel)()}
            ${yt}
            float getAValue(int x10, int r, int c, int d) {
                return getChannel(getA(x10, r, c, d), vec2(c, d));
            }
            void main() {
                ${wt} rc = getOutputCoords();

                int batch = rc[0];
                int depth = rc[1];

                // retrieve the 4 coordinates that is used in the 4 packed output values.
                ivec4 coords = ivec4(rc.wz, rc.w + 1, rc.z + 1);

                // calculate the source index in fraction
                vec4 sourceFrac = getSourceFracIndex(coords);

                // get the lower and upper bound of the 4 values that will be packed into one texel.
                ivec4 x00 = ivec4(max(sourceFrac.xy, vec2(0.0)), min(inputWH - 1.0, ceil(sourceFrac.xy)));
                ivec4 x01 = ivec4(max(sourceFrac.xw, vec2(0.0)), min(inputWH - 1.0, ceil(sourceFrac.xw)));
                ivec4 x10 = ivec4(max(sourceFrac.zy, vec2(0.0)), min(inputWH - 1.0, ceil(sourceFrac.zy)));
                ivec4 x11 = ivec4(max(sourceFrac.zw, vec2(0.0)), min(inputWH - 1.0, ceil(sourceFrac.zw)));

                bool hasNextRow = rc.w < ${lt-1};
                bool hasNextCol = rc.z < ${ut-1};

                // pack x00, x01, x10, x11's top-left corner into one vec4 structure
                vec4 topLeft = vec4(
                    getAValue(batch, depth, x00.x, x00.y),
                    hasNextCol ? getAValue(batch, depth, x01.x, x01.y) : 0.0,
                    hasNextRow ? getAValue(batch, depth, x10.x, x10.y) : 0.0,
                    (hasNextRow && hasNextCol) ? getAValue(batch, depth, x11.x, x11.y) : 0.0);

                // pack x00, x01, x10, x11's top-right corner into one vec4 structure
                vec4 topRight = vec4(
                    getAValue(batch, depth, x00.x, x00.w),
                    hasNextCol ? getAValue(batch, depth, x01.x, x01.w) : 0.0,
                    hasNextRow ? getAValue(batch, depth, x10.x, x10.w) : 0.0,
                    (hasNextRow && hasNextCol) ? getAValue(batch, depth, x11.x, x11.w) : 0.0);

                // pack x00, x01, x10, x11's bottom-left corner into one vec4 structure
                vec4 bottomLeft = vec4(
                    getAValue(batch, depth, x00.z, x00.y),
                    hasNextCol ? getAValue(batch, depth, x01.z, x01.y) : 0.0,
                    hasNextRow ? getAValue(batch, depth, x10.z, x10.y) : 0.0,
                    (hasNextRow && hasNextCol) ? getAValue(batch, depth, x11.z, x11.y) : 0.0);

                // pack x00, x01, x10, x11's bottom-right corner into one vec4 structure
                vec4 bottomRight = vec4(
                    getAValue(batch, depth, x00.z, x00.w),
                    hasNextCol ? getAValue(batch, depth, x01.z, x01.w) : 0.0,
                    hasNextRow ? getAValue(batch, depth, x10.z, x10.w) : 0.0,
                    (hasNextRow && hasNextCol) ? getAValue(batch, depth, x11.z, x11.w) : 0.0);

                // calculate the interpolation fraction on u and v direction
                vec4 frac = vec4(sourceFrac) - floor(sourceFrac);
                vec4 clampFrac = clamp(frac, vec4(0.0), vec4(1.0));

                vec4 top = mix(topLeft, topRight, clampFrac.ywyw);
                vec4 bottom = mix(bottomLeft, bottomRight, clampFrac.ywyw);
                vec4 newValue = mix(top, bottom, clampFrac.xxzz);

                ${st.output} = vec4(newValue);
            }
        `;return Object.assign(Object.assign({},j),{output:{dims:it,type:nt[0].type,textureType:c.TextureType.packed},hasMain:!0,shaderSource:_t})},et=(tt,nt)=>{const rt=tt[0].dims;let st,ot=nt.scales;if(ot.length===0){const at=tt[nt.scalesInputIdx];if(at&&at.size!==0){if(tt[nt.sizesInputIdx])throw new Error("Only one of scales or sizes must be provided as input.");ot=_(at,nt.mode,nt.isResize)}else{const lt=tt[nt.sizesInputIdx];if(!lt||lt.size===0)throw new Error("Either scales or sizes MUST be provided as input.");st=Array.from(lt.integerData),ot=b(st,rt,nt.mode,nt.isResize)}}else if(tt[nt.sizesInputIdx])throw new Error("Only one of scales or sizes must be provided as input.");const it=st||rt.map((at,lt)=>Math.floor(at*ot[lt]));return[ot,it]},_=(tt,nt,rt)=>{const st=Array.from(tt.floatData);return(0,$.scalesValidation)(st,nt,rt),st},b=(tt,nt,rt,st)=>{const ot=nt.length,it=new Array(ot);for(let at=0,lt=ot;at<lt;at++)if(nt[at]===0){if(tt[at]!==0)throw new Error("Input dim is zero but required output dim is non-zero.");it[at]=1}else it[at]=tt[at]/nt[at];return(0,$.scalesValidation)(it,rt,st),it}},8117:(i,s,o)=>{Object.defineProperty(s,"__esModule",{value:!0}),s.shape=void 0;const a=o(9162);s.shape=(d,g)=>(c(g),[new a.Tensor([g[0].dims.length],"int32",void 0,void 0,new Int32Array(g[0].dims))]);const c=d=>{if(!d||d.length!==1)throw new Error("Shape requires 1 input.")}},2278:(i,s,o)=>{Object.defineProperty(s,"__esModule",{value:!0}),s.sliceV10=s.parseSliceAttributes=s.slice=void 0;const a=o(246),c=o(782),d=o(2517),g=o(2039),$={name:"Slice",inputNames:["A"],inputTypes:[g.TextureType.unpacked]};s.slice=(b,tt,nt)=>(_e(tt),[b.run(Object.assign(Object.assign({},$),{cacheHint:nt.cacheKey,get:()=>j(b,tt[0],nt)}),tt)]),s.parseSliceAttributes=b=>{const tt=b.attributes.getInts("starts"),nt=b.attributes.getInts("ends"),rt=b.attributes.getInts("axes",[]);return(0,a.createAttributeWithCacheKey)({starts:tt,ends:nt,axes:rt})};const j=(b,tt,nt)=>{const rt=nt.axes.length===0?tt.dims.slice(0).map((ct,dt)=>dt):nt.axes,st=d.ShapeUtil.normalizeAxes(rt,tt.dims.length),ot=nt.starts.map((ct,dt)=>ct>tt.dims[st[dt]]-1?tt.dims[st[dt]]:d.ShapeUtil.normalizeAxis(ct,tt.dims[st[dt]])),it=nt.ends.map((ct,dt)=>ct>tt.dims[st[dt]]-1?tt.dims[st[dt]]:d.ShapeUtil.normalizeAxis(ct,tt.dims[st[dt]])),at=tt.dims.slice(),lt=[];for(let ct=0;ct<st.length;ct++)at[st[ct]]=it[ct]-ot[ct],ot[ct]>0&&lt.push(`outputIdx[${st[ct]}] += ${ot[ct]};`);const ut=`
      float process(int outputIdx[${at.length}]) {
        ${lt.join(`
      `)}
        return _A(outputIdx);
      }`;return Object.assign(Object.assign({},$),{output:{dims:at,type:tt.type,textureType:g.TextureType.unpacked},shaderSource:ut})},_e=b=>{if(!b||b.length!==1)throw new Error("Slice requires 1 input.");if(c.NUMBER_TYPES.indexOf(b[0].type)===-1)throw new Error("Invalid input type.")};s.sliceV10=(b,tt)=>{_(tt);const nt=et(b,tt);return[b.run(Object.assign(Object.assign({},$),{cacheHint:nt.cacheKey,get:()=>j(b,tt[0],nt)}),[tt[0]])]};const et=(b,tt)=>{if(!b.session.isInitializer(tt[1].dataId)||!b.session.isInitializer(tt[2].dataId)||tt.length>=4&&!b.session.isInitializer(tt[3].dataId)||tt.length>=5&&!b.session.isInitializer(tt[4].dataId))throw new Error("dynamic slice attributes are not allowed");if(tt.length>=5&&tt[4].integerData.some(ot=>ot!==1))throw new Error("currently non-1 steps is not supported for Slice");const nt=Array.from(tt[1].integerData),rt=Array.from(tt[2].integerData),st=tt.length>=4?Array.from(tt[3].integerData):[];return{starts:nt,ends:rt,axes:st,cacheKey:`${st};${nt};${rt}`}},_=b=>{if(!b||b.length<3||b.length>5)throw new Error("Invalid input number.");if(b[1].type!=="int32"||b[1].dims.length!==1)throw new Error("Invalid input type.");if(b[2].type!=="int32"||b[2].dims.length!==1)throw new Error("Invalid input type.");if(b.length>=4&&(b[3].type!=="int32"||b[3].dims.length!==1))throw new Error("Invalid input type.");if(b.length>=5&&(b[4].type!=="int32"||b[4].dims.length!==1))throw new Error("Invalid input type.")}},5524:(i,s,o)=>{Object.defineProperty(s,"__esModule",{value:!0}),s.softmaxV13=s.parseSoftmaxAttributesV13=s.parseSoftmaxAttributes=s.softmax=void 0;const a=o(246),c=o(2517),d=o(5060),g=o(2039),$=o(3738),j={name:"SoftmaxComputeMax",inputNames:["A"],inputTypes:[g.TextureType.unpacked]},_e={name:"SoftmaxComputeScale",inputNames:["A","Max"],inputTypes:[g.TextureType.unpacked,g.TextureType.unpacked]},et={name:"SoftMax",inputNames:["A","Max","Norm"],inputTypes:[g.TextureType.unpacked,g.TextureType.unpacked,g.TextureType.unpacked]};s.softmax=(st,ot,it)=>{rt(ot);const at=ot[0].dims.slice(),lt=c.ShapeUtil.normalizeAxis(it.axis,at.length),ut=c.ShapeUtil.sizeToDimension(at,lt),ct=c.ShapeUtil.sizeFromDimension(at,lt);return _(st,ot,it,ut,ct)},s.parseSoftmaxAttributes=st=>(0,a.createAttributeWithCacheKey)({axis:st.attributes.getInt("axis",1)}),s.parseSoftmaxAttributesV13=st=>(0,a.createAttributeWithCacheKey)({axis:st.attributes.getInt("axis",-1)}),s.softmaxV13=(st,ot,it)=>{rt(ot);const at=ot[0].dims.slice(),lt=c.ShapeUtil.normalizeAxis(it.axis,at.length),ut=at.length,ct=lt!==ut-1,dt=[];let pt,ht=[],ft=[];ct&&(ht=Array.from({length:ut}).map((bt,xt)=>xt),ht[lt]=ut-1,ht[ut-1]=lt,ht.map(bt=>dt.push(at[bt])),pt=(0,a.createAttributeWithCacheKey)({perm:ht}),ft=(0,$.transpose)(st,ot,pt));const yt=ct?c.ShapeUtil.sizeToDimension(dt,ut-1):c.ShapeUtil.sizeToDimension(at,ut-1),wt=ct?c.ShapeUtil.sizeFromDimension(dt,ut-1):c.ShapeUtil.sizeFromDimension(at,ut-1),_t=_(st,ct?ft:ot,it,yt,wt);return ct?(0,$.transpose)(st,_t,pt):_t};const _=(st,ot,it,at,lt)=>{const ut=b(st,ot[0],at,lt,[at]),ct=st.run(Object.assign(Object.assign({},j),{cacheHint:it.cacheKey,get:()=>ut}),ot),dt=tt(st,ot[0],at,lt,ut.output.dims,[at]),pt=st.run(Object.assign(Object.assign({},_e),{cacheHint:it.cacheKey,get:()=>dt}),[ot[0],ct]),ht=nt(st,ot[0],at,lt,ut.output.dims,dt.output.dims);return[st.run(Object.assign(Object.assign({},et),{cacheHint:it.cacheKey,get:()=>ht}),[ot[0],ct,pt])]},b=(st,ot,it,at,lt)=>{const[ut,ct]=st.calculateTextureWidthAndHeight(ot.dims,g.TextureType.unpacked),dt=lt.length;if(it<1||at<1)throw new Error("Logical row count N and feature count D must be greater than or equal to 1");if(lt.length!==1)throw new Error("Dimensionality of the output should be 1");if(lt[0]!==it)throw new Error("Shape of the output should be equal to logical row count");const pt=(0,d.getGlsl)(st.session.backend.glContext.version),ht=`
      float process(int[${dt}] indices) {
        int logical_row_start_offset = indices[0] * ${at};

        float max = getColorAsFloat(${pt.texture2D}(A, offsetToCoords(logical_row_start_offset, ${ut},
        ${ct} )));
        for(int i=1; i<${at}; ++i)
        {
          float current = getColorAsFloat(${pt.texture2D}(A, offsetToCoords(logical_row_start_offset + i,
            ${ut}, ${ct})));
          if(current > max)
          max = current;
        }

        return max;
      }`;return Object.assign(Object.assign({},j),{output:{dims:lt,type:ot.type,textureType:g.TextureType.unpacked},shaderSource:ht})},tt=(st,ot,it,at,lt,ut)=>{const[ct,dt]=st.calculateTextureWidthAndHeight(ot.dims,g.TextureType.unpacked),pt=ut.length;if(it<1||at<1)throw new Error("Logical row count N and feature count D must be greater than or equal to 1");if(ut.length!==1)throw new Error("Dimensionality of the output should be 1");if(ut[0]!==it)throw new Error("Shape of the output should be equal to logical row count");if(lt.length!==1)throw new Error("Dimensionality of the intermediate results should be 1");if(lt[0]!==it)throw new Error("Shape of the intermediate results should be equal to logical row count");const ht=`
      float process(int[${pt}] indices) {
        int logical_row_start_offset = indices[0] * ${at};

        float norm_factor = 0.0;
        float max = _Max(indices);
        for(int i=0; i<${at}; ++i)
        {
          norm_factor += exp(getColorAsFloat(${(0,d.getGlsl)(st.session.backend.glContext.version).texture2D}(A, offsetToCoords(logical_row_start_offset + i,
            ${ct}, ${dt}))) - max);
        }

        return norm_factor;
      }`;return Object.assign(Object.assign({},_e),{output:{dims:ut,type:ot.type,textureType:g.TextureType.unpacked},shaderSource:ht})},nt=(st,ot,it,at,lt,ut)=>{const[ct,dt]=st.calculateTextureWidthAndHeight(ot.dims,g.TextureType.unpacked),pt=ot.dims.length;if(it<1||at<1)throw new Error("Logical row count N and feature count D must be greater than or equal to 1");if(lt.length!==1||ut.length!==1)throw new Error("Dimensionality of the intermediate results should be 1");if(lt[0]!==it||ut[0]!==it)throw new Error("Shape of the intermediate results should be equal to logical row count");const ht=`
      float process(int[${pt}] indices) {

      // get offset of current logical tensor index from the 2-D texture coordinates (TexCoords)
      int offset = coordsToOffset(TexCoords, ${ct}, ${dt});

      //determine the logical row for this index
      int logical_row_index[1];
      logical_row_index[0] = offset / ${at};

      float norm_factor = _Norm(logical_row_index);

      // avoid possible division by 0
      // if norm_facor is 0, all elements are zero
      // if so, return 0
      if(norm_factor == 0.0)
        return 0.0;

      return exp(_A(indices) - _Max(logical_row_index)) / norm_factor;
    }`;return Object.assign(Object.assign({},et),{output:{dims:ot.dims,type:ot.type,textureType:g.TextureType.unpacked},shaderSource:ht})},rt=st=>{if(!st||st.length!==1)throw new Error("Softmax requires 1 input.");if(st[0].type!=="float32"&&st[0].type!=="float64")throw new Error("Invalid input type")}},5975:(i,s,o)=>{Object.defineProperty(s,"__esModule",{value:!0}),s.parseSplitAttributes=s.split=void 0;const a=o(246),c=o(2517),d=o(2039),g={name:"Split",inputNames:["A"],inputTypes:[d.TextureType.unpacked]};s.split=(et,_,b)=>{_e(_);const tt=c.ShapeUtil.normalizeAxis(b.axis,_[0].dims.length),nt=$(et,_,tt,b),rt=[];for(let st=0;st<nt;++st)rt.push(et.run(Object.assign(Object.assign({},g),{cacheHint:`${b.cacheKey};${st}`,get:()=>j(et,_[0],b,tt,st)}),_));return rt},s.parseSplitAttributes=et=>{const _=et.attributes.getInt("axis",0),b=et.attributes.getInts("split",[]),tt=et.outputs.length;return(0,a.createAttributeWithCacheKey)({axis:_,split:b,numOutputs:tt})};const $=(et,_,b,tt)=>{const[,nt]=c.SplitUtil.splitShape(_[0].dims,b,tt.split,tt.numOutputs);return nt.length},j=(et,_,b,tt,nt)=>{const[rt,st]=c.SplitUtil.splitShape(_.dims,tt,b.split,b.numOutputs),ot=st[nt],it=rt[nt],at=`
      float process(int indices[${it.length}]) {
        indices[${tt}] += ${ot};
        return _A(indices);
      }
    `;return Object.assign(Object.assign({},g),{cacheHint:`${b.cacheKey}:${nt}`,output:{dims:it,type:_.type,textureType:d.TextureType.unpacked},shaderSource:at})},_e=et=>{if(!et||et.length!==1)throw new Error("Split requires one input.");if(et[0].type!=="int8"&&et[0].type!=="uint8"&&et[0].type!=="int16"&&et[0].type!=="uint16"&&et[0].type!=="int32"&&et[0].type!=="uint32"&&et[0].type!=="float32"&&et[0].type!=="float64"&&et[0].type!=="bool")throw new Error("Invalid input type.")}},3933:(i,s,o)=>{Object.defineProperty(s,"__esModule",{value:!0}),s.parseSqueezeAttributes=s.squeezeV13=s.squeeze=void 0;const a=o(2517);s.squeeze=(g,$,j)=>{c($);const _e=a.ShapeUtil.squeezeShape($[0].dims,j);return[g.reshapeUnpacked($[0],_e)]},s.squeezeV13=(g,$)=>(d($),(0,s.squeeze)(g,[$[0]],Array.from($[1].integerData))),s.parseSqueezeAttributes=g=>g.attributes.getInts("axes");const c=g=>{if(!g||g.length!==1)throw new Error("Squeeze requires 1 input.");if(g[0].type==="string")throw new Error("invalid input tensor types.")},d=g=>{if(!g||g.length!==2)throw new Error("Squeeze requires 2 inputs.");if(g[1].type!=="int32")throw new Error("Invalid input type.")}},6558:(i,s,o)=>{Object.defineProperty(s,"__esModule",{value:!0}),s.sum=void 0;const a=o(5060),c=o(2039);s.sum=($,j)=>{g(j);const _e={name:"Sum",inputNames:j.map((et,_)=>`X${_}`),inputTypes:new Array(j.length).fill(c.TextureType.unpacked)};return[$.run(Object.assign(Object.assign({},_e),{get:()=>d($,j,_e)}),j)]};const d=($,j,_e)=>{const et=(0,a.getGlsl)($.session.backend.glContext.version),_=j[0].dims.slice(),b=`
      void main() {
        vec4 result = ${j.map((tt,nt)=>`${et.texture2D}(X${nt},TexCoords)`).join(" + ")};
        ${et.output} = result;
      }
    `;return Object.assign(Object.assign({},_e),{output:{dims:_,type:j[0].type,textureType:c.TextureType.unpacked},hasMain:!0,shaderSource:b})},g=$=>{if(!$||$.length===0)throw new Error("Sum requires inputs.");const j=$[0].dims.length;for(let _e=1;_e<$.length;_e++){if(j!==$[_e].dims.length)throw new Error("Input shapes are mismatched.");for(let et=0;et<j;et++)if($[0].dims[et]!==$[_e].dims[et])throw new Error("Input shapes are not matched.")}if($[0].type!=="float32"&&$[0].type!=="float64")throw new Error("Invalid input type.");for(let _e=1;_e<$.length;_e++)if($[0].type!==$[_e].type)throw new Error("Input types are not matched.")}},5723:(i,s,o)=>{Object.defineProperty(s,"__esModule",{value:!0}),s.tile=void 0;const a=o(782),c=o(2039);s.tile=($,j)=>{g(j);const _e={name:"Tile",inputNames:["A"],inputTypes:[c.TextureType.unpacked]};return[$.run(Object.assign(Object.assign({},_e),{get:()=>d($,j,_e)}),j)]};const d=($,j,_e)=>{const et=j[0].dims.slice(),_=new Array(et.length),b=[];for(let rt=0;rt<et.length;rt++)_[rt]=et[rt]*j[1].numberData[rt],b.push(`inputIdx[${rt}] = int(mod(float(outputIdx[${rt}]), ${et[rt]}.));`);const tt=_.length,nt=`
      float process(int outputIdx[${tt}]) {
        int inputIdx[${tt}];
        ${b.join(`
`)}
        return _A(inputIdx);
      }
    `;return Object.assign(Object.assign({},_e),{output:{dims:_,type:j[0].type,textureType:c.TextureType.unpacked},shaderSource:nt})},g=$=>{if(!$||$.length!==2)throw new Error("Tile requires 2 input.");if($[1].dims.length!==1)throw new Error("The second input shape must 1 dimension.");if($[1].dims[0]!==$[0].dims.length)throw new Error("Invalid input shape.");if(a.NUMBER_TYPES.indexOf($[0].type)===-1)throw new Error("Invalid input type.");if($[1].type!=="int32"&&$[1].type!=="int16")throw new Error("Invalid repeat type.")}},3738:(i,s,o)=>{Object.defineProperty(s,"__esModule",{value:!0}),s.parseTransposeAttributes=s.transpose=void 0;const a=o(246),c=o(2517),d=o(2039),g={name:"Transpose",inputNames:["A"],inputTypes:[d.TextureType.unpacked]};s.transpose=(b,tt,nt)=>(_(tt),[b.run(Object.assign(Object.assign({},g),{cacheHint:nt.cacheKey,get:()=>$(b,tt[0],nt.perm)}),tt)]),s.parseTransposeAttributes=b=>(0,a.createAttributeWithCacheKey)({perm:b.attributes.getInts("perm",[])});const $=(b,tt,nt)=>{const rt=tt.dims;nt=j(rt,nt);const st=_e(rt,nt),ot=rt.length,it=`
      ${et("perm",nt,ot)}
      float process(int indices[${ot}]) {
        int a[${ot}];
        perm(a, indices);
        return _A(a);
      }`;return Object.assign(Object.assign({},g),{output:{dims:st,type:tt.type,textureType:d.TextureType.unpacked},shaderSource:it})},j=(b,tt)=>(tt&&tt.length!==b.length&&(tt=[...b.keys()].reverse()),tt),_e=(b,tt)=>(tt=j(b,tt),c.ShapeUtil.sortBasedOnPerm(b,tt)),et=(b,tt,nt)=>{const rt=[];rt.push(`void ${b}(out int a[${nt}], int src[${nt}]) {`);for(let st=0;st<nt;++st)rt.push(`	a[${tt[st]}]=src[${st}];`);return rt.push("	}"),rt.join(`
`)},_=b=>{if(!b||b.length!==1)throw new Error("Transpose requires 1 input.");if(b[0].type!=="float32"&&b[0].type!=="float64")throw new Error("input should be float tensor")}},8710:(i,s,o)=>{Object.defineProperty(s,"__esModule",{value:!0}),s.encodeAsUint8=void 0;const a=o(5060),c=o(2039);s.encodeAsUint8=(d,g)=>{const $=g.shape,j=(0,a.getGlsl)(d.session.backend.glContext.version),_e=`
    const float FLOAT_MAX = 1.70141184e38;
    const float FLOAT_MIN = 1.17549435e-38;

    bool isNaN(float val) {
      return (val < 1.0 || 0.0 < val || val == 0.0) ? false : true;
    }

    highp vec4 encodeAsUint8(highp float v) {
      if (isNaN(v)) {
        return vec4(255, 255, 255, 255);
      }

      highp float av = abs(v);

      if(av < FLOAT_MIN) {
        return vec4(0.0, 0.0, 0.0, 0.0);
      } else if(v > FLOAT_MAX) {
        return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;
      } else if(v < -FLOAT_MAX) {
        return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;
      }

      highp vec4 c = vec4(0,0,0,0);

      highp float e = floor(log2(av));
      highp float m = exp2(fract(log2(av))) - 1.0;

      c[2] = floor(128.0 * m);
      m -= c[2] / 128.0;
      c[1] = floor(32768.0 * m);
      m -= c[1] / 32768.0;
      c[0] = floor(8388608.0 * m);

      highp float ebias = e + 127.0;
      c[3] = floor(ebias / 2.0);
      ebias -= c[3] * 2.0;
      c[2] += floor(ebias) * 128.0;

      c[3] += 128.0 * step(0.0, -v);

      return c / 255.0;
    }

    void main() {
      float value = ${j.texture2D}(X,TexCoords).r;
      ${j.output} = encodeAsUint8(value);
    }`,et={name:"Uint8Encode",inputTypes:[c.TextureType.unpacked],inputNames:["X"],output:{dims:$,type:g.tensor.type,textureType:c.TextureType.downloadUint8AsFloat},shaderSource:_e,hasMain:!0};return d.executeProgram(et,[g.tensor])}},4909:(i,s,o)=>{Object.defineProperty(s,"__esModule",{value:!0}),s.tanh=s.tan=s.sqrt=s.sin=s.sigmoid=s.relu=s.not=s.neg=s.log=s.parseLeakyReluAttributes=s.leakyRelu=s.identity=s.floor=s.exp=s.parseEluAttributes=s.elu=s.cos=s.ceil=s.clipV11=s.parseClipAttributes=s.clip=s.atan=s.asin=s.acos=s.abs=s.glslTanh=s.glslTan=s.glslSqrt=s.glslSigmoid=s.glslRelu=s.glslSin=s.glslNot=s.glslNeg=s.glslLog=s.glslLeakyRelu=s.glslIdentity=s.glslClip=s.glslFloor=s.glslExp=s.glslElu=s.glslCos=s.glslCeil=s.glslAtan=s.glslAsin=s.glslAcos=s.glslAbs=void 0;const a=o(246),c=o(2517),d=o(8520),g=o(5060),$=o(2039);function j(){return _t("abs")}function _e(){return _t("acos")}function et(){return _t("asin")}function _(){return _t("atan")}function b(){return _t("ceil")}function tt(){return _t("cos")}function nt(mt){const vt="elu";return{body:`
  const float alpha = float(${mt});

  float ${vt}_(float a) {
    return a >= 0.0 ? a: (exp(a) - 1.0) * alpha;
  }
  vec4 ${vt}_(vec4 v) {
    return vec4(${vt}_(v.x), ${vt}_(v.y), ${vt}_(v.z), ${vt}_(v.w));
  }
  `,name:vt,type:d.FunctionType.ValueBased}}function rt(){return _t("exp")}function st(){return _t("floor")}function ot(mt,vt){const Et="clip";return{body:`
  const float min = float(${mt});
  const float max = float(${vt});

  float ${Et}_(float a) {
    return clamp(a, min, max);
  }
  vec4 ${Et}_(vec4 v) {
    return clamp(v, min, max);
  }
  `,name:Et,type:d.FunctionType.ValueBased}}function it(){const mt="indentity";return{body:`
  float ${mt}_(float a) {
    return a;
  }
  vec4 ${mt}_(vec4 v) {
    return v;
  }
  `,name:mt,type:d.FunctionType.ValueBased}}function at(mt){const vt="leakyRelu";return{body:`
  const float alpha = float(${mt});

  float ${vt}_(float a) {
    return a < 0.0 ? a * alpha : a;
  }
  vec4 ${vt}_(vec4 v) {
    return vec4(${vt}_(v.x), ${vt}_(v.y), ${vt}_(v.z), ${vt}_(v.w));
  }
  `,name:vt,type:d.FunctionType.ValueBased}}function lt(){return _t("log")}function ut(){const mt="neg";return{body:`
  float ${mt}_(float a) {
    return -a;
  }
  vec4 ${mt}_(vec4 v) {
    return -v;
  }
  `,name:mt,type:d.FunctionType.ValueBased}}function ct(){const mt="not";return{body:`
  float ${mt}_(float a) {
    return float( ! bool(a) );
  }
  bool ${mt}_(bool a) {
    return !a;
  }
  vec4 ${mt}_(vec4 v) {
    return vec4(!bool(v.x), !bool(v.y), !bool(v.z), !bool(v.w));
  }
  bvec4 ${mt}_(bvec4 v) {
    return bvec4(!v.x, !v.y, !v.z, !v.w);
  }
  `,name:mt,type:d.FunctionType.ValueBased}}function dt(){return _t("sin")}function pt(){const mt="relu";return{body:`
  float ${mt}_(float a) {
    return max( a, 0.0 );
  }
  vec4 ${mt}_(vec4 v) {
    return max( v, 0.0 );
  }
  `,name:mt,type:d.FunctionType.ValueBased}}function ht(){const mt="sigmoid";return{body:`
  float ${mt}_(float a) {
    return 1.0 / (1.0 + exp(-a));
  }
  vec4 ${mt}_(vec4 v) {
    return 1.0 / (1.0 + exp(-v));
  }
  `,name:mt,type:d.FunctionType.ValueBased}}function ft(){return _t("sqrt")}function yt(){return _t("tan")}function wt(){const mt="tanh";return{body:`
  float ${mt}_(float a) {
    a = clamp(a, -10., 10.);
    a = exp(2.*a);
    return (a - 1.) / (a + 1.);
  }
  vec4 ${mt}_(vec4 v) {
    v = clamp(v, -10., 10.);
    v = exp(2.*v);
    return (v - 1.) / (v + 1.);
  }
  `,name:mt,type:d.FunctionType.ValueBased}}function _t(mt){return{body:`
  float ${mt}_(float a) {
    return ${mt}(a);
  }
  vec4 ${mt}_(vec4 v) {
    return ${mt}(v);
  }
  `,name:mt,type:d.FunctionType.ValueBased}}s.glslAbs=j,s.glslAcos=_e,s.glslAsin=et,s.glslAtan=_,s.glslCeil=b,s.glslCos=tt,s.glslElu=nt,s.glslExp=rt,s.glslFloor=st,s.glslClip=ot,s.glslIdentity=it,s.glslLeakyRelu=at,s.glslLog=lt,s.glslNeg=ut,s.glslNot=ct,s.glslSin=dt,s.glslRelu=pt,s.glslSigmoid=ht,s.glslSqrt=ft,s.glslTan=yt,s.glslTanh=wt;const bt=(mt,vt,Et,Ct)=>{const kt=mt.session.pack?$.TextureType.packed:$.TextureType.unpacked,Nt={name:Et.name,inputTypes:[kt],inputNames:["A"],cacheHint:Ct};return Object.assign(Object.assign({},Nt),{get:()=>((Mt,Vt,Gt,Ft)=>{const jt=Mt.session.pack?$.TextureType.packed:$.TextureType.unpacked,qt=(0,g.getGlsl)(Mt.session.backend.glContext.version);return Object.assign(Object.assign({},Vt),{output:{dims:Gt.dims,type:Gt.type,textureType:jt},shaderSource:`
     ${Ft.body}
     void main() {
       vec4 v = ${qt.texture2D}(A, TexCoords);
       v = ${Ft.name}_(v);
       ${qt.output} = v;
     }
     `,hasMain:!0})})(mt,Nt,vt,Et)})};s.abs=(mt,vt)=>[mt.run(bt(mt,vt[0],j()),vt)],s.acos=(mt,vt)=>[mt.run(bt(mt,vt[0],_e()),vt)],s.asin=(mt,vt)=>[mt.run(bt(mt,vt[0],et()),vt)],s.atan=(mt,vt)=>[mt.run(bt(mt,vt[0],_()),vt)],s.clip=(mt,vt,Et)=>[mt.run(bt(mt,vt[0],ot(Et.min,Et.max),Et.cacheKey),vt)],s.parseClipAttributes=mt=>(0,a.createAttributeWithCacheKey)({min:mt.attributes.getFloat("min",c.MIN_CLIP),max:mt.attributes.getFloat("max",c.MAX_CLIP)}),s.clipV11=(mt,vt)=>{const Et=xt(mt,vt);return(0,s.clip)(mt,[vt[0]],Et)};const xt=(mt,vt)=>{if(vt.length>=3&&(!mt.session.isInitializer(vt[1].dataId)||!mt.session.isInitializer(vt[2].dataId)))throw new Error("dynamic clip attributes are not allowed");const Et=vt.length>=3?vt[1].numberData[0]:c.MIN_CLIP,Ct=vt.length>=3?vt[2].numberData[0]:c.MAX_CLIP;return(0,a.createAttributeWithCacheKey)({min:Et,max:Ct})};s.ceil=(mt,vt)=>[mt.run(bt(mt,vt[0],b()),vt)],s.cos=(mt,vt)=>[mt.run(bt(mt,vt[0],tt()),vt)],s.elu=(mt,vt,Et)=>[mt.run(bt(mt,vt[0],nt(Et.alpha),Et.cacheKey),vt)],s.parseEluAttributes=mt=>(0,a.createAttributeWithCacheKey)({alpha:mt.attributes.getFloat("alpha",1)}),s.exp=(mt,vt)=>[mt.run(bt(mt,vt[0],rt()),vt)],s.floor=(mt,vt)=>[mt.run(bt(mt,vt[0],st()),vt)],s.identity=(mt,vt)=>[mt.run(bt(mt,vt[0],it()),vt)],s.leakyRelu=(mt,vt,Et)=>[mt.run(bt(mt,vt[0],at(Et.alpha),Et.cacheKey),vt)],s.parseLeakyReluAttributes=mt=>(0,a.createAttributeWithCacheKey)({alpha:mt.attributes.getFloat("alpha",.01)}),s.log=(mt,vt)=>[mt.run(bt(mt,vt[0],lt()),vt)],s.neg=(mt,vt)=>[mt.run(bt(mt,vt[0],ut()),vt)],s.not=(mt,vt)=>[mt.run(bt(mt,vt[0],ct()),vt)],s.relu=(mt,vt)=>[mt.run(bt(mt,vt[0],pt()),vt)],s.sigmoid=(mt,vt)=>[mt.run(bt(mt,vt[0],ht()),vt)],s.sin=(mt,vt)=>[mt.run(bt(mt,vt[0],dt()),vt)],s.sqrt=(mt,vt)=>[mt.run(bt(mt,vt[0],ft()),vt)],s.tan=(mt,vt)=>[mt.run(bt(mt,vt[0],yt()),vt)],s.tanh=(mt,vt)=>[mt.run(bt(mt,vt[0],wt()),vt)]},5611:(i,s,o)=>{Object.defineProperty(s,"__esModule",{value:!0}),s.createUnpackProgramInfoLoader=s.createUnpackProgramInfo=void 0;const a=o(5060),c=o(2039),d=o(9390),g=o(2827),$={name:"unpack",inputNames:["A"],inputTypes:[c.TextureType.packed]};s.createUnpackProgramInfo=(j,_e)=>{const et=_e.dims.length,_=(0,g.getChannels)("rc",et),b=_.slice(-2),tt=(0,d.getCoordsDataType)(et),nt=(0,g.unpackFromChannel)(),rt=_e.dims.length===0?"":function(it,at){if(it===1)return"rc";let lt="";for(let ut=0;ut<it;ut++)lt+=at[ut],ut<it-1&&(lt+=",");return lt}(et,_),st=et<=1?"rc":`vec2(${b.join(",")})`,ot=`
    ${nt}
    void main() {
      ${tt} rc = getOutputCoords();

       // Sample the texture with the coords to get the rgba channel value.
       vec4 packedInput = getA(${rt});

       ${(0,a.getGlsl)(j.session.backend.glContext.version).output} = vec4(getChannel(packedInput, ${st}), 0, 0, 0);
     }
   `;return Object.assign(Object.assign({},$),{hasMain:!0,output:{dims:_e.dims,type:_e.type,textureType:c.TextureType.unpacked},shaderSource:ot})},s.createUnpackProgramInfoLoader=(j,_e)=>Object.assign(Object.assign({},$),{get:()=>(0,s.createUnpackProgramInfo)(j,_e)})},8428:(i,s,o)=>{Object.defineProperty(s,"__esModule",{value:!0}),s.parseUnsqueezeAttributes=s.unsqueezeV13=s.unsqueeze=void 0;const a=o(2517);s.unsqueeze=(g,$,j)=>{c($);const _e=a.ShapeUtil.unsqueezeShape($[0].dims,j);return[g.reshapeUnpacked($[0],_e)]},s.unsqueezeV13=(g,$)=>(d($),(0,s.unsqueeze)(g,[$[0]],Array.from($[1].integerData))),s.parseUnsqueezeAttributes=g=>g.attributes.getInts("axes");const c=g=>{if(!g||g.length!==1)throw new Error("Unsqueeze requires 1 input.");if(g[0].type==="string")throw new Error("invalid input tensor types.")},d=g=>{if(!g||g.length!==2)throw new Error("Unsqueeze requires 2 inputs.");if(g[1].type!=="int32")throw new Error("Invalid input type.")}},9793:(i,s,o)=>{Object.defineProperty(s,"__esModule",{value:!0}),s.scalesValidation=s.validateInputs=s.parseUpsampleAttributes=s.parseUpsampleAttributesV9=s.parseUpsampleAttributesV7=s.upsample=void 0;const a=o(246),c=o(5060),d=o(2039),g={name:"Upsample",inputNames:["X"],inputTypes:[d.TextureType.unpacked]};s.upsample=(j,_e,et)=>((0,s.validateInputs)(_e,et),[j.run(Object.assign(Object.assign({},g),{cacheHint:et.cacheKey,get:()=>$(j,_e,et)}),_e)]),s.parseUpsampleAttributesV7=j=>(0,s.parseUpsampleAttributes)(j,7),s.parseUpsampleAttributesV9=j=>(0,s.parseUpsampleAttributes)(j,9),s.parseUpsampleAttributes=(j,_e)=>{const et=_e>=10,_=j.attributes.getString("mode","nearest");if(_!=="nearest"&&_!=="linear"&&(_e<11||_!=="cubic"))throw new Error(`unrecognized mode: ${_}`);let b=[];_e<9&&(b=j.attributes.getFloats("scales"),(0,s.scalesValidation)(b,_,et));const tt=j.attributes.getFloat("extrapolation_value",0),nt=_e>10?j.attributes.getString("coordinate_transformation_mode","half_pixel"):"asymmetric";if(["asymmetric","pytorch_half_pixel","tf_half_pixel_for_nn","align_corners","tf_crop_and_resize","half_pixel"].indexOf(nt)===-1)throw new Error(`coordinate_transform_mode '${nt}' is not supported`);const rt=nt==="tf_crop_and_resize",st=rt,ot=_==="nearest"&&_e>=11?j.attributes.getString("nearest_mode","round_prefer_floor"):"";if(["round_prefer_floor","round_prefer_ceil","floor","ceil",""].indexOf(ot)===-1)throw new Error(`nearest_mode '${ot}' is not supported`);const it=j.attributes.getFloat("cubic_coeff_a",-.75),at=j.attributes.getInt("exclude_outside",0)!==0;if(at&&_!=="cubic")throw new Error("exclude_outside can be set to 1 only when mode is CUBIC.");const lt=_e<11||_==="nearest"&&nt==="asymmetric"&&ot==="floor";let ut=0,ct=0,dt=0;return _e>10?j.inputs.length>2?(ut=1,ct=2,dt=3):(ct=1,dt=2):_e===9&&(ct=1),(0,a.createAttributeWithCacheKey)({opset:_e,isResize:et,mode:_,scales:b,extrapolationValue:tt,coordinateTransformMode:nt,useExtrapolation:st,needRoiInput:rt,nearestMode:ot,cubicCoefficientA:it,excludeOutside:at,useNearest2xOptimization:lt,roiInputIdx:ut,scalesInputIdx:ct,sizesInputIdx:dt})};const $=(j,_e,et)=>{const _=(0,c.getGlsl)(j.session.backend.glContext.version),[b,tt]=j.calculateTextureWidthAndHeight(_e[0].dims,d.TextureType.unpacked),nt=_e[0].dims.map((dt,pt)=>Math.floor(dt*et.scales[pt])),[rt,st]=j.calculateTextureWidthAndHeight(nt,d.TextureType.unpacked),ot=nt.length,it=new Array(ot),at=new Array(ot);let lt=`
      int output_pitches[${ot}];
      int input_pitches[${ot}];
      `;for(let dt=ot-1;dt>=0;dt--)it[dt]=dt===ot-1?1:it[dt+1]*nt[dt+1],at[dt]=dt===ot-1?1:at[dt+1]*_e[0].dims[dt+1],lt+=`
        output_pitches[${dt}] = ${it[dt]};
        input_pitches[${dt}] = ${at[dt]};
        `;const ut=`
      float getInputFloat(int index) {
        vec2 coords = offsetToCoords(index, ${b}, ${tt});
        float value = getColorAsFloat(${_.texture2D}(X, coords));
        return value;
      }
      `,ct=et.mode==="nearest"?`
    ${ut}
    float process(int indices[${ot}]) {
      int input_index = 0;
      int output_index = coordsToOffset(TexCoords, ${rt}, ${st});

      ${lt}

      int d, m;
      for (int dim = 0; dim < ${ot}; ++dim) {
        d = output_index / output_pitches[dim];
        m = output_index - d * output_pitches[dim];
        output_index = m;

        if (scales[dim] != 1 && d > 0) {
          int d2 = d / scales[dim];
          m = d - d2 * scales[dim];
          d = d2;
        }
        input_index += input_pitches[dim] * d;
      }

      return getInputFloat(input_index);
    }`:ot===4?`
    ${ut}
    float process(int indices[4]) {
      int input_index = 0;
      int output_index = coordsToOffset(TexCoords, ${rt}, ${st});

      ${lt}

      int m;
      int index_of_dim0, index_of_dim1, index_of_dim2, index_of_dim3;
      index_of_dim0 = output_index / output_pitches[0];
      m = output_index - index_of_dim0 * output_pitches[0];
      index_of_dim1 = m / output_pitches[1];
      m = m - index_of_dim1 * output_pitches[1];
      index_of_dim2 = m / output_pitches[2];
      m = m - index_of_dim2 * output_pitches[2];
      index_of_dim3 = m;

      int index_of_input_dim2, index_of_input_dim3, x_offset, y_offset;
      index_of_input_dim2 = index_of_dim2 / scales[2];
      y_offset = index_of_dim2 - index_of_input_dim2 * scales[2];
      index_of_input_dim3 = index_of_dim3 / scales[3];
      x_offset = index_of_dim3 - index_of_input_dim3 * scales[3];

      input_index = index_of_dim0 * input_pitches[0] +
            index_of_dim1 * input_pitches[1] +
            index_of_input_dim2 * input_pitches[2] +
            index_of_input_dim3;

      float x00 = getInputFloat(input_index);
      float x10, x01, x11;

      bool end_of_dim2 = false;
      if (index_of_input_dim2 == (${_e[0].dims[2]} - 1)) {
        // It's the end in dimension 2
        x01 = x00;
        end_of_dim2 = true;
      } else {
        x01 = getInputFloat(input_index + input_pitches[2]);
      }

      if (index_of_input_dim3 == (input_pitches[2] - 1)) {
        // It's the end in dimension 3
        x10 = x00;
        x11 = x01;
      }
      else {
        x10 = getInputFloat(input_index + 1);
        x11 = end_of_dim2 ? x10 : getInputFloat(input_index + input_pitches[2] + 1);
      }

      float y0 = x00 + float(y_offset) * (x01 - x00) / float(scales[2]);
      float y1 = x10 + float(y_offset) * (x11 - x10) / float(scales[2]);
      return y0 + float(x_offset) * (y1 - y0) / float(scales[3]);
    }`:`
    ${ut}
    float process(int indices[2]) {
      int input_index = 0;
      int output_index = coordsToOffset(TexCoords, ${rt}, ${st});

      ${lt}

      int m;
      int index_of_dim0, index_of_dim1;
      index_of_dim0 = output_index / output_pitches[0];
      m = output_index - index_of_dim0 * output_pitches[0];
      index_of_dim1 = m;

      int index_of_input_dim0, index_of_input_dim1, x_offset, y_offset;
      index_of_input_dim0 = index_of_dim0 / scales[0];
      y_offset = index_of_dim0 - index_of_input_dim0 * scales[0];
      index_of_input_dim1 = index_of_dim1 / scales[1];
      x_offset = index_of_dim1 - index_of_input_dim1 * scales[1];

      input_index = index_of_input_dim0 * input_pitches[0] + index_of_input_dim1;

      float x00 = getInputFloat(input_index);
      float x10, x01, x11;

      bool end_of_dim0 = false;
      if (index_of_input_dim0 == (${_e[0].dims[0]} - 1)) {
        // It's the end in dimension 0
        x01 = x00;
        end_of_dim0 = true;
      } else {
        x01 = getInputFloat(input_index + input_pitches[0]);
      }

      if (index_of_input_dim1 == (input_pitches[0] - 1)) {
        // It's the end in dimension 1
        x10 = x00;
        x11 = x01;
      }
      else {
        x10 = getInputFloat(input_index + 1);
        x11 = end_of_dim0 ? x10 : getInputFloat(input_index + input_pitches[0] + 1);
      }

      float y0 = x00 + float(y_offset) * (x01 - x00) / float(scales[0]);
      float y1 = x10 + float(y_offset) * (x11 - x10) / float(scales[0]);
      return y0 + float(x_offset) * (y1 - y0) / float(scales[1]);
    }`;return Object.assign(Object.assign({},g),{output:{dims:nt,type:_e[0].type,textureType:d.TextureType.unpacked},shaderSource:ct,variables:[{name:"scales",type:"int",arrayLength:et.scales.length,data:et.scales.map(dt=>Math.ceil(dt))}]})};s.validateInputs=(j,_e)=>{if(!j||_e.opset<9&&j.length!==1||_e.opset>=9&&_e.opset<11&&j.length!==2||_e.opset>=11&&j.length<2)throw new Error("invalid inputs.");if(_e.scales.length>0&&j[0].dims.length!==_e.scales.length)throw new Error("Invalid input shape.");if(j[0].type==="string")throw new Error("Invalid input tensor types.")},s.scalesValidation=(j,_e,et)=>{if(et){for(const _ of j)if(_<=0)throw new Error("Scale value should be greater than 0.")}else for(const _ of j)if(_<1)throw new Error("Scale value should be greater than or equal to 1.");if(!(_e!=="linear"&&_e!=="cubic"||j.length===2||j.length===4&&j[0]===1&&j[1]===1))throw new Error(`'Linear' mode and 'Cubic' mode only support 2-D inputs ('Bilinear', 'Bicubic')         or 4-D inputs with the corresponding outermost 2 scale values being 1         in the ${et?"Resize":"Upsample"} opeartor.`)}},1958:(i,s,o)=>{Object.defineProperty(s,"__esModule",{value:!0}),s.ProgramManager=void 0;const a=o(1670),c=o(6231),d=o(8879),g=o(5060);s.ProgramManager=class{constructor($,j,_e){this.profiler=$,this.glContext=j,this.textureLayoutStrategy=_e,this.repo=new Map,this.attributesBound=!1}getArtifact($){return this.repo.get($)}setArtifact($,j){this.repo.set($,j)}run($,j,_e){var et;this.profiler.event("op",`ProgramManager.run ${(et=$.programInfo.name)!==null&&et!==void 0?et:"unknown kernel"}`,()=>{var _;const b=this.glContext.gl,tt=$.program;b.useProgram(tt);try{this.bindOutput(_e),this.attributesBound||this.bindAttributes($.attribLocations),this.bindUniforms($.uniformLocations,(_=$.programInfo.variables)!==null&&_!==void 0?_:[],j)}catch(nt){throw c.Logger.error("ProgramManager",$.programInfo.shaderSource),nt}this.profiler.event("backend","GlContext.draw()",()=>{this.glContext.draw()})},this.glContext)}dispose(){this.vertexShader&&this.glContext.deleteShader(this.vertexShader),this.repo.forEach($=>this.glContext.deleteProgram($.program))}build($,j,_e){return this.profiler.event("backend","ProgramManager.build",()=>{const et=new d.GlslPreprocessor(this.glContext,$,j,_e),_=et.preprocess(),b=this.compile(_);return{programInfo:$,program:b,uniformLocations:this.getUniformLocations(b,et.context.programInfo.inputNames,et.context.programInfo.variables),attribLocations:this.getAttribLocations(b)}})}compile($){if(!this.vertexShader){c.Logger.verbose("ProrgramManager","Compiling and caching Vertex shader for the first time");const et=(0,g.getVertexShaderSource)(this.glContext.version);this.vertexShader=this.glContext.compileShader(et,this.glContext.gl.VERTEX_SHADER)}a.env.debug&&c.Logger.verbose("ProrgramManager",`FragShader:
${$}
`);const j=this.glContext.compileShader($,this.glContext.gl.FRAGMENT_SHADER),_e=this.glContext.createProgram(this.vertexShader,j);return this.glContext.deleteShader(j),_e}bindOutput($){const j=$.width,_e=$.height;c.Logger.verbose("ProrgramManager",`Binding output texture to Framebuffer: w/h=${j}/${_e}, shape=${$.shape}, type=${$.tensor.type}`),this.glContext.attachFramebuffer($.texture,j,_e)}bindAttributes($){const j=$.position,_e=$.textureCoord;this.glContext.setVertexAttributes(j,_e),this.attributesBound=!0}bindUniforms($,j,_e){var et;const _=this.glContext.gl;let b=0;for(const{name:tt,type:nt,location:rt,arrayLength:st}of $){const ot=(et=j.find(it=>it.name===tt))===null||et===void 0?void 0:et.data;if(nt!=="sampler2D"&&!ot)throw new Error(`variable '${tt}' does not have data defined in program info`);switch(nt){case"sampler2D":this.bindTexture(_e[b],rt,b),b++;break;case"float":st?_.uniform1fv(rt,ot):_.uniform1f(rt,ot);break;case"int":st?_.uniform1iv(rt,ot):_.uniform1i(rt,ot);break;default:throw new Error(`Uniform not implemented: ${nt}`)}}}bindTexture($,j,_e){this.glContext.bindTextureToUniform($.texture,_e,j)}getAttribLocations($){return{position:this.getAttribLocation($,"position"),textureCoord:this.getAttribLocation($,"textureCoord")}}getUniformLocations($,j,_e){const et=[];if(j)for(const _ of j)et.push({name:_,type:"sampler2D",location:this.getUniformLocation($,_)});if(_e)for(const _ of _e)et.push(Object.assign(Object.assign({},_),{location:this.getUniformLocation($,_.name)}));return et}getUniformLocation($,j){const _e=this.glContext.gl.getUniformLocation($,j);if(_e===null)throw new Error(`Uniform ${j} not found.`);return _e}getAttribLocation($,j){return this.glContext.gl.getAttribLocation($,j)}}},6416:(i,s,o)=>{Object.defineProperty(s,"__esModule",{value:!0}),s.WebGLSessionHandler=void 0;const a=o(6231),c=o(1047),d=o(8316),g=o(1640),$=o(1958),j=o(7859),_e=o(5702);s.WebGLSessionHandler=class{constructor(et,_){this.backend=et,this.context=_,this.layoutStrategy=new j.PreferLogicalStrategy(et.glContext.maxTextureSize),this.programManager=new $.ProgramManager(this.context.profiler,et.glContext,this.layoutStrategy),this.textureManager=new _e.TextureManager(et.glContext,this.layoutStrategy,this.context.profiler,{reuseTextures:et.textureCacheMode==="full"}),this.packedTextureDataCache=new Map,this.unpackedTextureDataCache=new Map,this.pack=et.pack,this.pack2unpackMap=new Map,this.unpack2packMap=new Map}createInferenceHandler(){return new d.WebGLInferenceHandler(this)}onGraphInitialized(et){const _=et.getValues().filter(b=>b.from===-1&&b.tensor).map(b=>b.tensor.dataId);this.initializers=new Set(_)}isInitializer(et){return!!this.initializers&&this.initializers.has(et)}addInitializer(et){this.initializers.add(et)}getTextureData(et,_){return _?this.packedTextureDataCache.get(et):this.unpackedTextureDataCache.get(et)}setTextureData(et,_,b=!1){a.Logger.verbose("WebGLSessionHandler","Storing Texture data in cache"),b?this.packedTextureDataCache.set(et,_):this.unpackedTextureDataCache.set(et,_)}dispose(){this.programManager.dispose(),this.textureManager.clearActiveTextures(),this.packedTextureDataCache.forEach(et=>this.textureManager.releaseTexture(et,!0)),this.packedTextureDataCache=new Map,this.unpackedTextureDataCache.forEach(et=>this.textureManager.releaseTexture(et,!0)),this.unpackedTextureDataCache=new Map}resolve(et,_,b){const tt=(0,c.resolveOperator)(et,_,g.WEBGL_OP_RESOLVE_RULES);return{impl:tt.opImpl,context:tt.opInit?tt.opInit(et,b):et}}}},7769:(i,s,o)=>{Object.defineProperty(s,"__esModule",{value:!0}),s.Uint8DataEncoder=s.RGBAFloatDataEncoder=s.RedFloat32DataEncoder=void 0;const a=o(6231);s.RedFloat32DataEncoder=class{constructor(c,d=1){if(d===1)this.internalFormat=c.R32F,this.format=c.RED,this.textureType=c.FLOAT,this.channelSize=d;else{if(d!==4)throw new Error(`Invalid number of channels: ${d}`);this.internalFormat=c.RGBA32F,this.format=c.RGBA,this.textureType=c.FLOAT,this.channelSize=d}}encode(c,d){let g,$;return c.constructor!==Float32Array&&(a.Logger.warning("Encoder","data was not of type Float32; creating new Float32Array"),$=new Float32Array(c)),d*this.channelSize>c.length?(a.Logger.warning("Encoder","Source data too small. Allocating larger array"),$=c,g=this.allocate(d*this.channelSize),$.forEach((j,_e)=>g[_e]=j)):($=c,g=$),g}allocate(c){return new Float32Array(4*c)}decode(c,d){return this.channelSize===1?c.filter((g,$)=>$%4==0).subarray(0,d):c.subarray(0,d)}},s.RGBAFloatDataEncoder=class{constructor(c,d=1,g){if(d!==1&&d!==4)throw new Error(`Invalid number of channels: ${d}`);this.internalFormat=c.RGBA,this.format=c.RGBA,this.channelSize=d,this.textureType=g||c.FLOAT}encode(c,d){let g=c;return this.channelSize===1&&(a.Logger.verbose("Encoder","Exploding into a larger array"),g=this.allocate(d),c.forEach(($,j)=>g[4*j]=$)),g}allocate(c){return new Float32Array(4*c)}decode(c,d){return this.channelSize===1?c.filter((g,$)=>$%4==0).subarray(0,d):c.subarray(0,d)}},s.Uint8DataEncoder=class{constructor(c,d=1){if(this.channelSize=4,d===1)this.internalFormat=c.ALPHA,this.format=c.ALPHA,this.textureType=c.UNSIGNED_BYTE,this.channelSize=d;else{if(d!==4)throw new Error(`Invalid number of channels: ${d}`);this.internalFormat=c.RGBA,this.format=c.RGBA,this.textureType=c.UNSIGNED_BYTE,this.channelSize=d}}encode(c,d){return new Uint8Array(c.buffer,c.byteOffset,c.byteLength)}allocate(c){return new Uint8Array(c*this.channelSize)}decode(c,d){if(c instanceof Uint8Array)return c.subarray(0,d);throw new Error(`Invalid array type: ${c.constructor}`)}}},7859:(i,s,o)=>{Object.defineProperty(s,"__esModule",{value:!0}),s.getBatchDim=s.sizeToSquarishShape=s.getRowsCols=s.sizeFromShape=s.isInt=s.parseAxisParam=s.squeezeShape=s.PreferLogicalStrategy=s.AlwaysKeepOriginalSizeStrategy=void 0;const a=o(6231),c=o(2517);function d(et,_){const b=[],tt=[],nt=_!=null&&Array.isArray(_)&&_.length===0,rt=_==null||nt?null:g(_,et).sort();let st=0;for(let ot=0;ot<et.length;++ot){if(rt!=null){if(rt[st]===ot&&et[ot]!==1)throw new Error(`Can't squeeze axis ${ot} since its dim '${et[ot]}' is not 1`);(rt[st]==null||rt[st]>ot)&&et[ot]===1&&(b.push(et[ot]),tt.push(ot)),rt[st]<=ot&&st++}et[ot]!==1&&(b.push(et[ot]),tt.push(ot))}return{newShape:b,keptDims:tt}}function g(et,_){const b=_.length;return et=et==null?_.map((tt,nt)=>nt):[].concat(et),(0,c.assert)(et.every(tt=>tt>=-b&&tt<b),()=>`All values in axis param must be in range [-${b}, ${b}) but got axis ${et}`),(0,c.assert)(et.every($),()=>`All values in axis param must be integers but got axis ${et}`),et.map(tt=>tt<0?b+tt:tt)}function $(et){return et%1==0}function j(et){if(et.length===0)return 1;let _=et[0];for(let b=1;b<et.length;b++)_*=et[b];return _}function _e(et){const _=Math.ceil(Math.sqrt(et));return[_,Math.ceil(et/_)]}s.AlwaysKeepOriginalSizeStrategy=class{constructor(et){this.maxTextureSize=et}computeTextureWH(et,_){if(et.length===0)return[1,1];const b=this.maxTextureSize;if(_&&_.breakAxis!==void 0){const rt=_.breakAxis>=et.length?1:et.slice(_.breakAxis).reduce((ot,it)=>ot*it),st=_.breakAxis<=0?1:et.slice(0,_.breakAxis).reduce((ot,it)=>ot*it);if(!(rt>b||st>b))return[rt,st];a.Logger.verbose("TextureLayout",`Given width/height preferences were unattainable: shape:${et}, breakAxis:${_.breakAxis}`)}const tt=et.reduce((rt,st)=>rt*st);let nt=Math.floor(Math.sqrt(tt));for(;nt<b&&nt<tt&&tt%nt!=0;nt++);if(nt>=b||tt%nt!=0)throw new Error(`The given dimensions are outside this GPU's boundaries: ${et}`);return[nt,tt/nt]}},s.PreferLogicalStrategy=class{constructor(et){this.maxTextureSize=et}computeTextureWH(et,_){const b=this.computeTexture(et,_);return _&&_.isPacked&&(b[0]/=2,b[1]/=2),_&&_.reverseWH?[b[1],b[0]]:b}computeTexture(et,_){const b=_&&_.isPacked;if(et.length===0)return b?[2,2]:[1,1];let tt=this.maxTextureSize;if(_&&_.breakAxis!==void 0){const st=_.breakAxis>=et.length?1:et.slice(_.breakAxis).reduce((it,at)=>it*at),ot=_.breakAxis<=0?1:et.slice(0,_.breakAxis).reduce((it,at)=>it*at);if(!(st>tt||ot>tt))return[st,ot];a.Logger.verbose("TextureLayout",`Given width/height preferences were unattainable: shape:${et}, breakAxis:${_.breakAxis}`)}let nt=et.slice(0);b&&(tt*=2,nt=nt.map((st,ot)=>ot>=nt.length-2?nt[ot]%2==0?nt[ot]:nt[ot]+1:nt[ot]),nt.length===1&&(nt=[2,nt[0]])),nt.length!==2&&(nt=d(nt).newShape);const rt=j(nt);return nt.length<=1&&rt<=tt?[1,rt]:nt.length===2&&nt[0]<=tt&&nt[1]<=tt?nt:nt.length===3&&nt[0]*nt[1]<=tt&&nt[2]<=tt?[nt[0]*nt[1],nt[2]]:nt.length===3&&nt[0]<=tt&&nt[1]*nt[2]<=tt?[nt[0],nt[1]*nt[2]]:nt.length===4&&nt[0]*nt[1]*nt[2]<=tt&&nt[3]<=tt?[nt[0]*nt[1]*nt[2],nt[3]]:nt.length===4&&nt[0]<=tt&&nt[1]*nt[2]*nt[3]<=tt?[nt[0],nt[1]*nt[2]*nt[3]]:b?_e(rt/4).map(st=>2*st):_e(rt)}},s.squeezeShape=d,s.parseAxisParam=g,s.isInt=$,s.sizeFromShape=j,s.getRowsCols=function(et){if(et.length===0)throw Error("Cannot get rows and columns of an empty shape array.");return[et.length>1?et[et.length-2]:1,et[et.length-1]]},s.sizeToSquarishShape=_e,s.getBatchDim=function(et,_=2){return j(et.slice(0,et.length-_))}},4057:(i,s,o)=>{Object.defineProperty(s,"__esModule",{value:!0}),s.createTextureLayoutFromShape=s.calculateTextureWidthAndHeight=s.createTextureLayoutFromTextureType=void 0;const a=o(2517),c=o(2039);s.createTextureLayoutFromTextureType=(d,g,$)=>{const j=$===c.TextureType.unpacked||$===c.TextureType.unpackedReversed?1:4,_e=$===c.TextureType.packed,et=$===c.TextureType.unpackedReversed||$===c.TextureType.packed,_=$===c.TextureType.packedLastDimension?g.length-1:void 0,b=$===c.TextureType.packedLastDimension?g.map((tt,nt)=>nt===g.length-1?4*tt:tt):void 0;return(0,s.createTextureLayoutFromShape)(d,g,j,b,{isPacked:_e,reverseWH:et,breakAxis:_})},s.calculateTextureWidthAndHeight=(d,g,$)=>{const j=(0,s.createTextureLayoutFromTextureType)(d,g,$);return[j.width,j.height]},s.createTextureLayoutFromShape=(d,g,$=1,j,_e)=>{const et=!(!_e||!_e.isPacked),[_,b]=d.computeTextureWH(et&&j||g,_e),tt=g.length;let nt=g.slice(0);if(tt===0&&(nt=[1]),$===1)j=g;else if(et){if($!==4)throw new Error("a packed texture must be 4-channel");j=g,tt>0&&(nt[tt-1]=Math.ceil(nt[tt-1]/2)),tt>1&&(nt[tt-2]=Math.ceil(nt[tt-2]/2))}else if(!j)throw new Error("Unpacked shape is needed when using channels > 1");return{width:_,height:b,channels:$,isPacked:et,shape:nt,strides:a.ShapeUtil.computeStrides(nt),unpackedShape:j,reversedWH:_e&&_e.reverseWH}}},5702:(i,s,o)=>{Object.defineProperty(s,"__esModule",{value:!0}),s.TextureManager=void 0;const a=o(6231);s.TextureManager=class{constructor(c,d,g,$){this.glContext=c,this.layoutStrategy=d,this.profiler=g,this.config=$,this.pendingRead=new Map,$.reuseTextures&&(this.inUseTextures=new Map,this.idleTextures=new Map,this.textureLookup=new Map)}createTextureFromLayout(c,d,g,$){const j=this.toEncoderType(c),_e=this.glContext.getEncoder(j,d.channels||1,$);if(d.isPacked&&$===1)throw new Error("not implemented");const et=d.width,_=d.height;let b,tt;if(this.config.reuseTextures){b=`${et}x${_}_${_e.format}_${_e.internalFormat}_${_e.textureType}`,tt=this.inUseTextures.get(b),tt||(tt=[],this.inUseTextures.set(b,tt));const rt=this.idleTextures.get(b);if(rt&&rt.length>0){const st=rt.pop();return tt.push(st),$===1&&this.glContext.updateTexture(st,et,_,_e,this.toTextureData(c,g)),st}}a.Logger.verbose("TextureManager",`Creating new texture of size ${d.width}x${d.height}`);const nt=this.glContext.allocateTexture(et,_,_e,this.toTextureData(c,g));return this.config.reuseTextures&&(tt.push(nt),this.textureLookup.set(nt,b)),nt}readTexture(c,d,g){return g||(g=1),this.profiler.event("backend","TextureManager.readTexture",()=>{const $=c.shape.reduce((_e,et)=>_e*et)*g,j=this.glContext.readTexture(c.texture,c.width,c.height,$,this.toEncoderType(d),g);return this.toTensorData(d,j)})}async readTextureAsync(c,d,g){const $=c.tensor.dataId;if(g||(g=1),this.pendingRead.has($)){const j=this.pendingRead.get($);return new Promise(_e=>j==null?void 0:j.push(_e))}return this.profiler.event("backend","TextureManager.readTextureAsync",async()=>{this.pendingRead.set($,[]);const j=c.shape.reduce((b,tt)=>b*tt)*g;await this.glContext.createAndWaitForFence();const _e=this.glContext.readTexture(c.texture,c.width,c.height,j,this.toEncoderType(d),g),et=this.toTensorData(d,_e),_=this.pendingRead.get($);return this.pendingRead.delete($),_==null||_.forEach(b=>b(et)),et})}readUint8TextureAsFloat(c){return this.profiler.event("backend","TextureManager.readUint8TextureAsFloat",()=>{const d=c.shape.reduce(($,j)=>$*j),g=this.glContext.readTexture(c.texture,c.width,c.height,4*d,"byte",4);return new Float32Array(g.buffer,g.byteOffset,d)})}releaseTexture(c,d){let g;if(this.config.reuseTextures&&(g=this.textureLookup.get(c.texture),g)){d&&this.textureLookup.delete(g);const $=this.inUseTextures.get(g);if($){const j=$.indexOf(c.texture);if(j!==-1){$.splice(j,1);let _e=this.idleTextures.get(g);_e||(_e=[],this.idleTextures.set(g,_e)),_e.push(c.texture)}}}g&&!d||(a.Logger.verbose("TextureManager",`Deleting texture of size ${c.width}x${c.height}`),this.glContext.deleteTexture(c.texture))}toTensorData(c,d){switch(c){case"int16":return d instanceof Int16Array?d:Int16Array.from(d);case"int32":return d instanceof Int32Array?d:Int32Array.from(d);case"int8":return d instanceof Int8Array?d:Int8Array.from(d);case"uint16":return d instanceof Uint16Array?d:Uint16Array.from(d);case"uint32":return d instanceof Uint32Array?d:Uint32Array.from(d);case"uint8":case"bool":return d instanceof Uint8Array?d:Uint8Array.from(d);case"float32":return d instanceof Float32Array?d:Float32Array.from(d);case"float64":return d instanceof Float64Array?d:Float64Array.from(d);default:throw new Error(`TensorData type ${c} is not supported`)}}toTextureData(c,d){if(d)return d instanceof Float32Array?d:new Float32Array(d)}toEncoderType(c){return"float"}clearActiveTextures(){this.glContext.clearActiveTextures()}}},2039:(i,s)=>{var o;Object.defineProperty(s,"__esModule",{value:!0}),s.TextureType=void 0,(o=s.TextureType||(s.TextureType={}))[o.unpacked=0]="unpacked",o[o.unpackedReversed=1]="unpackedReversed",o[o.packed=2]="packed",o[o.downloadUint8AsFloat=3]="downloadUint8AsFloat",o[o.packedLastDimension=4]="packedLastDimension"},9390:(i,s,o)=>{Object.defineProperty(s,"__esModule",{value:!0}),s.getGlChannels=s.getCoordsDataType=s.getSqueezedParams=s.squeezeInputShape=s.generateShaderFuncNameFromInputSamplerNameAtOutCoords=s.generateShaderFuncNameFromInputSamplerName=s.repeatedTry=s.getPackedShape=void 0;const a=o(2517);s.getPackedShape=function(c){const d=c.length;return c.slice(0,d-1).concat(c[d-1]/4)},s.repeatedTry=async function(c,d=$=>0,g){return new Promise(($,j)=>{let _e=0;const et=()=>{if(c())return void $();_e++;const _=d(_e);g!=null&&_e>=g?j():setTimeout(et,_)};et()})},s.generateShaderFuncNameFromInputSamplerName=function(c){return(0,a.assert)(c!==void 0&&c.length!==0,()=>"empty string found for sampler name"),"get"+c.charAt(0).toUpperCase()+c.slice(1)},s.generateShaderFuncNameFromInputSamplerNameAtOutCoords=function(c){return(0,a.assert)(c!==void 0&&c.length!==0,()=>"empty string found for sampler name"),"get"+c.charAt(0).toUpperCase()+c.slice(1)+"AtOutCoords"},s.squeezeInputShape=function(c,d){let g=JSON.parse(JSON.stringify(c));return g=d,g},s.getSqueezedParams=function(c,d){return d.map(g=>c[g]).join(", ")},s.getCoordsDataType=function(c){if(c<=1)return"int";if(c===2)return"ivec2";if(c===3)return"ivec3";if(c===4)return"ivec4";if(c===5)return"ivec5";if(c===6)return"ivec6";throw Error(`GPU for rank ${c} is not yet supported`)},s.getGlChannels=function(c=6){return["x","y","z","w","u","v"].slice(0,c)}},7305:(i,s,o)=>{Object.defineProperty(s,"__esModule",{value:!0}),s.createNewWebGLContext=s.createWebGLContext=void 0;const a=o(6231),c=o(1713),d={};function g($){const j=function(){if(typeof document>"u"){if(typeof OffscreenCanvas>"u")throw new TypeError("failed to create canvas: OffscreenCanvas is not supported");return new OffscreenCanvas(1,1)}const _=document.createElement("canvas");return _.width=1,_.height=1,_}();let _e;const et={alpha:!1,depth:!1,antialias:!1,stencil:!1,preserveDrawingBuffer:!1,premultipliedAlpha:!1,failIfMajorPerformanceCaveat:!1};if((!$||$==="webgl2")&&(_e=j.getContext("webgl2",et),_e))try{return new c.WebGLContext(_e,2)}catch(_){a.Logger.warning("GlContextFactory",`failed to create WebGLContext using contextId 'webgl2'. Error: ${_}`)}if((!$||$==="webgl")&&(_e=j.getContext("webgl",et)||j.getContext("experimental-webgl",et),_e))try{return new c.WebGLContext(_e,1)}catch(_){a.Logger.warning("GlContextFactory",`failed to create WebGLContext using contextId 'webgl' or 'experimental-webgl'. Error: ${_}`)}throw new Error("WebGL is not supported")}s.createWebGLContext=function $(j){let _e;j&&j!=="webgl2"||!("webgl2"in d)?j&&j!=="webgl"||!("webgl"in d)||(_e=d.webgl):_e=d.webgl2,_e=_e||g(j),j=j||_e.version===1?"webgl":"webgl2";const et=_e.gl;return d[j]=_e,et.isContextLost()?(delete d[j],$(j)):(et.disable(et.DEPTH_TEST),et.disable(et.STENCIL_TEST),et.disable(et.BLEND),et.disable(et.DITHER),et.disable(et.POLYGON_OFFSET_FILL),et.disable(et.SAMPLE_COVERAGE),et.enable(et.SCISSOR_TEST),et.enable(et.CULL_FACE),et.cullFace(et.BACK),_e)},s.createNewWebGLContext=g},1713:function(i,s,o){var a=this&&this.__createBinding||(Object.create?function(et,_,b,tt){tt===void 0&&(tt=b);var nt=Object.getOwnPropertyDescriptor(_,b);nt&&!("get"in nt?!_.__esModule:nt.writable||nt.configurable)||(nt={enumerable:!0,get:function(){return _[b]}}),Object.defineProperty(et,tt,nt)}:function(et,_,b,tt){tt===void 0&&(tt=b),et[tt]=_[b]}),c=this&&this.__setModuleDefault||(Object.create?function(et,_){Object.defineProperty(et,"default",{enumerable:!0,value:_})}:function(et,_){et.default=_}),d=this&&this.__importStar||function(et){if(et&&et.__esModule)return et;var _={};if(et!=null)for(var b in et)b!=="default"&&Object.prototype.hasOwnProperty.call(et,b)&&a(_,et,b);return c(_,et),_};Object.defineProperty(s,"__esModule",{value:!0}),s.WebGLContext=s.linearSearchLastTrue=void 0;const g=o(1670),$=d(o(7769)),j=o(9390);function _e(et){let _=0;for(;_<et.length&&et[_]();++_);return _-1}s.linearSearchLastTrue=_e,s.WebGLContext=class{constructor(et,_){this.frameBufferBound=!1,this.itemsToPoll=[],this.gl=et,this.version=_,this.getExtensions(),this.vertexbuffer=this.createVertexbuffer(),this.framebuffer=this.createFramebuffer(),this.queryVitalParameters()}allocateTexture(et,_,b,tt){const nt=this.gl,rt=nt.createTexture();nt.bindTexture(nt.TEXTURE_2D,rt),nt.texParameteri(nt.TEXTURE_2D,nt.TEXTURE_MIN_FILTER,nt.NEAREST),nt.texParameteri(nt.TEXTURE_2D,nt.TEXTURE_MAG_FILTER,nt.NEAREST),nt.texParameteri(nt.TEXTURE_2D,nt.TEXTURE_WRAP_S,nt.CLAMP_TO_EDGE),nt.texParameteri(nt.TEXTURE_2D,nt.TEXTURE_WRAP_T,nt.CLAMP_TO_EDGE);const st=tt?b.encode(tt,et*_):null;return nt.texImage2D(nt.TEXTURE_2D,0,b.internalFormat,et,_,0,b.format,b.textureType,st),this.checkError(),rt}updateTexture(et,_,b,tt,nt){const rt=this.gl;rt.bindTexture(rt.TEXTURE_2D,et);const st=tt.encode(nt,_*b);rt.texSubImage2D(rt.TEXTURE_2D,0,0,0,_,b,tt.format,tt.textureType,st),this.checkError()}attachFramebuffer(et,_,b){const tt=this.gl;tt.bindTexture(tt.TEXTURE_2D,et),tt.bindFramebuffer(tt.FRAMEBUFFER,this.framebuffer),tt.framebufferTexture2D(tt.FRAMEBUFFER,tt.COLOR_ATTACHMENT0,tt.TEXTURE_2D,et,0),this.checkError(),tt.viewport(0,0,_,b),tt.scissor(0,0,_,b)}readTexture(et,_,b,tt,nt,rt){const st=this.gl;rt||(rt=1),this.frameBufferBound||this.attachFramebuffer(et,_,b);const ot=this.getEncoder(nt,rt),it=ot.allocate(_*b);return st.bindTexture(st.TEXTURE_2D,et),st.framebufferTexture2D(st.FRAMEBUFFER,st.COLOR_ATTACHMENT0,st.TEXTURE_2D,et,0),st.readPixels(0,0,_,b,st.RGBA,ot.textureType,it),this.checkError(),ot.decode(it,tt)}isFramebufferReady(){return!0}getActiveTexture(){const et=this.gl;return"TEXTURE"+(et.getParameter(this.gl.ACTIVE_TEXTURE)-et.TEXTURE0)}getTextureBinding(){return this.gl.getParameter(this.gl.TEXTURE_BINDING_2D)}getFramebufferBinding(){return this.gl.getParameter(this.gl.FRAMEBUFFER_BINDING)}setVertexAttributes(et,_){const b=this.gl;b.vertexAttribPointer(et,3,b.FLOAT,!1,20,0),b.enableVertexAttribArray(et),_!==-1&&(b.vertexAttribPointer(_,2,b.FLOAT,!1,20,12),b.enableVertexAttribArray(_)),this.checkError()}createProgram(et,_){const b=this.gl,tt=b.createProgram();return b.attachShader(tt,et),b.attachShader(tt,_),b.linkProgram(tt),tt}compileShader(et,_){const b=this.gl,tt=b.createShader(_);if(!tt)throw new Error(`createShader() returned null with type ${_}`);if(b.shaderSource(tt,et),b.compileShader(tt),b.getShaderParameter(tt,b.COMPILE_STATUS)===!1)throw new Error(`Failed to compile shader: ${b.getShaderInfoLog(tt)}
Shader source:
${et}`);return tt}deleteShader(et){this.gl.deleteShader(et)}bindTextureToUniform(et,_,b){const tt=this.gl;tt.activeTexture(tt.TEXTURE0+_),this.checkError(),tt.bindTexture(tt.TEXTURE_2D,et),this.checkError(),tt.uniform1i(b,_),this.checkError()}draw(){this.gl.drawArrays(this.gl.TRIANGLE_STRIP,0,4),this.checkError()}checkError(){if(g.env.debug){const et=this.gl,_=et.getError();let b="";switch(_){case et.NO_ERROR:return;case et.INVALID_ENUM:b="INVALID_ENUM";break;case et.INVALID_VALUE:b="INVALID_VALUE";break;case et.INVALID_OPERATION:b="INVALID_OPERATION";break;case et.INVALID_FRAMEBUFFER_OPERATION:b="INVALID_FRAMEBUFFER_OPERATION";break;case et.OUT_OF_MEMORY:b="OUT_OF_MEMORY";break;case et.CONTEXT_LOST_WEBGL:b="CONTEXT_LOST_WEBGL";break;default:b=`Unknown WebGL Error: ${_.toString(16)}`}throw new Error(b)}}deleteTexture(et){this.gl.deleteTexture(et)}deleteProgram(et){this.gl.deleteProgram(et)}getEncoder(et,_,b=0){if(this.version===2)return new $.RedFloat32DataEncoder(this.gl,_);switch(et){case"float":return b===1||this.isRenderFloat32Supported?new $.RGBAFloatDataEncoder(this.gl,_):new $.RGBAFloatDataEncoder(this.gl,_,this.textureHalfFloatExtension.HALF_FLOAT_OES);case"int":throw new Error("not implemented");case"byte":return new $.Uint8DataEncoder(this.gl,_);default:throw new Error(`Invalid dataType: ${et}`)}}clearActiveTextures(){const et=this.gl;for(let _=0;_<this.maxTextureImageUnits;++_)et.activeTexture(et.TEXTURE0+_),et.bindTexture(et.TEXTURE_2D,null)}dispose(){if(this.disposed)return;const et=this.gl;et.bindFramebuffer(et.FRAMEBUFFER,null),et.deleteFramebuffer(this.framebuffer),et.bindBuffer(et.ARRAY_BUFFER,null),et.deleteBuffer(this.vertexbuffer),et.bindBuffer(et.ELEMENT_ARRAY_BUFFER,null),et.finish(),this.disposed=!0}createDefaultGeometry(){return new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0])}createVertexbuffer(){const et=this.gl,_=et.createBuffer();if(!_)throw new Error("createBuffer() returned null");const b=this.createDefaultGeometry();return et.bindBuffer(et.ARRAY_BUFFER,_),et.bufferData(et.ARRAY_BUFFER,b,et.STATIC_DRAW),this.checkError(),_}createFramebuffer(){const et=this.gl.createFramebuffer();if(!et)throw new Error("createFramebuffer returned null");return et}queryVitalParameters(){const et=this.gl;if(this.isFloatTextureAttachableToFrameBuffer=this.checkFloatTextureAttachableToFrameBuffer(),this.isRenderFloat32Supported=this.checkRenderFloat32(),this.isFloat32DownloadSupported=this.checkFloat32Download(),this.version===1&&!this.textureHalfFloatExtension&&!this.isRenderFloat32Supported)throw new Error("both float32 and float16 TextureType are not supported");this.isBlendSupported=!this.isRenderFloat32Supported||this.checkFloat32Blend(),this.maxTextureSize=et.getParameter(et.MAX_TEXTURE_SIZE),this.maxTextureImageUnits=et.getParameter(et.MAX_TEXTURE_IMAGE_UNITS),this.version}getExtensions(){this.version===2?(this.colorBufferFloatExtension=this.gl.getExtension("EXT_color_buffer_float"),this.disjointTimerQueryWebgl2Extension=this.gl.getExtension("EXT_disjoint_timer_query_webgl2")):(this.textureFloatExtension=this.gl.getExtension("OES_texture_float"),this.textureHalfFloatExtension=this.gl.getExtension("OES_texture_half_float"))}checkFloatTextureAttachableToFrameBuffer(){const et=this.gl,_=et.createTexture();et.bindTexture(et.TEXTURE_2D,_);const b=this.version===2?et.RGBA32F:et.RGBA;et.texImage2D(et.TEXTURE_2D,0,b,1,1,0,et.RGBA,et.FLOAT,null);const tt=et.createFramebuffer();et.bindFramebuffer(et.FRAMEBUFFER,tt),et.framebufferTexture2D(et.FRAMEBUFFER,et.COLOR_ATTACHMENT0,et.TEXTURE_2D,_,0);const nt=et.checkFramebufferStatus(et.FRAMEBUFFER)===et.FRAMEBUFFER_COMPLETE;return et.bindTexture(et.TEXTURE_2D,null),et.bindFramebuffer(et.FRAMEBUFFER,null),et.deleteTexture(_),et.deleteFramebuffer(tt),nt}checkRenderFloat32(){if(this.version===2){if(!this.colorBufferFloatExtension)return!1}else if(!this.textureFloatExtension)return!1;return this.isFloatTextureAttachableToFrameBuffer}checkFloat32Download(){if(this.version===2){if(!this.colorBufferFloatExtension)return!1}else if(!this.textureFloatExtension||!this.gl.getExtension("WEBGL_color_buffer_float"))return!1;return this.isFloatTextureAttachableToFrameBuffer}checkFloat32Blend(){const et=this.gl;let _,b,tt,nt,rt;try{_=et.createTexture(),b=et.createFramebuffer(),et.bindTexture(et.TEXTURE_2D,_);const st=this.version===2?et.RGBA32F:et.RGBA;return et.texImage2D(et.TEXTURE_2D,0,st,1,1,0,et.RGBA,et.FLOAT,null),et.bindFramebuffer(et.FRAMEBUFFER,b),et.framebufferTexture2D(et.FRAMEBUFFER,et.COLOR_ATTACHMENT0,et.TEXTURE_2D,_,0),et.enable(et.BLEND),tt=et.createShader(et.VERTEX_SHADER),!!tt&&(et.shaderSource(tt,"void main(){}"),et.compileShader(tt),nt=et.createShader(et.FRAGMENT_SHADER),!!nt&&(et.shaderSource(nt,"precision highp float;void main(){gl_FragColor=vec4(0.5);}"),et.compileShader(nt),rt=et.createProgram(),!!rt&&(et.attachShader(rt,tt),et.attachShader(rt,nt),et.linkProgram(rt),et.useProgram(rt),et.drawArrays(et.POINTS,0,1),et.getError()===et.NO_ERROR)))}finally{et.disable(et.BLEND),rt&&et.deleteProgram(rt),tt&&et.deleteShader(tt),nt&&et.deleteShader(nt),b&&(et.bindFramebuffer(et.FRAMEBUFFER,null),et.deleteFramebuffer(b)),_&&(et.bindTexture(et.TEXTURE_2D,null),et.deleteTexture(_))}}beginTimer(){if(this.version===2&&this.disjointTimerQueryWebgl2Extension){const et=this.gl,_=this.disjointTimerQueryWebgl2Extension,b=et.createQuery();return et.beginQuery(_.TIME_ELAPSED_EXT,b),b}throw new Error("WebGL1 profiling currently not supported.")}endTimer(){if(this.version!==2||!this.disjointTimerQueryWebgl2Extension)throw new Error("WebGL1 profiling currently not supported");{const et=this.gl,_=this.disjointTimerQueryWebgl2Extension;et.endQuery(_.TIME_ELAPSED_EXT)}}isTimerResultAvailable(et){let _=!1,b=!1;if(this.version!==2||!this.disjointTimerQueryWebgl2Extension)throw new Error("WebGL1 profiling currently not supported");{const tt=this.gl,nt=this.disjointTimerQueryWebgl2Extension;_=tt.getQueryParameter(et,tt.QUERY_RESULT_AVAILABLE),b=tt.getParameter(nt.GPU_DISJOINT_EXT)}return _&&!b}getTimerResult(et){let _=0;if(this.version!==2)throw new Error("WebGL1 profiling currently not supported");{const b=this.gl;_=b.getQueryParameter(et,b.QUERY_RESULT),b.deleteQuery(et)}return _/1e6}async waitForQueryAndGetTime(et){return await(0,j.repeatedTry)(()=>this.isTimerResultAvailable(et)),this.getTimerResult(et)}async createAndWaitForFence(){const et=this.createFence(this.gl);return this.pollFence(et)}createFence(et){let _;const b=et,tt=b.fenceSync(b.SYNC_GPU_COMMANDS_COMPLETE,0);return et.flush(),_=tt===null?()=>!0:()=>{const nt=b.clientWaitSync(tt,0,0);return nt===b.ALREADY_SIGNALED||nt===b.CONDITION_SATISFIED},{query:tt,isFencePassed:_}}async pollFence(et){return new Promise(_=>{this.addItemToPoll(()=>et.isFencePassed(),()=>_())})}pollItems(){const et=_e(this.itemsToPoll.map(_=>_.isDoneFn));for(let _=0;_<=et;++_){const{resolveFn:b}=this.itemsToPoll[_];b()}this.itemsToPoll=this.itemsToPoll.slice(et+1)}async addItemToPoll(et,_){this.itemsToPoll.push({isDoneFn:et,resolveFn:_}),this.itemsToPoll.length>1||await(0,j.repeatedTry)(()=>(this.pollItems(),this.itemsToPoll.length===0))}}},1036:(i,s,o)=>{Object.defineProperty(s,"__esModule",{value:!0}),s.ExecutionPlan=void 0;const a=o(6231);class c{constructor(g,$){this.op=g,this.node=$}}s.ExecutionPlan=class{constructor(d,g,$){this.graph=d,this.profiler=$,this.initialize(g)}initialize(d){this.profiler.event("session","ExecutionPlan.initialize",()=>{const g=this.graph.getNodes();if(g.length!==d.length)throw new Error("The size of nodes and OPs do not match.");this._ops=d.map(($,j)=>new c($,g[j])),this.reset(),this._starter=[],this._ops.forEach(($,j)=>{let _e=!0;for(const et of $.node.inputs)if(!this._values[et]&&this.graph.getInputIndices().indexOf(et)===-1){_e=!1;break}_e&&this._starter.push(j)})})}reset(){this._values=this.graph.getValues().map(d=>d.tensor)}async execute(d,g){return this.profiler.event("session","ExecutionPlan.execute",async()=>{this.reset();const $=d.createInferenceHandler(),j=this.graph.getInputIndices();if(g.length!==j.length)throw new Error(`number of input tensors don't match the number of inputs to the model: actual: ${g.length} expected: ${j.length}`);g.forEach((nt,rt)=>{const st=j[rt];this._values[st]=nt});const _e=this._starter.slice(0),et=this.graph.getValues(),_=this.graph.getNodes();let b=0;for(;b<_e.length;){const nt=_e[b++],rt=this._ops[nt],st=rt.node.inputs.map(lt=>this._values[lt]);if(st.indexOf(void 0)!==-1)throw new Error(`unresolved input detected: op: ${rt.node}`);const ot=st;a.Logger.verbose("ExecPlan",`Runing op:${rt.node.name} (${ot.map((lt,ut)=>`'${rt.node.inputs[ut]}': ${lt.type}[${lt.dims.join(",")}]`).join(", ")})`);const it=await this.profiler.event("node",rt.node.name,async()=>rt.op.impl($,ot,rt.op.context));if(it.length!==rt.node.outputs.length)throw new Error("the size of output does not match model definition.");it.forEach((lt,ut)=>{const ct=rt.node.outputs[ut];if(this._values[ct])throw new Error(`output [${ct}] already has value: op:${rt.node.name}`);this._values[ct]=lt});const at=new Set;it.forEach((lt,ut)=>{const ct=rt.node.outputs[ut];for(const dt of et[ct].to){const pt=_[dt];let ht=!0;for(const ft of pt.inputs)if(!this._values[ft]){ht=!1;break}ht&&at.add(dt)}}),_e.push(...at)}const tt=[];for(let nt=0;nt<this.graph.getOutputIndices().length;nt++){const rt=this.graph.getOutputIndices()[nt],st=this._values[rt];if(st===void 0)throw new Error(`required output [${rt}] does not have value`);rt===0?await st.getData():st.data,tt.push(st)}return a.Logger.verbose("ExecPlan","disposing of inferenceHandler"),$.dispose(),tt})}}},7070:(i,s,o)=>{Object.defineProperty(s,"__esModule",{value:!0}),s.Graph=void 0;const a=o(1446),c=o(7778),d=o(9395),g=o(9162),$=o(2517);var j=d.onnxruntime.experimental.fbs;s.Graph={from:(b,tt)=>new _(b,tt)};class _e{constructor(tt){this._from=void 0,this._to=[],this.tensor=void 0,this.type=void 0,tt&&(this.type=$.ProtoUtil.tensorValueTypeFromProto(tt.type.tensorType))}get from(){return this._from}get to(){return this._to}}class et{constructor(tt,nt){tt instanceof a.onnx.NodeProto?(this.name=tt.name,this.opType=tt.opType,this.attributes=new c.Attribute(tt.attribute)):tt instanceof j.Node&&(this.name=nt??tt.name(),this.opType=tt.opType(),this.attributes=new c.Attribute($.ProtoUtil.tensorAttributesFromORTFormat(tt))),this.inputs=[],this.outputs=[],this.executeNode=!0}}class _{constructor(tt,nt){if(!tt)throw new TypeError("graph is empty");this.buildGraph(tt),this.transformGraph(nt),this.checkIsAcyclic()}getInputIndices(){return this._allInputIndices}getInputNames(){return this._allInputNames}getOutputIndices(){return this._allOutputIndices}getOutputNames(){return this._allOutputNames}getValues(){return this._allData}getNodes(){return this._nodes}buildGraph(tt){if(tt instanceof a.onnx.GraphProto)this.buildGraphFromOnnxFormat(tt);else{if(!(tt instanceof j.Graph))throw new TypeError("Graph type is not supported.");this.buildGraphFromOrtFormat(tt)}}buildGraphFromOnnxFormat(tt){const nt=new Map;this._allData=[],this._allInputIndices=[],this._allInputNames=[],this._allOutputIndices=[],this._allOutputNames=[],this._nodes=[];const rt=new Map;if(!tt.input)throw new Error("missing information in graph: input");const st=[];for(const ot of tt.input){if(nt.has(ot.name))throw new Error(`duplicated input name: ${ot.name}`);const it=this._allData.push(new _e(ot))-1;nt.set(ot.name,it),st.push(ot.name)}if(!tt.initializer)throw new Error("missing information in graph: initializer");for(const ot of tt.initializer){let it=nt.get(ot.name);if(it===void 0){const at=new _e;at.type={shape:{dims:$.ProtoUtil.tensorDimsFromProto(ot.dims)},tensorType:$.ProtoUtil.tensorDataTypeFromProto(ot.dataType)},it=this._allData.push(at)-1,nt.set(ot.name,it)}this._allData[it]._from=-1,this._allData[it].tensor=g.Tensor.fromProto(ot)}for(let ot=0;ot<this._allData.length;ot++)this._allData[ot].tensor||(this._allInputIndices.push(ot),this._allInputNames.push(st[ot]));if(!tt.output)throw new Error("missing information in graph: output");for(const ot of tt.output){if(nt.has(ot.name))throw new Error(`duplicated output name: ${ot.name}`);const it=this._allData.push(new _e(ot))-1;nt.set(ot.name,it),this._allOutputIndices.push(it),this._allOutputNames.push(ot.name)}if(!tt.node)throw new Error("missing information in graph: node");for(const ot of tt.node){if(!ot.name)for(let at=0;;at++){const lt=`unnamed_${ot.opType}_${at}`;if(!rt.has(lt)){ot.name=lt;break}}if(rt.has(ot.name))throw new Error(`duplicated node name: ${ot.name}`);const it=this._nodes.push(new et(ot))-1;rt.set(ot.name,it)}for(let ot=0;ot<this._nodes.length;ot++){const it=this._nodes[ot],at=tt.node[ot];if(!at.output)throw new Error(`missing output for node: ${at.name}`);for(const lt of at.output){let ut=nt.get(lt);if(ut===void 0&&(ut=this._allData.push(new _e)-1,nt.set(lt,ut)),it.outputs.push(ut),this._allData[ut]._from!==void 0)throw new Error(`multiple nodes output to one data value: ${ut}`);if(this._allData[ut]._from=ot,at.opType==="Constant"){if(!at.attribute||at.attribute.length!==1||!at.attribute[0].t)throw new Error("missing attributes or missing tensor value in attributes for this Constant operator");if(!at.output||at.output.length!==1)throw new Error("missing output or incorrect number of outputs for this Constant operator");it.outputs.pop(),it.executeNode=!1,this._allData[ut]._from=-1,this._allData[ut].tensor=g.Tensor.fromProto(at.attribute[0].t)}}}for(let ot=0;ot<this._nodes.length;ot++){const it=this._nodes[ot],at=tt.node[ot];if(!at.input)throw new Error(`missing input for node: ${at.name}`);for(const lt of at.input){const ut=nt.get(lt);if(ut===void 0){if(lt===""&&at.input.length===3&&at.opType==="Resize")continue;throw new Error(`unrecognized input '${lt}' for node: ${at.name}`)}it.inputs.push(ut),this._allData[ut]._to.push(ot)}}return!0}buildGraphFromOrtFormat(tt){var nt,rt,st;const ot=new Map;this._allData=[],this._allInputIndices=[],this._allInputNames=[],this._allOutputIndices=[],this._allOutputNames=[],this._nodes=[];const it=new Map,at=[];for(let lt=0;lt<tt.inputsLength();lt++){const ut=tt.inputs(lt);if(ot.has(ut))throw new Error(`duplicated input name: ${ut}`);for(let ct=0;ct<tt.nodeArgsLength();ct++)if(((nt=tt.nodeArgs(ct))===null||nt===void 0?void 0:nt.name())===ut){const dt=new _e;if(((st=(rt=tt.nodeArgs(ct))===null||rt===void 0?void 0:rt.type())===null||st===void 0?void 0:st.valueType())!==j.TypeInfoValue.tensor_type)throw new Error("Unexpected value type for the nodeArg.");const pt=tt.nodeArgs(ct).type().value(new j.TensorTypeAndShape),ht=$.ProtoUtil.tensorDataTypeFromProto(pt.elemType()),ft=pt.shape(),yt=[];for(let _t=0;_t<ft.dimLength();_t++)yt.push($.LongUtil.longToNumber(ft.dim(_t).value().dimValue()));dt.type={shape:{dims:yt},tensorType:ht};const wt=this._allData.push(dt)-1;ot.set(ut,wt),at.push(ut)}}for(let lt=0;lt<tt.initializersLength();lt++){const ut=tt.initializers(lt);let ct=ot.get(ut.name());if(ct===void 0){const dt=new _e,pt=$.ProtoUtil.tensorDimsFromORTFormat(ut),ht=$.ProtoUtil.tensorDataTypeFromProto(ut.dataType());dt.type={shape:{dims:pt},tensorType:ht},ct=this._allData.push(dt)-1,ot.set(ut.name(),ct)}this._allData[ct]._from=-1,this._allData[ct].tensor=g.Tensor.fromOrtTensor(ut)}for(let lt=0;lt<this._allData.length;lt++)this._allData[lt].tensor||(this._allInputIndices.push(lt),this._allInputNames.push(at[lt]));for(let lt=0;lt<tt.outputsLength();lt++){const ut=tt.outputs(lt);if(ot.has(ut))throw new Error(`duplicated output name: ${ut}`);const ct=this._allData.push(new _e)-1;ot.set(ut,ct),this._allOutputIndices.push(ct),this._allOutputNames.push(ut)}if(!tt.nodes)throw new Error("missing information in graph: node");for(let lt=0;lt<tt.nodesLength();lt++){const ut=tt.nodes(lt);let ct=ut.name();if(!ct)for(let pt=0;ct=`unnamed_${ut.opType()}_${pt}`,it.has(ct);pt++);if(it.has(ct))throw new Error(`duplicated node name: ${ct}`);const dt=this._nodes.push(new et(ut,ct))-1;it.set(ct,dt)}for(let lt=0;lt<this._nodes.length;lt++){const ut=this._nodes[lt],ct=tt.nodes(lt);if(ct==null)throw new Error(`No node exists at index ${lt}`);if((ct==null?void 0:ct.outputsLength())===0)throw new Error(`missing output for node: ${ct.name}`);for(let dt=0;dt<(ct==null?void 0:ct.outputsLength());dt++){const pt=ct==null?void 0:ct.outputs(dt);let ht=ot.get(pt);if(ht===void 0&&(ht=this._allData.push(new _e)-1,ot.set(pt,ht)),ut.outputs.push(ht),this._allData[ht]._from!==void 0)throw new Error(`multiple nodes output to one data value: ${ht}`);if(this._allData[ht]._from=lt,ct.opType()==="Constant"){if(ct.attributesLength()!==1||!ct.attributes(0).t())throw new Error("missing attributes or missing tensor value in attributes for this Constant operator");if(ct.outputsLength()!==1)throw new Error("missing output or incorrect number of outputs for this Constant operator");ut.outputs.pop(),ut.executeNode=!1,this._allData[ht]._from=-1,this._allData[ht].tensor=g.Tensor.fromOrtTensor(ct.attributes(0).t())}}}for(let lt=0;lt<this._nodes.length;lt++){const ut=this._nodes[lt],ct=tt.nodes(lt);if(ct.inputsLength()===0)throw new Error(`missing input for node: ${ct.name}`);for(let dt=0;dt<ct.inputsLength();dt++){const pt=ct.inputs(dt),ht=ot.get(pt);if(ht===void 0)throw new Error(`unrecognized input '${pt}' for node: ${ct.name()}`);ut.inputs.push(ht),this._allData[ht]._to.push(lt)}}}checkIsAcyclic(){const tt=new Set;this._allInputIndices.forEach(st=>{this._allData[st]._to.forEach(ot=>{tt.add(ot)})});const nt=Array.from(tt),rt=new Array(this._nodes.length).fill("white");for(;nt.length>0;){const st=nt.pop();rt[st]==="gray"?rt[st]="black":(nt.push(st),rt[st]="gray",this._nodes[st].outputs.forEach(ot=>{const it=this._allData[ot];if(it.tensor!==void 0)throw new Error("node outputs should not be initialized");if(it._from!==st)throw new Error("from property of the Value object doesn't match index of Node being processed");it._to.forEach(at=>{if(rt[at]==="gray")throw new Error("model graph is cyclic");rt[at]==="white"&&nt.push(at)})}))}}transformGraph(tt){this.removeAllIdentityNodes(),this.removeAllDropoutNodes(),this.fuseConvActivationNodes(),tt&&tt.transformGraph(this),this.finalizeGraph()}finalizeGraph(){let tt=0;for(let nt=0;nt<this._nodes.length;nt++)this._nodes[nt].executeNode?tt>0&&(this._nodes[nt].inputs.forEach(rt=>{const st=this._allData[rt]._to.indexOf(nt+tt);st!==-1&&(this._allData[rt]._to[st]=nt)}),this._nodes[nt].outputs.forEach(rt=>{this._allData[rt]._from&&this._allData[rt]._from===nt+tt&&(this._allData[rt]._from=nt)})):(tt++,this._nodes[nt].outputs.forEach(rt=>{this._allData[rt]._from=-2}),this._nodes.splice(nt,1),nt--);tt=0;for(let nt=0;nt<this._allData.length;nt++)if(this._allData[nt].from!==-2||this._allOutputIndices.indexOf(nt+tt)!==-1){if(tt>0){let rt=-1;this._allData[nt].from!==void 0&&this._allData[nt].from!==-1?(rt=this._nodes[this._allData[nt].from].outputs.indexOf(nt+tt),rt!==-1&&(this._nodes[this._allData[nt].from].outputs[rt]=nt)):(rt=this._allInputIndices.indexOf(nt+tt),rt!==-1&&(this._allInputIndices[rt]=nt)),this._allData[nt].to.forEach(st=>{rt=this._nodes[st].inputs.indexOf(nt+tt),rt!==-1&&(this._nodes[st].inputs[rt]=nt)}),this._allData[nt].to.length===0&&(rt=this._allOutputIndices.indexOf(nt+tt),rt!==-1&&(this._allOutputIndices[rt]=nt))}}else tt++,this._allData.splice(nt,1),nt--}deleteNode(tt){const nt=this._nodes[tt];if(nt.outputs.length>1){for(let lt=1;lt<nt.outputs.length;lt++)if(this._allData[nt.outputs[lt]].to.length>0)throw new Error("Node deletion with more than one output connected to other nodes is not supported. ")}nt.executeNode=!1;const rt=nt.inputs[0],st=nt.outputs[0],ot=this._allData[st].to,it=this._allData[rt].to.indexOf(tt);if(it===-1)throw new Error("The Value object doesn't have the current Node in it's 'to' property ");this._allData[rt].to.splice(it,1),this._allData[st]._to=[];const at=this._allOutputIndices.indexOf(st);if(at!==-1&&(this._allOutputIndices[at]=rt),ot&&ot.length>0)for(const lt of ot){const ut=this._nodes[lt].inputs.indexOf(st);if(ut===-1)throw new Error("The Node object doesn't have the output Value in it's 'inputs' property ");this._nodes[lt].inputs[ut]=rt,this._allData[rt].to.push(lt)}}removeAllDropoutNodes(){let tt=0;for(const nt of this._nodes){if(nt.opType==="Dropout"){if(nt.inputs.length!==1)throw new Error("Dropout nodes should only contain one input. ");if(nt.outputs.length!==1&&nt.outputs.length!==2)throw new Error("Dropout nodes should contain either 1 or 2 output(s)");if(nt.outputs.length===2&&this._allData[nt.outputs[1]]._to.length!==0)throw new Error("Dropout nodes's second output should not be referenced by other nodes");this.deleteNode(tt)}tt++}}removeAllIdentityNodes(){let tt=0;for(const nt of this._nodes)nt.opType==="Identity"&&this.deleteNode(tt),tt++}isActivation(tt){switch(tt.opType){case"Relu":case"Sigmoid":case"Clip":return!0;default:return!1}}fuseConvActivationNodes(){for(const tt of this._nodes)if(tt.opType==="Conv"){const nt=this._allData[tt.outputs[0]]._to;if(nt.length===1&&this.isActivation(this._nodes[nt[0]])){const rt=this._nodes[nt[0]];if(rt.opType==="Clip")if(rt.inputs.length===1)try{tt.attributes.set("activation_params","floats",[rt.attributes.getFloat("min"),rt.attributes.getFloat("max")])}catch{tt.attributes.set("activation_params","floats",[$.MIN_CLIP,$.MAX_CLIP])}else{if(!(rt.inputs.length>=3&&this._allData[rt.inputs[1]].tensor!==void 0&&this._allData[rt.inputs[2]].tensor!==void 0))continue;tt.attributes.set("activation_params","floats",[this._allData[rt.inputs[1]].tensor.floatData[0],this._allData[rt.inputs[2]].tensor.floatData[0]])}tt.attributes.set("activation","string",rt.opType),this.deleteNode(nt[0])}}}}},6231:(i,s)=>{Object.defineProperty(s,"__esModule",{value:!0}),s.now=s.Profiler=s.Logger=void 0;const o={verbose:1e3,info:2e3,warning:4e3,error:5e3,fatal:6e3},a={none:new class{log(et,_,b){}},console:new class{log(et,_,b){console.log(`${this.color(et)} ${b?"\x1B[35m"+b+"\x1B[0m ":""}${_}`)}color(et){switch(et){case"verbose":return"\x1B[34;40mv\x1B[0m";case"info":return"\x1B[32mi\x1B[0m";case"warning":return"\x1B[30;43mw\x1B[0m";case"error":return"\x1B[31;40me\x1B[0m";case"fatal":return"\x1B[101mf\x1B[0m";default:throw new Error(`unsupported severity: ${et}`)}}}},c={provider:"console",minimalSeverity:"warning",logDateTime:!0,logSourceLocation:!1};let d={"":c};function g(et,_,b,tt){if(_===void 0)return nt=et,{verbose:g.verbose.bind(null,nt),info:g.info.bind(null,nt),warning:g.warning.bind(null,nt),error:g.error.bind(null,nt),fatal:g.fatal.bind(null,nt)};if(b===void 0)$(et,_);else if(typeof b=="number"&&tt===void 0)$(et,_);else if(typeof b=="string"&&tt===void 0)$(et,b,0,_);else{if(typeof b!="string"||typeof tt!="number")throw new TypeError("input is valid");$(et,b,0,_)}var nt}function $(et,_,b,tt){const nt=d[tt||""]||d[""];o[et]<o[nt.minimalSeverity]||(nt.logDateTime&&(_=`${new Date().toISOString()}|${_}`),nt.logSourceLocation,a[nt.provider].log(et,_,tt))}(function(et){function _(tt){d={},b("",tt||{})}function b(tt,nt){if(tt==="*")_(nt);else{const rt=d[tt]||c;d[tt]={provider:nt.provider||rt.provider,minimalSeverity:nt.minimalSeverity||rt.minimalSeverity,logDateTime:nt.logDateTime===void 0?rt.logDateTime:nt.logDateTime,logSourceLocation:nt.logSourceLocation===void 0?rt.logSourceLocation:nt.logSourceLocation}}}et.verbose=function(tt,nt){et("verbose",tt,nt)},et.info=function(tt,nt){et("info",tt,nt)},et.warning=function(tt,nt){et("warning",tt,nt)},et.error=function(tt,nt){et("error",tt,nt)},et.fatal=function(tt,nt){et("fatal",tt,nt)},et.reset=_,et.set=b,et.setWithEnv=function(tt){const nt={};tt.logLevel&&(nt.minimalSeverity=tt.logLevel),b("",nt)}})(g||(g={})),s.Logger=g;class j{constructor(_,b,tt,nt,rt,st){this.category=_,this.name=b,this.startTime=tt,this.endCallback=nt,this.timer=rt,this.ctx=st}end(){return this.endCallback(this)}async checkTimer(){if(this.ctx===void 0||this.timer===void 0)throw new Error("No webgl timer found");return this.ctx.endTimer(),this.ctx.waitForQueryAndGetTime(this.timer)}}class _e{constructor(_,b,tt,nt){this.category=_,this.name=b,this.startTime=tt,this.endTime=nt}}s.Profiler=class{static create(et){return et===void 0?new this:new this(et.maxNumberEvents,et.flushBatchSize,et.flushIntervalInMilliseconds)}constructor(et,_,b){this._started=!1,this._flushPointer=0,this._started=!1,this._maxNumberEvents=et===void 0?1e4:et,this._flushBatchSize=_===void 0?10:_,this._flushIntervalInMilliseconds=b===void 0?5e3:b}start(){this._started=!0,this._timingEvents=[],this._flushTime=(0,s.now)(),this._flushPointer=0}stop(){for(this._started=!1;this._flushPointer<this._timingEvents.length;this._flushPointer++)this.logOneEvent(this._timingEvents[this._flushPointer])}event(et,_,b,tt){const nt=this._started?this.begin(et,_,tt):void 0;let rt=!1;const st=b();if(st&&typeof st.then=="function")return rt=!0,new Promise((ot,it)=>{st.then(async at=>{nt&&await nt.end(),ot(at)},async at=>{nt&&await nt.end(),it(at)})});if(!rt&&nt){const ot=nt.end();if(ot&&typeof ot.then=="function")return new Promise((it,at)=>{ot.then(()=>{it(st)},lt=>{at(lt)})})}return st}begin(et,_,b){if(!this._started)throw new Error("profiler is not started yet");if(b===void 0){const tt=(0,s.now)();return this.flush(tt),new j(et,_,tt,nt=>this.endSync(nt))}{const tt=b.beginTimer();return new j(et,_,0,async nt=>this.end(nt),tt,b)}}async end(et){const _=await et.checkTimer();this._timingEvents.length<this._maxNumberEvents&&(this._timingEvents.push(new _e(et.category,et.name,et.startTime,_)),this.flush(_))}endSync(et){const _=(0,s.now)();this._timingEvents.length<this._maxNumberEvents&&(this._timingEvents.push(new _e(et.category,et.name,et.startTime,_)),this.flush(_))}logOneEvent(et){s.Logger.verbose(`Profiler.${et.category}`,`${(et.endTime-et.startTime).toFixed(2)}ms on event '${et.name}' at ${et.endTime.toFixed(2)}`)}flush(et){if(this._timingEvents.length-this._flushPointer>=this._flushBatchSize||et-this._flushTime>=this._flushIntervalInMilliseconds){for(const _=this._flushPointer;this._flushPointer<_+this._flushBatchSize&&this._flushPointer<this._timingEvents.length;this._flushPointer++)this.logOneEvent(this._timingEvents[this._flushPointer]);this._flushTime=(0,s.now)()}}get started(){return this._started}},s.now=typeof performance<"u"&&performance.now?()=>performance.now():Date.now},2644:(i,s,o)=>{Object.defineProperty(s,"__esModule",{value:!0}),s.Model=void 0;const a=o(5686),c=o(1446),d=o(7070),g=o(9395),$=o(2517);var j=g.onnxruntime.experimental.fbs;s.Model=class{constructor(){}load(_e,et,_){if(!_)try{return void this.loadFromOnnxFormat(_e,et)}catch(b){if(_!==void 0)throw b}this.loadFromOrtFormat(_e,et)}loadFromOnnxFormat(_e,et){const _=c.onnx.ModelProto.decode(_e);if($.LongUtil.longToNumber(_.irVersion)<3)throw new Error("only support ONNX model with IR_VERSION>=3");this._opsets=_.opsetImport.map(b=>({domain:b.domain,version:$.LongUtil.longToNumber(b.version)})),this._graph=d.Graph.from(_.graph,et)}loadFromOrtFormat(_e,et){const _=new a.flatbuffers.ByteBuffer(_e),b=j.InferenceSession.getRootAsInferenceSession(_).model();if($.LongUtil.longToNumber(b.irVersion())<3)throw new Error("only support ONNX model with IR_VERSION>=3");this._opsets=[];for(let tt=0;tt<b.opsetImportLength();tt++){const nt=b.opsetImport(tt);this._opsets.push({domain:nt==null?void 0:nt.domain(),version:$.LongUtil.longToNumber(nt.version())})}this._graph=d.Graph.from(b.graph(),et)}get graph(){return this._graph}get opsets(){return this._opsets}}},782:(i,s)=>{Object.defineProperty(s,"__esModule",{value:!0}),s.FLOAT_TYPES=s.INT_TYPES=s.NUMBER_TYPES=void 0,s.NUMBER_TYPES=["float32","float64","int32","int16","int8","uint16","uint32","uint8"],s.INT_TYPES=["int32","int16","int8","uint16","uint32","uint8"],s.FLOAT_TYPES=["float32","float64"]},1047:(i,s)=>{function o(a,c){if(c.endsWith("+")){const d=Number.parseInt(c.substring(0,c.length-1),10);return!isNaN(d)&&d<=a}if(c.split("-").length===2){const d=c.split("-"),g=Number.parseInt(d[0],10),$=Number.parseInt(d[1],10);return!isNaN(g)&&!isNaN($)&&g<=a&&a<=$}return Number.parseInt(c,10)===a}Object.defineProperty(s,"__esModule",{value:!0}),s.resolveOperator=void 0,s.resolveOperator=function(a,c,d){for(const g of d){const $=g[0],j=g[1],_e=g[2],et=g[3],_=g[4];if(a.opType===$){for(const b of c)if((b.domain===j||b.domain==="ai.onnx"&&j==="")&&o(b.version,_e))return{opImpl:et,opInit:_}}}throw new TypeError(`cannot resolve operator '${a.opType}' with opsets: ${c.map(g=>`${g.domain||"ai.onnx"} v${g.version}`).join(", ")}`)}},9395:(i,s,o)=>{Object.defineProperty(s,"__esModule",{value:!0}),s.onnxruntime=void 0;const a=o(5686);var c,d;c=s.onnxruntime||(s.onnxruntime={}),function(g){(function($){$[$.UNDEFINED=0]="UNDEFINED",$[$.FLOAT=1]="FLOAT",$[$.INT=2]="INT",$[$.STRING=3]="STRING",$[$.TENSOR=4]="TENSOR",$[$.GRAPH=5]="GRAPH",$[$.FLOATS=6]="FLOATS",$[$.INTS=7]="INTS",$[$.STRINGS=8]="STRINGS",$[$.TENSORS=9]="TENSORS",$[$.GRAPHS=10]="GRAPHS",$[$.SPARSE_TENSOR=11]="SPARSE_TENSOR",$[$.SPARSE_TENSORS=12]="SPARSE_TENSORS"})(g.AttributeType||(g.AttributeType={}))}((d=c.experimental||(c.experimental={})).fbs||(d.fbs={})),function(g){(function($){(function(j){(function(_e){_e[_e.UNKNOWN=0]="UNKNOWN",_e[_e.VALUE=1]="VALUE",_e[_e.PARAM=2]="PARAM"})(j.DimensionValueType||(j.DimensionValueType={}))})($.fbs||($.fbs={}))})(g.experimental||(g.experimental={}))}(s.onnxruntime||(s.onnxruntime={})),function(g){(function($){(function(j){(function(_e){_e[_e.UNDEFINED=0]="UNDEFINED",_e[_e.FLOAT=1]="FLOAT",_e[_e.UINT8=2]="UINT8",_e[_e.INT8=3]="INT8",_e[_e.UINT16=4]="UINT16",_e[_e.INT16=5]="INT16",_e[_e.INT32=6]="INT32",_e[_e.INT64=7]="INT64",_e[_e.STRING=8]="STRING",_e[_e.BOOL=9]="BOOL",_e[_e.FLOAT16=10]="FLOAT16",_e[_e.DOUBLE=11]="DOUBLE",_e[_e.UINT32=12]="UINT32",_e[_e.UINT64=13]="UINT64",_e[_e.COMPLEX64=14]="COMPLEX64",_e[_e.COMPLEX128=15]="COMPLEX128",_e[_e.BFLOAT16=16]="BFLOAT16"})(j.TensorDataType||(j.TensorDataType={}))})($.fbs||($.fbs={}))})(g.experimental||(g.experimental={}))}(s.onnxruntime||(s.onnxruntime={})),function(g){(function($){(function(j){(function(_e){_e[_e.Primitive=0]="Primitive",_e[_e.Fused=1]="Fused"})(j.NodeType||(j.NodeType={}))})($.fbs||($.fbs={}))})(g.experimental||(g.experimental={}))}(s.onnxruntime||(s.onnxruntime={})),function(g){(function($){(function(j){(function(_e){_e[_e.NONE=0]="NONE",_e[_e.tensor_type=1]="tensor_type",_e[_e.sequence_type=2]="sequence_type",_e[_e.map_type=3]="map_type"})(j.TypeInfoValue||(j.TypeInfoValue={}))})($.fbs||($.fbs={}))})(g.experimental||(g.experimental={}))}(s.onnxruntime||(s.onnxruntime={})),function(g){(function($){(function(j){class _e{constructor(){this.bb=null,this.bb_pos=0}__init(_,b){return this.bb_pos=_,this.bb=b,this}static getRootAsShape(_,b){return(b||new _e).__init(_.readInt32(_.position())+_.position(),_)}static getSizePrefixedRootAsShape(_,b){return _.setPosition(_.position()+a.flatbuffers.SIZE_PREFIX_LENGTH),(b||new _e).__init(_.readInt32(_.position())+_.position(),_)}dim(_,b){let tt=this.bb.__offset(this.bb_pos,4);return tt?(b||new g.experimental.fbs.Dimension).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+tt)+4*_),this.bb):null}dimLength(){let _=this.bb.__offset(this.bb_pos,4);return _?this.bb.__vector_len(this.bb_pos+_):0}static startShape(_){_.startObject(1)}static addDim(_,b){_.addFieldOffset(0,b,0)}static createDimVector(_,b){_.startVector(4,b.length,4);for(let tt=b.length-1;tt>=0;tt--)_.addOffset(b[tt]);return _.endVector()}static startDimVector(_,b){_.startVector(4,b,4)}static endShape(_){return _.endObject()}static createShape(_,b){return _e.startShape(_),_e.addDim(_,b),_e.endShape(_)}}j.Shape=_e})($.fbs||($.fbs={}))})(g.experimental||(g.experimental={}))}(s.onnxruntime||(s.onnxruntime={})),function(g){(function($){(function(j){class _e{constructor(){this.bb=null,this.bb_pos=0}__init(_,b){return this.bb_pos=_,this.bb=b,this}static getRootAsDimension(_,b){return(b||new _e).__init(_.readInt32(_.position())+_.position(),_)}static getSizePrefixedRootAsDimension(_,b){return _.setPosition(_.position()+a.flatbuffers.SIZE_PREFIX_LENGTH),(b||new _e).__init(_.readInt32(_.position())+_.position(),_)}value(_){let b=this.bb.__offset(this.bb_pos,4);return b?(_||new g.experimental.fbs.DimensionValue).__init(this.bb.__indirect(this.bb_pos+b),this.bb):null}denotation(_){let b=this.bb.__offset(this.bb_pos,6);return b?this.bb.__string(this.bb_pos+b,_):null}static startDimension(_){_.startObject(2)}static addValue(_,b){_.addFieldOffset(0,b,0)}static addDenotation(_,b){_.addFieldOffset(1,b,0)}static endDimension(_){return _.endObject()}static createDimension(_,b,tt){return _e.startDimension(_),_e.addValue(_,b),_e.addDenotation(_,tt),_e.endDimension(_)}}j.Dimension=_e})($.fbs||($.fbs={}))})(g.experimental||(g.experimental={}))}(s.onnxruntime||(s.onnxruntime={})),function(g){(function($){(function(j){class _e{constructor(){this.bb=null,this.bb_pos=0}__init(_,b){return this.bb_pos=_,this.bb=b,this}static getRootAsDimensionValue(_,b){return(b||new _e).__init(_.readInt32(_.position())+_.position(),_)}static getSizePrefixedRootAsDimensionValue(_,b){return _.setPosition(_.position()+a.flatbuffers.SIZE_PREFIX_LENGTH),(b||new _e).__init(_.readInt32(_.position())+_.position(),_)}dimType(){let _=this.bb.__offset(this.bb_pos,4);return _?this.bb.readInt8(this.bb_pos+_):g.experimental.fbs.DimensionValueType.UNKNOWN}dimValue(){let _=this.bb.__offset(this.bb_pos,6);return _?this.bb.readInt64(this.bb_pos+_):this.bb.createLong(0,0)}dimParam(_){let b=this.bb.__offset(this.bb_pos,8);return b?this.bb.__string(this.bb_pos+b,_):null}static startDimensionValue(_){_.startObject(3)}static addDimType(_,b){_.addFieldInt8(0,b,g.experimental.fbs.DimensionValueType.UNKNOWN)}static addDimValue(_,b){_.addFieldInt64(1,b,_.createLong(0,0))}static addDimParam(_,b){_.addFieldOffset(2,b,0)}static endDimensionValue(_){return _.endObject()}static createDimensionValue(_,b,tt,nt){return _e.startDimensionValue(_),_e.addDimType(_,b),_e.addDimValue(_,tt),_e.addDimParam(_,nt),_e.endDimensionValue(_)}}j.DimensionValue=_e})($.fbs||($.fbs={}))})(g.experimental||(g.experimental={}))}(s.onnxruntime||(s.onnxruntime={})),function(g){(function($){(function(j){class _e{constructor(){this.bb=null,this.bb_pos=0}__init(_,b){return this.bb_pos=_,this.bb=b,this}static getRootAsTensorTypeAndShape(_,b){return(b||new _e).__init(_.readInt32(_.position())+_.position(),_)}static getSizePrefixedRootAsTensorTypeAndShape(_,b){return _.setPosition(_.position()+a.flatbuffers.SIZE_PREFIX_LENGTH),(b||new _e).__init(_.readInt32(_.position())+_.position(),_)}elemType(){let _=this.bb.__offset(this.bb_pos,4);return _?this.bb.readInt32(this.bb_pos+_):g.experimental.fbs.TensorDataType.UNDEFINED}shape(_){let b=this.bb.__offset(this.bb_pos,6);return b?(_||new g.experimental.fbs.Shape).__init(this.bb.__indirect(this.bb_pos+b),this.bb):null}static startTensorTypeAndShape(_){_.startObject(2)}static addElemType(_,b){_.addFieldInt32(0,b,g.experimental.fbs.TensorDataType.UNDEFINED)}static addShape(_,b){_.addFieldOffset(1,b,0)}static endTensorTypeAndShape(_){return _.endObject()}static createTensorTypeAndShape(_,b,tt){return _e.startTensorTypeAndShape(_),_e.addElemType(_,b),_e.addShape(_,tt),_e.endTensorTypeAndShape(_)}}j.TensorTypeAndShape=_e})($.fbs||($.fbs={}))})(g.experimental||(g.experimental={}))}(s.onnxruntime||(s.onnxruntime={})),function(g){(function($){(function(j){class _e{constructor(){this.bb=null,this.bb_pos=0}__init(_,b){return this.bb_pos=_,this.bb=b,this}static getRootAsMapType(_,b){return(b||new _e).__init(_.readInt32(_.position())+_.position(),_)}static getSizePrefixedRootAsMapType(_,b){return _.setPosition(_.position()+a.flatbuffers.SIZE_PREFIX_LENGTH),(b||new _e).__init(_.readInt32(_.position())+_.position(),_)}keyType(){let _=this.bb.__offset(this.bb_pos,4);return _?this.bb.readInt32(this.bb_pos+_):g.experimental.fbs.TensorDataType.UNDEFINED}valueType(_){let b=this.bb.__offset(this.bb_pos,6);return b?(_||new g.experimental.fbs.TypeInfo).__init(this.bb.__indirect(this.bb_pos+b),this.bb):null}static startMapType(_){_.startObject(2)}static addKeyType(_,b){_.addFieldInt32(0,b,g.experimental.fbs.TensorDataType.UNDEFINED)}static addValueType(_,b){_.addFieldOffset(1,b,0)}static endMapType(_){return _.endObject()}static createMapType(_,b,tt){return _e.startMapType(_),_e.addKeyType(_,b),_e.addValueType(_,tt),_e.endMapType(_)}}j.MapType=_e})($.fbs||($.fbs={}))})(g.experimental||(g.experimental={}))}(s.onnxruntime||(s.onnxruntime={})),function(g){(function($){(function(j){class _e{constructor(){this.bb=null,this.bb_pos=0}__init(_,b){return this.bb_pos=_,this.bb=b,this}static getRootAsSequenceType(_,b){return(b||new _e).__init(_.readInt32(_.position())+_.position(),_)}static getSizePrefixedRootAsSequenceType(_,b){return _.setPosition(_.position()+a.flatbuffers.SIZE_PREFIX_LENGTH),(b||new _e).__init(_.readInt32(_.position())+_.position(),_)}elemType(_){let b=this.bb.__offset(this.bb_pos,4);return b?(_||new g.experimental.fbs.TypeInfo).__init(this.bb.__indirect(this.bb_pos+b),this.bb):null}static startSequenceType(_){_.startObject(1)}static addElemType(_,b){_.addFieldOffset(0,b,0)}static endSequenceType(_){return _.endObject()}static createSequenceType(_,b){return _e.startSequenceType(_),_e.addElemType(_,b),_e.endSequenceType(_)}}j.SequenceType=_e})($.fbs||($.fbs={}))})(g.experimental||(g.experimental={}))}(s.onnxruntime||(s.onnxruntime={})),function(g){(function($){($.fbs||($.fbs={})).EdgeEnd=class{constructor(){this.bb=null,this.bb_pos=0}__init(j,_e){return this.bb_pos=j,this.bb=_e,this}nodeIndex(){return this.bb.readUint32(this.bb_pos)}srcArgIndex(){return this.bb.readInt32(this.bb_pos+4)}dstArgIndex(){return this.bb.readInt32(this.bb_pos+8)}static createEdgeEnd(j,_e,et,_){return j.prep(4,12),j.writeInt32(_),j.writeInt32(et),j.writeInt32(_e),j.offset()}}})(g.experimental||(g.experimental={}))}(s.onnxruntime||(s.onnxruntime={})),function(g){(function($){(function(j){class _e{constructor(){this.bb=null,this.bb_pos=0}__init(_,b){return this.bb_pos=_,this.bb=b,this}static getRootAsNodeEdge(_,b){return(b||new _e).__init(_.readInt32(_.position())+_.position(),_)}static getSizePrefixedRootAsNodeEdge(_,b){return _.setPosition(_.position()+a.flatbuffers.SIZE_PREFIX_LENGTH),(b||new _e).__init(_.readInt32(_.position())+_.position(),_)}nodeIndex(){let _=this.bb.__offset(this.bb_pos,4);return _?this.bb.readUint32(this.bb_pos+_):0}inputEdges(_,b){let tt=this.bb.__offset(this.bb_pos,6);return tt?(b||new g.experimental.fbs.EdgeEnd).__init(this.bb.__vector(this.bb_pos+tt)+12*_,this.bb):null}inputEdgesLength(){let _=this.bb.__offset(this.bb_pos,6);return _?this.bb.__vector_len(this.bb_pos+_):0}outputEdges(_,b){let tt=this.bb.__offset(this.bb_pos,8);return tt?(b||new g.experimental.fbs.EdgeEnd).__init(this.bb.__vector(this.bb_pos+tt)+12*_,this.bb):null}outputEdgesLength(){let _=this.bb.__offset(this.bb_pos,8);return _?this.bb.__vector_len(this.bb_pos+_):0}static startNodeEdge(_){_.startObject(3)}static addNodeIndex(_,b){_.addFieldInt32(0,b,0)}static addInputEdges(_,b){_.addFieldOffset(1,b,0)}static startInputEdgesVector(_,b){_.startVector(12,b,4)}static addOutputEdges(_,b){_.addFieldOffset(2,b,0)}static startOutputEdgesVector(_,b){_.startVector(12,b,4)}static endNodeEdge(_){return _.endObject()}static createNodeEdge(_,b,tt,nt){return _e.startNodeEdge(_),_e.addNodeIndex(_,b),_e.addInputEdges(_,tt),_e.addOutputEdges(_,nt),_e.endNodeEdge(_)}}j.NodeEdge=_e})($.fbs||($.fbs={}))})(g.experimental||(g.experimental={}))}(s.onnxruntime||(s.onnxruntime={})),function(g){(function($){(function(j){class _e{constructor(){this.bb=null,this.bb_pos=0}__init(_,b){return this.bb_pos=_,this.bb=b,this}static getRootAsNode(_,b){return(b||new _e).__init(_.readInt32(_.position())+_.position(),_)}static getSizePrefixedRootAsNode(_,b){return _.setPosition(_.position()+a.flatbuffers.SIZE_PREFIX_LENGTH),(b||new _e).__init(_.readInt32(_.position())+_.position(),_)}name(_){let b=this.bb.__offset(this.bb_pos,4);return b?this.bb.__string(this.bb_pos+b,_):null}docString(_){let b=this.bb.__offset(this.bb_pos,6);return b?this.bb.__string(this.bb_pos+b,_):null}domain(_){let b=this.bb.__offset(this.bb_pos,8);return b?this.bb.__string(this.bb_pos+b,_):null}sinceVersion(){let _=this.bb.__offset(this.bb_pos,10);return _?this.bb.readInt32(this.bb_pos+_):0}index(){let _=this.bb.__offset(this.bb_pos,12);return _?this.bb.readUint32(this.bb_pos+_):0}opType(_){let b=this.bb.__offset(this.bb_pos,14);return b?this.bb.__string(this.bb_pos+b,_):null}type(){let _=this.bb.__offset(this.bb_pos,16);return _?this.bb.readInt32(this.bb_pos+_):g.experimental.fbs.NodeType.Primitive}executionProviderType(_){let b=this.bb.__offset(this.bb_pos,18);return b?this.bb.__string(this.bb_pos+b,_):null}inputs(_,b){let tt=this.bb.__offset(this.bb_pos,20);return tt?this.bb.__string(this.bb.__vector(this.bb_pos+tt)+4*_,b):null}inputsLength(){let _=this.bb.__offset(this.bb_pos,20);return _?this.bb.__vector_len(this.bb_pos+_):0}outputs(_,b){let tt=this.bb.__offset(this.bb_pos,22);return tt?this.bb.__string(this.bb.__vector(this.bb_pos+tt)+4*_,b):null}outputsLength(){let _=this.bb.__offset(this.bb_pos,22);return _?this.bb.__vector_len(this.bb_pos+_):0}attributes(_,b){let tt=this.bb.__offset(this.bb_pos,24);return tt?(b||new g.experimental.fbs.Attribute).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+tt)+4*_),this.bb):null}attributesLength(){let _=this.bb.__offset(this.bb_pos,24);return _?this.bb.__vector_len(this.bb_pos+_):0}inputArgCounts(_){let b=this.bb.__offset(this.bb_pos,26);return b?this.bb.readInt32(this.bb.__vector(this.bb_pos+b)+4*_):0}inputArgCountsLength(){let _=this.bb.__offset(this.bb_pos,26);return _?this.bb.__vector_len(this.bb_pos+_):0}inputArgCountsArray(){let _=this.bb.__offset(this.bb_pos,26);return _?new Int32Array(this.bb.bytes().buffer,this.bb.bytes().byteOffset+this.bb.__vector(this.bb_pos+_),this.bb.__vector_len(this.bb_pos+_)):null}implicitInputs(_,b){let tt=this.bb.__offset(this.bb_pos,28);return tt?this.bb.__string(this.bb.__vector(this.bb_pos+tt)+4*_,b):null}implicitInputsLength(){let _=this.bb.__offset(this.bb_pos,28);return _?this.bb.__vector_len(this.bb_pos+_):0}static startNode(_){_.startObject(13)}static addName(_,b){_.addFieldOffset(0,b,0)}static addDocString(_,b){_.addFieldOffset(1,b,0)}static addDomain(_,b){_.addFieldOffset(2,b,0)}static addSinceVersion(_,b){_.addFieldInt32(3,b,0)}static addIndex(_,b){_.addFieldInt32(4,b,0)}static addOpType(_,b){_.addFieldOffset(5,b,0)}static addType(_,b){_.addFieldInt32(6,b,g.experimental.fbs.NodeType.Primitive)}static addExecutionProviderType(_,b){_.addFieldOffset(7,b,0)}static addInputs(_,b){_.addFieldOffset(8,b,0)}static createInputsVector(_,b){_.startVector(4,b.length,4);for(let tt=b.length-1;tt>=0;tt--)_.addOffset(b[tt]);return _.endVector()}static startInputsVector(_,b){_.startVector(4,b,4)}static addOutputs(_,b){_.addFieldOffset(9,b,0)}static createOutputsVector(_,b){_.startVector(4,b.length,4);for(let tt=b.length-1;tt>=0;tt--)_.addOffset(b[tt]);return _.endVector()}static startOutputsVector(_,b){_.startVector(4,b,4)}static addAttributes(_,b){_.addFieldOffset(10,b,0)}static createAttributesVector(_,b){_.startVector(4,b.length,4);for(let tt=b.length-1;tt>=0;tt--)_.addOffset(b[tt]);return _.endVector()}static startAttributesVector(_,b){_.startVector(4,b,4)}static addInputArgCounts(_,b){_.addFieldOffset(11,b,0)}static createInputArgCountsVector(_,b){_.startVector(4,b.length,4);for(let tt=b.length-1;tt>=0;tt--)_.addInt32(b[tt]);return _.endVector()}static startInputArgCountsVector(_,b){_.startVector(4,b,4)}static addImplicitInputs(_,b){_.addFieldOffset(12,b,0)}static createImplicitInputsVector(_,b){_.startVector(4,b.length,4);for(let tt=b.length-1;tt>=0;tt--)_.addOffset(b[tt]);return _.endVector()}static startImplicitInputsVector(_,b){_.startVector(4,b,4)}static endNode(_){return _.endObject()}static createNode(_,b,tt,nt,rt,st,ot,it,at,lt,ut,ct,dt,pt){return _e.startNode(_),_e.addName(_,b),_e.addDocString(_,tt),_e.addDomain(_,nt),_e.addSinceVersion(_,rt),_e.addIndex(_,st),_e.addOpType(_,ot),_e.addType(_,it),_e.addExecutionProviderType(_,at),_e.addInputs(_,lt),_e.addOutputs(_,ut),_e.addAttributes(_,ct),_e.addInputArgCounts(_,dt),_e.addImplicitInputs(_,pt),_e.endNode(_)}}j.Node=_e})($.fbs||($.fbs={}))})(g.experimental||(g.experimental={}))}(s.onnxruntime||(s.onnxruntime={})),function(g){(function($){(function(j){class _e{constructor(){this.bb=null,this.bb_pos=0}__init(_,b){return this.bb_pos=_,this.bb=b,this}static getRootAsValueInfo(_,b){return(b||new _e).__init(_.readInt32(_.position())+_.position(),_)}static getSizePrefixedRootAsValueInfo(_,b){return _.setPosition(_.position()+a.flatbuffers.SIZE_PREFIX_LENGTH),(b||new _e).__init(_.readInt32(_.position())+_.position(),_)}name(_){let b=this.bb.__offset(this.bb_pos,4);return b?this.bb.__string(this.bb_pos+b,_):null}docString(_){let b=this.bb.__offset(this.bb_pos,6);return b?this.bb.__string(this.bb_pos+b,_):null}type(_){let b=this.bb.__offset(this.bb_pos,8);return b?(_||new g.experimental.fbs.TypeInfo).__init(this.bb.__indirect(this.bb_pos+b),this.bb):null}static startValueInfo(_){_.startObject(3)}static addName(_,b){_.addFieldOffset(0,b,0)}static addDocString(_,b){_.addFieldOffset(1,b,0)}static addType(_,b){_.addFieldOffset(2,b,0)}static endValueInfo(_){return _.endObject()}static createValueInfo(_,b,tt,nt){return _e.startValueInfo(_),_e.addName(_,b),_e.addDocString(_,tt),_e.addType(_,nt),_e.endValueInfo(_)}}j.ValueInfo=_e})($.fbs||($.fbs={}))})(g.experimental||(g.experimental={}))}(s.onnxruntime||(s.onnxruntime={})),function(g){(function($){(function(j){class _e{constructor(){this.bb=null,this.bb_pos=0}__init(_,b){return this.bb_pos=_,this.bb=b,this}static getRootAsTypeInfo(_,b){return(b||new _e).__init(_.readInt32(_.position())+_.position(),_)}static getSizePrefixedRootAsTypeInfo(_,b){return _.setPosition(_.position()+a.flatbuffers.SIZE_PREFIX_LENGTH),(b||new _e).__init(_.readInt32(_.position())+_.position(),_)}denotation(_){let b=this.bb.__offset(this.bb_pos,4);return b?this.bb.__string(this.bb_pos+b,_):null}valueType(){let _=this.bb.__offset(this.bb_pos,6);return _?this.bb.readUint8(this.bb_pos+_):g.experimental.fbs.TypeInfoValue.NONE}value(_){let b=this.bb.__offset(this.bb_pos,8);return b?this.bb.__union(_,this.bb_pos+b):null}static startTypeInfo(_){_.startObject(3)}static addDenotation(_,b){_.addFieldOffset(0,b,0)}static addValueType(_,b){_.addFieldInt8(1,b,g.experimental.fbs.TypeInfoValue.NONE)}static addValue(_,b){_.addFieldOffset(2,b,0)}static endTypeInfo(_){return _.endObject()}static createTypeInfo(_,b,tt,nt){return _e.startTypeInfo(_),_e.addDenotation(_,b),_e.addValueType(_,tt),_e.addValue(_,nt),_e.endTypeInfo(_)}}j.TypeInfo=_e})($.fbs||($.fbs={}))})(g.experimental||(g.experimental={}))}(s.onnxruntime||(s.onnxruntime={})),function(g){(function($){(function(j){class _e{constructor(){this.bb=null,this.bb_pos=0}__init(_,b){return this.bb_pos=_,this.bb=b,this}static getRootAsOperatorSetId(_,b){return(b||new _e).__init(_.readInt32(_.position())+_.position(),_)}static getSizePrefixedRootAsOperatorSetId(_,b){return _.setPosition(_.position()+a.flatbuffers.SIZE_PREFIX_LENGTH),(b||new _e).__init(_.readInt32(_.position())+_.position(),_)}domain(_){let b=this.bb.__offset(this.bb_pos,4);return b?this.bb.__string(this.bb_pos+b,_):null}version(){let _=this.bb.__offset(this.bb_pos,6);return _?this.bb.readInt64(this.bb_pos+_):this.bb.createLong(0,0)}static startOperatorSetId(_){_.startObject(2)}static addDomain(_,b){_.addFieldOffset(0,b,0)}static addVersion(_,b){_.addFieldInt64(1,b,_.createLong(0,0))}static endOperatorSetId(_){return _.endObject()}static createOperatorSetId(_,b,tt){return _e.startOperatorSetId(_),_e.addDomain(_,b),_e.addVersion(_,tt),_e.endOperatorSetId(_)}}j.OperatorSetId=_e})($.fbs||($.fbs={}))})(g.experimental||(g.experimental={}))}(s.onnxruntime||(s.onnxruntime={})),function(g){(function($){(function(j){class _e{constructor(){this.bb=null,this.bb_pos=0}__init(_,b){return this.bb_pos=_,this.bb=b,this}static getRootAsTensor(_,b){return(b||new _e).__init(_.readInt32(_.position())+_.position(),_)}static getSizePrefixedRootAsTensor(_,b){return _.setPosition(_.position()+a.flatbuffers.SIZE_PREFIX_LENGTH),(b||new _e).__init(_.readInt32(_.position())+_.position(),_)}name(_){let b=this.bb.__offset(this.bb_pos,4);return b?this.bb.__string(this.bb_pos+b,_):null}docString(_){let b=this.bb.__offset(this.bb_pos,6);return b?this.bb.__string(this.bb_pos+b,_):null}dims(_){let b=this.bb.__offset(this.bb_pos,8);return b?this.bb.readInt64(this.bb.__vector(this.bb_pos+b)+8*_):this.bb.createLong(0,0)}dimsLength(){let _=this.bb.__offset(this.bb_pos,8);return _?this.bb.__vector_len(this.bb_pos+_):0}dataType(){let _=this.bb.__offset(this.bb_pos,10);return _?this.bb.readInt32(this.bb_pos+_):g.experimental.fbs.TensorDataType.UNDEFINED}rawData(_){let b=this.bb.__offset(this.bb_pos,12);return b?this.bb.readUint8(this.bb.__vector(this.bb_pos+b)+_):0}rawDataLength(){let _=this.bb.__offset(this.bb_pos,12);return _?this.bb.__vector_len(this.bb_pos+_):0}rawDataArray(){let _=this.bb.__offset(this.bb_pos,12);return _?new Uint8Array(this.bb.bytes().buffer,this.bb.bytes().byteOffset+this.bb.__vector(this.bb_pos+_),this.bb.__vector_len(this.bb_pos+_)):null}stringData(_,b){let tt=this.bb.__offset(this.bb_pos,14);return tt?this.bb.__string(this.bb.__vector(this.bb_pos+tt)+4*_,b):null}stringDataLength(){let _=this.bb.__offset(this.bb_pos,14);return _?this.bb.__vector_len(this.bb_pos+_):0}static startTensor(_){_.startObject(6)}static addName(_,b){_.addFieldOffset(0,b,0)}static addDocString(_,b){_.addFieldOffset(1,b,0)}static addDims(_,b){_.addFieldOffset(2,b,0)}static createDimsVector(_,b){_.startVector(8,b.length,8);for(let tt=b.length-1;tt>=0;tt--)_.addInt64(b[tt]);return _.endVector()}static startDimsVector(_,b){_.startVector(8,b,8)}static addDataType(_,b){_.addFieldInt32(3,b,g.experimental.fbs.TensorDataType.UNDEFINED)}static addRawData(_,b){_.addFieldOffset(4,b,0)}static createRawDataVector(_,b){_.startVector(1,b.length,1);for(let tt=b.length-1;tt>=0;tt--)_.addInt8(b[tt]);return _.endVector()}static startRawDataVector(_,b){_.startVector(1,b,1)}static addStringData(_,b){_.addFieldOffset(5,b,0)}static createStringDataVector(_,b){_.startVector(4,b.length,4);for(let tt=b.length-1;tt>=0;tt--)_.addOffset(b[tt]);return _.endVector()}static startStringDataVector(_,b){_.startVector(4,b,4)}static endTensor(_){return _.endObject()}static createTensor(_,b,tt,nt,rt,st,ot){return _e.startTensor(_),_e.addName(_,b),_e.addDocString(_,tt),_e.addDims(_,nt),_e.addDataType(_,rt),_e.addRawData(_,st),_e.addStringData(_,ot),_e.endTensor(_)}}j.Tensor=_e})($.fbs||($.fbs={}))})(g.experimental||(g.experimental={}))}(s.onnxruntime||(s.onnxruntime={})),function(g){(function($){(function(j){class _e{constructor(){this.bb=null,this.bb_pos=0}__init(_,b){return this.bb_pos=_,this.bb=b,this}static getRootAsSparseTensor(_,b){return(b||new _e).__init(_.readInt32(_.position())+_.position(),_)}static getSizePrefixedRootAsSparseTensor(_,b){return _.setPosition(_.position()+a.flatbuffers.SIZE_PREFIX_LENGTH),(b||new _e).__init(_.readInt32(_.position())+_.position(),_)}values(_){let b=this.bb.__offset(this.bb_pos,4);return b?(_||new g.experimental.fbs.Tensor).__init(this.bb.__indirect(this.bb_pos+b),this.bb):null}indices(_){let b=this.bb.__offset(this.bb_pos,6);return b?(_||new g.experimental.fbs.Tensor).__init(this.bb.__indirect(this.bb_pos+b),this.bb):null}dims(_){let b=this.bb.__offset(this.bb_pos,8);return b?this.bb.readInt64(this.bb.__vector(this.bb_pos+b)+8*_):this.bb.createLong(0,0)}dimsLength(){let _=this.bb.__offset(this.bb_pos,8);return _?this.bb.__vector_len(this.bb_pos+_):0}static startSparseTensor(_){_.startObject(3)}static addValues(_,b){_.addFieldOffset(0,b,0)}static addIndices(_,b){_.addFieldOffset(1,b,0)}static addDims(_,b){_.addFieldOffset(2,b,0)}static createDimsVector(_,b){_.startVector(8,b.length,8);for(let tt=b.length-1;tt>=0;tt--)_.addInt64(b[tt]);return _.endVector()}static startDimsVector(_,b){_.startVector(8,b,8)}static endSparseTensor(_){return _.endObject()}static createSparseTensor(_,b,tt,nt){return _e.startSparseTensor(_),_e.addValues(_,b),_e.addIndices(_,tt),_e.addDims(_,nt),_e.endSparseTensor(_)}}j.SparseTensor=_e})($.fbs||($.fbs={}))})(g.experimental||(g.experimental={}))}(s.onnxruntime||(s.onnxruntime={})),function(g){(function($){(function(j){class _e{constructor(){this.bb=null,this.bb_pos=0}__init(_,b){return this.bb_pos=_,this.bb=b,this}static getRootAsAttribute(_,b){return(b||new _e).__init(_.readInt32(_.position())+_.position(),_)}static getSizePrefixedRootAsAttribute(_,b){return _.setPosition(_.position()+a.flatbuffers.SIZE_PREFIX_LENGTH),(b||new _e).__init(_.readInt32(_.position())+_.position(),_)}name(_){let b=this.bb.__offset(this.bb_pos,4);return b?this.bb.__string(this.bb_pos+b,_):null}docString(_){let b=this.bb.__offset(this.bb_pos,6);return b?this.bb.__string(this.bb_pos+b,_):null}type(){let _=this.bb.__offset(this.bb_pos,8);return _?this.bb.readInt32(this.bb_pos+_):g.experimental.fbs.AttributeType.UNDEFINED}f(){let _=this.bb.__offset(this.bb_pos,10);return _?this.bb.readFloat32(this.bb_pos+_):0}i(){let _=this.bb.__offset(this.bb_pos,12);return _?this.bb.readInt64(this.bb_pos+_):this.bb.createLong(0,0)}s(_){let b=this.bb.__offset(this.bb_pos,14);return b?this.bb.__string(this.bb_pos+b,_):null}t(_){let b=this.bb.__offset(this.bb_pos,16);return b?(_||new g.experimental.fbs.Tensor).__init(this.bb.__indirect(this.bb_pos+b),this.bb):null}g(_){let b=this.bb.__offset(this.bb_pos,18);return b?(_||new g.experimental.fbs.Graph).__init(this.bb.__indirect(this.bb_pos+b),this.bb):null}floats(_){let b=this.bb.__offset(this.bb_pos,20);return b?this.bb.readFloat32(this.bb.__vector(this.bb_pos+b)+4*_):0}floatsLength(){let _=this.bb.__offset(this.bb_pos,20);return _?this.bb.__vector_len(this.bb_pos+_):0}floatsArray(){let _=this.bb.__offset(this.bb_pos,20);return _?new Float32Array(this.bb.bytes().buffer,this.bb.bytes().byteOffset+this.bb.__vector(this.bb_pos+_),this.bb.__vector_len(this.bb_pos+_)):null}ints(_){let b=this.bb.__offset(this.bb_pos,22);return b?this.bb.readInt64(this.bb.__vector(this.bb_pos+b)+8*_):this.bb.createLong(0,0)}intsLength(){let _=this.bb.__offset(this.bb_pos,22);return _?this.bb.__vector_len(this.bb_pos+_):0}strings(_,b){let tt=this.bb.__offset(this.bb_pos,24);return tt?this.bb.__string(this.bb.__vector(this.bb_pos+tt)+4*_,b):null}stringsLength(){let _=this.bb.__offset(this.bb_pos,24);return _?this.bb.__vector_len(this.bb_pos+_):0}tensors(_,b){let tt=this.bb.__offset(this.bb_pos,26);return tt?(b||new g.experimental.fbs.Tensor).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+tt)+4*_),this.bb):null}tensorsLength(){let _=this.bb.__offset(this.bb_pos,26);return _?this.bb.__vector_len(this.bb_pos+_):0}graphs(_,b){let tt=this.bb.__offset(this.bb_pos,28);return tt?(b||new g.experimental.fbs.Graph).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+tt)+4*_),this.bb):null}graphsLength(){let _=this.bb.__offset(this.bb_pos,28);return _?this.bb.__vector_len(this.bb_pos+_):0}static startAttribute(_){_.startObject(13)}static addName(_,b){_.addFieldOffset(0,b,0)}static addDocString(_,b){_.addFieldOffset(1,b,0)}static addType(_,b){_.addFieldInt32(2,b,g.experimental.fbs.AttributeType.UNDEFINED)}static addF(_,b){_.addFieldFloat32(3,b,0)}static addI(_,b){_.addFieldInt64(4,b,_.createLong(0,0))}static addS(_,b){_.addFieldOffset(5,b,0)}static addT(_,b){_.addFieldOffset(6,b,0)}static addG(_,b){_.addFieldOffset(7,b,0)}static addFloats(_,b){_.addFieldOffset(8,b,0)}static createFloatsVector(_,b){_.startVector(4,b.length,4);for(let tt=b.length-1;tt>=0;tt--)_.addFloat32(b[tt]);return _.endVector()}static startFloatsVector(_,b){_.startVector(4,b,4)}static addInts(_,b){_.addFieldOffset(9,b,0)}static createIntsVector(_,b){_.startVector(8,b.length,8);for(let tt=b.length-1;tt>=0;tt--)_.addInt64(b[tt]);return _.endVector()}static startIntsVector(_,b){_.startVector(8,b,8)}static addStrings(_,b){_.addFieldOffset(10,b,0)}static createStringsVector(_,b){_.startVector(4,b.length,4);for(let tt=b.length-1;tt>=0;tt--)_.addOffset(b[tt]);return _.endVector()}static startStringsVector(_,b){_.startVector(4,b,4)}static addTensors(_,b){_.addFieldOffset(11,b,0)}static createTensorsVector(_,b){_.startVector(4,b.length,4);for(let tt=b.length-1;tt>=0;tt--)_.addOffset(b[tt]);return _.endVector()}static startTensorsVector(_,b){_.startVector(4,b,4)}static addGraphs(_,b){_.addFieldOffset(12,b,0)}static createGraphsVector(_,b){_.startVector(4,b.length,4);for(let tt=b.length-1;tt>=0;tt--)_.addOffset(b[tt]);return _.endVector()}static startGraphsVector(_,b){_.startVector(4,b,4)}static endAttribute(_){return _.endObject()}static createAttribute(_,b,tt,nt,rt,st,ot,it,at,lt,ut,ct,dt,pt){return _e.startAttribute(_),_e.addName(_,b),_e.addDocString(_,tt),_e.addType(_,nt),_e.addF(_,rt),_e.addI(_,st),_e.addS(_,ot),_e.addT(_,it),_e.addG(_,at),_e.addFloats(_,lt),_e.addInts(_,ut),_e.addStrings(_,ct),_e.addTensors(_,dt),_e.addGraphs(_,pt),_e.endAttribute(_)}}j.Attribute=_e})($.fbs||($.fbs={}))})(g.experimental||(g.experimental={}))}(s.onnxruntime||(s.onnxruntime={})),function(g){(function($){(function(j){class _e{constructor(){this.bb=null,this.bb_pos=0}__init(_,b){return this.bb_pos=_,this.bb=b,this}static getRootAsGraph(_,b){return(b||new _e).__init(_.readInt32(_.position())+_.position(),_)}static getSizePrefixedRootAsGraph(_,b){return _.setPosition(_.position()+a.flatbuffers.SIZE_PREFIX_LENGTH),(b||new _e).__init(_.readInt32(_.position())+_.position(),_)}initializers(_,b){let tt=this.bb.__offset(this.bb_pos,4);return tt?(b||new g.experimental.fbs.Tensor).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+tt)+4*_),this.bb):null}initializersLength(){let _=this.bb.__offset(this.bb_pos,4);return _?this.bb.__vector_len(this.bb_pos+_):0}nodeArgs(_,b){let tt=this.bb.__offset(this.bb_pos,6);return tt?(b||new g.experimental.fbs.ValueInfo).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+tt)+4*_),this.bb):null}nodeArgsLength(){let _=this.bb.__offset(this.bb_pos,6);return _?this.bb.__vector_len(this.bb_pos+_):0}nodes(_,b){let tt=this.bb.__offset(this.bb_pos,8);return tt?(b||new g.experimental.fbs.Node).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+tt)+4*_),this.bb):null}nodesLength(){let _=this.bb.__offset(this.bb_pos,8);return _?this.bb.__vector_len(this.bb_pos+_):0}maxNodeIndex(){let _=this.bb.__offset(this.bb_pos,10);return _?this.bb.readUint32(this.bb_pos+_):0}nodeEdges(_,b){let tt=this.bb.__offset(this.bb_pos,12);return tt?(b||new g.experimental.fbs.NodeEdge).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+tt)+4*_),this.bb):null}nodeEdgesLength(){let _=this.bb.__offset(this.bb_pos,12);return _?this.bb.__vector_len(this.bb_pos+_):0}inputs(_,b){let tt=this.bb.__offset(this.bb_pos,14);return tt?this.bb.__string(this.bb.__vector(this.bb_pos+tt)+4*_,b):null}inputsLength(){let _=this.bb.__offset(this.bb_pos,14);return _?this.bb.__vector_len(this.bb_pos+_):0}outputs(_,b){let tt=this.bb.__offset(this.bb_pos,16);return tt?this.bb.__string(this.bb.__vector(this.bb_pos+tt)+4*_,b):null}outputsLength(){let _=this.bb.__offset(this.bb_pos,16);return _?this.bb.__vector_len(this.bb_pos+_):0}sparseInitializers(_,b){let tt=this.bb.__offset(this.bb_pos,18);return tt?(b||new g.experimental.fbs.SparseTensor).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+tt)+4*_),this.bb):null}sparseInitializersLength(){let _=this.bb.__offset(this.bb_pos,18);return _?this.bb.__vector_len(this.bb_pos+_):0}static startGraph(_){_.startObject(8)}static addInitializers(_,b){_.addFieldOffset(0,b,0)}static createInitializersVector(_,b){_.startVector(4,b.length,4);for(let tt=b.length-1;tt>=0;tt--)_.addOffset(b[tt]);return _.endVector()}static startInitializersVector(_,b){_.startVector(4,b,4)}static addNodeArgs(_,b){_.addFieldOffset(1,b,0)}static createNodeArgsVector(_,b){_.startVector(4,b.length,4);for(let tt=b.length-1;tt>=0;tt--)_.addOffset(b[tt]);return _.endVector()}static startNodeArgsVector(_,b){_.startVector(4,b,4)}static addNodes(_,b){_.addFieldOffset(2,b,0)}static createNodesVector(_,b){_.startVector(4,b.length,4);for(let tt=b.length-1;tt>=0;tt--)_.addOffset(b[tt]);return _.endVector()}static startNodesVector(_,b){_.startVector(4,b,4)}static addMaxNodeIndex(_,b){_.addFieldInt32(3,b,0)}static addNodeEdges(_,b){_.addFieldOffset(4,b,0)}static createNodeEdgesVector(_,b){_.startVector(4,b.length,4);for(let tt=b.length-1;tt>=0;tt--)_.addOffset(b[tt]);return _.endVector()}static startNodeEdgesVector(_,b){_.startVector(4,b,4)}static addInputs(_,b){_.addFieldOffset(5,b,0)}static createInputsVector(_,b){_.startVector(4,b.length,4);for(let tt=b.length-1;tt>=0;tt--)_.addOffset(b[tt]);return _.endVector()}static startInputsVector(_,b){_.startVector(4,b,4)}static addOutputs(_,b){_.addFieldOffset(6,b,0)}static createOutputsVector(_,b){_.startVector(4,b.length,4);for(let tt=b.length-1;tt>=0;tt--)_.addOffset(b[tt]);return _.endVector()}static startOutputsVector(_,b){_.startVector(4,b,4)}static addSparseInitializers(_,b){_.addFieldOffset(7,b,0)}static createSparseInitializersVector(_,b){_.startVector(4,b.length,4);for(let tt=b.length-1;tt>=0;tt--)_.addOffset(b[tt]);return _.endVector()}static startSparseInitializersVector(_,b){_.startVector(4,b,4)}static endGraph(_){return _.endObject()}static createGraph(_,b,tt,nt,rt,st,ot,it,at){return _e.startGraph(_),_e.addInitializers(_,b),_e.addNodeArgs(_,tt),_e.addNodes(_,nt),_e.addMaxNodeIndex(_,rt),_e.addNodeEdges(_,st),_e.addInputs(_,ot),_e.addOutputs(_,it),_e.addSparseInitializers(_,at),_e.endGraph(_)}}j.Graph=_e})($.fbs||($.fbs={}))})(g.experimental||(g.experimental={}))}(s.onnxruntime||(s.onnxruntime={})),function(g){(function($){(function(j){class _e{constructor(){this.bb=null,this.bb_pos=0}__init(_,b){return this.bb_pos=_,this.bb=b,this}static getRootAsModel(_,b){return(b||new _e).__init(_.readInt32(_.position())+_.position(),_)}static getSizePrefixedRootAsModel(_,b){return _.setPosition(_.position()+a.flatbuffers.SIZE_PREFIX_LENGTH),(b||new _e).__init(_.readInt32(_.position())+_.position(),_)}irVersion(){let _=this.bb.__offset(this.bb_pos,4);return _?this.bb.readInt64(this.bb_pos+_):this.bb.createLong(0,0)}opsetImport(_,b){let tt=this.bb.__offset(this.bb_pos,6);return tt?(b||new g.experimental.fbs.OperatorSetId).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+tt)+4*_),this.bb):null}opsetImportLength(){let _=this.bb.__offset(this.bb_pos,6);return _?this.bb.__vector_len(this.bb_pos+_):0}producerName(_){let b=this.bb.__offset(this.bb_pos,8);return b?this.bb.__string(this.bb_pos+b,_):null}producerVersion(_){let b=this.bb.__offset(this.bb_pos,10);return b?this.bb.__string(this.bb_pos+b,_):null}domain(_){let b=this.bb.__offset(this.bb_pos,12);return b?this.bb.__string(this.bb_pos+b,_):null}modelVersion(){let _=this.bb.__offset(this.bb_pos,14);return _?this.bb.readInt64(this.bb_pos+_):this.bb.createLong(0,0)}docString(_){let b=this.bb.__offset(this.bb_pos,16);return b?this.bb.__string(this.bb_pos+b,_):null}graph(_){let b=this.bb.__offset(this.bb_pos,18);return b?(_||new g.experimental.fbs.Graph).__init(this.bb.__indirect(this.bb_pos+b),this.bb):null}graphDocString(_){let b=this.bb.__offset(this.bb_pos,20);return b?this.bb.__string(this.bb_pos+b,_):null}static startModel(_){_.startObject(9)}static addIrVersion(_,b){_.addFieldInt64(0,b,_.createLong(0,0))}static addOpsetImport(_,b){_.addFieldOffset(1,b,0)}static createOpsetImportVector(_,b){_.startVector(4,b.length,4);for(let tt=b.length-1;tt>=0;tt--)_.addOffset(b[tt]);return _.endVector()}static startOpsetImportVector(_,b){_.startVector(4,b,4)}static addProducerName(_,b){_.addFieldOffset(2,b,0)}static addProducerVersion(_,b){_.addFieldOffset(3,b,0)}static addDomain(_,b){_.addFieldOffset(4,b,0)}static addModelVersion(_,b){_.addFieldInt64(5,b,_.createLong(0,0))}static addDocString(_,b){_.addFieldOffset(6,b,0)}static addGraph(_,b){_.addFieldOffset(7,b,0)}static addGraphDocString(_,b){_.addFieldOffset(8,b,0)}static endModel(_){return _.endObject()}static createModel(_,b,tt,nt,rt,st,ot,it,at,lt){return _e.startModel(_),_e.addIrVersion(_,b),_e.addOpsetImport(_,tt),_e.addProducerName(_,nt),_e.addProducerVersion(_,rt),_e.addDomain(_,st),_e.addModelVersion(_,ot),_e.addDocString(_,it),_e.addGraph(_,at),_e.addGraphDocString(_,lt),_e.endModel(_)}}j.Model=_e})($.fbs||($.fbs={}))})(g.experimental||(g.experimental={}))}(s.onnxruntime||(s.onnxruntime={})),function(g){(function($){(function(j){class _e{constructor(){this.bb=null,this.bb_pos=0}__init(_,b){return this.bb_pos=_,this.bb=b,this}static getRootAsKernelCreateInfos(_,b){return(b||new _e).__init(_.readInt32(_.position())+_.position(),_)}static getSizePrefixedRootAsKernelCreateInfos(_,b){return _.setPosition(_.position()+a.flatbuffers.SIZE_PREFIX_LENGTH),(b||new _e).__init(_.readInt32(_.position())+_.position(),_)}nodeIndices(_){let b=this.bb.__offset(this.bb_pos,4);return b?this.bb.readUint32(this.bb.__vector(this.bb_pos+b)+4*_):0}nodeIndicesLength(){let _=this.bb.__offset(this.bb_pos,4);return _?this.bb.__vector_len(this.bb_pos+_):0}nodeIndicesArray(){let _=this.bb.__offset(this.bb_pos,4);return _?new Uint32Array(this.bb.bytes().buffer,this.bb.bytes().byteOffset+this.bb.__vector(this.bb_pos+_),this.bb.__vector_len(this.bb_pos+_)):null}kernelDefHashes(_){let b=this.bb.__offset(this.bb_pos,6);return b?this.bb.readUint64(this.bb.__vector(this.bb_pos+b)+8*_):this.bb.createLong(0,0)}kernelDefHashesLength(){let _=this.bb.__offset(this.bb_pos,6);return _?this.bb.__vector_len(this.bb_pos+_):0}static startKernelCreateInfos(_){_.startObject(2)}static addNodeIndices(_,b){_.addFieldOffset(0,b,0)}static createNodeIndicesVector(_,b){_.startVector(4,b.length,4);for(let tt=b.length-1;tt>=0;tt--)_.addInt32(b[tt]);return _.endVector()}static startNodeIndicesVector(_,b){_.startVector(4,b,4)}static addKernelDefHashes(_,b){_.addFieldOffset(1,b,0)}static createKernelDefHashesVector(_,b){_.startVector(8,b.length,8);for(let tt=b.length-1;tt>=0;tt--)_.addInt64(b[tt]);return _.endVector()}static startKernelDefHashesVector(_,b){_.startVector(8,b,8)}static endKernelCreateInfos(_){return _.endObject()}static createKernelCreateInfos(_,b,tt){return _e.startKernelCreateInfos(_),_e.addNodeIndices(_,b),_e.addKernelDefHashes(_,tt),_e.endKernelCreateInfos(_)}}j.KernelCreateInfos=_e})($.fbs||($.fbs={}))})(g.experimental||(g.experimental={}))}(s.onnxruntime||(s.onnxruntime={})),function(g){(function($){(function(j){class _e{constructor(){this.bb=null,this.bb_pos=0}__init(_,b){return this.bb_pos=_,this.bb=b,this}static getRootAsSubGraphSessionState(_,b){return(b||new _e).__init(_.readInt32(_.position())+_.position(),_)}static getSizePrefixedRootAsSubGraphSessionState(_,b){return _.setPosition(_.position()+a.flatbuffers.SIZE_PREFIX_LENGTH),(b||new _e).__init(_.readInt32(_.position())+_.position(),_)}graphId(_){let b=this.bb.__offset(this.bb_pos,4);return b?this.bb.__string(this.bb_pos+b,_):null}sessionState(_){let b=this.bb.__offset(this.bb_pos,6);return b?(_||new g.experimental.fbs.SessionState).__init(this.bb.__indirect(this.bb_pos+b),this.bb):null}static startSubGraphSessionState(_){_.startObject(2)}static addGraphId(_,b){_.addFieldOffset(0,b,0)}static addSessionState(_,b){_.addFieldOffset(1,b,0)}static endSubGraphSessionState(_){let b=_.endObject();return _.requiredField(b,4),b}static createSubGraphSessionState(_,b,tt){return _e.startSubGraphSessionState(_),_e.addGraphId(_,b),_e.addSessionState(_,tt),_e.endSubGraphSessionState(_)}}j.SubGraphSessionState=_e})($.fbs||($.fbs={}))})(g.experimental||(g.experimental={}))}(s.onnxruntime||(s.onnxruntime={})),function(g){(function($){(function(j){class _e{constructor(){this.bb=null,this.bb_pos=0}__init(_,b){return this.bb_pos=_,this.bb=b,this}static getRootAsSessionState(_,b){return(b||new _e).__init(_.readInt32(_.position())+_.position(),_)}static getSizePrefixedRootAsSessionState(_,b){return _.setPosition(_.position()+a.flatbuffers.SIZE_PREFIX_LENGTH),(b||new _e).__init(_.readInt32(_.position())+_.position(),_)}kernels(_){let b=this.bb.__offset(this.bb_pos,4);return b?(_||new g.experimental.fbs.KernelCreateInfos).__init(this.bb.__indirect(this.bb_pos+b),this.bb):null}subGraphSessionStates(_,b){let tt=this.bb.__offset(this.bb_pos,6);return tt?(b||new g.experimental.fbs.SubGraphSessionState).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+tt)+4*_),this.bb):null}subGraphSessionStatesLength(){let _=this.bb.__offset(this.bb_pos,6);return _?this.bb.__vector_len(this.bb_pos+_):0}static startSessionState(_){_.startObject(2)}static addKernels(_,b){_.addFieldOffset(0,b,0)}static addSubGraphSessionStates(_,b){_.addFieldOffset(1,b,0)}static createSubGraphSessionStatesVector(_,b){_.startVector(4,b.length,4);for(let tt=b.length-1;tt>=0;tt--)_.addOffset(b[tt]);return _.endVector()}static startSubGraphSessionStatesVector(_,b){_.startVector(4,b,4)}static endSessionState(_){return _.endObject()}static createSessionState(_,b,tt){return _e.startSessionState(_),_e.addKernels(_,b),_e.addSubGraphSessionStates(_,tt),_e.endSessionState(_)}}j.SessionState=_e})($.fbs||($.fbs={}))})(g.experimental||(g.experimental={}))}(s.onnxruntime||(s.onnxruntime={})),function(g){(function($){(function(j){class _e{constructor(){this.bb=null,this.bb_pos=0}__init(_,b){return this.bb_pos=_,this.bb=b,this}static getRootAsInferenceSession(_,b){return(b||new _e).__init(_.readInt32(_.position())+_.position(),_)}static getSizePrefixedRootAsInferenceSession(_,b){return _.setPosition(_.position()+a.flatbuffers.SIZE_PREFIX_LENGTH),(b||new _e).__init(_.readInt32(_.position())+_.position(),_)}static bufferHasIdentifier(_){return _.__has_identifier("ORTM")}ortVersion(_){let b=this.bb.__offset(this.bb_pos,4);return b?this.bb.__string(this.bb_pos+b,_):null}model(_){let b=this.bb.__offset(this.bb_pos,6);return b?(_||new g.experimental.fbs.Model).__init(this.bb.__indirect(this.bb_pos+b),this.bb):null}sessionState(_){let b=this.bb.__offset(this.bb_pos,8);return b?(_||new g.experimental.fbs.SessionState).__init(this.bb.__indirect(this.bb_pos+b),this.bb):null}static startInferenceSession(_){_.startObject(3)}static addOrtVersion(_,b){_.addFieldOffset(0,b,0)}static addModel(_,b){_.addFieldOffset(1,b,0)}static addSessionState(_,b){_.addFieldOffset(2,b,0)}static endInferenceSession(_){return _.endObject()}static finishInferenceSessionBuffer(_,b){_.finish(b,"ORTM")}static finishSizePrefixedInferenceSessionBuffer(_,b){_.finish(b,"ORTM",!0)}static createInferenceSession(_,b,tt,nt){return _e.startInferenceSession(_),_e.addOrtVersion(_,b),_e.addModel(_,tt),_e.addSessionState(_,nt),_e.endInferenceSession(_)}}j.InferenceSession=_e})($.fbs||($.fbs={}))})(g.experimental||(g.experimental={}))}(s.onnxruntime||(s.onnxruntime={}))},7448:(i,s,o)=>{Object.defineProperty(s,"__esModule",{value:!0}),s.OnnxjsSessionHandler=void 0;const a=o(1670),c=o(9162);s.OnnxjsSessionHandler=class{constructor(d){this.session=d,this.inputNames=this.session.inputNames,this.outputNames=this.session.outputNames}async dispose(){}async run(d,g,$){const j=new Map;for(const _ in d)if(Object.hasOwnProperty.call(d,_)){const b=d[_];j.set(_,new c.Tensor(b.dims,b.type,void 0,void 0,b.data))}const _e=await this.session.run(j),et={};return _e.forEach((_,b)=>{et[b]=new a.Tensor(_.type,_.data,_.dims)}),et}startProfiling(){this.session.startProfiling()}endProfiling(){this.session.endProfiling()}}},6919:(i,s,o)=>{Object.defineProperty(s,"__esModule",{value:!0}),s.Session=void 0;const a=o(7067),c=o(1296),d=o(7091),g=o(1036),$=o(6231),j=o(2644);s.Session=class{constructor(_e={}){this._initialized=!1,this.backendHint=_e.backendHint,this.profiler=$.Profiler.create(_e.profiler),this.context={profiler:this.profiler,graphInputTypes:[],graphInputDims:[]}}get inputNames(){return this._model.graph.getInputNames()}get outputNames(){return this._model.graph.getOutputNames()}startProfiling(){this.profiler.start()}endProfiling(){this.profiler.stop()}async loadModel(_e,et,_){await this.profiler.event("session","Session.loadModel",async()=>{const b=await(0,d.resolveBackend)(this.backendHint);if(this.sessionHandler=b.createSessionHandler(this.context),this._model=new j.Model,typeof _e=="string"){const tt=_e.endsWith(".ort");if(typeof fetch>"u"){const nt=await(0,c.promisify)(a.readFile)(_e);this.initialize(nt,tt)}else{const nt=await fetch(_e),rt=await nt.arrayBuffer();this.initialize(new Uint8Array(rt),tt)}}else if(ArrayBuffer.isView(_e))this.initialize(_e);else{const tt=new Uint8Array(_e,et||0,_||_e.byteLength);this.initialize(tt)}})}initialize(_e,et){if(this._initialized)throw new Error("already initialized");this.profiler.event("session","Session.initialize",()=>{const _=this.sessionHandler.transformGraph?this.sessionHandler:void 0;this._model.load(_e,_,et),this.sessionHandler.onGraphInitialized&&this.sessionHandler.onGraphInitialized(this._model.graph),this.initializeOps(this._model.graph),this._executionPlan=new g.ExecutionPlan(this._model.graph,this._ops,this.profiler)}),this._initialized=!0}async run(_e){if(!this._initialized)throw new Error("session not initialized yet");return this.profiler.event("session","Session.run",async()=>{const et=this.normalizeAndValidateInputs(_e),_=await this._executionPlan.execute(this.sessionHandler,et);return this.createOutput(_)})}normalizeAndValidateInputs(_e){const et=this._model.graph.getInputNames();if(Array.isArray(_e)){if(_e.length!==et.length)throw new Error(`incorrect input array length: expected ${et.length} but got ${_e.length}`)}else{if(_e.size!==et.length)throw new Error(`incorrect input map size: expected ${et.length} but got ${_e.size}`);const _=new Array(_e.size);let b=0;for(let tt=0;tt<et.length;++tt){const nt=_e.get(et[tt]);if(!nt)throw new Error(`missing input tensor for: '${name}'`);_[b++]=nt}_e=_}if(this.context.graphInputTypes&&this.context.graphInputTypes.length!==0&&this.context.graphInputDims&&this.context.graphInputDims.length!==0)this.validateInputTensorDims(this.context.graphInputDims,_e,!1);else{const _=this._model.graph.getInputIndices(),b=this._model.graph.getValues(),tt=new Array(_.length);for(let nt=0;nt<_.length;++nt){const rt=b[_[nt]];tt[nt]=rt.type.shape.dims,this.context.graphInputTypes.push(rt.type.tensorType),this.context.graphInputDims.push(_e[nt].dims)}this.validateInputTensorDims(tt,_e,!0)}return this.validateInputTensorTypes(this.context.graphInputTypes,_e),_e}validateInputTensorTypes(_e,et){for(let _=0;_<et.length;_++){const b=_e[_],tt=et[_].type;if(b!==tt)throw new Error(`input tensor[${_}] check failed: expected type '${b}' but got ${tt}`)}}validateInputTensorDims(_e,et,_){for(let b=0;b<et.length;b++){const tt=_e[b],nt=et[b].dims;if(!this.compareTensorDims(tt,nt,_))throw new Error(`input tensor[${b}] check failed: expected shape '[${tt.join(",")}]' but got [${nt.join(",")}]`)}}compareTensorDims(_e,et,_){if(_e.length!==et.length)return!1;for(let b=0;b<_e.length;++b)if(_e[b]!==et[b]&&(!_||_e[b]!==0))return!1;return!0}createOutput(_e){const et=this._model.graph.getOutputNames();if(_e.length!==et.length)throw new Error("expected number of outputs do not match number of generated outputs");const _=new Map;for(let b=0;b<et.length;++b)_.set(et[b],_e[b]);return _}initializeOps(_e){const et=_e.getNodes();this._ops=new Array(et.length);for(let _=0;_<et.length;_++)this._ops[_]=this.sessionHandler.resolve(et[_],this._model.opsets,_e)}}},9162:function(i,s,o){var a=this&&this.__importDefault||function(rt){return rt&&rt.__esModule?rt:{default:rt}};Object.defineProperty(s,"__esModule",{value:!0}),s.Tensor=void 0;const c=o(3442),d=a(o(3720)),g=o(1446),$=o(9395),j=o(2517);var _e=$.onnxruntime.experimental.fbs;class et{get data(){if(this.cache===void 0){const st=this.dataProvider(this.dataId);if(st.length!==this.size)throw new Error("Length of data provided by the Data Provider is inconsistent with the dims of this Tensor.");this.cache=st}return this.cache}get stringData(){if(this.type!=="string")throw new TypeError("data type is not string");return this.data}get integerData(){switch(this.type){case"uint8":case"int8":case"uint16":case"int16":case"int32":case"uint32":case"bool":return this.data;default:throw new TypeError("data type is not integer (uint8, int8, uint16, int16, int32, uint32, bool)")}}get floatData(){switch(this.type){case"float32":case"float64":return this.data;default:throw new TypeError("data type is not float (float32, float64)")}}get numberData(){if(this.type!=="string")return this.data;throw new TypeError("type cannot be non-number (string)")}get(st){return this.data[j.ShapeUtil.indicesToOffset(st,this.strides)]}set(st,ot){this.data[j.ShapeUtil.indicesToOffset(st,this.strides)]=ot}async getData(){return this.cache===void 0&&(this.cache=await this.asyncDataProvider(this.dataId)),this.cache}get strides(){return this._strides||(this._strides=j.ShapeUtil.computeStrides(this.dims)),this._strides}constructor(st,ot,it,at,lt,ut=c.Guid.create()){this.dims=st,this.type=ot,this.dataProvider=it,this.asyncDataProvider=at,this.cache=lt,this.dataId=ut,this.size=j.ShapeUtil.validateDimsAndCalcSize(st);const ct=this.size,dt=it===void 0&&at===void 0&&lt===void 0;if(lt!==void 0&&lt.length!==ct)throw new RangeError("Input dims doesn't match data length.");if(ot==="string"){if(!(lt===void 0||Array.isArray(lt)&&lt.every(pt=>typeof pt=="string")))throw new TypeError("cache should be a string array");dt&&(this.cache=new Array(ct))}else{if(lt!==void 0){const pt=b(ot);if(!(lt instanceof pt))throw new TypeError(`cache should be type ${pt.name}`)}if(dt){const pt=new ArrayBuffer(ct*function(ht){switch(ht){case"bool":case"int8":case"uint8":return 1;case"int16":case"uint16":return 2;case"int32":case"uint32":case"float32":return 4;case"float64":return 8;default:throw new Error(`cannot calculate sizeof() on type ${ht}`)}}(ot));this.cache=function(ht,ft){return new(b(ft))(ht)}(pt,ot)}}}static fromProto(st){if(!st)throw new Error("cannot construct Value from an empty tensor");const ot=j.ProtoUtil.tensorDataTypeFromProto(st.dataType),it=j.ProtoUtil.tensorDimsFromProto(st.dims),at=new et(it,ot);if(ot==="string")st.stringData.forEach((lt,ut)=>{at.data[ut]=(0,j.decodeUtf8String)(lt)});else if(st.rawData&&typeof st.rawData.byteLength=="number"&&st.rawData.byteLength>0){const lt=at.data,ut=new DataView(st.rawData.buffer,st.rawData.byteOffset,st.rawData.byteLength),ct=_(st.dataType),dt=st.rawData.byteLength/ct;if(st.rawData.byteLength%ct!=0)throw new Error("invalid buffer length");if(lt.length!==dt)throw new Error("buffer length mismatch");for(let pt=0;pt<dt;pt++){const ht=nt(ut,st.dataType,pt*ct);lt[pt]=ht}}else{let lt;switch(st.dataType){case g.onnx.TensorProto.DataType.FLOAT:lt=st.floatData;break;case g.onnx.TensorProto.DataType.INT32:case g.onnx.TensorProto.DataType.INT16:case g.onnx.TensorProto.DataType.UINT16:case g.onnx.TensorProto.DataType.INT8:case g.onnx.TensorProto.DataType.UINT8:case g.onnx.TensorProto.DataType.BOOL:lt=st.int32Data;break;case g.onnx.TensorProto.DataType.INT64:lt=st.int64Data;break;case g.onnx.TensorProto.DataType.DOUBLE:lt=st.doubleData;break;case g.onnx.TensorProto.DataType.UINT32:case g.onnx.TensorProto.DataType.UINT64:lt=st.uint64Data;break;default:throw new Error("unspecific error")}if(lt==null)throw new Error("failed to populate data from a tensorproto value");const ut=at.data;if(ut.length!==lt.length)throw new Error("array length mismatch");for(let ct=0;ct<lt.length;ct++){const dt=lt[ct];d.default.isLong(dt)?ut[ct]=tt(dt,st.dataType):ut[ct]=dt}}return at}static fromData(st,ot,it){return new et(ot,it,void 0,void 0,st)}static fromOrtTensor(st){if(!st)throw new Error("cannot construct Value from an empty tensor");const ot=j.ProtoUtil.tensorDimsFromORTFormat(st),it=j.ProtoUtil.tensorDataTypeFromProto(st.dataType()),at=new et(ot,it);if(it==="string")for(let lt=0;lt<st.stringDataLength();lt++)at.data[lt]=st.stringData(lt);else if(st.rawDataArray()&&typeof st.rawDataLength()=="number"&&st.rawDataLength()>0){const lt=at.data,ut=new DataView(st.rawDataArray().buffer,st.rawDataArray().byteOffset,st.rawDataLength()),ct=_(st.dataType()),dt=st.rawDataLength()/ct;if(st.rawDataLength()%ct!=0)throw new Error("invalid buffer length");if(lt.length!==dt)throw new Error("buffer length mismatch");for(let pt=0;pt<dt;pt++){const ht=nt(ut,st.dataType(),pt*ct);lt[pt]=ht}}return at}}function _(rt){switch(rt){case g.onnx.TensorProto.DataType.UINT8:case g.onnx.TensorProto.DataType.INT8:case g.onnx.TensorProto.DataType.BOOL:return 1;case g.onnx.TensorProto.DataType.UINT16:case g.onnx.TensorProto.DataType.INT16:return 2;case g.onnx.TensorProto.DataType.FLOAT:case g.onnx.TensorProto.DataType.INT32:case g.onnx.TensorProto.DataType.UINT32:return 4;case g.onnx.TensorProto.DataType.INT64:case g.onnx.TensorProto.DataType.DOUBLE:case g.onnx.TensorProto.DataType.UINT64:return 8;default:throw new Error(`cannot calculate sizeof() on type ${g.onnx.TensorProto.DataType[rt]}`)}}function b(rt){switch(rt){case"bool":case"uint8":return Uint8Array;case"int8":return Int8Array;case"int16":return Int16Array;case"uint16":return Uint16Array;case"int32":return Int32Array;case"uint32":return Uint32Array;case"float32":return Float32Array;case"float64":return Float64Array;default:throw new Error("unspecified error")}}function tt(rt,st){if(st===g.onnx.TensorProto.DataType.INT64||st===_e.TensorDataType.INT64){if(rt.greaterThanOrEqual(2147483648)||rt.lessThan(-2147483648))throw new TypeError("int64 is not supported")}else{if(st!==g.onnx.TensorProto.DataType.UINT32&&st!==_e.TensorDataType.UINT32&&st!==g.onnx.TensorProto.DataType.UINT64&&st!==_e.TensorDataType.UINT64)throw new TypeError(`not a LONG type: ${g.onnx.TensorProto.DataType[st]}`);if(rt.greaterThanOrEqual(4294967296)||rt.lessThan(0))throw new TypeError("uint64 is not supported")}return rt.toNumber()}function nt(rt,st,ot){switch(st){case g.onnx.TensorProto.DataType.BOOL:case g.onnx.TensorProto.DataType.UINT8:return rt.getUint8(ot);case g.onnx.TensorProto.DataType.INT8:return rt.getInt8(ot);case g.onnx.TensorProto.DataType.UINT16:return rt.getUint16(ot,!0);case g.onnx.TensorProto.DataType.INT16:return rt.getInt16(ot,!0);case g.onnx.TensorProto.DataType.FLOAT:return rt.getFloat32(ot,!0);case g.onnx.TensorProto.DataType.INT32:return rt.getInt32(ot,!0);case g.onnx.TensorProto.DataType.UINT32:return rt.getUint32(ot,!0);case g.onnx.TensorProto.DataType.INT64:return tt(d.default.fromBits(rt.getUint32(ot,!0),rt.getUint32(ot+4,!0),!1),st);case g.onnx.TensorProto.DataType.DOUBLE:return rt.getFloat64(ot,!0);case g.onnx.TensorProto.DataType.UINT64:return tt(d.default.fromBits(rt.getUint32(ot,!0),rt.getUint32(ot+4,!0),!0),st);default:throw new Error(`cannot read from DataView for type ${g.onnx.TensorProto.DataType[st]}`)}}s.Tensor=et},2517:function(i,s,o){var a=this&&this.__importDefault||function(st){return st&&st.__esModule?st:{default:st}};Object.defineProperty(s,"__esModule",{value:!0}),s.decodeUtf8String=s.MAX_CLIP=s.MIN_CLIP=s.PoolConvUtil=s.ReduceUtil=s.SplitUtil=s.MathUtil=s.ShapeUtil=s.LongUtil=s.ProtoUtil=s.GemmUtil=s.arrayCopyHelper=s.BroadcastUtil=s.MatMulUtil=s.ArrayUtil=s.assert=s.checkInputsShape=void 0;const c=o(5686),d=a(o(3720)),g=o(1446),$=o(9162);s.checkInputsShape=function(st,...ot){if(!st||st.length!==ot.length)return!1;for(let it=0;it<st.length;it++)if(!st[it].dims||st[it].dims.length!==ot[it])return!1;return!0},s.assert=function(st,ot){if(!st)throw new Error(typeof ot=="string"?ot:ot())},s.ArrayUtil=class{static arraysEqual(st,ot){if(st.length!==ot.length)return!1;for(let it=0;it<st.length;it++)if(st[it]!==ot[it])return!1;return!0}};class j{static preprocessInputShapes(ot,it){return[ot.length===1?[1,ot[0]]:ot,it.length===1?[it[0],1]:it]}static postprocessOutputShape(ot,it,at){it===1&&ot.splice(ot.length-2,1),at===1&&ot.pop()}static calcMatMulShape(ot,it){return ot[1]!==it[0]?void 0:[ot[0],it[1]]}}s.MatMulUtil=j;class _e{static calcShape(ot,it,at=!1){const lt=ot.length,ut=it.length;if(lt===0)return it;if(ut===0)return ot;const ct=Math.max(ot.length,it.length),dt=new Array(ct);if(at){if(lt<2||ut<2)return;const pt=j.calcMatMulShape([ot[lt-2],ot[lt-1]],[it[ut-2],it[ut-1]]);if(pt===void 0)return;[dt[ct-2],dt[ct-1]]=pt}for(let pt=at?3:1;pt<=ct;pt++){const ht=lt-pt<0?1:ot[lt-pt],ft=ut-pt<0?1:it[ut-pt];if(ht!==ft&&ht>1&&ft>1)return;dt[ct-pt]=Math.max(ht,ft)}return dt}static index(ot,it){const at=new Array(it.length);return _e.fillIndex(ot,it,at),at}static fillIndex(ot,it,at){const lt=ot.length-it.length;for(let ut=0;ut<it.length;ut++)at[ut]=ot[lt+ut]%it[ut]}static calc(ot,it,at,lt,ut){const ct=_e.calcShape(ot.dims,it.dims);if(ct){if(lt&&!b.areEqual(ct,ot.dims))return;const dt=b.size(ct),pt=lt?ot:new $.Tensor(ct,ut||ot.type);if(ct.length===0)pt.set([],at(ot.get([]),it.get([])));else{const ht=new Array(ct.length),ft=new Array(ot.dims.length),yt=new Array(it.dims.length);let wt,_t=0,bt=0,xt=!1,mt=!1;ot.dims.length===0&&(_t=ot.get([]),xt=!0),it.dims.length===0&&(bt=it.get([]),mt=!0);for(let vt=0;vt<dt;vt++){wt=vt;for(let Et=ct.length-1;Et>=0;Et--)ht[Et]=wt%ct[Et],wt=Math.floor(wt/ct[Et]);xt||(_e.fillIndex(ht,ot.dims,ft),_t=ot.get(ft)),mt||(_e.fillIndex(ht,it.dims,yt),bt=it.get(yt)),pt.set(ht,at(_t,bt))}}return pt}}static isValidBroadcast(ot,it){const at=ot.length,lt=it.length;if(at>lt)return!1;for(let ut=1;ut<=at;ut++)if(ot[at-ut]!==1&&ot[at-ut]!==it[lt-ut])return!1;return!0}static getBroadcastDims(ot,it){const at=ot.length,lt=[];for(let ut=0;ut<at;ut++){const ct=at-1-ut,dt=ot[ct]||1;(it[it.length-1-ut]||1)>1&&dt===1&&lt.unshift(ct)}return lt}}s.BroadcastUtil=_e,s.arrayCopyHelper=function(st,ot,it,at,lt){if(at<0||at>=ot.length)throw new Error("sourceIndex out of bounds");if(it<0||it>=st.length)throw new Error("targetIndex out of bounds");if(at+lt>ot.length)throw new Error("source indices to be copied are outside bounds");if(it+lt>st.length)throw new Error("target array is too small to hold result");for(let ut=0;ut<lt;ut++)st[it+ut]=ot[at+ut]},s.GemmUtil=class{static getShapeOfGemmResult(st,ot,it,at,lt){if(st.length!==2||it.length!==2)throw new Error("shape need to be of size 2");let ut,ct,dt;ot?(ut=st[1],ct=st[0]):(ut=st[0],ct=st[1]);let pt=-1;if(at?(dt=it[0],pt=1):(dt=it[1],pt=0),it[pt]!==ct)throw new Error("dimension mismatch");if(ut<=0||dt<=0||ct<=0)throw new Error("invalid shape specified");if(lt&&!_e.isValidBroadcast(lt,[ut,dt]))throw new Error("gemm: invalid bias shape for broadcast");return[ut,dt,ct]}};class et{static tensorDataTypeFromProto(ot){switch(ot){case g.onnx.TensorProto.DataType.INT8:return"int8";case g.onnx.TensorProto.DataType.UINT8:return"uint8";case g.onnx.TensorProto.DataType.BOOL:return"bool";case g.onnx.TensorProto.DataType.INT16:return"int16";case g.onnx.TensorProto.DataType.UINT16:return"uint16";case g.onnx.TensorProto.DataType.INT32:return"int32";case g.onnx.TensorProto.DataType.UINT32:return"uint32";case g.onnx.TensorProto.DataType.FLOAT:return"float32";case g.onnx.TensorProto.DataType.DOUBLE:return"float64";case g.onnx.TensorProto.DataType.STRING:return"string";case g.onnx.TensorProto.DataType.INT64:return"int32";case g.onnx.TensorProto.DataType.UINT64:return"uint32";default:throw new Error(`unsupported data type: ${g.onnx.TensorProto.DataType[ot]}`)}}static tensorDataTypeStringToEnum(ot){switch(ot){case"int8":return g.onnx.TensorProto.DataType.INT8;case"uint8":return g.onnx.TensorProto.DataType.UINT8;case"bool":return g.onnx.TensorProto.DataType.BOOL;case"int16":return g.onnx.TensorProto.DataType.INT16;case"uint16":return g.onnx.TensorProto.DataType.UINT16;case"int32":return g.onnx.TensorProto.DataType.INT32;case"uint32":return g.onnx.TensorProto.DataType.UINT32;case"float32":return g.onnx.TensorProto.DataType.FLOAT;case"float64":return g.onnx.TensorProto.DataType.DOUBLE;case"string":return g.onnx.TensorProto.DataType.STRING;case"int64":return g.onnx.TensorProto.DataType.INT64;case"uint64":return g.onnx.TensorProto.DataType.UINT64;default:throw new Error(`unsupported data type: ${ot}`)}}static tensorDimsFromProto(ot){return ot.map(it=>d.default.isLong(it)?it.toNumber():it)}static tensorValueTypeFromProto(ot){return{tensorType:et.tensorDataTypeFromProto(ot.elemType),shape:{dims:et.tensorDimsFromProto(ot.shape.dim.map(it=>it.dimValue))}}}static tensorDimsFromORTFormat(ot){const it=[];for(let at=0;at<ot.dimsLength();at++)it.push(_.longToNumber(ot.dims(at)));return it}static tensorAttributesFromORTFormat(ot){const it=[];for(let at=0;at<ot.attributesLength();at++)it.push(ot.attributes(at));return it}}s.ProtoUtil=et;class _{static longToNumber(ot,it){return d.default.isLong(ot)?ot.toNumber():ot instanceof c.flatbuffers.Long?d.default.fromValue({low:ot.low,high:ot.high,unsigned:it!=null&&it}).toNumber():ot}static isLong(ot){return d.default.isLong(ot)||ot instanceof c.flatbuffers.Long}}s.LongUtil=_;class b{static size(ot){return b.getSizeFromDimensionRange(ot,0,ot.length)}static sizeFromDimension(ot,it){if(it<0||it>ot.length)throw new Error(`invalid dimension of ${it} for sizeFromDimension as Tensor has ${ot.length} dimensions.`);return b.getSizeFromDimensionRange(ot,it,ot.length)}static sizeToDimension(ot,it){if(it<0||it>ot.length)throw new Error(`invalid dimension of ${it} for sizeToDimension as Tensor has ${ot.length} dimensions.`);return b.getSizeFromDimensionRange(ot,0,it)}static getSizeFromDimensionRange(ot,it,at){let lt=1;for(let ut=it;ut<at;ut++){if(ot[ut]<=0)throw new Error("cannot get valid size from specified dimension range. Most likely the range contains 0 or negative values in them.");lt*=ot[ut]}return lt}static computeStrides(ot){const it=ot.length;if(it===0)return[];if(it===1)return[1];const at=new Array(it);at[it-1]=1,at[it-2]=ot[it-1];for(let lt=it-3;lt>=0;--lt)at[lt]=at[lt+1]*ot[lt+1];return at}static transpose(ot){return ot.slice().reverse()}static indicesToOffset(ot,it,at){at===void 0&&(at=ot.length);let lt=0;for(let ut=0;ut<at;++ut)lt+=it[ut]*ot[ut];return lt}static offsetToIndices(ot,it){const at=it.length;if(at===0)return[];if(at===1)return[ot*it[0]];const lt=new Array(it.length);for(let ut=0;ut<lt.length-1;++ut)lt[ut]=Math.floor(ot/it[ut]),ot-=lt[ut]*it[ut];return lt[lt.length-1]=ot,lt}static normalizeAxis(ot,it){if(ot<-it&&ot>=it)throw new Error("unsupported axis for this operation.");return ot<0?ot+it:ot}static normalizeAxes(ot,it){return ot.map(at=>this.normalizeAxis(at,it))}static incrementIndex(ot,it,at){if(it.length===0||ot.length===0)throw new Error("Index incrementing unsupported for scalar Tensor");if(at===void 0)at=it.length;else if(at<=0||at>it.length)throw new Error("Incorrect axis to increment on");for(let lt=at-1;lt>=0&&(ot[lt]++,!(ot[lt]<it[lt]));--lt)ot[lt]=0}static calculateReshapedDims(ot,it){if(it.length===0){if(ot.length===0||b.size(ot)===1)return[];throw new Error("cannot reshape to a scalar Tensor")}const at=it.length,lt=new Array(at);let ut=-1,ct=1;for(let pt=0;pt<at;pt++){if(it[pt]<-1)throw new Error("a dimension in shape hints cannot be less than -1");if(it[pt]===-1){if(ut!==-1)throw new Error("at most one dimension in shape hints can be -1");ut=pt}else{if(it[pt]===0){if(pt>=ot.length)throw new Error("the dimension with value zero exceeds the dimension size of the input tensor");lt[pt]=ot[pt]}else lt[pt]=it[pt];ct*=lt[pt]}}const dt=b.size(ot);if(ut!==-1){if(dt%ct!=0)throw new Error(`the input tensor cannot be reshaped to the requested shape. Input shape: [${ot}] Output shape: [${it}]`);lt[ut]=dt/ct}else if(ct!==dt)throw new Error("reshapedDims and originalDims don't have matching sizes");return lt}static sortBasedOnPerm(ot,it){return it?it.map(at=>ot[at]):ot.slice().reverse()}static padShape(ot,it){const at=ot.length;return ot.map((lt,ut)=>lt+it[ut]+it[ut+at])}static areEqual(ot,it){return ot.length===it.length&&ot.every((at,lt)=>at===it[lt])}static validateDimsAndCalcSize(ot){if(ot.length>6)throw new TypeError("Only rank 0 to 6 is supported for tensor shape.");let it=1;for(const at of ot){if(!Number.isInteger(at))throw new TypeError(`Invalid shape: ${at} is not an integer`);if(at<0||at>2147483647)throw new TypeError(`Invalid shape: length ${at} is not allowed`);it*=at}return it}static flattenShape(ot,it){it<0&&(it+=ot.length);const at=ot.reduce((ut,ct)=>ut*ct,1),lt=ot.slice(it).reduce((ut,ct)=>ut*ct,1);return[at/lt,lt]}static squeezeShape(ot,it){const at=new Array;it=b.normalizeAxes(it,ot.length);for(let lt=0;lt<ot.length;lt++){const ut=it.indexOf(lt)>=0;if(ut&&ot[lt]!==1)throw new Error("squeeze an axis of size different than 1");(it.length===0&&ot[lt]>1||it.length>0&&!ut)&&at.push(ot[lt])}return at}static unsqueezeShape(ot,it){const at=new Array(ot.length+it.length);at.fill(0);for(let ut=0;ut<it.length;ut++){const ct=b.normalizeAxis(it[ut],at.length);if(ct>=at.length)throw new Error("'axes' has an out of range axis");if(at[ct]!==0)throw new Error("'axes' has a duplicate axis");at[ct]=1}let lt=0;for(let ut=0;ut<at.length;ut++)at[ut]===0&&(at[ut]=ot[lt++]);if(lt!==ot.length)throw new Error("the unsqueezed dimension could not be established");return at}}s.ShapeUtil=b,s.MathUtil=class{static sqr(st,ot,it,at,lt){if(at<0||at>=ot.length)throw new Error("sourceIndex out of bounds");if(it<0||it>=st.length)throw new Error("targetIndex out of bounds");if(at+lt>ot.length)throw new Error("source indices to be copied are outside bounds");if(it+lt>st.length)throw new Error("target array is too small to hold result");for(let ut=0;ut<lt;ut++)st[it+ut]+=Math.pow(ot[at+ut],2)}static axpy(st,ot,it,at,lt,ut){if(at<0||at>=ot.length)throw new Error("sourceIndex out of bounds");if(it<0||it>=st.length)throw new Error("targetIndex out of bounds");if(at+lt>ot.length)throw new Error("source indices to be copied are outside bounds");if(it+lt>st.length)throw new Error("target array is too small to hold result");for(let ct=0;ct<lt;ct++)st[it+ct]+=ut*ot[at+ct]}static powx(st,ot,it,at,lt,ut){if(at<0||at>=ot.length)throw new Error("sourceIndex out of bounds");if(it<0||it>=st.length)throw new Error("targetIndex out of bounds");if(at+lt>ot.length)throw new Error("source indices to be copied are outside bounds");if(it+lt>st.length)throw new Error("target array is too small to hold result");for(let ct=0;ct<lt;ct++)st[it+ct]=Math.pow(ot[at+ct],ut)}static mul(st,ot,it,at,lt){if(at<0||at>=ot.length)throw new Error("sourceIndex out of bounds");if(it<0||it>=st.length)throw new Error("targetIndex out of bounds");if(at+lt>ot.length)throw new Error("source indices to be copied are outside bounds");if(it+lt>st.length)throw new Error("target array is too small to hold result");for(let ut=0;ut<lt;ut++)st[it+ut]=ot[at+ut]*st[it+ut]}};class tt{static splitShape(ot,it,at,lt){if(at.length===0){if(!lt)throw new Error("need to know number of outputs when the 'split' attribute is not specified");tt.determineSplit(ot[it],lt,at)}const ut=[],ct=[0];for(let dt=0;dt<at.length;++dt){dt!==0&&ct.push(ct[dt-1]+at[dt-1]);const pt=ot.slice();pt[it]=at[dt],ut.push(pt)}return[ut,ct]}static determineSplit(ot,it,at){if(ot%it!=0)throw new Error("cannot split tensor to equal sized parts");for(let lt=0;lt<it;++lt)at.push(ot/it)}}s.SplitUtil=tt;class nt{static calcReduce(ot,it,at,lt,ut){const ct=ot.dims.slice(0);it.length===0&&ct.forEach((_t,bt)=>it.push(bt));const dt=nt.calcReduceShape(ct,it,!0),pt=b.size(dt),ht=new $.Tensor(dt,ot.type),ft=b.computeStrides(dt),yt=b.computeStrides(ct),wt=new Array(ct.length);for(let _t=0;_t<pt;_t++){const bt=b.offsetToIndices(_t,ft);_e.fillIndex(bt,ct,wt),ht.set(bt,nt.calcReduceByAxis(ot.numberData,it,ct,0,b.indicesToOffset(wt,yt),lt,ut))}return at?ht:new $.Tensor(nt.calcReduceShape(ct,it,at),ht.type,void 0,void 0,ht.data,ht.dataId)}static calcReduceByAxis(ot,it,at,lt,ut,ct,dt){let pt=0;if(lt>=it.length)return ct(ot[ut]);const ht=it[lt],ft=ht>=at.length?1:b.size(at.slice(ht+1));for(let yt=0;yt<at[ht];yt++)pt=yt===0?nt.calcReduceByAxis(ot,it,at,lt+1,ut,ct,dt):dt(pt,nt.calcReduceByAxis(ot,it,at,lt+1,ut,ct,dt)),ut+=ft;return pt}static calcReduceShape(ot,it,at){const lt=ot.slice();for(let ut=0;ut<it.length;ut++)lt[it[ut]]=at?1:0;return lt.filter(ut=>ut!==0)}}s.ReduceUtil=nt;class rt{static adjustPoolAttributes(ot,it,at,lt,ut,ct){if(!ot&&at.length!==it.length-2)throw new Error("length of specified kernel shapes should be 2 less than length of input dimensions");if(ot)for(let dt=0;dt<it.length-2;dt++)dt>=at.length?at.push(it[dt+2]):at[dt]=it[dt+2];for(let dt=0;dt<at.length;dt++)if(dt<lt.length){if(lt[dt]<0)throw new Error("strides should be greater than or equal to 1")}else lt.push(1);for(let dt=0;dt<at.length;dt++)if(dt<ut.length){if(ut[dt]<0)throw new Error("dilations should be greater than or equal to 1")}else ut.push(1);for(let dt=0;dt<2*at.length;dt++)if(dt<ct.length){if(ct[dt]<0)throw new Error("pad should be greater than or equal to 1")}else ct.push(0);for(let dt=0;dt<at.length;dt++){if(at[dt]<=0)throw new Error("kernel shapes need to be greater than 0");if(ct[dt]>=at[dt]||ct[dt+at.length]>=at[dt])throw new Error("pads should be smaller than kernel")}}static adjustPadsBasedOnAutoPad(ot,it,at,lt,ut,ct){if(ct){if(ut.length!==2*(ot.length-2))throw new Error("length of pads should be twice the length of data dimensions");if(it.length!==ot.length-2)throw new Error("length of strides should be the length of data dimensions");if(lt.length!==ot.length-2)throw new Error("length of kernel shapes should be the length of data dimensions");for(let dt=0;dt<ot.length-2;dt++)rt.adjustPadAndReturnShape(ot[dt+2],it[dt],at[dt],lt[dt],ut,dt,dt+ot.length-2,ct)}}static computePoolOutputShape(ot,it,at,lt,ut,ct,dt){if(it.length<=0)throw new Error("input shape must be of size greater than 0");const pt=[it[0],it[1]];return rt.computeShapeHelper(ot,it,pt,at,lt,ut,ct,dt),pt}static computeConvOutputShape(ot,it,at,lt,ut,ct,dt){if(ot.length<=0||it.length<=0)throw new Error("invalid input tensor dims or invalid filter tensor dims");const pt=[ot[0],it[0]];return rt.computeShapeHelper(!1,ot,pt,at,lt,ut,ct,dt),pt}static computeShapeHelper(ot,it,at,lt,ut,ct,dt,pt){if(ot)for(let ht=0;ht<it.length-2;ht++)at.push(1);else for(let ht=0;ht<it.length-2;ht++)at.push(rt.adjustPadAndReturnShape(it[ht+2],lt[ht],ut[ht],ct[ht],dt,ht,ht+it.length-2,pt))}static adjustPadAndReturnShape(ot,it,at,lt,ut,ct,dt,pt){const ht=at*(lt-1)+1;if(!pt||pt==="NOTSET")return Math.floor((ot+ut[ct]+ut[dt]-ht)/it+1);switch(pt){case"VALID":return ut[ct]=0,ut[dt]=0,Math.floor((ot-ht)/it+1);case"SAME_LOWER":case"SAME_UPPER":if(at!==1)throw new Error("Dilation not supported for SAME_UPPER or SAME_LOWER");{const ft=((ot+it-1)/it-1)*it+lt-ot;return ut[ct]=Math.floor(pt==="SAME_LOWER"?(ft+1)/2:ft/2),ut[dt]=ft-ut[ct],Math.floor((ot+ft-lt)/it+1)}default:throw new Error("Unsupported AutoPad type")}}}s.PoolConvUtil=rt,s.MIN_CLIP=-34028234663852886e22,s.MAX_CLIP=34028234663852886e22,s.decodeUtf8String=function(st){return new TextDecoder().decode(st)}},7967:(i,s)=>{Object.defineProperty(s,"__esModule",{value:!0}),s.iterateExtraOptions=void 0,s.iterateExtraOptions=(o,a,c,d)=>{if(typeof o=="object"&&o!==null){if(c.has(o))throw new Error("Circular reference in options");c.add(o)}Object.entries(o).forEach(([g,$])=>{const j=a?a+g:g;if(typeof $=="object")(0,s.iterateExtraOptions)($,j+".",c,d);else if(typeof $=="string"||typeof $=="number")d(j,$.toString());else{if(typeof $!="boolean")throw new Error("Can't handle extra config type: "+typeof $);d(j,$?"1":"0")}})}},2157:function(i,s,o){var a,c=this&&this.__createBinding||(Object.create?function(ft,yt,wt,_t){_t===void 0&&(_t=wt);var bt=Object.getOwnPropertyDescriptor(yt,wt);bt&&!("get"in bt?!yt.__esModule:bt.writable||bt.configurable)||(bt={enumerable:!0,get:function(){return yt[wt]}}),Object.defineProperty(ft,_t,bt)}:function(ft,yt,wt,_t){_t===void 0&&(_t=wt),ft[_t]=yt[wt]}),d=this&&this.__setModuleDefault||(Object.create?function(ft,yt){Object.defineProperty(ft,"default",{enumerable:!0,value:yt})}:function(ft,yt){ft.default=yt}),g=this&&this.__importStar||function(ft){if(ft&&ft.__esModule)return ft;var yt={};if(ft!=null)for(var wt in ft)wt!=="default"&&Object.prototype.hasOwnProperty.call(ft,wt)&&c(yt,ft,wt);return d(yt,ft),yt};Object.defineProperty(s,"__esModule",{value:!0}),s.endProfiling=s.run=s.releaseSession=s.createSession=s.createSessionFinalize=s.createSessionAllocate=s.initOrt=s.initWasm=void 0;const $=o(1670),j=g(o(349)),_e=o(6361),et=()=>!!$.env.wasm.proxy&&typeof document<"u";let _,b,tt,nt=!1,rt=!1,st=!1;const ot=[],it=[],at=[],lt=[],ut=[],ct=[],dt=()=>{if(nt||!rt||st||!_)throw new Error("worker not ready")},pt=ft=>{switch(ft.data.type){case"init-wasm":nt=!1,ft.data.err?(st=!0,b[1](ft.data.err)):(rt=!0,b[0]());break;case"init-ort":ft.data.err?tt[1](ft.data.err):tt[0]();break;case"create_allocate":ft.data.err?ot.shift()[1](ft.data.err):ot.shift()[0](ft.data.out);break;case"create_finalize":ft.data.err?it.shift()[1](ft.data.err):it.shift()[0](ft.data.out);break;case"create":ft.data.err?at.shift()[1](ft.data.err):at.shift()[0](ft.data.out);break;case"release":ft.data.err?lt.shift()[1](ft.data.err):lt.shift()[0]();break;case"run":ft.data.err?ut.shift()[1](ft.data.err):ut.shift()[0](ft.data.out);break;case"end-profiling":ft.data.err?ct.shift()[1](ft.data.err):ct.shift()[0]()}},ht=typeof document<"u"?(a=document==null?void 0:document.currentScript)===null||a===void 0?void 0:a.src:void 0;s.initWasm=async()=>{if(et()){if(rt)return;if(nt)throw new Error("multiple calls to 'initWasm()' detected.");if(st)throw new Error("previous call to 'initWasm()' failed.");return nt=!0,$.env.wasm.wasmPaths===void 0&&ht&&ht.indexOf("blob:")!==0&&($.env.wasm.wasmPaths=ht.substr(0,+ht.lastIndexOf("/")+1)),new Promise((ft,yt)=>{_==null||_.terminate(),_=o(9710).Z(),_.onmessage=pt,b=[ft,yt];const wt={type:"init-wasm",in:$.env.wasm};_.postMessage(wt)})}return(0,_e.initializeWebAssembly)($.env.wasm)},s.initOrt=async(ft,yt)=>{if(et())return dt(),new Promise((wt,_t)=>{tt=[wt,_t];const bt={type:"init-ort",in:{numThreads:ft,loggingLevel:yt}};_.postMessage(bt)});j.initOrt(ft,yt)},s.createSessionAllocate=async ft=>et()?(dt(),new Promise((yt,wt)=>{ot.push([yt,wt]);const _t={type:"create_allocate",in:{model:ft}};_.postMessage(_t,[ft.buffer])})):j.createSessionAllocate(ft),s.createSessionFinalize=async(ft,yt)=>et()?(dt(),new Promise((wt,_t)=>{it.push([wt,_t]);const bt={type:"create_finalize",in:{modeldata:ft,options:yt}};_.postMessage(bt)})):j.createSessionFinalize(ft,yt),s.createSession=async(ft,yt)=>et()?(dt(),new Promise((wt,_t)=>{at.push([wt,_t]);const bt={type:"create",in:{model:ft,options:yt}};_.postMessage(bt,[ft.buffer])})):j.createSession(ft,yt),s.releaseSession=async ft=>{if(et())return dt(),new Promise((yt,wt)=>{lt.push([yt,wt]);const _t={type:"release",in:ft};_.postMessage(_t)});j.releaseSession(ft)},s.run=async(ft,yt,wt,_t,bt)=>et()?(dt(),new Promise((xt,mt)=>{ut.push([xt,mt]);const vt={type:"run",in:{sessionId:ft,inputIndices:yt,inputs:wt,outputIndices:_t,options:bt}};_.postMessage(vt,j.extractTransferableBuffers(wt))})):j.run(ft,yt,wt,_t,bt),s.endProfiling=async ft=>{if(et())return dt(),new Promise((yt,wt)=>{ct.push([yt,wt]);const _t={type:"end-profiling",in:ft};_.postMessage(_t)});j.endProfiling(ft)}},586:(i,s,o)=>{Object.defineProperty(s,"__esModule",{value:!0}),s.setRunOptions=void 0;const a=o(7967),c=o(4983),d=o(6361);s.setRunOptions=g=>{const $=(0,d.getInstance)();let j=0;const _e=[],et=g||{};try{if((g==null?void 0:g.logSeverityLevel)===void 0)et.logSeverityLevel=2;else if(typeof g.logSeverityLevel!="number"||!Number.isInteger(g.logSeverityLevel)||g.logSeverityLevel<0||g.logSeverityLevel>4)throw new Error(`log serverity level is not valid: ${g.logSeverityLevel}`);if((g==null?void 0:g.logVerbosityLevel)===void 0)et.logVerbosityLevel=0;else if(typeof g.logVerbosityLevel!="number"||!Number.isInteger(g.logVerbosityLevel))throw new Error(`log verbosity level is not valid: ${g.logVerbosityLevel}`);(g==null?void 0:g.terminate)===void 0&&(et.terminate=!1);let _=0;if((g==null?void 0:g.tag)!==void 0&&(_=(0,c.allocWasmString)(g.tag,_e)),j=$._OrtCreateRunOptions(et.logSeverityLevel,et.logVerbosityLevel,!!et.terminate,_),j===0)throw new Error("Can't create run options");return(g==null?void 0:g.extra)!==void 0&&(0,a.iterateExtraOptions)(g.extra,"",new WeakSet,(b,tt)=>{const nt=(0,c.allocWasmString)(b,_e),rt=(0,c.allocWasmString)(tt,_e);if($._OrtAddRunConfigEntry(j,nt,rt)!==0)throw new Error(`Can't set a run config entry: ${b} - ${tt}`)}),[j,_e]}catch(_){throw j!==0&&$._OrtReleaseRunOptions(j),_e.forEach($._free),_}}},2306:(i,s,o)=>{Object.defineProperty(s,"__esModule",{value:!0}),s.OnnxruntimeWebAssemblySessionHandler=void 0;const a=o(2806),c=o(1670),d=o(2850),g=o(2157);let $;s.OnnxruntimeWebAssemblySessionHandler=class{async createSessionAllocate(j){const _e=await fetch(j),et=await _e.arrayBuffer();return(0,g.createSessionAllocate)(new Uint8Array(et))}async loadModel(j,_e){if($||(await(0,g.initOrt)(c.env.wasm.numThreads,(et=>{switch(et){case"verbose":return 0;case"info":return 1;case"warning":return 2;case"error":return 3;case"fatal":return 4;default:throw new Error(`unsupported logging level: ${et}`)}})(c.env.logLevel)),$=!0),typeof j=="string")if(typeof fetch>"u"){const et=await(0,d.promisify)(a.readFile)(j);[this.sessionId,this.inputNames,this.outputNames]=await(0,g.createSession)(et,_e)}else{const et=await this.createSessionAllocate(j);[this.sessionId,this.inputNames,this.outputNames]=await(0,g.createSessionFinalize)(et,_e)}else[this.sessionId,this.inputNames,this.outputNames]=await(0,g.createSession)(j,_e)}async dispose(){return(0,g.releaseSession)(this.sessionId)}async run(j,_e,et){const _=[],b=[];Object.entries(j).forEach(st=>{const ot=st[0],it=st[1],at=this.inputNames.indexOf(ot);if(at===-1)throw new Error(`invalid input '${ot}'`);_.push(it),b.push(at)});const tt=[];Object.entries(_e).forEach(st=>{const ot=st[0],it=this.outputNames.indexOf(ot);if(it===-1)throw new Error(`invalid output '${ot}'`);tt.push(it)});const nt=await(0,g.run)(this.sessionId,b,_.map(st=>[st.type,st.dims,st.data]),tt,et),rt={};for(let st=0;st<nt.length;st++)rt[this.outputNames[tt[st]]]=new c.Tensor(nt[st][0],nt[st][2],nt[st][1]);return rt}startProfiling(){}endProfiling(){(0,g.endProfiling)(this.sessionId)}}},4919:(i,s,o)=>{Object.defineProperty(s,"__esModule",{value:!0}),s.setSessionOptions=void 0;const a=o(7967),c=o(4983),d=o(6361);s.setSessionOptions=g=>{const $=(0,d.getInstance)();let j=0;const _e=[],et=g||{};(_=>{_.extra||(_.extra={}),_.extra.session||(_.extra.session={});const b=_.extra.session;b.use_ort_model_bytes_directly||(b.use_ort_model_bytes_directly="1")})(et);try{(g==null?void 0:g.graphOptimizationLevel)===void 0&&(et.graphOptimizationLevel="all");const _=(nt=>{switch(nt){case"disabled":return 0;case"basic":return 1;case"extended":return 2;case"all":return 99;default:throw new Error(`unsupported graph optimization level: ${nt}`)}})(et.graphOptimizationLevel);(g==null?void 0:g.enableCpuMemArena)===void 0&&(et.enableCpuMemArena=!0),(g==null?void 0:g.enableMemPattern)===void 0&&(et.enableMemPattern=!0),(g==null?void 0:g.executionMode)===void 0&&(et.executionMode="sequential");const b=(nt=>{switch(nt){case"sequential":return 0;case"parallel":return 1;default:throw new Error(`unsupported execution mode: ${nt}`)}})(et.executionMode);let tt=0;if((g==null?void 0:g.logId)!==void 0&&(tt=(0,c.allocWasmString)(g.logId,_e)),(g==null?void 0:g.logSeverityLevel)===void 0)et.logSeverityLevel=2;else if(typeof g.logSeverityLevel!="number"||!Number.isInteger(g.logSeverityLevel)||g.logSeverityLevel<0||g.logSeverityLevel>4)throw new Error(`log serverity level is not valid: ${g.logSeverityLevel}`);if((g==null?void 0:g.logVerbosityLevel)===void 0)et.logVerbosityLevel=0;else if(typeof g.logVerbosityLevel!="number"||!Number.isInteger(g.logVerbosityLevel))throw new Error(`log verbosity level is not valid: ${g.logVerbosityLevel}`);if((g==null?void 0:g.enableProfiling)===void 0&&(et.enableProfiling=!1),j=$._OrtCreateSessionOptions(_,!!et.enableCpuMemArena,!!et.enableMemPattern,b,!!et.enableProfiling,0,tt,et.logSeverityLevel,et.logVerbosityLevel),j===0)throw new Error("Can't create session options");return g!=null&&g.executionProviders&&((nt,rt,st)=>{for(const ot of rt){let it=typeof ot=="string"?ot:ot.name;switch(it){case"xnnpack":it="XNNPACK";break;case"wasm":case"cpu":continue;default:throw new Error(`not supported EP: ${it}`)}const at=(0,c.allocWasmString)(it,st);if((0,d.getInstance)()._OrtAppendExecutionProvider(nt,at)!==0)throw new Error(`Can't append execution provider: ${it}`)}})(j,g.executionProviders,_e),(g==null?void 0:g.extra)!==void 0&&(0,a.iterateExtraOptions)(g.extra,"",new WeakSet,(nt,rt)=>{const st=(0,c.allocWasmString)(nt,_e),ot=(0,c.allocWasmString)(rt,_e);if($._OrtAddSessionConfigEntry(j,st,ot)!==0)throw new Error(`Can't set a session config entry: ${nt} - ${rt}`)}),[j,_e]}catch(_){throw j!==0&&$._OrtReleaseSessionOptions(j),_e.forEach($._free),_}}},4983:(i,s,o)=>{Object.defineProperty(s,"__esModule",{value:!0}),s.allocWasmString=void 0;const a=o(6361);s.allocWasmString=(c,d)=>{const g=(0,a.getInstance)(),$=g.lengthBytesUTF8(c)+1,j=g._malloc($);return g.stringToUTF8(c,j,$),d.push(j),j}},349:(i,s,o)=>{Object.defineProperty(s,"__esModule",{value:!0}),s.extractTransferableBuffers=s.endProfiling=s.run=s.releaseSession=s.createSession=s.createSessionFinalize=s.createSessionAllocate=s.initOrt=void 0;const a=o(586),c=o(4919),d=o(4983),g=o(6361);s.initOrt=(_,b)=>{const tt=(0,g.getInstance)()._OrtInit(_,b);if(tt!==0)throw new Error(`Can't initialize onnxruntime. error code = ${tt}`)};const $=new Map;s.createSessionAllocate=_=>{const b=(0,g.getInstance)(),tt=b._malloc(_.byteLength);return b.HEAPU8.set(_,tt),[tt,_.byteLength]},s.createSessionFinalize=(_,b)=>{const tt=(0,g.getInstance)();let nt=0,rt=0,st=[];try{if([rt,st]=(0,c.setSessionOptions)(b),nt=tt._OrtCreateSession(_[0],_[1],rt),nt===0)throw new Error("Can't create a session")}finally{tt._free(_[0]),tt._OrtReleaseSessionOptions(rt),st.forEach(tt._free)}const ot=tt._OrtGetInputCount(nt),it=tt._OrtGetOutputCount(nt),at=[],lt=[],ut=[],ct=[];for(let dt=0;dt<ot;dt++){const pt=tt._OrtGetInputName(nt,dt);if(pt===0)throw new Error("Can't get an input name");lt.push(pt),at.push(tt.UTF8ToString(pt))}for(let dt=0;dt<it;dt++){const pt=tt._OrtGetOutputName(nt,dt);if(pt===0)throw new Error("Can't get an output name");ct.push(pt),ut.push(tt.UTF8ToString(pt))}return $.set(nt,[nt,lt,ct]),[nt,at,ut]},s.createSession=(_,b)=>{const tt=(0,s.createSessionAllocate)(_);return(0,s.createSessionFinalize)(tt,b)},s.releaseSession=_=>{const b=(0,g.getInstance)(),tt=$.get(_);if(!tt)throw new Error("invalid session id");const nt=tt[0],rt=tt[1],st=tt[2];rt.forEach(b._OrtFree),st.forEach(b._OrtFree),b._OrtReleaseSession(nt),$.delete(_)};const j=_=>{switch(_){case"int8":return 3;case"uint8":return 2;case"bool":return 9;case"int16":return 5;case"uint16":return 4;case"int32":return 6;case"uint32":return 12;case"float32":return 1;case"float64":return 11;case"string":return 8;case"int64":return 7;case"uint64":return 13;default:throw new Error(`unsupported data type: ${_}`)}},_e=_=>{switch(_){case 3:return"int8";case 2:return"uint8";case 9:return"bool";case 5:return"int16";case 4:return"uint16";case 6:return"int32";case 12:return"uint32";case 1:return"float32";case 11:return"float64";case 8:return"string";case 7:return"int64";case 13:return"uint64";default:throw new Error(`unsupported data type: ${_}`)}},et=_=>{switch(_){case"float32":return Float32Array;case"uint8":case"bool":return Uint8Array;case"int8":return Int8Array;case"uint16":return Uint16Array;case"int16":return Int16Array;case"int32":return Int32Array;case"float64":return Float64Array;case"uint32":return Uint32Array;case"int64":return BigInt64Array;case"uint64":return BigUint64Array;default:throw new Error(`unsupported type: ${_}`)}};s.run=(_,b,tt,nt,rt)=>{const st=(0,g.getInstance)(),ot=$.get(_);if(!ot)throw new Error("invalid session id");const it=ot[0],at=ot[1],lt=ot[2],ut=b.length,ct=nt.length;let dt=0,pt=[];const ht=[],ft=[];try{[dt,pt]=(0,a.setRunOptions)(rt);for(let mt=0;mt<ut;mt++){const vt=tt[mt][0],Et=tt[mt][1],Ct=tt[mt][2];let kt,Nt;if(Array.isArray(Ct)){Nt=4*Ct.length,kt=st._malloc(Nt),ft.push(kt);let Gt=kt/4;for(let Ft=0;Ft<Ct.length;Ft++){if(typeof Ct[Ft]!="string")throw new TypeError(`tensor data at index ${Ft} is not a string`);st.HEAPU32[Gt++]=(0,d.allocWasmString)(Ct[Ft],ft)}}else Nt=Ct.byteLength,kt=st._malloc(Nt),ft.push(kt),st.HEAPU8.set(new Uint8Array(Ct.buffer,Ct.byteOffset,Nt),kt);const Mt=st.stackSave(),Vt=st.stackAlloc(4*Et.length);try{let Gt=Vt/4;Et.forEach(jt=>st.HEAP32[Gt++]=jt);const Ft=st._OrtCreateTensor(j(vt),kt,Nt,Vt,Et.length);if(Ft===0)throw new Error("Can't create a tensor");ht.push(Ft)}finally{st.stackRestore(Mt)}}const yt=st.stackSave(),wt=st.stackAlloc(4*ut),_t=st.stackAlloc(4*ut),bt=st.stackAlloc(4*ct),xt=st.stackAlloc(4*ct);try{let mt=wt/4,vt=_t/4,Et=bt/4,Ct=xt/4;for(let Mt=0;Mt<ut;Mt++)st.HEAPU32[mt++]=ht[Mt],st.HEAPU32[vt++]=at[b[Mt]];for(let Mt=0;Mt<ct;Mt++)st.HEAPU32[Et++]=0,st.HEAPU32[Ct++]=lt[nt[Mt]];let kt=st._OrtRun(it,_t,wt,ut,xt,ct,bt,dt);const Nt=[];if(kt===0)for(let Mt=0;Mt<ct;Mt++){const Vt=st.HEAPU32[bt/4+Mt],Gt=st.stackSave(),Ft=st.stackAlloc(16);let jt,qt=0;try{if(kt=st._OrtGetTensorData(Vt,Ft,Ft+4,Ft+8,Ft+12),kt!==0)throw new Error(`Can't access output tensor data. error code = ${kt}`);let Yt=Ft/4;const Qt=st.HEAPU32[Yt++];qt=st.HEAPU32[Yt++];const Zt=st.HEAPU32[Yt++],en=st.HEAPU32[Yt++],on=[];for(let sn=0;sn<en;sn++)on.push(st.HEAPU32[Zt/4+sn]);st._OrtFree(Zt);const rn=on.length===0?1:on.reduce((sn,pn)=>sn*pn);if(jt=_e(Qt),jt==="string"){const sn=[];let pn=qt/4;for(let dn=0;dn<rn;dn++){const mn=st.HEAPU32[pn++],Sn=dn===rn-1?void 0:st.HEAPU32[pn]-mn;sn.push(st.UTF8ToString(mn,Sn))}Nt.push([jt,on,sn])}else{const sn=new(et(jt))(rn);new Uint8Array(sn.buffer,sn.byteOffset,sn.byteLength).set(st.HEAPU8.subarray(qt,qt+sn.byteLength)),Nt.push([jt,on,sn])}}finally{st.stackRestore(Gt),jt==="string"&&qt&&st._free(qt),st._OrtReleaseTensor(Vt)}}if(kt===0)return Nt;throw new Error(`failed to call OrtRun(). error code = ${kt}.`)}finally{st.stackRestore(yt)}}finally{ht.forEach(st._OrtReleaseTensor),ft.forEach(st._free),st._OrtReleaseRunOptions(dt),pt.forEach(st._free)}},s.endProfiling=_=>{const b=(0,g.getInstance)(),tt=$.get(_);if(!tt)throw new Error("invalid session id");const nt=tt[0],rt=b._OrtEndProfiling(nt);if(rt===0)throw new Error("Can't get an profile file name");b._OrtFree(rt)},s.extractTransferableBuffers=_=>{const b=[];for(const tt of _){const nt=tt[2];!Array.isArray(nt)&&nt.buffer&&b.push(nt.buffer)}return b}},6361:function(i,s,o){var a=this&&this.__createBinding||(Object.create?function(rt,st,ot,it){it===void 0&&(it=ot);var at=Object.getOwnPropertyDescriptor(st,ot);at&&!("get"in at?!st.__esModule:at.writable||at.configurable)||(at={enumerable:!0,get:function(){return st[ot]}}),Object.defineProperty(rt,it,at)}:function(rt,st,ot,it){it===void 0&&(it=ot),rt[it]=st[ot]}),c=this&&this.__setModuleDefault||(Object.create?function(rt,st){Object.defineProperty(rt,"default",{enumerable:!0,value:st})}:function(rt,st){rt.default=st}),d=this&&this.__importStar||function(rt){if(rt&&rt.__esModule)return rt;var st={};if(rt!=null)for(var ot in rt)ot!=="default"&&Object.prototype.hasOwnProperty.call(rt,ot)&&a(st,rt,ot);return c(st,rt),st},g=this&&this.__importDefault||function(rt){return rt&&rt.__esModule?rt:{default:rt}};Object.defineProperty(s,"__esModule",{value:!0}),s.dispose=s.getInstance=s.initializeWebAssembly=void 0;const $=d(o(6449)),j=g(o(932)),_e=o(3474);let et,_=!1,b=!1,tt=!1;const nt=(rt,st)=>st?rt?"ort-wasm-simd-threaded.wasm":"ort-wasm-threaded.wasm":rt?"ort-wasm-simd.wasm":"ort-wasm.wasm";s.initializeWebAssembly=async rt=>{if(_)return Promise.resolve();if(b)throw new Error("multiple calls to 'initializeWebAssembly()' detected.");if(tt)throw new Error("previous call to 'initializeWebAssembly()' failed.");b=!0;const st=rt.initTimeout,ot=rt.numThreads,it=rt.simd,at=ot>1&&(()=>{try{return typeof SharedArrayBuffer<"u"&&(typeof MessageChannel<"u"&&new MessageChannel().port1.postMessage(new SharedArrayBuffer(1)),WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,4,1,3,1,1,10,11,1,9,0,65,0,254,16,2,0,26,11])))}catch{return!1}})(),lt=it&&(()=>{try{return WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,30,1,28,0,65,0,253,15,253,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,253,186,1,26,11]))}catch{return!1}})(),ut=typeof rt.wasmPaths=="string"?rt.wasmPaths:void 0,ct=nt(!1,at),dt=nt(lt,at),pt=typeof rt.wasmPaths=="object"?rt.wasmPaths[dt]:void 0;let ht=!1;const ft=[];if(st>0&&ft.push(new Promise(yt=>{setTimeout(()=>{ht=!0,yt()},st)})),ft.push(new Promise((yt,wt)=>{const _t=at?_e:j.default,bt={locateFile:(xt,mt)=>at&&xt.endsWith(".worker.js")&&typeof Blob<"u"?URL.createObjectURL(new Blob([o(4154)],{type:"text/javascript"})):xt===ct?pt??(ut??mt)+dt:mt+xt};if(at)if(typeof Blob>"u")bt.mainScriptUrlOrBlob=$.join("/","ort-wasm-threaded.js");else{const xt=`var ortWasmThreaded=(function(){var _scriptDir;return ${_t.toString()}})();`;bt.mainScriptUrlOrBlob=new Blob([xt],{type:"text/javascript"})}_t(bt).then(xt=>{b=!1,_=!0,et=xt,yt()},xt=>{b=!1,tt=!0,wt(xt)})})),await Promise.race(ft),ht)throw new Error(`WebAssembly backend initializing failed due to timeout: ${st}ms`)},s.getInstance=()=>{if(_&&et)return et;throw new Error("WebAssembly is not initialized yet.")},s.dispose=()=>{var rt;!_||b||tt||(b=!0,(rt=et.PThread)===null||rt===void 0||rt.terminateAllThreads(),et=void 0,b=!1,_=!1,tt=!0)}},9710:(i,s,o)=>{o.d(s,{Z:()=>d});var a=o(477),c=o.n(a);function d(){return c()('/*!\n* ONNX Runtime Web v1.14.0\n* Copyright (c) Microsoft Corporation. All rights reserved.\n* Licensed under the MIT License.\n*/\n(()=>{var t={474:(t,e,n)=>{var _scriptDir,r=(_scriptDir=(_scriptDir="undefined"!=typeof document&&document.currentScript?document.currentScript.src:void 0)||"/index.js",function(t){function e(){return j.buffer!=D&&N(j.buffer),P}function r(){return j.buffer!=D&&N(j.buffer),U}function a(){return j.buffer!=D&&N(j.buffer),F}function i(){return j.buffer!=D&&N(j.buffer),I}function o(){return j.buffer!=D&&N(j.buffer),W}var u,c,s;t=t||{},u||(u=void 0!==t?t:{}),u.ready=new Promise((function(t,e){c=t,s=e}));var l,f,p,h,d,y,b=Object.assign({},u),m="./this.program",g=(t,e)=>{throw e},v="object"==typeof window,w="function"==typeof importScripts,_="object"==typeof process&&"object"==typeof process.versions&&"string"==typeof process.versions.node,O=u.ENVIRONMENT_IS_PTHREAD||!1,A="";function S(t){return u.locateFile?u.locateFile(t,A):A+t}if(_){let e;A=w?n(908).dirname(A)+"/":"//",y=()=>{d||(h=n(384),d=n(908))},l=function(t,e){return y(),t=d.normalize(t),h.readFileSync(t,e?void 0:"utf8")},p=t=>((t=l(t,!0)).buffer||(t=new Uint8Array(t)),t),f=(t,e,n)=>{y(),t=d.normalize(t),h.readFile(t,(function(t,r){t?n(t):e(r.buffer)}))},1<process.argv.length&&(m=process.argv[1].replace(/\\\\/g,"/")),process.argv.slice(2),process.on("uncaughtException",(function(t){if(!(t instanceof ct))throw t})),process.on("unhandledRejection",(function(t){throw t})),g=(t,e)=>{if(Q())throw process.exitCode=t,e;e instanceof ct||x("exiting due to exception: "+e),process.exit(t)},u.inspect=function(){return"[Emscripten Module object]"};try{e=n(925)}catch(t){throw console.error(\'The "worker_threads" module is not supported in this node.js build - perhaps a newer version is needed?\'),t}n.g.Worker=e.Worker}else(v||w)&&(w?A=self.location.href:"undefined"!=typeof document&&document.currentScript&&(A=document.currentScript.src),_scriptDir&&(A=_scriptDir),A=0!==A.indexOf("blob:")?A.substr(0,A.replace(/[?#].*/,"").lastIndexOf("/")+1):"",_||(l=t=>{var e=new XMLHttpRequest;return e.open("GET",t,!1),e.send(null),e.responseText},w&&(p=t=>{var e=new XMLHttpRequest;return e.open("GET",t,!1),e.responseType="arraybuffer",e.send(null),new Uint8Array(e.response)}),f=(t,e,n)=>{var r=new XMLHttpRequest;r.open("GET",t,!0),r.responseType="arraybuffer",r.onload=()=>{200==r.status||0==r.status&&r.response?e(r.response):n()},r.onerror=n,r.send(null)}));_&&"undefined"==typeof performance&&(n.g.performance=n(953).performance);var T=console.log.bind(console),E=console.warn.bind(console);_&&(y(),T=t=>h.writeSync(1,t+"\\n"),E=t=>h.writeSync(2,t+"\\n"));var M,C=u.print||T,x=u.printErr||E;Object.assign(u,b),b=null,u.thisProgram&&(m=u.thisProgram),u.quit&&(g=u.quit),u.wasmBinary&&(M=u.wasmBinary);var R=u.noExitRuntime||!1;"object"!=typeof WebAssembly&&at("no native wasm support detected");var j,k,D,P,U,F,I,W,H=!1,L="undefined"!=typeof TextDecoder?new TextDecoder("utf8"):void 0;function z(t,e,n){var r=(e>>>=0)+n;for(n=e;t[n]&&!(n>=r);)++n;if(16<n-e&&t.buffer&&L)return L.decode(t.buffer instanceof SharedArrayBuffer?t.slice(e,n):t.subarray(e,n));for(r="";e<n;){var a=t[e++];if(128&a){var i=63&t[e++];if(192==(224&a))r+=String.fromCharCode((31&a)<<6|i);else{var o=63&t[e++];65536>(a=224==(240&a)?(15&a)<<12|i<<6|o:(7&a)<<18|i<<12|o<<6|63&t[e++])?r+=String.fromCharCode(a):(a-=65536,r+=String.fromCharCode(55296|a>>10,56320|1023&a))}}else r+=String.fromCharCode(a)}return r}function Y(t,e){return(t>>>=0)?z(r(),t,e):""}function B(t,e,n,r){if(!(0<r))return 0;var a=n>>>=0;r=n+r-1;for(var i=0;i<t.length;++i){var o=t.charCodeAt(i);if(55296<=o&&57343>=o&&(o=65536+((1023&o)<<10)|1023&t.charCodeAt(++i)),127>=o){if(n>=r)break;e[n++>>>0]=o}else{if(2047>=o){if(n+1>=r)break;e[n++>>>0]=192|o>>6}else{if(65535>=o){if(n+2>=r)break;e[n++>>>0]=224|o>>12}else{if(n+3>=r)break;e[n++>>>0]=240|o>>18,e[n++>>>0]=128|o>>12&63}e[n++>>>0]=128|o>>6&63}e[n++>>>0]=128|63&o}}return e[n>>>0]=0,n-a}function G(t){for(var e=0,n=0;n<t.length;++n){var r=t.charCodeAt(n);127>=r?e++:2047>=r?e+=2:55296<=r&&57343>=r?(e+=4,++n):e+=3}return e}function N(t){D=t,u.HEAP8=P=new Int8Array(t),u.HEAP16=new Int16Array(t),u.HEAP32=F=new Int32Array(t),u.HEAPU8=U=new Uint8Array(t),u.HEAPU16=new Uint16Array(t),u.HEAPU32=I=new Uint32Array(t),u.HEAPF32=new Float32Array(t),u.HEAPF64=W=new Float64Array(t)}O&&(D=u.buffer);var V=u.INITIAL_MEMORY||16777216;if(O)j=u.wasmMemory,D=u.buffer;else if(u.wasmMemory)j=u.wasmMemory;else if(!((j=new WebAssembly.Memory({initial:V/65536,maximum:65536,shared:!0})).buffer instanceof SharedArrayBuffer))throw x("requested a shared WebAssembly.Memory but the returned buffer is not a SharedArrayBuffer, indicating that while the browser has SharedArrayBuffer it does not have WebAssembly threads support - you may need to set a flag"),_&&console.log("(on node you may need: --experimental-wasm-threads --experimental-wasm-bulk-memory and also use a recent version)"),Error("bad memory");j&&(D=j.buffer),V=D.byteLength,N(D);var $,q=[],X=[],J=[],Z=[];function Q(){return R||!1}function K(){var t=u.preRun.shift();q.unshift(t)}var tt,et=0,nt=null,rt=null;function at(t){throw O?postMessage({cmd:"onAbort",arg:t}):u.onAbort&&u.onAbort(t),x(t="Aborted("+t+")"),H=!0,t=new WebAssembly.RuntimeError(t+". Build with -sASSERTIONS for more info."),s(t),t}function it(){return tt.startsWith("data:application/octet-stream;base64,")}function ot(){var t=tt;try{if(t==tt&&M)return new Uint8Array(M);if(p)return p(t);throw"both async and sync fetching of the wasm failed"}catch(t){at(t)}}tt="ort-wasm-threaded.wasm",it()||(tt=S(tt));var ut={};function ct(t){this.name="ExitStatus",this.message="Program terminated with exit("+t+")",this.status=t}function st(t){(t=ht.Vb[t])||at(),ht.mc(t)}function lt(t){var e=ht.Cc();if(!e)return 6;ht.ac.push(e),ht.Vb[t.Ub]=e,e.Ub=t.Ub;var n={cmd:"run",start_routine:t.Ic,arg:t.zc,pthread_ptr:t.Ub};return e.$b=()=>{n.time=performance.now(),e.postMessage(n,t.Nc)},e.loaded&&(e.$b(),delete e.$b),0}function ft(t){if(O)return $t(1,1,t);Q()||(ht.oc(),u.onExit&&u.onExit(t),H=!0),g(t,new ct(t))}function pt(t,e){if(!e&&O)throw bt(t),"unwind";Q()||O||(me(),dt(J),be(0),re[1].length&&ae(1,10),re[2].length&&ae(2,10),ht.oc()),ft(t)}var ht={Yb:[],ac:[],qc:[],Vb:{},fc:function(){O&&ht.Ec()},Pc:function(){},Ec:function(){ht.receiveObjectTransfer=ht.Gc,ht.threadInitTLS=ht.pc,ht.setExitStatus=ht.nc,R=!1},nc:function(){},oc:function(){for(var t of Object.values(ht.Vb))ht.mc(t);for(t of ht.Yb)t.terminate();ht.Yb=[]},mc:function(t){var e=t.Ub;delete ht.Vb[e],ht.Yb.push(t),ht.ac.splice(ht.ac.indexOf(t),1),t.Ub=0,Oe(e)},Gc:function(){},pc:function(){ht.qc.forEach((t=>t()))},Fc:function(t,e){t.onmessage=n=>{var r=(n=n.data).cmd;if(t.Ub&&(ht.Bc=t.Ub),n.targetThread&&n.targetThread!=he()){var a=ht.Vb[n.Qc];a?a.postMessage(n,n.transferList):x(\'Internal error! Worker sent a message "\'+r+\'" to target pthread \'+n.targetThread+", but that thread no longer exists!")}else"processProxyingQueue"===r?zt(n.queue):"spawnThread"===r?lt(n):"cleanupThread"===r?st(n.thread):"killThread"===r?(n=n.thread,r=ht.Vb[n],delete ht.Vb[n],r.terminate(),Oe(n),ht.ac.splice(ht.ac.indexOf(r),1),r.Ub=0):"cancelThread"===r?ht.Vb[n.thread].postMessage({cmd:"cancel"}):"loaded"===r?(t.loaded=!0,e&&e(t),t.$b&&(t.$b(),delete t.$b)):"print"===r?C("Thread "+n.threadId+": "+n.text):"printErr"===r?x("Thread "+n.threadId+": "+n.text):"alert"===r?alert("Thread "+n.threadId+": "+n.text):"setimmediate"===n.target?t.postMessage(n):"onAbort"===r?u.onAbort&&u.onAbort(n.arg):r&&x("worker sent an unknown command "+r);ht.Bc=void 0},t.onerror=t=>{throw x("worker sent an error! "+t.filename+":"+t.lineno+": "+t.message),t},_&&(t.on("message",(function(e){t.onmessage({data:e})})),t.on("error",(function(e){t.onerror(e)})),t.on("detachedExit",(function(){}))),t.postMessage({cmd:"load",urlOrBlob:u.mainScriptUrlOrBlob||_scriptDir,wasmMemory:j,wasmModule:k})},yc:function(){var t=S("ort-wasm-threaded.worker.js");ht.Yb.push(new Worker(t))},Cc:function(){return 0==ht.Yb.length&&(ht.yc(),ht.Fc(ht.Yb[0])),ht.Yb.pop()}};function dt(t){for(;0<t.length;)t.shift()(u)}function yt(t){var e=Ee();return t=t(),Me(e),t}function bt(t){if(O)return $t(2,0,t);try{pt(t)}catch(t){t instanceof ct||"unwind"==t||g(1,t)}}u.PThread=ht,u.establishStackSpace=function(){var t=he(),e=a()[t+44>>2>>>0];t=a()[t+48>>2>>>0],Te(e,e-t),Me(e)};var mt=[];function gt(t){var e=mt[t];return e||(t>=mt.length&&(mt.length=t+1),mt[t]=e=$.get(t)),e}u.invokeEntryPoint=function(t,e){t=gt(t)(e),Q()?ht.nc(t):Ae(t)};var vt,wt,_t=[],Ot=0,At=0;function St(t){this.Zb=t,this.Sb=t-24,this.xc=function(t){i()[this.Sb+4>>2>>>0]=t},this.bc=function(){return i()[this.Sb+4>>2>>>0]},this.wc=function(t){i()[this.Sb+8>>2>>>0]=t},this.Dc=function(){return i()[this.Sb+8>>2>>>0]},this.rc=function(){a()[this.Sb>>2>>>0]=0},this.hc=function(t){t=t?1:0,e()[this.Sb+12>>0>>>0]=t},this.uc=function(){return 0!=e()[this.Sb+12>>0>>>0]},this.ic=function(t){t=t?1:0,e()[this.Sb+13>>0>>>0]=t},this.kc=function(){return 0!=e()[this.Sb+13>>0>>>0]},this.fc=function(t,e){this.cc(0),this.xc(t),this.wc(e),this.rc(),this.hc(!1),this.ic(!1)},this.sc=function(){Atomics.add(a(),this.Sb>>2,1)},this.Hc=function(){return 1===Atomics.sub(a(),this.Sb>>2,1)},this.cc=function(t){i()[this.Sb+16>>2>>>0]=t},this.tc=function(){return i()[this.Sb+16>>2>>>0]},this.vc=function(){if(Re(this.bc()))return i()[this.Zb>>2>>>0];var t=this.tc();return 0!==t?t:this.Zb}}function Tt(t){return ye(new St(t).Sb)}function Et(t,e,n,r){return O?$t(3,1,t,e,n,r):Mt(t,e,n,r)}function Mt(t,e,n,r){if("undefined"==typeof SharedArrayBuffer)return x("Current environment does not support SharedArrayBuffer, pthreads are not available!"),6;var a=[];return O&&0===a.length?Et(t,e,n,r):(t={Ic:n,Ub:t,zc:r,Nc:a},O?(t.Oc="spawnThread",postMessage(t,a),0):lt(t))}function Ct(t,e,n){return O?$t(4,1,t,e,n):0}function xt(t,e){if(O)return $t(5,1,t,e)}function Rt(t,e){if(O)return $t(6,1,t,e)}function jt(t,e,n){if(O)return $t(7,1,t,e,n)}function kt(t,e,n){return O?$t(8,1,t,e,n):0}function Dt(t,e){if(O)return $t(9,1,t,e)}function Pt(t,e,n){if(O)return $t(10,1,t,e,n)}function Ut(t,e,n,r){if(O)return $t(11,1,t,e,n,r)}function Ft(t,e,n,r){if(O)return $t(12,1,t,e,n,r)}function It(t,e,n,r){if(O)return $t(13,1,t,e,n,r)}function Wt(t){if(O)return $t(14,1,t)}function Ht(t,e){if(O)return $t(15,1,t,e)}function Lt(t,e,n){if(O)return $t(16,1,t,e,n)}function zt(t){Atomics.store(a(),t>>2,1),he()&&_e(t),Atomics.compareExchange(a(),t>>2,1,0)}function Yt(t){return i()[t>>>2]+4294967296*a()[t+4>>>2]}function Bt(t,e,n,r,a,i){return O?$t(17,1,t,e,n,r,a,i):-52}function Gt(t,e,n,r,a,i){if(O)return $t(18,1,t,e,n,r,a,i)}function Nt(t){var n=G(t)+1,r=de(n);return r&&B(t,e(),r,n),r}function Vt(t,e,n){function r(t){return(t=t.toTimeString().match(/\\(([A-Za-z ]+)\\)$/))?t[1]:"GMT"}if(O)return $t(19,1,t,e,n);var o=(new Date).getFullYear(),u=new Date(o,0,1),c=new Date(o,6,1);o=u.getTimezoneOffset();var s=c.getTimezoneOffset(),l=Math.max(o,s);a()[t>>2>>>0]=60*l,a()[e>>2>>>0]=Number(o!=s),t=r(u),e=r(c),t=Nt(t),e=Nt(e),s<o?(i()[n>>2>>>0]=t,i()[n+4>>2>>>0]=e):(i()[n>>2>>>0]=e,i()[n+4>>2>>>0]=t)}function $t(t,e){var n=arguments.length-2,r=arguments;return yt((()=>{for(var a=Ce(8*n),i=a>>3,u=0;u<n;u++){var c=r[2+u];o()[i+u>>>0]=c}return we(t,n,a,e)}))}u.executeNotifiedProxyingQueue=zt,wt=_?()=>{var t=process.hrtime();return 1e3*t[0]+t[1]/1e6}:O?()=>performance.now()-u.__performance_now_clock_drift:()=>performance.now();var qt,Xt=[],Jt={};function Zt(){if(!qt){var t,e={USER:"web_user",LOGNAME:"web_user",PATH:"/",PWD:"/",HOME:"/home/web_user",LANG:("object"==typeof navigator&&navigator.languages&&navigator.languages[0]||"C").replace("-","_")+".UTF-8",_:m||"./this.program"};for(t in Jt)void 0===Jt[t]?delete e[t]:e[t]=Jt[t];var n=[];for(t in e)n.push(t+"="+e[t]);qt=n}return qt}function Qt(t,n){if(O)return $t(20,1,t,n);var r=0;return Zt().forEach((function(a,o){var u=n+r;for(o=i()[t+4*o>>2>>>0]=u,u=0;u<a.length;++u)e()[o++>>0>>>0]=a.charCodeAt(u);e()[o>>0>>>0]=0,r+=a.length+1})),0}function Kt(t,e){if(O)return $t(21,1,t,e);var n=Zt();i()[t>>2>>>0]=n.length;var r=0;return n.forEach((function(t){r+=t.length+1})),i()[e>>2>>>0]=r,0}function te(t){return O?$t(22,1,t):52}function ee(t,e,n,r){return O?$t(23,1,t,e,n,r):52}function ne(t,e,n,r,a){return O?$t(24,1,t,e,n,r,a):70}var re=[null,[],[]];function ae(t,e){var n=re[t];0===e||10===e?((1===t?C:x)(z(n,0)),n.length=0):n.push(e)}function ie(t,e,n,a){if(O)return $t(25,1,t,e,n,a);for(var o=0,u=0;u<n;u++){var c=i()[e>>2>>>0],s=i()[e+4>>2>>>0];e+=8;for(var l=0;l<s;l++)ae(t,r()[c+l>>>0]);o+=s}return i()[a>>2>>>0]=o,0}var oe=0;function ue(t){return 0==t%4&&(0!=t%100||0==t%400)}var ce=[31,29,31,30,31,30,31,31,30,31,30,31],se=[31,28,31,30,31,30,31,31,30,31,30,31];function le(t,n,r,i){function o(t,e,n){for(t="number"==typeof t?t.toString():t||"";t.length<e;)t=n[0]+t;return t}function u(t,e){return o(t,e,"0")}function c(t,e){function n(t){return 0>t?-1:0<t?1:0}var r;return 0===(r=n(t.getFullYear()-e.getFullYear()))&&0===(r=n(t.getMonth()-e.getMonth()))&&(r=n(t.getDate()-e.getDate())),r}function s(t){switch(t.getDay()){case 0:return new Date(t.getFullYear()-1,11,29);case 1:return t;case 2:return new Date(t.getFullYear(),0,3);case 3:return new Date(t.getFullYear(),0,2);case 4:return new Date(t.getFullYear(),0,1);case 5:return new Date(t.getFullYear()-1,11,31);case 6:return new Date(t.getFullYear()-1,11,30)}}function l(t){var e=t.Wb;for(t=new Date(new Date(t.Xb+1900,0,1).getTime());0<e;){var n=t.getMonth(),r=(ue(t.getFullYear())?ce:se)[n];if(!(e>r-t.getDate())){t.setDate(t.getDate()+e);break}e-=r-t.getDate()+1,t.setDate(1),11>n?t.setMonth(n+1):(t.setMonth(0),t.setFullYear(t.getFullYear()+1))}return n=new Date(t.getFullYear()+1,0,4),e=s(new Date(t.getFullYear(),0,4)),n=s(n),0>=c(e,t)?0>=c(n,t)?t.getFullYear()+1:t.getFullYear():t.getFullYear()-1}var f=a()[i+40>>2>>>0];for(var p in i={Lc:a()[i>>2>>>0],Kc:a()[i+4>>2>>>0],dc:a()[i+8>>2>>>0],jc:a()[i+12>>2>>>0],ec:a()[i+16>>2>>>0],Xb:a()[i+20>>2>>>0],Tb:a()[i+24>>2>>>0],Wb:a()[i+28>>2>>>0],Rc:a()[i+32>>2>>>0],Jc:a()[i+36>>2>>>0],Mc:f?Y(f):""},r=Y(r),f={"%c":"%a %b %d %H:%M:%S %Y","%D":"%m/%d/%y","%F":"%Y-%m-%d","%h":"%b","%r":"%I:%M:%S %p","%R":"%H:%M","%T":"%H:%M:%S","%x":"%m/%d/%y","%X":"%H:%M:%S","%Ec":"%c","%EC":"%C","%Ex":"%m/%d/%y","%EX":"%H:%M:%S","%Ey":"%y","%EY":"%Y","%Od":"%d","%Oe":"%e","%OH":"%H","%OI":"%I","%Om":"%m","%OM":"%M","%OS":"%S","%Ou":"%u","%OU":"%U","%OV":"%V","%Ow":"%w","%OW":"%W","%Oy":"%y"})r=r.replace(new RegExp(p,"g"),f[p]);var h="Sunday Monday Tuesday Wednesday Thursday Friday Saturday".split(" "),d="January February March April May June July August September October November December".split(" ");for(p in f={"%a":function(t){return h[t.Tb].substring(0,3)},"%A":function(t){return h[t.Tb]},"%b":function(t){return d[t.ec].substring(0,3)},"%B":function(t){return d[t.ec]},"%C":function(t){return u((t.Xb+1900)/100|0,2)},"%d":function(t){return u(t.jc,2)},"%e":function(t){return o(t.jc,2," ")},"%g":function(t){return l(t).toString().substring(2)},"%G":function(t){return l(t)},"%H":function(t){return u(t.dc,2)},"%I":function(t){return 0==(t=t.dc)?t=12:12<t&&(t-=12),u(t,2)},"%j":function(t){for(var e=0,n=0;n<=t.ec-1;e+=(ue(t.Xb+1900)?ce:se)[n++]);return u(t.jc+e,3)},"%m":function(t){return u(t.ec+1,2)},"%M":function(t){return u(t.Kc,2)},"%n":function(){return"\\n"},"%p":function(t){return 0<=t.dc&&12>t.dc?"AM":"PM"},"%S":function(t){return u(t.Lc,2)},"%t":function(){return"\\t"},"%u":function(t){return t.Tb||7},"%U":function(t){return u(Math.floor((t.Wb+7-t.Tb)/7),2)},"%V":function(t){var e=Math.floor((t.Wb+7-(t.Tb+6)%7)/7);if(2>=(t.Tb+371-t.Wb-2)%7&&e++,e)53==e&&(4==(n=(t.Tb+371-t.Wb)%7)||3==n&&ue(t.Xb)||(e=1));else{e=52;var n=(t.Tb+7-t.Wb-1)%7;(4==n||5==n&&ue(t.Xb%400-1))&&e++}return u(e,2)},"%w":function(t){return t.Tb},"%W":function(t){return u(Math.floor((t.Wb+7-(t.Tb+6)%7)/7),2)},"%y":function(t){return(t.Xb+1900).toString().substring(2)},"%Y":function(t){return t.Xb+1900},"%z":function(t){var e=0<=(t=t.Jc);return t=Math.abs(t)/60,(e?"+":"-")+String("0000"+(t/60*100+t%60)).slice(-4)},"%Z":function(t){return t.Mc},"%%":function(){return"%"}},r=r.replace(/%%/g,"\\0\\0"),f)r.includes(p)&&(r=r.replace(new RegExp(p,"g"),f[p](i)));return p=function(t){var e=Array(G(t)+1);return B(t,e,0,e.length),e}(r=r.replace(/\\0\\0/g,"%")),p.length>n?0:(function(t,n){e().set(t,n>>>0)}(p,t),p.length-1)}ht.fc();var fe=[null,ft,bt,Et,Ct,xt,Rt,jt,kt,Dt,Pt,Ut,Ft,It,Wt,Ht,Lt,Bt,Gt,Vt,Qt,Kt,te,ee,ne,ie],pe={b:function(t){return de(t+24)+24},n:function(t){return(t=new St(t)).uc()||(t.hc(!0),Ot--),t.ic(!1),_t.push(t),t.sc(),t.vc()},ma:function(t){throw x("Unexpected exception thrown, this is not properly supported - aborting"),H=!0,t},x:function(){Se(0);var t=_t.pop();if(t.Hc()&&!t.kc()){var e=t.Dc();e&&gt(e)(t.Zb),Tt(t.Zb)}At=0},e:function(){var t=At;if(!t)return oe=0;var e=new St(t);e.cc(t);var n=e.bc();if(!n)return oe=0,t;for(var r=Array.prototype.slice.call(arguments),a=0;a<r.length;a++){var i=r[a];if(0===i||i===n)break;if(xe(i,n,e.Sb+16))return oe=i,t}return oe=n,t},l:function(){var t=At;if(!t)return oe=0;var e=new St(t);e.cc(t);var n=e.bc();if(!n)return oe=0,t;for(var r=Array.prototype.slice.call(arguments),a=0;a<r.length;a++){var i=r[a];if(0===i||i===n)break;if(xe(i,n,e.Sb+16))return oe=i,t}return oe=n,t},h:function(){var t=At;if(!t)return oe=0;var e=new St(t);e.cc(t);var n=e.bc();if(!n)return oe=0,t;for(var r=Array.prototype.slice.call(arguments),a=0;a<r.length;a++){var i=r[a];if(0===i||i===n)break;if(xe(i,n,e.Sb+16))return oe=i,t}return oe=n,t},t:Tt,M:function(){var t=_t.pop();t||at("no exception to throw");var e=t.Zb;throw t.kc()||(_t.push(t),t.ic(!0),t.hc(!1),Ot++),At=e,e},c:function(t,e,n){throw new St(t).fc(e,n),At=t,Ot++,t},pa:function(){return Ot},Fa:function(t){ge(t,!w,1,!v),ht.pc()},T:function(t){O?postMessage({cmd:"cleanupThread",thread:t}):st(t)},xa:Mt,j:function(t){throw At||(At=t),t},H:Ct,Ma:xt,ua:Rt,wa:jt,oa:kt,Ka:Dt,Ca:Pt,Ja:Ut,V:Ft,va:It,sa:Wt,La:Ht,ta:Lt,Ta:function(){},X:function(){at("To use dlopen, you need enable dynamic linking, see https://github.com/emscripten-core/emscripten/wiki/Linking")},Ua:function(){at("To use dlopen, you need enable dynamic linking, see https://github.com/emscripten-core/emscripten/wiki/Linking")},W:function(){return Date.now()},ya:function(){return 2097152},Oa:function(){return!0},za:function(t,e,n,r){if(t==e)setTimeout((()=>zt(r)));else if(O)postMessage({targetThread:t,cmd:"processProxyingQueue",queue:r});else{if(!(t=ht.Vb[t]))return;t.postMessage({cmd:"processProxyingQueue",queue:r})}return 1},Ea:function(){return-1},Pa:function(t,e){t=new Date(1e3*Yt(t)),a()[e>>2>>>0]=t.getUTCSeconds(),a()[e+4>>2>>>0]=t.getUTCMinutes(),a()[e+8>>2>>>0]=t.getUTCHours(),a()[e+12>>2>>>0]=t.getUTCDate(),a()[e+16>>2>>>0]=t.getUTCMonth(),a()[e+20>>2>>>0]=t.getUTCFullYear()-1900,a()[e+24>>2>>>0]=t.getUTCDay(),t=(t.getTime()-Date.UTC(t.getUTCFullYear(),0,1,0,0,0,0))/864e5|0,a()[e+28>>2>>>0]=t},Qa:function(t,e){t=new Date(1e3*Yt(t)),a()[e>>2>>>0]=t.getSeconds(),a()[e+4>>2>>>0]=t.getMinutes(),a()[e+8>>2>>>0]=t.getHours(),a()[e+12>>2>>>0]=t.getDate(),a()[e+16>>2>>>0]=t.getMonth(),a()[e+20>>2>>>0]=t.getFullYear()-1900,a()[e+24>>2>>>0]=t.getDay();var n=new Date(t.getFullYear(),0,1),r=(t.getTime()-n.getTime())/864e5|0;a()[e+28>>2>>>0]=r,a()[e+36>>2>>>0]=-60*t.getTimezoneOffset(),r=new Date(t.getFullYear(),6,1).getTimezoneOffset(),t=0|(r!=(n=n.getTimezoneOffset())&&t.getTimezoneOffset()==Math.min(n,r)),a()[e+32>>2>>>0]=t},Ra:function(t){var e=new Date(a()[t+20>>2>>>0]+1900,a()[t+16>>2>>>0],a()[t+12>>2>>>0],a()[t+8>>2>>>0],a()[t+4>>2>>>0],a()[t>>2>>>0],0),n=a()[t+32>>2>>>0],r=e.getTimezoneOffset(),i=new Date(e.getFullYear(),0,1),o=new Date(e.getFullYear(),6,1).getTimezoneOffset(),u=i.getTimezoneOffset(),c=Math.min(u,o);return 0>n?a()[t+32>>2>>>0]=Number(o!=u&&c==r):0<n!=(c==r)&&(o=Math.max(u,o),e.setTime(e.getTime()+6e4*((0<n?c:o)-r))),a()[t+24>>2>>>0]=e.getDay(),n=(e.getTime()-i.getTime())/864e5|0,a()[t+28>>2>>>0]=n,a()[t>>2>>>0]=e.getSeconds(),a()[t+4>>2>>>0]=e.getMinutes(),a()[t+8>>2>>>0]=e.getHours(),a()[t+12>>2>>>0]=e.getDate(),a()[t+16>>2>>>0]=e.getMonth(),e.getTime()/1e3|0},Aa:Bt,Ba:Gt,Sa:function t(e,n,r){t.Ac||(t.Ac=!0,Vt(e,n,r))},y:function(){at("")},U:function(){if(!_&&!w){var t="Blocking on the main thread is very dangerous, see https://emscripten.org/docs/porting/pthreads.html#blocking-on-the-main-browser-thread";vt||(vt={}),vt[t]||(vt[t]=1,_&&(t="warning: "+t),x(t))}},ra:function(){return 4294901760},B:wt,Ia:function(t,e,n){r().copyWithin(t>>>0,e>>>0,e+n>>>0)},F:function(){return _?n(993).cpus().length:navigator.hardwareConcurrency},Da:function(t,e,n){Xt.length=e,n>>=3;for(var r=0;r<e;r++)Xt[r]=o()[n+r>>>0];return(0>t?ut[-t-1]:fe[t]).apply(null,Xt)},qa:function(t){var e=r().length;if((t>>>=0)<=e||4294901760<t)return!1;for(var n=1;4>=n;n*=2){var a=e*(1+.2/n);a=Math.min(a,t+100663296);var i=Math;a=Math.max(t,a),i=i.min.call(i,4294901760,a+(65536-a%65536)%65536);t:{try{j.grow(i-D.byteLength+65535>>>16),N(j.buffer);var o=1;break t}catch(t){}o=void 0}if(o)return!0}return!1},Na:function(){throw"unwind"},Ga:Qt,Ha:Kt,J:pt,I:te,S:ee,ga:ne,R:ie,d:function(){return oe},na:function t(r,a){t.lc||(t.lc=function(){if("object"==typeof crypto&&"function"==typeof crypto.getRandomValues){var t=new Uint8Array(1);return()=>(crypto.getRandomValues(t),t[0])}if(_)try{var e=n(Object(function(){var t=new Error("Cannot find module \'crypto\'");throw t.code="MODULE_NOT_FOUND",t}()));return()=>e.randomBytes(1)[0]}catch(t){}return()=>at("randomDevice")}());for(var i=0;i<a;i++)e()[r+i>>0>>>0]=t.lc();return 0},ia:function(t,e,n){var r=Ee();try{return gt(t)(e,n)}catch(t){if(Me(r),t!==t+0)throw t;Se(1,0)}},ja:function(t,e,n){var r=Ee();try{return gt(t)(e,n)}catch(t){if(Me(r),t!==t+0)throw t;Se(1,0)}},K:function(t){var e=Ee();try{return gt(t)()}catch(t){if(Me(e),t!==t+0)throw t;Se(1,0)}},f:function(t,e){var n=Ee();try{return gt(t)(e)}catch(t){if(Me(n),t!==t+0)throw t;Se(1,0)}},P:function(t,e,n){var r=Ee();try{return gt(t)(e,n)}catch(t){if(Me(r),t!==t+0)throw t;Se(1,0)}},Q:function(t,e,n){var r=Ee();try{return gt(t)(e,n)}catch(t){if(Me(r),t!==t+0)throw t;Se(1,0)}},k:function(t,e,n){var r=Ee();try{return gt(t)(e,n)}catch(t){if(Me(r),t!==t+0)throw t;Se(1,0)}},p:function(t,e,n,r){var a=Ee();try{return gt(t)(e,n,r)}catch(t){if(Me(a),t!==t+0)throw t;Se(1,0)}},q:function(t,e,n,r,a){var i=Ee();try{return gt(t)(e,n,r,a)}catch(t){if(Me(i),t!==t+0)throw t;Se(1,0)}},N:function(t,e,n,r,a,i){var o=Ee();try{return gt(t)(e,n,r,a,i)}catch(t){if(Me(o),t!==t+0)throw t;Se(1,0)}},s:function(t,e,n,r,a,i){var o=Ee();try{return gt(t)(e,n,r,a,i)}catch(t){if(Me(o),t!==t+0)throw t;Se(1,0)}},w:function(t,e,n,r,a,i,o){var u=Ee();try{return gt(t)(e,n,r,a,i,o)}catch(t){if(Me(u),t!==t+0)throw t;Se(1,0)}},L:function(t,e,n,r,a,i,o,u){var c=Ee();try{return gt(t)(e,n,r,a,i,o,u)}catch(t){if(Me(c),t!==t+0)throw t;Se(1,0)}},E:function(t,e,n,r,a,i,o,u,c,s,l,f){var p=Ee();try{return gt(t)(e,n,r,a,i,o,u,c,s,l,f)}catch(t){if(Me(p),t!==t+0)throw t;Se(1,0)}},aa:function(t,e,n,r,a,i,o,u){var c=Ee();try{return He(t,e,n,r,a,i,o,u)}catch(t){if(Me(c),t!==t+0)throw t;Se(1,0)}},_:function(t,e,n,r,a,i,o){var u=Ee();try{return ke(t,e,n,r,a,i,o)}catch(t){if(Me(u),t!==t+0)throw t;Se(1,0)}},Z:function(t,e,n,r,a){var i=Ee();try{return Le(t,e,n,r,a)}catch(t){if(Me(i),t!==t+0)throw t;Se(1,0)}},ca:function(t,e,n,r){var a=Ee();try{return Ie(t,e,n,r)}catch(t){if(Me(a),t!==t+0)throw t;Se(1,0)}},$:function(t){var e=Ee();try{return je(t)}catch(t){if(Me(e),t!==t+0)throw t;Se(1,0)}},ba:function(t,e){var n=Ee();try{return We(t,e)}catch(t){if(Me(n),t!==t+0)throw t;Se(1,0)}},Y:function(t,e,n){var r=Ee();try{return De(t,e,n)}catch(t){if(Me(r),t!==t+0)throw t;Se(1,0)}},g:function(t){var e=Ee();try{gt(t)()}catch(t){if(Me(e),t!==t+0)throw t;Se(1,0)}},r:function(t,e){var n=Ee();try{gt(t)(e)}catch(t){if(Me(n),t!==t+0)throw t;Se(1,0)}},i:function(t,e,n){var r=Ee();try{gt(t)(e,n)}catch(t){if(Me(r),t!==t+0)throw t;Se(1,0)}},ha:function(t,e,n,r){var a=Ee();try{gt(t)(e,n,r)}catch(t){if(Me(a),t!==t+0)throw t;Se(1,0)}},m:function(t,e,n,r){var a=Ee();try{gt(t)(e,n,r)}catch(t){if(Me(a),t!==t+0)throw t;Se(1,0)}},v:function(t,e,n,r,a){var i=Ee();try{gt(t)(e,n,r,a)}catch(t){if(Me(i),t!==t+0)throw t;Se(1,0)}},u:function(t,e,n,r,a,i){var o=Ee();try{gt(t)(e,n,r,a,i)}catch(t){if(Me(o),t!==t+0)throw t;Se(1,0)}},O:function(t,e,n,r,a,i,o){var u=Ee();try{gt(t)(e,n,r,a,i,o)}catch(t){if(Me(u),t!==t+0)throw t;Se(1,0)}},A:function(t,e,n,r,a,i,o,u){var c=Ee();try{gt(t)(e,n,r,a,i,o,u)}catch(t){if(Me(c),t!==t+0)throw t;Se(1,0)}},ka:function(t,e,n,r,a,i,o,u,c){var s=Ee();try{gt(t)(e,n,r,a,i,o,u,c)}catch(t){if(Me(s),t!==t+0)throw t;Se(1,0)}},C:function(t,e,n,r,a,i,o,u,c,s,l){var f=Ee();try{gt(t)(e,n,r,a,i,o,u,c,s,l)}catch(t){if(Me(f),t!==t+0)throw t;Se(1,0)}},D:function(t,e,n,r,a,i,o,u,c,s,l,f,p,h,d,y){var b=Ee();try{gt(t)(e,n,r,a,i,o,u,c,s,l,f,p,h,d,y)}catch(t){if(Me(b),t!==t+0)throw t;Se(1,0)}},fa:function(t,e,n,r,a,i,o,u){var c=Ee();try{Pe(t,e,n,r,a,i,o,u)}catch(t){if(Me(c),t!==t+0)throw t;Se(1,0)}},da:function(t,e,n,r,a,i,o,u,c,s,l,f){var p=Ee();try{Fe(t,e,n,r,a,i,o,u,c,s,l,f)}catch(t){if(Me(p),t!==t+0)throw t;Se(1,0)}},ea:function(t,e,n,r,a,i){var o=Ee();try{Ue(t,e,n,r,a,i)}catch(t){if(Me(o),t!==t+0)throw t;Se(1,0)}},o:function(t){return t},a:j||u.wasmMemory,G:function(t){oe=t},la:le,z:function(t,e,n,r){return le(t,e,n,r)}};!function(){function t(t,e){u.asm=t.exports,ht.qc.push(u.asm.sb),$=u.asm.ub,X.unshift(u.asm.Va),k=e,O||(et--,u.monitorRunDependencies&&u.monitorRunDependencies(et),0==et&&(null!==nt&&(clearInterval(nt),nt=null),rt&&(t=rt,rt=null,t())))}function e(e){t(e.instance,e.module)}function n(t){return function(){if(!M&&(v||w)){if("function"==typeof fetch&&!tt.startsWith("file://"))return fetch(tt,{credentials:"same-origin"}).then((function(t){if(!t.ok)throw"failed to load wasm binary file at \'"+tt+"\'";return t.arrayBuffer()})).catch((function(){return ot()}));if(f)return new Promise((function(t,e){f(tt,(function(e){t(new Uint8Array(e))}),e)}))}return Promise.resolve().then((function(){return ot()}))}().then((function(t){return WebAssembly.instantiate(t,r)})).then((function(t){return t})).then(t,(function(t){x("failed to asynchronously prepare wasm: "+t),at(t)}))}var r={a:pe};if(O||(et++,u.monitorRunDependencies&&u.monitorRunDependencies(et)),u.instantiateWasm)try{return u.instantiateWasm(r,t)}catch(t){return x("Module.instantiateWasm callback failed with error: "+t),!1}(M||"function"!=typeof WebAssembly.instantiateStreaming||it()||tt.startsWith("file://")||_||"function"!=typeof fetch?n(e):fetch(tt,{credentials:"same-origin"}).then((function(t){return WebAssembly.instantiateStreaming(t,r).then(e,(function(t){return x("wasm streaming compile failed: "+t),x("falling back to ArrayBuffer instantiation"),n(e)}))}))).catch(s)}(),u.___wasm_call_ctors=function(){return(u.___wasm_call_ctors=u.asm.Va).apply(null,arguments)},u._OrtInit=function(){return(u._OrtInit=u.asm.Wa).apply(null,arguments)},u._OrtCreateSessionOptions=function(){return(u._OrtCreateSessionOptions=u.asm.Xa).apply(null,arguments)},u._OrtAppendExecutionProvider=function(){return(u._OrtAppendExecutionProvider=u.asm.Ya).apply(null,arguments)},u._OrtAddSessionConfigEntry=function(){return(u._OrtAddSessionConfigEntry=u.asm.Za).apply(null,arguments)},u._OrtReleaseSessionOptions=function(){return(u._OrtReleaseSessionOptions=u.asm._a).apply(null,arguments)},u._OrtCreateSession=function(){return(u._OrtCreateSession=u.asm.$a).apply(null,arguments)},u._OrtReleaseSession=function(){return(u._OrtReleaseSession=u.asm.ab).apply(null,arguments)},u._OrtGetInputCount=function(){return(u._OrtGetInputCount=u.asm.bb).apply(null,arguments)},u._OrtGetOutputCount=function(){return(u._OrtGetOutputCount=u.asm.cb).apply(null,arguments)},u._OrtGetInputName=function(){return(u._OrtGetInputName=u.asm.db).apply(null,arguments)},u._OrtGetOutputName=function(){return(u._OrtGetOutputName=u.asm.eb).apply(null,arguments)},u._OrtFree=function(){return(u._OrtFree=u.asm.fb).apply(null,arguments)},u._OrtCreateTensor=function(){return(u._OrtCreateTensor=u.asm.gb).apply(null,arguments)},u._OrtGetTensorData=function(){return(u._OrtGetTensorData=u.asm.hb).apply(null,arguments)},u._OrtReleaseTensor=function(){return(u._OrtReleaseTensor=u.asm.ib).apply(null,arguments)},u._OrtCreateRunOptions=function(){return(u._OrtCreateRunOptions=u.asm.jb).apply(null,arguments)},u._OrtAddRunConfigEntry=function(){return(u._OrtAddRunConfigEntry=u.asm.kb).apply(null,arguments)},u._OrtReleaseRunOptions=function(){return(u._OrtReleaseRunOptions=u.asm.lb).apply(null,arguments)},u._OrtRun=function(){return(u._OrtRun=u.asm.mb).apply(null,arguments)},u._OrtEndProfiling=function(){return(u._OrtEndProfiling=u.asm.nb).apply(null,arguments)};var he=u._pthread_self=function(){return(he=u._pthread_self=u.asm.ob).apply(null,arguments)},de=u._malloc=function(){return(de=u._malloc=u.asm.pb).apply(null,arguments)},ye=u._free=function(){return(ye=u._free=u.asm.qb).apply(null,arguments)},be=u._fflush=function(){return(be=u._fflush=u.asm.rb).apply(null,arguments)};u.__emscripten_tls_init=function(){return(u.__emscripten_tls_init=u.asm.sb).apply(null,arguments)};var me=u.___funcs_on_exit=function(){return(me=u.___funcs_on_exit=u.asm.tb).apply(null,arguments)},ge=u.__emscripten_thread_init=function(){return(ge=u.__emscripten_thread_init=u.asm.vb).apply(null,arguments)};u.__emscripten_thread_crashed=function(){return(u.__emscripten_thread_crashed=u.asm.wb).apply(null,arguments)};var ve,we=u._emscripten_run_in_main_runtime_thread_js=function(){return(we=u._emscripten_run_in_main_runtime_thread_js=u.asm.xb).apply(null,arguments)},_e=u.__emscripten_proxy_execute_task_queue=function(){return(_e=u.__emscripten_proxy_execute_task_queue=u.asm.yb).apply(null,arguments)},Oe=u.__emscripten_thread_free_data=function(){return(Oe=u.__emscripten_thread_free_data=u.asm.zb).apply(null,arguments)},Ae=u.__emscripten_thread_exit=function(){return(Ae=u.__emscripten_thread_exit=u.asm.Ab).apply(null,arguments)},Se=u._setThrew=function(){return(Se=u._setThrew=u.asm.Bb).apply(null,arguments)},Te=u._emscripten_stack_set_limits=function(){return(Te=u._emscripten_stack_set_limits=u.asm.Cb).apply(null,arguments)},Ee=u.stackSave=function(){return(Ee=u.stackSave=u.asm.Db).apply(null,arguments)},Me=u.stackRestore=function(){return(Me=u.stackRestore=u.asm.Eb).apply(null,arguments)},Ce=u.stackAlloc=function(){return(Ce=u.stackAlloc=u.asm.Fb).apply(null,arguments)},xe=u.___cxa_can_catch=function(){return(xe=u.___cxa_can_catch=u.asm.Gb).apply(null,arguments)},Re=u.___cxa_is_pointer_type=function(){return(Re=u.___cxa_is_pointer_type=u.asm.Hb).apply(null,arguments)},je=u.dynCall_j=function(){return(je=u.dynCall_j=u.asm.Ib).apply(null,arguments)},ke=u.dynCall_iiiiij=function(){return(ke=u.dynCall_iiiiij=u.asm.Jb).apply(null,arguments)},De=u.dynCall_jii=function(){return(De=u.dynCall_jii=u.asm.Kb).apply(null,arguments)},Pe=u.dynCall_viiiiij=function(){return(Pe=u.dynCall_viiiiij=u.asm.Lb).apply(null,arguments)},Ue=u.dynCall_vjji=function(){return(Ue=u.dynCall_vjji=u.asm.Mb).apply(null,arguments)},Fe=u.dynCall_viiijjjii=function(){return(Fe=u.dynCall_viiijjjii=u.asm.Nb).apply(null,arguments)},Ie=u.dynCall_iij=function(){return(Ie=u.dynCall_iij=u.asm.Ob).apply(null,arguments)},We=u.dynCall_ji=function(){return(We=u.dynCall_ji=u.asm.Pb).apply(null,arguments)},He=u.dynCall_iiiiiij=function(){return(He=u.dynCall_iiiiiij=u.asm.Qb).apply(null,arguments)},Le=u.dynCall_iiij=function(){return(Le=u.dynCall_iiij=u.asm.Rb).apply(null,arguments)};function ze(){function t(){if(!ve&&(ve=!0,u.calledRun=!0,!H)&&(O||dt(X),c(u),u.onRuntimeInitialized&&u.onRuntimeInitialized(),!O)){if(u.postRun)for("function"==typeof u.postRun&&(u.postRun=[u.postRun]);u.postRun.length;){var t=u.postRun.shift();Z.unshift(t)}dt(Z)}}if(!(0<et))if(O)c(u),O||dt(X),postMessage({cmd:"loaded"});else{if(u.preRun)for("function"==typeof u.preRun&&(u.preRun=[u.preRun]);u.preRun.length;)K();dt(q),0<et||(u.setStatus?(u.setStatus("Running..."),setTimeout((function(){setTimeout((function(){u.setStatus("")}),1),t()}),1)):t())}}if(u.UTF8ToString=Y,u.stringToUTF8=function(t,e,n){return B(t,r(),e,n)},u.lengthBytesUTF8=G,u.keepRuntimeAlive=Q,u.wasmMemory=j,u.stackSave=Ee,u.stackRestore=Me,u.stackAlloc=Ce,u.ExitStatus=ct,u.PThread=ht,rt=function t(){ve||ze(),ve||(rt=t)},u.preInit)for("function"==typeof u.preInit&&(u.preInit=[u.preInit]);0<u.preInit.length;)u.preInit.pop()();return ze(),t.ready});t.exports=r},932:(t,e,n)=>{var _scriptDir,r=(_scriptDir=(_scriptDir="undefined"!=typeof document&&document.currentScript?document.currentScript.src:void 0)||"/index.js",function(t){var e,r,a;t=t||{},e||(e=void 0!==t?t:{}),e.ready=new Promise((function(t,e){r=t,a=e}));var i,o,u,c,s,l,f=Object.assign({},e),p="./this.program",h=(t,e)=>{throw e},d="object"==typeof window,y="function"==typeof importScripts,b="object"==typeof process&&"object"==typeof process.versions&&"string"==typeof process.versions.node,m="";b?(m=y?n(908).dirname(m)+"/":"//",l=()=>{s||(c=n(384),s=n(908))},i=function(t,e){return l(),t=s.normalize(t),c.readFileSync(t,e?void 0:"utf8")},u=t=>((t=i(t,!0)).buffer||(t=new Uint8Array(t)),t),o=(t,e,n)=>{l(),t=s.normalize(t),c.readFile(t,(function(t,r){t?n(t):e(r.buffer)}))},1<process.argv.length&&(p=process.argv[1].replace(/\\\\/g,"/")),process.argv.slice(2),process.on("uncaughtException",(function(t){if(!(t instanceof J))throw t})),process.on("unhandledRejection",(function(t){throw t})),h=(t,e)=>{if(_||0<L)throw process.exitCode=t,e;e instanceof J||w("exiting due to exception: "+e),process.exit(t)},e.inspect=function(){return"[Emscripten Module object]"}):(d||y)&&(y?m=self.location.href:"undefined"!=typeof document&&document.currentScript&&(m=document.currentScript.src),_scriptDir&&(m=_scriptDir),m=0!==m.indexOf("blob:")?m.substr(0,m.replace(/[?#].*/,"").lastIndexOf("/")+1):"",i=t=>{var e=new XMLHttpRequest;return e.open("GET",t,!1),e.send(null),e.responseText},y&&(u=t=>{var e=new XMLHttpRequest;return e.open("GET",t,!1),e.responseType="arraybuffer",e.send(null),new Uint8Array(e.response)}),o=(t,e,n)=>{var r=new XMLHttpRequest;r.open("GET",t,!0),r.responseType="arraybuffer",r.onload=()=>{200==r.status||0==r.status&&r.response?e(r.response):n()},r.onerror=n,r.send(null)});var g,v=e.print||console.log.bind(console),w=e.printErr||console.warn.bind(console);Object.assign(e,f),f=null,e.thisProgram&&(p=e.thisProgram),e.quit&&(h=e.quit),e.wasmBinary&&(g=e.wasmBinary);var _=e.noExitRuntime||!1;"object"!=typeof WebAssembly&&V("no native wasm support detected");var O,A,S,T,E,M,C=!1,x="undefined"!=typeof TextDecoder?new TextDecoder("utf8"):void 0;function R(t,e,n){var r=(e>>>=0)+n;for(n=e;t[n]&&!(n>=r);)++n;if(16<n-e&&t.buffer&&x)return x.decode(t.subarray(e,n));for(r="";e<n;){var a=t[e++];if(128&a){var i=63&t[e++];if(192==(224&a))r+=String.fromCharCode((31&a)<<6|i);else{var o=63&t[e++];65536>(a=224==(240&a)?(15&a)<<12|i<<6|o:(7&a)<<18|i<<12|o<<6|63&t[e++])?r+=String.fromCharCode(a):(a-=65536,r+=String.fromCharCode(55296|a>>10,56320|1023&a))}}else r+=String.fromCharCode(a)}return r}function j(t,e){return(t>>>=0)?R(T,t,e):""}function k(t,e,n,r){if(!(0<r))return 0;var a=n>>>=0;r=n+r-1;for(var i=0;i<t.length;++i){var o=t.charCodeAt(i);if(55296<=o&&57343>=o&&(o=65536+((1023&o)<<10)|1023&t.charCodeAt(++i)),127>=o){if(n>=r)break;e[n++>>>0]=o}else{if(2047>=o){if(n+1>=r)break;e[n++>>>0]=192|o>>6}else{if(65535>=o){if(n+2>=r)break;e[n++>>>0]=224|o>>12}else{if(n+3>=r)break;e[n++>>>0]=240|o>>18,e[n++>>>0]=128|o>>12&63}e[n++>>>0]=128|o>>6&63}e[n++>>>0]=128|63&o}}return e[n>>>0]=0,n-a}function D(t){for(var e=0,n=0;n<t.length;++n){var r=t.charCodeAt(n);127>=r?e++:2047>=r?e+=2:55296<=r&&57343>=r?(e+=4,++n):e+=3}return e}function P(){var t=O.buffer;A=t,e.HEAP8=S=new Int8Array(t),e.HEAP16=new Int16Array(t),e.HEAP32=E=new Int32Array(t),e.HEAPU8=T=new Uint8Array(t),e.HEAPU16=new Uint16Array(t),e.HEAPU32=M=new Uint32Array(t),e.HEAPF32=new Float32Array(t),e.HEAPF64=new Float64Array(t)}var U,F=[],I=[],W=[],H=[],L=0;function z(){var t=e.preRun.shift();F.unshift(t)}var Y,B=0,G=null,N=null;function V(t){throw e.onAbort&&e.onAbort(t),w(t="Aborted("+t+")"),C=!0,t=new WebAssembly.RuntimeError(t+". Build with -sASSERTIONS for more info."),a(t),t}function $(){return Y.startsWith("data:application/octet-stream;base64,")}if(Y="ort-wasm.wasm",!$()){var q=Y;Y=e.locateFile?e.locateFile(q,m):m+q}function X(){var t=Y;try{if(t==Y&&g)return new Uint8Array(g);if(u)return u(t);throw"both async and sync fetching of the wasm failed"}catch(t){V(t)}}function J(t){this.name="ExitStatus",this.message="Program terminated with exit("+t+")",this.status=t}function Z(t){for(;0<t.length;)t.shift()(e)}var Q=[],K=0,tt=0;function et(t){this.Db=t,this.zb=t-24,this.Ub=function(t){M[this.zb+4>>2>>>0]=t},this.Eb=function(){return M[this.zb+4>>2>>>0]},this.Sb=function(t){M[this.zb+8>>2>>>0]=t},this.Wb=function(){return M[this.zb+8>>2>>>0]},this.Tb=function(){E[this.zb>>2>>>0]=0},this.Ib=function(t){S[this.zb+12>>0>>>0]=t?1:0},this.Pb=function(){return 0!=S[this.zb+12>>0>>>0]},this.Jb=function(t){S[this.zb+13>>0>>>0]=t?1:0},this.Lb=function(){return 0!=S[this.zb+13>>0>>>0]},this.Rb=function(t,e){this.Fb(0),this.Ub(t),this.Sb(e),this.Tb(),this.Ib(!1),this.Jb(!1)},this.Nb=function(){E[this.zb>>2>>>0]+=1},this.Xb=function(){var t=E[this.zb>>2>>>0];return E[this.zb>>2>>>0]=t-1,1===t},this.Fb=function(t){M[this.zb+16>>2>>>0]=t},this.Ob=function(){return M[this.zb+16>>2>>>0]},this.Qb=function(){if(Mt(this.Eb()))return M[this.Db>>2>>>0];var t=this.Ob();return 0!==t?t:this.Db}}function nt(t){return vt(new et(t).zb)}var rt=[];function at(t){var e=rt[t];return e||(t>=rt.length&&(rt.length=t+1),rt[t]=e=U.get(t)),e}function it(t){var e=D(t)+1,n=gt(e);return n&&k(t,S,n,e),n}var ot={};function ut(){if(!ct){var t,e={USER:"web_user",LOGNAME:"web_user",PATH:"/",PWD:"/",HOME:"/home/web_user",LANG:("object"==typeof navigator&&navigator.languages&&navigator.languages[0]||"C").replace("-","_")+".UTF-8",_:p||"./this.program"};for(t in ot)void 0===ot[t]?delete e[t]:e[t]=ot[t];var n=[];for(t in e)n.push(t+"="+e[t]);ct=n}return ct}var ct,st=[null,[],[]];function lt(t,e){var n=st[t];0===e||10===e?((1===t?v:w)(R(n,0)),n.length=0):n.push(e)}var ft=0;function pt(t){return 0==t%4&&(0!=t%100||0==t%400)}var ht=[31,29,31,30,31,30,31,31,30,31,30,31],dt=[31,28,31,30,31,30,31,31,30,31,30,31];function yt(t,e,n,r){function a(t,e,n){for(t="number"==typeof t?t.toString():t||"";t.length<e;)t=n[0]+t;return t}function i(t,e){return a(t,e,"0")}function o(t,e){function n(t){return 0>t?-1:0<t?1:0}var r;return 0===(r=n(t.getFullYear()-e.getFullYear()))&&0===(r=n(t.getMonth()-e.getMonth()))&&(r=n(t.getDate()-e.getDate())),r}function u(t){switch(t.getDay()){case 0:return new Date(t.getFullYear()-1,11,29);case 1:return t;case 2:return new Date(t.getFullYear(),0,3);case 3:return new Date(t.getFullYear(),0,2);case 4:return new Date(t.getFullYear(),0,1);case 5:return new Date(t.getFullYear()-1,11,31);case 6:return new Date(t.getFullYear()-1,11,30)}}function c(t){var e=t.Bb;for(t=new Date(new Date(t.Cb+1900,0,1).getTime());0<e;){var n=t.getMonth(),r=(pt(t.getFullYear())?ht:dt)[n];if(!(e>r-t.getDate())){t.setDate(t.getDate()+e);break}e-=r-t.getDate()+1,t.setDate(1),11>n?t.setMonth(n+1):(t.setMonth(0),t.setFullYear(t.getFullYear()+1))}return n=new Date(t.getFullYear()+1,0,4),e=u(new Date(t.getFullYear(),0,4)),n=u(n),0>=o(e,t)?0>=o(n,t)?t.getFullYear()+1:t.getFullYear():t.getFullYear()-1}var s=E[r+40>>2>>>0];for(var l in r={$b:E[r>>2>>>0],Zb:E[r+4>>2>>>0],Gb:E[r+8>>2>>>0],Kb:E[r+12>>2>>>0],Hb:E[r+16>>2>>>0],Cb:E[r+20>>2>>>0],Ab:E[r+24>>2>>>0],Bb:E[r+28>>2>>>0],bc:E[r+32>>2>>>0],Yb:E[r+36>>2>>>0],ac:s?j(s):""},n=j(n),s={"%c":"%a %b %d %H:%M:%S %Y","%D":"%m/%d/%y","%F":"%Y-%m-%d","%h":"%b","%r":"%I:%M:%S %p","%R":"%H:%M","%T":"%H:%M:%S","%x":"%m/%d/%y","%X":"%H:%M:%S","%Ec":"%c","%EC":"%C","%Ex":"%m/%d/%y","%EX":"%H:%M:%S","%Ey":"%y","%EY":"%Y","%Od":"%d","%Oe":"%e","%OH":"%H","%OI":"%I","%Om":"%m","%OM":"%M","%OS":"%S","%Ou":"%u","%OU":"%U","%OV":"%V","%Ow":"%w","%OW":"%W","%Oy":"%y"})n=n.replace(new RegExp(l,"g"),s[l]);var f="Sunday Monday Tuesday Wednesday Thursday Friday Saturday".split(" "),p="January February March April May June July August September October November December".split(" ");for(l in s={"%a":function(t){return f[t.Ab].substring(0,3)},"%A":function(t){return f[t.Ab]},"%b":function(t){return p[t.Hb].substring(0,3)},"%B":function(t){return p[t.Hb]},"%C":function(t){return i((t.Cb+1900)/100|0,2)},"%d":function(t){return i(t.Kb,2)},"%e":function(t){return a(t.Kb,2," ")},"%g":function(t){return c(t).toString().substring(2)},"%G":function(t){return c(t)},"%H":function(t){return i(t.Gb,2)},"%I":function(t){return 0==(t=t.Gb)?t=12:12<t&&(t-=12),i(t,2)},"%j":function(t){for(var e=0,n=0;n<=t.Hb-1;e+=(pt(t.Cb+1900)?ht:dt)[n++]);return i(t.Kb+e,3)},"%m":function(t){return i(t.Hb+1,2)},"%M":function(t){return i(t.Zb,2)},"%n":function(){return"\\n"},"%p":function(t){return 0<=t.Gb&&12>t.Gb?"AM":"PM"},"%S":function(t){return i(t.$b,2)},"%t":function(){return"\\t"},"%u":function(t){return t.Ab||7},"%U":function(t){return i(Math.floor((t.Bb+7-t.Ab)/7),2)},"%V":function(t){var e=Math.floor((t.Bb+7-(t.Ab+6)%7)/7);if(2>=(t.Ab+371-t.Bb-2)%7&&e++,e)53==e&&(4==(n=(t.Ab+371-t.Bb)%7)||3==n&&pt(t.Cb)||(e=1));else{e=52;var n=(t.Ab+7-t.Bb-1)%7;(4==n||5==n&&pt(t.Cb%400-1))&&e++}return i(e,2)},"%w":function(t){return t.Ab},"%W":function(t){return i(Math.floor((t.Bb+7-(t.Ab+6)%7)/7),2)},"%y":function(t){return(t.Cb+1900).toString().substring(2)},"%Y":function(t){return t.Cb+1900},"%z":function(t){var e=0<=(t=t.Yb);return t=Math.abs(t)/60,(e?"+":"-")+String("0000"+(t/60*100+t%60)).slice(-4)},"%Z":function(t){return t.ac},"%%":function(){return"%"}},n=n.replace(/%%/g,"\\0\\0"),s)n.includes(l)&&(n=n.replace(new RegExp(l,"g"),s[l](r)));return l=function(t){var e=Array(D(t)+1);return k(t,e,0,e.length),e}(n=n.replace(/\\0\\0/g,"%")),l.length>e?0:(S.set(l,t>>>0),l.length-1)}var bt={a:function(t){return gt(t+24)+24},m:function(t){return(t=new et(t)).Pb()||(t.Ib(!0),K--),t.Jb(!1),Q.push(t),t.Nb(),t.Qb()},ia:function(t){throw w("Unexpected exception thrown, this is not properly supported - aborting"),C=!0,t},w:function(){Ot(0);var t=Q.pop();if(t.Xb()&&!t.Lb()){var e=t.Wb();e&&at(e)(t.Db),nt(t.Db)}tt=0},d:function(){var t=tt;if(!t)return ft=0;var e=new et(t);e.Fb(t);var n=e.Eb();if(!n)return ft=0,t;for(var r=Array.prototype.slice.call(arguments),a=0;a<r.length;a++){var i=r[a];if(0===i||i===n)break;if(Et(i,n,e.zb+16))return ft=i,t}return ft=n,t},k:function(){var t=tt;if(!t)return ft=0;var e=new et(t);e.Fb(t);var n=e.Eb();if(!n)return ft=0,t;for(var r=Array.prototype.slice.call(arguments),a=0;a<r.length;a++){var i=r[a];if(0===i||i===n)break;if(Et(i,n,e.zb+16))return ft=i,t}return ft=n,t},g:function(){var t=tt;if(!t)return ft=0;var e=new et(t);e.Fb(t);var n=e.Eb();if(!n)return ft=0,t;for(var r=Array.prototype.slice.call(arguments),a=0;a<r.length;a++){var i=r[a];if(0===i||i===n)break;if(Et(i,n,e.zb+16))return ft=i,t}return ft=n,t},s:nt,L:function(){var t=Q.pop();t||V("no exception to throw");var e=t.Db;throw t.Lb()||(Q.push(t),t.Jb(!0),t.Ib(!1),K++),tt=e,e},b:function(t,e,n){throw new et(t).Rb(e,n),tt=t,K++,t},la:function(){return K},i:function(t){throw tt||(tt=t),t},H:function(){return 0},Ba:function(){},pa:function(){},ra:function(){},ka:function(){return 0},za:function(){},ua:function(){},ya:function(){},R:function(){},qa:function(){},na:function(){},Aa:function(){},oa:function(){},Ha:function(){},Ja:function(){V("To use dlopen, you need enable dynamic linking, see https://github.com/emscripten-core/emscripten/wiki/Linking")},Ia:function(){V("To use dlopen, you need enable dynamic linking, see https://github.com/emscripten-core/emscripten/wiki/Linking")},S:function(){return Date.now()},Ca:function(){return!0},Da:function(t,e){t=new Date(1e3*(M[t>>>2]+4294967296*E[t+4>>>2])),E[e>>2>>>0]=t.getUTCSeconds(),E[e+4>>2>>>0]=t.getUTCMinutes(),E[e+8>>2>>>0]=t.getUTCHours(),E[e+12>>2>>>0]=t.getUTCDate(),E[e+16>>2>>>0]=t.getUTCMonth(),E[e+20>>2>>>0]=t.getUTCFullYear()-1900,E[e+24>>2>>>0]=t.getUTCDay(),E[e+28>>2>>>0]=(t.getTime()-Date.UTC(t.getUTCFullYear(),0,1,0,0,0,0))/864e5|0},Ea:function(t,e){t=new Date(1e3*(M[t>>>2]+4294967296*E[t+4>>>2])),E[e>>2>>>0]=t.getSeconds(),E[e+4>>2>>>0]=t.getMinutes(),E[e+8>>2>>>0]=t.getHours(),E[e+12>>2>>>0]=t.getDate(),E[e+16>>2>>>0]=t.getMonth(),E[e+20>>2>>>0]=t.getFullYear()-1900,E[e+24>>2>>>0]=t.getDay();var n=new Date(t.getFullYear(),0,1);E[e+28>>2>>>0]=(t.getTime()-n.getTime())/864e5|0,E[e+36>>2>>>0]=-60*t.getTimezoneOffset();var r=new Date(t.getFullYear(),6,1).getTimezoneOffset();n=n.getTimezoneOffset(),E[e+32>>2>>>0]=0|(r!=n&&t.getTimezoneOffset()==Math.min(n,r))},Fa:function(t){var e=new Date(E[t+20>>2>>>0]+1900,E[t+16>>2>>>0],E[t+12>>2>>>0],E[t+8>>2>>>0],E[t+4>>2>>>0],E[t>>2>>>0],0),n=E[t+32>>2>>>0],r=e.getTimezoneOffset(),a=new Date(e.getFullYear(),0,1),i=new Date(e.getFullYear(),6,1).getTimezoneOffset(),o=a.getTimezoneOffset(),u=Math.min(o,i);return 0>n?E[t+32>>2>>>0]=Number(i!=o&&u==r):0<n!=(u==r)&&(i=Math.max(o,i),e.setTime(e.getTime()+6e4*((0<n?u:i)-r))),E[t+24>>2>>>0]=e.getDay(),E[t+28>>2>>>0]=(e.getTime()-a.getTime())/864e5|0,E[t>>2>>>0]=e.getSeconds(),E[t+4>>2>>>0]=e.getMinutes(),E[t+8>>2>>>0]=e.getHours(),E[t+12>>2>>>0]=e.getDate(),E[t+16>>2>>>0]=e.getMonth(),e.getTime()/1e3|0},sa:function(){return-52},ta:function(){},Ga:function t(e,n,r){t.Vb||(t.Vb=!0,function(t,e,n){function r(t){return(t=t.toTimeString().match(/\\(([A-Za-z ]+)\\)$/))?t[1]:"GMT"}var a=(new Date).getFullYear(),i=new Date(a,0,1),o=new Date(a,6,1);a=i.getTimezoneOffset();var u=o.getTimezoneOffset();E[t>>2>>>0]=60*Math.max(a,u),E[e>>2>>>0]=Number(a!=u),t=r(i),e=r(o),t=it(t),e=it(e),u<a?(M[n>>2>>>0]=t,M[n+4>>2>>>0]=e):(M[n>>2>>>0]=e,M[n+4>>2>>>0]=t)}(e,n,r))},B:function(){V("")},ma:function(){return 4294901760},I:b?()=>{var t=process.hrtime();return 1e3*t[0]+t[1]/1e6}:()=>performance.now(),xa:function(t,e,n){T.copyWithin(t>>>0,e>>>0,e+n>>>0)},G:function(t){var e=T.length;if(4294901760<(t>>>=0))return!1;for(var n=1;4>=n;n*=2){var r=e*(1+.2/n);r=Math.min(r,t+100663296);var a=Math;r=Math.max(t,r),a=a.min.call(a,4294901760,r+(65536-r%65536)%65536);t:{try{O.grow(a-A.byteLength+65535>>>16),P();var i=1;break t}catch(t){}i=void 0}if(i)return!0}return!1},va:function(t,e){var n=0;return ut().forEach((function(r,a){var i=e+n;for(a=M[t+4*a>>2>>>0]=i,i=0;i<r.length;++i)S[a++>>0>>>0]=r.charCodeAt(i);S[a>>0>>>0]=0,n+=r.length+1})),0},wa:function(t,e){var n=ut();M[t>>2>>>0]=n.length;var r=0;return n.forEach((function(t){r+=t.length+1})),M[e>>2>>>0]=r,0},ba:function(t){_||0<L||(_t(),Z(W),wt(0),st[1].length&&lt(1,10),st[2].length&&lt(2,10)),_||0<L||(e.onExit&&e.onExit(t),C=!0),h(t,new J(t))},E:function(){return 52},Q:function(){return 52},ca:function(){return 70},P:function(t,e,n,r){for(var a=0,i=0;i<n;i++){var o=M[e>>2>>>0],u=M[e+4>>2>>>0];e+=8;for(var c=0;c<u;c++)lt(t,T[o+c>>>0]);a+=u}return M[r>>2>>>0]=a,0},c:function(){return ft},ja:function t(e,r){t.Mb||(t.Mb=function(){if("object"==typeof crypto&&"function"==typeof crypto.getRandomValues){var t=new Uint8Array(1);return()=>(crypto.getRandomValues(t),t[0])}if(b)try{var e=n(Object(function(){var t=new Error("Cannot find module \'crypto\'");throw t.code="MODULE_NOT_FOUND",t}()));return()=>e.randomBytes(1)[0]}catch(t){}return()=>V("randomDevice")}());for(var a=0;a<r;a++)S[e+a>>0>>>0]=t.Mb();return 0},ea:function(t,e,n){var r=At();try{return at(t)(e,n)}catch(t){if(St(r),t!==t+0)throw t;Ot(1,0)}},fa:function(t,e,n){var r=At();try{return at(t)(e,n)}catch(t){if(St(r),t!==t+0)throw t;Ot(1,0)}},J:function(t){var e=At();try{return at(t)()}catch(t){if(St(e),t!==t+0)throw t;Ot(1,0)}},e:function(t,e){var n=At();try{return at(t)(e)}catch(t){if(St(n),t!==t+0)throw t;Ot(1,0)}},N:function(t,e,n){var r=At();try{return at(t)(e,n)}catch(t){if(St(r),t!==t+0)throw t;Ot(1,0)}},O:function(t,e,n){var r=At();try{return at(t)(e,n)}catch(t){if(St(r),t!==t+0)throw t;Ot(1,0)}},j:function(t,e,n){var r=At();try{return at(t)(e,n)}catch(t){if(St(r),t!==t+0)throw t;Ot(1,0)}},o:function(t,e,n,r){var a=At();try{return at(t)(e,n,r)}catch(t){if(St(a),t!==t+0)throw t;Ot(1,0)}},p:function(t,e,n,r,a){var i=At();try{return at(t)(e,n,r,a)}catch(t){if(St(i),t!==t+0)throw t;Ot(1,0)}},M:function(t,e,n,r,a,i){var o=At();try{return at(t)(e,n,r,a,i)}catch(t){if(St(o),t!==t+0)throw t;Ot(1,0)}},r:function(t,e,n,r,a,i){var o=At();try{return at(t)(e,n,r,a,i)}catch(t){if(St(o),t!==t+0)throw t;Ot(1,0)}},v:function(t,e,n,r,a,i,o){var u=At();try{return at(t)(e,n,r,a,i,o)}catch(t){if(St(u),t!==t+0)throw t;Ot(1,0)}},K:function(t,e,n,r,a,i,o,u){var c=At();try{return at(t)(e,n,r,a,i,o,u)}catch(t){if(St(c),t!==t+0)throw t;Ot(1,0)}},D:function(t,e,n,r,a,i,o,u,c,s,l,f){var p=At();try{return at(t)(e,n,r,a,i,o,u,c,s,l,f)}catch(t){if(St(p),t!==t+0)throw t;Ot(1,0)}},X:function(t,e,n,r,a,i,o,u){var c=At();try{return Ft(t,e,n,r,a,i,o,u)}catch(t){if(St(c),t!==t+0)throw t;Ot(1,0)}},V:function(t,e,n,r,a,i,o){var u=At();try{return xt(t,e,n,r,a,i,o)}catch(t){if(St(u),t!==t+0)throw t;Ot(1,0)}},U:function(t,e,n,r,a){var i=At();try{return It(t,e,n,r,a)}catch(t){if(St(i),t!==t+0)throw t;Ot(1,0)}},Z:function(t,e,n,r){var a=At();try{return Pt(t,e,n,r)}catch(t){if(St(a),t!==t+0)throw t;Ot(1,0)}},W:function(t){var e=At();try{return Ct(t)}catch(t){if(St(e),t!==t+0)throw t;Ot(1,0)}},Y:function(t,e){var n=At();try{return Ut(t,e)}catch(t){if(St(n),t!==t+0)throw t;Ot(1,0)}},T:function(t,e,n){var r=At();try{return Rt(t,e,n)}catch(t){if(St(r),t!==t+0)throw t;Ot(1,0)}},f:function(t){var e=At();try{at(t)()}catch(t){if(St(e),t!==t+0)throw t;Ot(1,0)}},q:function(t,e){var n=At();try{at(t)(e)}catch(t){if(St(n),t!==t+0)throw t;Ot(1,0)}},h:function(t,e,n){var r=At();try{at(t)(e,n)}catch(t){if(St(r),t!==t+0)throw t;Ot(1,0)}},da:function(t,e,n,r){var a=At();try{at(t)(e,n,r)}catch(t){if(St(a),t!==t+0)throw t;Ot(1,0)}},l:function(t,e,n,r){var a=At();try{at(t)(e,n,r)}catch(t){if(St(a),t!==t+0)throw t;Ot(1,0)}},t:function(t,e,n,r,a){var i=At();try{at(t)(e,n,r,a)}catch(t){if(St(i),t!==t+0)throw t;Ot(1,0)}},u:function(t,e,n,r,a,i){var o=At();try{at(t)(e,n,r,a,i)}catch(t){if(St(o),t!==t+0)throw t;Ot(1,0)}},x:function(t,e,n,r,a,i,o){var u=At();try{at(t)(e,n,r,a,i,o)}catch(t){if(St(u),t!==t+0)throw t;Ot(1,0)}},z:function(t,e,n,r,a,i,o,u){var c=At();try{at(t)(e,n,r,a,i,o,u)}catch(t){if(St(c),t!==t+0)throw t;Ot(1,0)}},ga:function(t,e,n,r,a,i,o,u,c){var s=At();try{at(t)(e,n,r,a,i,o,u,c)}catch(t){if(St(s),t!==t+0)throw t;Ot(1,0)}},A:function(t,e,n,r,a,i,o,u,c,s,l){var f=At();try{at(t)(e,n,r,a,i,o,u,c,s,l)}catch(t){if(St(f),t!==t+0)throw t;Ot(1,0)}},C:function(t,e,n,r,a,i,o,u,c,s,l,f,p,h,d,y){var b=At();try{at(t)(e,n,r,a,i,o,u,c,s,l,f,p,h,d,y)}catch(t){if(St(b),t!==t+0)throw t;Ot(1,0)}},aa:function(t,e,n,r,a,i,o,u){var c=At();try{jt(t,e,n,r,a,i,o,u)}catch(t){if(St(c),t!==t+0)throw t;Ot(1,0)}},_:function(t,e,n,r,a,i,o,u,c,s,l,f){var p=At();try{Dt(t,e,n,r,a,i,o,u,c,s,l,f)}catch(t){if(St(p),t!==t+0)throw t;Ot(1,0)}},$:function(t,e,n,r,a,i){var o=At();try{kt(t,e,n,r,a,i)}catch(t){if(St(o),t!==t+0)throw t;Ot(1,0)}},n:function(t){return t},F:function(t){ft=t},ha:yt,y:function(t,e,n,r){return yt(t,e,n,r)}};!function(){function t(t){e.asm=t.exports,O=e.asm.Ka,P(),U=e.asm.ib,I.unshift(e.asm.La),B--,e.monitorRunDependencies&&e.monitorRunDependencies(B),0==B&&(null!==G&&(clearInterval(G),G=null),N&&(t=N,N=null,t()))}function n(e){t(e.instance)}function r(t){return function(){if(!g&&(d||y)){if("function"==typeof fetch&&!Y.startsWith("file://"))return fetch(Y,{credentials:"same-origin"}).then((function(t){if(!t.ok)throw"failed to load wasm binary file at \'"+Y+"\'";return t.arrayBuffer()})).catch((function(){return X()}));if(o)return new Promise((function(t,e){o(Y,(function(e){t(new Uint8Array(e))}),e)}))}return Promise.resolve().then((function(){return X()}))}().then((function(t){return WebAssembly.instantiate(t,i)})).then((function(t){return t})).then(t,(function(t){w("failed to asynchronously prepare wasm: "+t),V(t)}))}var i={a:bt};if(B++,e.monitorRunDependencies&&e.monitorRunDependencies(B),e.instantiateWasm)try{return e.instantiateWasm(i,t)}catch(t){return w("Module.instantiateWasm callback failed with error: "+t),!1}(g||"function"!=typeof WebAssembly.instantiateStreaming||$()||Y.startsWith("file://")||b||"function"!=typeof fetch?r(n):fetch(Y,{credentials:"same-origin"}).then((function(t){return WebAssembly.instantiateStreaming(t,i).then(n,(function(t){return w("wasm streaming compile failed: "+t),w("falling back to ArrayBuffer instantiation"),r(n)}))}))).catch(a)}(),e.___wasm_call_ctors=function(){return(e.___wasm_call_ctors=e.asm.La).apply(null,arguments)},e._OrtInit=function(){return(e._OrtInit=e.asm.Ma).apply(null,arguments)},e._OrtCreateSessionOptions=function(){return(e._OrtCreateSessionOptions=e.asm.Na).apply(null,arguments)},e._OrtAppendExecutionProvider=function(){return(e._OrtAppendExecutionProvider=e.asm.Oa).apply(null,arguments)},e._OrtAddSessionConfigEntry=function(){return(e._OrtAddSessionConfigEntry=e.asm.Pa).apply(null,arguments)},e._OrtReleaseSessionOptions=function(){return(e._OrtReleaseSessionOptions=e.asm.Qa).apply(null,arguments)},e._OrtCreateSession=function(){return(e._OrtCreateSession=e.asm.Ra).apply(null,arguments)},e._OrtReleaseSession=function(){return(e._OrtReleaseSession=e.asm.Sa).apply(null,arguments)},e._OrtGetInputCount=function(){return(e._OrtGetInputCount=e.asm.Ta).apply(null,arguments)},e._OrtGetOutputCount=function(){return(e._OrtGetOutputCount=e.asm.Ua).apply(null,arguments)},e._OrtGetInputName=function(){return(e._OrtGetInputName=e.asm.Va).apply(null,arguments)},e._OrtGetOutputName=function(){return(e._OrtGetOutputName=e.asm.Wa).apply(null,arguments)},e._OrtFree=function(){return(e._OrtFree=e.asm.Xa).apply(null,arguments)},e._OrtCreateTensor=function(){return(e._OrtCreateTensor=e.asm.Ya).apply(null,arguments)},e._OrtGetTensorData=function(){return(e._OrtGetTensorData=e.asm.Za).apply(null,arguments)},e._OrtReleaseTensor=function(){return(e._OrtReleaseTensor=e.asm._a).apply(null,arguments)},e._OrtCreateRunOptions=function(){return(e._OrtCreateRunOptions=e.asm.$a).apply(null,arguments)},e._OrtAddRunConfigEntry=function(){return(e._OrtAddRunConfigEntry=e.asm.ab).apply(null,arguments)},e._OrtReleaseRunOptions=function(){return(e._OrtReleaseRunOptions=e.asm.bb).apply(null,arguments)},e._OrtRun=function(){return(e._OrtRun=e.asm.cb).apply(null,arguments)},e._OrtEndProfiling=function(){return(e._OrtEndProfiling=e.asm.db).apply(null,arguments)};var mt,gt=e._malloc=function(){return(gt=e._malloc=e.asm.eb).apply(null,arguments)},vt=e._free=function(){return(vt=e._free=e.asm.fb).apply(null,arguments)},wt=e._fflush=function(){return(wt=e._fflush=e.asm.gb).apply(null,arguments)},_t=e.___funcs_on_exit=function(){return(_t=e.___funcs_on_exit=e.asm.hb).apply(null,arguments)},Ot=e._setThrew=function(){return(Ot=e._setThrew=e.asm.jb).apply(null,arguments)},At=e.stackSave=function(){return(At=e.stackSave=e.asm.kb).apply(null,arguments)},St=e.stackRestore=function(){return(St=e.stackRestore=e.asm.lb).apply(null,arguments)},Tt=e.stackAlloc=function(){return(Tt=e.stackAlloc=e.asm.mb).apply(null,arguments)},Et=e.___cxa_can_catch=function(){return(Et=e.___cxa_can_catch=e.asm.nb).apply(null,arguments)},Mt=e.___cxa_is_pointer_type=function(){return(Mt=e.___cxa_is_pointer_type=e.asm.ob).apply(null,arguments)},Ct=e.dynCall_j=function(){return(Ct=e.dynCall_j=e.asm.pb).apply(null,arguments)},xt=e.dynCall_iiiiij=function(){return(xt=e.dynCall_iiiiij=e.asm.qb).apply(null,arguments)},Rt=e.dynCall_jii=function(){return(Rt=e.dynCall_jii=e.asm.rb).apply(null,arguments)},jt=e.dynCall_viiiiij=function(){return(jt=e.dynCall_viiiiij=e.asm.sb).apply(null,arguments)},kt=e.dynCall_vjji=function(){return(kt=e.dynCall_vjji=e.asm.tb).apply(null,arguments)},Dt=e.dynCall_viiijjjii=function(){return(Dt=e.dynCall_viiijjjii=e.asm.ub).apply(null,arguments)},Pt=e.dynCall_iij=function(){return(Pt=e.dynCall_iij=e.asm.vb).apply(null,arguments)},Ut=e.dynCall_ji=function(){return(Ut=e.dynCall_ji=e.asm.wb).apply(null,arguments)},Ft=e.dynCall_iiiiiij=function(){return(Ft=e.dynCall_iiiiiij=e.asm.xb).apply(null,arguments)},It=e.dynCall_iiij=function(){return(It=e.dynCall_iiij=e.asm.yb).apply(null,arguments)};function Wt(){function t(){if(!mt&&(mt=!0,e.calledRun=!0,!C)){if(Z(I),r(e),e.onRuntimeInitialized&&e.onRuntimeInitialized(),e.postRun)for("function"==typeof e.postRun&&(e.postRun=[e.postRun]);e.postRun.length;){var t=e.postRun.shift();H.unshift(t)}Z(H)}}if(!(0<B)){if(e.preRun)for("function"==typeof e.preRun&&(e.preRun=[e.preRun]);e.preRun.length;)z();Z(F),0<B||(e.setStatus?(e.setStatus("Running..."),setTimeout((function(){setTimeout((function(){e.setStatus("")}),1),t()}),1)):t())}}if(e.UTF8ToString=j,e.stringToUTF8=function(t,e,n){return k(t,T,e,n)},e.lengthBytesUTF8=D,e.stackSave=At,e.stackRestore=St,e.stackAlloc=Tt,N=function t(){mt||Wt(),mt||(N=t)},e.preInit)for("function"==typeof e.preInit&&(e.preInit=[e.preInit]);0<e.preInit.length;)e.preInit.pop()();return Wt(),t.ready});t.exports=r},967:(t,e)=>{"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.iterateExtraOptions=void 0,e.iterateExtraOptions=(t,n,r,a)=>{if("object"==typeof t&&null!==t){if(r.has(t))throw new Error("Circular reference in options");r.add(t)}Object.entries(t).forEach((([t,i])=>{const o=n?n+t:t;if("object"==typeof i)(0,e.iterateExtraOptions)(i,o+".",r,a);else if("string"==typeof i||"number"==typeof i)a(o,i.toString());else{if("boolean"!=typeof i)throw new Error("Can\'t handle extra config type: "+typeof i);a(o,i?"1":"0")}}))}},586:(t,e,n)=>{"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.setRunOptions=void 0;const r=n(967),a=n(983),i=n(361);e.setRunOptions=t=>{const e=(0,i.getInstance)();let n=0;const o=[],u=t||{};try{if(void 0===(null==t?void 0:t.logSeverityLevel))u.logSeverityLevel=2;else if("number"!=typeof t.logSeverityLevel||!Number.isInteger(t.logSeverityLevel)||t.logSeverityLevel<0||t.logSeverityLevel>4)throw new Error(`log serverity level is not valid: ${t.logSeverityLevel}`);if(void 0===(null==t?void 0:t.logVerbosityLevel))u.logVerbosityLevel=0;else if("number"!=typeof t.logVerbosityLevel||!Number.isInteger(t.logVerbosityLevel))throw new Error(`log verbosity level is not valid: ${t.logVerbosityLevel}`);void 0===(null==t?void 0:t.terminate)&&(u.terminate=!1);let i=0;if(void 0!==(null==t?void 0:t.tag)&&(i=(0,a.allocWasmString)(t.tag,o)),n=e._OrtCreateRunOptions(u.logSeverityLevel,u.logVerbosityLevel,!!u.terminate,i),0===n)throw new Error("Can\'t create run options");return void 0!==(null==t?void 0:t.extra)&&(0,r.iterateExtraOptions)(t.extra,"",new WeakSet,((t,r)=>{const i=(0,a.allocWasmString)(t,o),u=(0,a.allocWasmString)(r,o);if(0!==e._OrtAddRunConfigEntry(n,i,u))throw new Error(`Can\'t set a run config entry: ${t} - ${r}`)})),[n,o]}catch(t){throw 0!==n&&e._OrtReleaseRunOptions(n),o.forEach(e._free),t}}},919:(t,e,n)=>{"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.setSessionOptions=void 0;const r=n(967),a=n(983),i=n(361);e.setSessionOptions=t=>{const e=(0,i.getInstance)();let n=0;const o=[],u=t||{};(t=>{t.extra||(t.extra={}),t.extra.session||(t.extra.session={});const e=t.extra.session;e.use_ort_model_bytes_directly||(e.use_ort_model_bytes_directly="1")})(u);try{void 0===(null==t?void 0:t.graphOptimizationLevel)&&(u.graphOptimizationLevel="all");const c=(t=>{switch(t){case"disabled":return 0;case"basic":return 1;case"extended":return 2;case"all":return 99;default:throw new Error(`unsupported graph optimization level: ${t}`)}})(u.graphOptimizationLevel);void 0===(null==t?void 0:t.enableCpuMemArena)&&(u.enableCpuMemArena=!0),void 0===(null==t?void 0:t.enableMemPattern)&&(u.enableMemPattern=!0),void 0===(null==t?void 0:t.executionMode)&&(u.executionMode="sequential");const s=(t=>{switch(t){case"sequential":return 0;case"parallel":return 1;default:throw new Error(`unsupported execution mode: ${t}`)}})(u.executionMode);let l=0;if(void 0!==(null==t?void 0:t.logId)&&(l=(0,a.allocWasmString)(t.logId,o)),void 0===(null==t?void 0:t.logSeverityLevel))u.logSeverityLevel=2;else if("number"!=typeof t.logSeverityLevel||!Number.isInteger(t.logSeverityLevel)||t.logSeverityLevel<0||t.logSeverityLevel>4)throw new Error(`log serverity level is not valid: ${t.logSeverityLevel}`);if(void 0===(null==t?void 0:t.logVerbosityLevel))u.logVerbosityLevel=0;else if("number"!=typeof t.logVerbosityLevel||!Number.isInteger(t.logVerbosityLevel))throw new Error(`log verbosity level is not valid: ${t.logVerbosityLevel}`);if(void 0===(null==t?void 0:t.enableProfiling)&&(u.enableProfiling=!1),n=e._OrtCreateSessionOptions(c,!!u.enableCpuMemArena,!!u.enableMemPattern,s,!!u.enableProfiling,0,l,u.logSeverityLevel,u.logVerbosityLevel),0===n)throw new Error("Can\'t create session options");return(null==t?void 0:t.executionProviders)&&((t,e,n)=>{for(const r of e){let e="string"==typeof r?r:r.name;switch(e){case"xnnpack":e="XNNPACK";break;case"wasm":case"cpu":continue;default:throw new Error(`not supported EP: ${e}`)}const o=(0,a.allocWasmString)(e,n);if(0!==(0,i.getInstance)()._OrtAppendExecutionProvider(t,o))throw new Error(`Can\'t append execution provider: ${e}`)}})(n,t.executionProviders,o),void 0!==(null==t?void 0:t.extra)&&(0,r.iterateExtraOptions)(t.extra,"",new WeakSet,((t,r)=>{const i=(0,a.allocWasmString)(t,o),u=(0,a.allocWasmString)(r,o);if(0!==e._OrtAddSessionConfigEntry(n,i,u))throw new Error(`Can\'t set a session config entry: ${t} - ${r}`)})),[n,o]}catch(t){throw 0!==n&&e._OrtReleaseSessionOptions(n),o.forEach(e._free),t}}},983:(t,e,n)=>{"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.allocWasmString=void 0;const r=n(361);e.allocWasmString=(t,e)=>{const n=(0,r.getInstance)(),a=n.lengthBytesUTF8(t)+1,i=n._malloc(a);return n.stringToUTF8(t,i,a),e.push(i),i}},349:(t,e,n)=>{"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.extractTransferableBuffers=e.endProfiling=e.run=e.releaseSession=e.createSession=e.createSessionFinalize=e.createSessionAllocate=e.initOrt=void 0;const r=n(586),a=n(919),i=n(983),o=n(361);e.initOrt=(t,e)=>{const n=(0,o.getInstance)()._OrtInit(t,e);if(0!==n)throw new Error(`Can\'t initialize onnxruntime. error code = ${n}`)};const u=new Map;e.createSessionAllocate=t=>{const e=(0,o.getInstance)(),n=e._malloc(t.byteLength);return e.HEAPU8.set(t,n),[n,t.byteLength]},e.createSessionFinalize=(t,e)=>{const n=(0,o.getInstance)();let r=0,i=0,c=[];try{if([i,c]=(0,a.setSessionOptions)(e),r=n._OrtCreateSession(t[0],t[1],i),0===r)throw new Error("Can\'t create a session")}finally{n._free(t[0]),n._OrtReleaseSessionOptions(i),c.forEach(n._free)}const s=n._OrtGetInputCount(r),l=n._OrtGetOutputCount(r),f=[],p=[],h=[],d=[];for(let t=0;t<s;t++){const e=n._OrtGetInputName(r,t);if(0===e)throw new Error("Can\'t get an input name");p.push(e),f.push(n.UTF8ToString(e))}for(let t=0;t<l;t++){const e=n._OrtGetOutputName(r,t);if(0===e)throw new Error("Can\'t get an output name");d.push(e),h.push(n.UTF8ToString(e))}return u.set(r,[r,p,d]),[r,f,h]},e.createSession=(t,n)=>{const r=(0,e.createSessionAllocate)(t);return(0,e.createSessionFinalize)(r,n)},e.releaseSession=t=>{const e=(0,o.getInstance)(),n=u.get(t);if(!n)throw new Error("invalid session id");const r=n[0],a=n[1],i=n[2];a.forEach(e._OrtFree),i.forEach(e._OrtFree),e._OrtReleaseSession(r),u.delete(t)};const c=t=>{switch(t){case"int8":return 3;case"uint8":return 2;case"bool":return 9;case"int16":return 5;case"uint16":return 4;case"int32":return 6;case"uint32":return 12;case"float32":return 1;case"float64":return 11;case"string":return 8;case"int64":return 7;case"uint64":return 13;default:throw new Error(`unsupported data type: ${t}`)}},s=t=>{switch(t){case 3:return"int8";case 2:return"uint8";case 9:return"bool";case 5:return"int16";case 4:return"uint16";case 6:return"int32";case 12:return"uint32";case 1:return"float32";case 11:return"float64";case 8:return"string";case 7:return"int64";case 13:return"uint64";default:throw new Error(`unsupported data type: ${t}`)}},l=t=>{switch(t){case"float32":return Float32Array;case"uint8":case"bool":return Uint8Array;case"int8":return Int8Array;case"uint16":return Uint16Array;case"int16":return Int16Array;case"int32":return Int32Array;case"float64":return Float64Array;case"uint32":return Uint32Array;case"int64":return BigInt64Array;case"uint64":return BigUint64Array;default:throw new Error(`unsupported type: ${t}`)}};e.run=(t,e,n,a,f)=>{const p=(0,o.getInstance)(),h=u.get(t);if(!h)throw new Error("invalid session id");const d=h[0],y=h[1],b=h[2],m=e.length,g=a.length;let v=0,w=[];const _=[],O=[];try{[v,w]=(0,r.setRunOptions)(f);for(let t=0;t<m;t++){const e=n[t][0],r=n[t][1],a=n[t][2];let o,u;if(Array.isArray(a)){u=4*a.length,o=p._malloc(u),O.push(o);let t=o/4;for(let e=0;e<a.length;e++){if("string"!=typeof a[e])throw new TypeError(`tensor data at index ${e} is not a string`);p.HEAPU32[t++]=(0,i.allocWasmString)(a[e],O)}}else u=a.byteLength,o=p._malloc(u),O.push(o),p.HEAPU8.set(new Uint8Array(a.buffer,a.byteOffset,u),o);const s=p.stackSave(),l=p.stackAlloc(4*r.length);try{let t=l/4;r.forEach((e=>p.HEAP32[t++]=e));const n=p._OrtCreateTensor(c(e),o,u,l,r.length);if(0===n)throw new Error("Can\'t create a tensor");_.push(n)}finally{p.stackRestore(s)}}const t=p.stackSave(),o=p.stackAlloc(4*m),u=p.stackAlloc(4*m),h=p.stackAlloc(4*g),A=p.stackAlloc(4*g);try{let n=o/4,r=u/4,i=h/4,c=A/4;for(let t=0;t<m;t++)p.HEAPU32[n++]=_[t],p.HEAPU32[r++]=y[e[t]];for(let t=0;t<g;t++)p.HEAPU32[i++]=0,p.HEAPU32[c++]=b[a[t]];let f=p._OrtRun(d,u,o,m,A,g,h,v);const w=[];if(0===f)for(let t=0;t<g;t++){const e=p.HEAPU32[h/4+t],n=p.stackSave(),r=p.stackAlloc(16);let a,i=0;try{if(f=p._OrtGetTensorData(e,r,r+4,r+8,r+12),0!==f)throw new Error(`Can\'t access output tensor data. error code = ${f}`);let t=r/4;const o=p.HEAPU32[t++];i=p.HEAPU32[t++];const u=p.HEAPU32[t++],c=p.HEAPU32[t++],h=[];for(let t=0;t<c;t++)h.push(p.HEAPU32[u/4+t]);p._OrtFree(u);const d=0===h.length?1:h.reduce(((t,e)=>t*e));if(a=s(o),"string"===a){const t=[];let e=i/4;for(let n=0;n<d;n++){const r=p.HEAPU32[e++],a=n===d-1?void 0:p.HEAPU32[e]-r;t.push(p.UTF8ToString(r,a))}w.push([a,h,t])}else{const t=new(l(a))(d);new Uint8Array(t.buffer,t.byteOffset,t.byteLength).set(p.HEAPU8.subarray(i,i+t.byteLength)),w.push([a,h,t])}}finally{p.stackRestore(n),"string"===a&&i&&p._free(i),p._OrtReleaseTensor(e)}}if(0===f)return w;throw new Error(`failed to call OrtRun(). error code = ${f}.`)}finally{p.stackRestore(t)}}finally{_.forEach(p._OrtReleaseTensor),O.forEach(p._free),p._OrtReleaseRunOptions(v),w.forEach(p._free)}},e.endProfiling=t=>{const e=(0,o.getInstance)(),n=u.get(t);if(!n)throw new Error("invalid session id");const r=n[0],a=e._OrtEndProfiling(r);if(0===a)throw new Error("Can\'t get an profile file name");e._OrtFree(a)},e.extractTransferableBuffers=t=>{const e=[];for(const n of t){const t=n[2];!Array.isArray(t)&&t.buffer&&e.push(t.buffer)}return e}},361:function(t,e,n){"use strict";var r=this&&this.__createBinding||(Object.create?function(t,e,n,r){void 0===r&&(r=n);var a=Object.getOwnPropertyDescriptor(e,n);a&&!("get"in a?!e.__esModule:a.writable||a.configurable)||(a={enumerable:!0,get:function(){return e[n]}}),Object.defineProperty(t,r,a)}:function(t,e,n,r){void 0===r&&(r=n),t[r]=e[n]}),a=this&&this.__setModuleDefault||(Object.create?function(t,e){Object.defineProperty(t,"default",{enumerable:!0,value:e})}:function(t,e){t.default=e}),i=this&&this.__importStar||function(t){if(t&&t.__esModule)return t;var e={};if(null!=t)for(var n in t)"default"!==n&&Object.prototype.hasOwnProperty.call(t,n)&&r(e,t,n);return a(e,t),e},o=this&&this.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(e,"__esModule",{value:!0}),e.dispose=e.getInstance=e.initializeWebAssembly=void 0;const u=i(n(449)),c=o(n(932)),s=n(474);let l,f=!1,p=!1,h=!1;const d=(t,e)=>e?t?"ort-wasm-simd-threaded.wasm":"ort-wasm-threaded.wasm":t?"ort-wasm-simd.wasm":"ort-wasm.wasm";e.initializeWebAssembly=async t=>{if(f)return Promise.resolve();if(p)throw new Error("multiple calls to \'initializeWebAssembly()\' detected.");if(h)throw new Error("previous call to \'initializeWebAssembly()\' failed.");p=!0;const e=t.initTimeout,r=t.numThreads,a=t.simd,i=r>1&&(()=>{try{return"undefined"!=typeof SharedArrayBuffer&&("undefined"!=typeof MessageChannel&&(new MessageChannel).port1.postMessage(new SharedArrayBuffer(1)),WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,4,1,3,1,1,10,11,1,9,0,65,0,254,16,2,0,26,11])))}catch(t){return!1}})(),o=a&&(()=>{try{return WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,30,1,28,0,65,0,253,15,253,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,253,186,1,26,11]))}catch(t){return!1}})(),y="string"==typeof t.wasmPaths?t.wasmPaths:void 0,b=d(!1,i),m=d(o,i),g="object"==typeof t.wasmPaths?t.wasmPaths[m]:void 0;let v=!1;const w=[];if(e>0&&w.push(new Promise((t=>{setTimeout((()=>{v=!0,t()}),e)}))),w.push(new Promise(((t,e)=>{const r=i?s:c.default,a={locateFile:(t,e)=>i&&t.endsWith(".worker.js")&&"undefined"!=typeof Blob?URL.createObjectURL(new Blob([n(154)],{type:"text/javascript"})):t===b?null!=g?g:(null!=y?y:e)+m:e+t};if(i)if("undefined"==typeof Blob)a.mainScriptUrlOrBlob=u.join("/","ort-wasm-threaded.js");else{const t=`var ortWasmThreaded=(function(){var _scriptDir;return ${r.toString()}})();`;a.mainScriptUrlOrBlob=new Blob([t],{type:"text/javascript"})}r(a).then((e=>{p=!1,f=!0,l=e,t()}),(t=>{p=!1,h=!0,e(t)}))}))),await Promise.race(w),v)throw new Error(`WebAssembly backend initializing failed due to timeout: ${e}ms`)},e.getInstance=()=>{if(f&&l)return l;throw new Error("WebAssembly is not initialized yet.")},e.dispose=()=>{var t;!f||p||h||(p=!0,null===(t=l.PThread)||void 0===t||t.terminateAllThreads(),l=void 0,p=!1,f=!1,h=!0)}},154:t=>{"use strict";t.exports=\'"use strict";var e={},t="object"==typeof process&&"object"==typeof process.versions&&"string"==typeof process.versions.node;if(t){var r=require("worker_threads"),a=r.parentPort;a.on("message",(e=>onmessage({data:e})));var o=require("fs");Object.assign(global,{self:global,require:require,Module:e,location:{href:__filename},Worker:r.Worker,importScripts:function(e){(0,eval)(o.readFileSync(e,"utf8"))},postMessage:function(e){a.postMessage(e)},performance:global.performance||{now:function(){return Date.now()}}})}var s=!1,n=[],i=function(){var e=Array.prototype.slice.call(arguments).join(" ");t?o.writeSync(2,e+"\\\\n"):console.error(e)};self.alert=function(){var t=Array.prototype.slice.call(arguments).join(" ");postMessage({cmd:"alert",text:t,threadId:e._pthread_self()})},e.instantiateWasm=(t,r)=>{var a=new WebAssembly.Instance(e.wasmModule,t);return r(a),e.wasmModule=null,a.exports},self.onunhandledrejection=e=>{throw e.reason??e},self.onmessage=t=>{try{if("load"===t.data.cmd){if(e.wasmModule=t.data.wasmModule,e.wasmMemory=t.data.wasmMemory,e.buffer=e.wasmMemory.buffer,e.ENVIRONMENT_IS_PTHREAD=!0,"string"==typeof t.data.urlOrBlob)importScripts(t.data.urlOrBlob);else{var r=URL.createObjectURL(t.data.urlOrBlob);importScripts(r),URL.revokeObjectURL(r)}ortWasmThreaded(e).then((function(t){e=t}))}else if("run"===t.data.cmd){e.__performance_now_clock_drift=performance.now()-t.data.time,e.__emscripten_thread_init(t.data.pthread_ptr,0,0,1),e.establishStackSpace(),e.PThread.receiveObjectTransfer(t.data),e.PThread.threadInitTLS(),s||(n.forEach((t=>{e.executeNotifiedProxyingQueue(t)})),n=[],s=!0);try{e.invokeEntryPoint(t.data.start_routine,t.data.arg)}catch(t){if("unwind"!=t){if(!(t instanceof e.ExitStatus))throw t;e.keepRuntimeAlive()||e.__emscripten_thread_exit(t.status)}}}else"cancel"===t.data.cmd?e._pthread_self()&&e.__emscripten_thread_exit(-1):"setimmediate"===t.data.target||("processProxyingQueue"===t.data.cmd?s?e.executeNotifiedProxyingQueue(t.data.queue):n.push(t.data.queue):(i("worker.js received unknown command "+t.data.cmd),i(t.data)))}catch(t){throw i("worker.js onmessage() captured an uncaught exception: "+t),t&&t.stack&&i(t.stack),e.__emscripten_thread_crashed&&e.__emscripten_thread_crashed(),t}};\\n\'},384:()=>{},993:()=>{},908:()=>{},953:()=>{},925:()=>{},449:()=>{}},e={};function n(r){var a=e[r];if(void 0!==a)return a.exports;var i=e[r]={exports:{}};return t[r].call(i.exports,i,i.exports,n),i.exports}n.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(t){if("object"==typeof window)return window}}(),(()=>{"use strict";const t=n(349),e=n(361);self.onmessage=n=>{switch(n.data.type){case"init-wasm":(0,e.initializeWebAssembly)(n.data.in).then((()=>postMessage({type:"init-wasm"})),(t=>postMessage({type:"init-wasm",err:t})));break;case"init-ort":try{const{numThreads:e,loggingLevel:r}=n.data.in;(0,t.initOrt)(e,r),postMessage({type:"init-ort"})}catch(t){postMessage({type:"init-ort",err:t})}break;case"create_allocate":try{const{model:e}=n.data.in,r=(0,t.createSessionAllocate)(e);postMessage({type:"create_allocate",out:r})}catch(t){postMessage({type:"create_allocate",err:t})}break;case"create_finalize":try{const{modeldata:e,options:r}=n.data.in,a=(0,t.createSessionFinalize)(e,r);postMessage({type:"create_finalize",out:a})}catch(t){postMessage({type:"create_finalize",err:t})}break;case"create":try{const{model:e,options:r}=n.data.in,a=(0,t.createSession)(e,r);postMessage({type:"create",out:a})}catch(t){postMessage({type:"create",err:t})}break;case"release":try{const e=n.data.in;(0,t.releaseSession)(e),postMessage({type:"release"})}catch(t){postMessage({type:"release",err:t})}break;case"run":try{const{sessionId:e,inputIndices:r,inputs:a,outputIndices:i,options:o}=n.data.in,u=(0,t.run)(e,r,a,i,o);postMessage({type:"run",out:u},(0,t.extractTransferableBuffers)(u))}catch(t){postMessage({type:"run",err:t})}break;case"end-profiling":try{const e=n.data.in;(0,t.endProfiling)(e),postMessage({type:"end-profiling"})}catch(t){postMessage({type:"end-profiling",err:t})}}}})()})();\n',"Worker",void 0,void 0)}},477:i=>{i.exports=function(s,o,a,c){var d=self||window;try{try{var g;try{g=new d.Blob([s])}catch{(g=new(d.BlobBuilder||d.WebKitBlobBuilder||d.MozBlobBuilder||d.MSBlobBuilder)).append(s),g=g.getBlob()}var $=d.URL||d.webkitURL,j=$.createObjectURL(g),_e=new d[o](j,a);return $.revokeObjectURL(j),_e}catch{return new d[o]("data:application/javascript,".concat(encodeURIComponent(s)),a)}}catch{if(!c)throw Error("Inline worker is not supported");return new d[o](c,a)}}},4154:i=>{i.exports=`"use strict";var e={},t="object"==typeof process&&"object"==typeof process.versions&&"string"==typeof process.versions.node;if(t){var r=require("worker_threads"),a=r.parentPort;a.on("message",(e=>onmessage({data:e})));var o=require("fs");Object.assign(global,{self:global,require:require,Module:e,location:{href:__filename},Worker:r.Worker,importScripts:function(e){(0,eval)(o.readFileSync(e,"utf8"))},postMessage:function(e){a.postMessage(e)},performance:global.performance||{now:function(){return Date.now()}}})}var s=!1,n=[],i=function(){var e=Array.prototype.slice.call(arguments).join(" ");t?o.writeSync(2,e+"\\n"):console.error(e)};self.alert=function(){var t=Array.prototype.slice.call(arguments).join(" ");postMessage({cmd:"alert",text:t,threadId:e._pthread_self()})},e.instantiateWasm=(t,r)=>{var a=new WebAssembly.Instance(e.wasmModule,t);return r(a),e.wasmModule=null,a.exports},self.onunhandledrejection=e=>{throw e.reason??e},self.onmessage=t=>{try{if("load"===t.data.cmd){if(e.wasmModule=t.data.wasmModule,e.wasmMemory=t.data.wasmMemory,e.buffer=e.wasmMemory.buffer,e.ENVIRONMENT_IS_PTHREAD=!0,"string"==typeof t.data.urlOrBlob)importScripts(t.data.urlOrBlob);else{var r=URL.createObjectURL(t.data.urlOrBlob);importScripts(r),URL.revokeObjectURL(r)}ortWasmThreaded(e).then((function(t){e=t}))}else if("run"===t.data.cmd){e.__performance_now_clock_drift=performance.now()-t.data.time,e.__emscripten_thread_init(t.data.pthread_ptr,0,0,1),e.establishStackSpace(),e.PThread.receiveObjectTransfer(t.data),e.PThread.threadInitTLS(),s||(n.forEach((t=>{e.executeNotifiedProxyingQueue(t)})),n=[],s=!0);try{e.invokeEntryPoint(t.data.start_routine,t.data.arg)}catch(t){if("unwind"!=t){if(!(t instanceof e.ExitStatus))throw t;e.keepRuntimeAlive()||e.__emscripten_thread_exit(t.status)}}}else"cancel"===t.data.cmd?e._pthread_self()&&e.__emscripten_thread_exit(-1):"setimmediate"===t.data.target||("processProxyingQueue"===t.data.cmd?s?e.executeNotifiedProxyingQueue(t.data.queue):n.push(t.data.queue):(i("worker.js received unknown command "+t.data.cmd),i(t.data)))}catch(t){throw i("worker.js onmessage() captured an uncaught exception: "+t),t&&t.stack&&i(t.stack),e.__emscripten_thread_crashed&&e.__emscripten_thread_crashed(),t}};
`},1670:i=>{i.exports=__WEBPACK_EXTERNAL_MODULE__1670__},7067:()=>{},1296:()=>{},1384:()=>{},3993:()=>{},908:()=>{},6953:()=>{},9925:()=>{},2806:()=>{},6449:()=>{},2850:()=>{},5381:()=>{},5686:(i,s,o)=>{o.r(s),o.d(s,{flatbuffers:()=>a});var a={};a.Offset,a.Table,a.SIZEOF_SHORT=2,a.SIZEOF_INT=4,a.FILE_IDENTIFIER_LENGTH=4,a.SIZE_PREFIX_LENGTH=4,a.Encoding={UTF8_BYTES:1,UTF16_STRING:2},a.int32=new Int32Array(2),a.float32=new Float32Array(a.int32.buffer),a.float64=new Float64Array(a.int32.buffer),a.isLittleEndian=new Uint16Array(new Uint8Array([1,0]).buffer)[0]===1,a.Long=function(c,d){this.low=0|c,this.high=0|d},a.Long.create=function(c,d){return c==0&&d==0?a.Long.ZERO:new a.Long(c,d)},a.Long.prototype.toFloat64=function(){return(this.low>>>0)+4294967296*this.high},a.Long.prototype.equals=function(c){return this.low==c.low&&this.high==c.high},a.Long.ZERO=new a.Long(0,0),a.Builder=function(c){if(c)d=c;else var d=1024;this.bb=a.ByteBuffer.allocate(d),this.space=d,this.minalign=1,this.vtable=null,this.vtable_in_use=0,this.isNested=!1,this.object_start=0,this.vtables=[],this.vector_num_elems=0,this.force_defaults=!1},a.Builder.prototype.clear=function(){this.bb.clear(),this.space=this.bb.capacity(),this.minalign=1,this.vtable=null,this.vtable_in_use=0,this.isNested=!1,this.object_start=0,this.vtables=[],this.vector_num_elems=0,this.force_defaults=!1},a.Builder.prototype.forceDefaults=function(c){this.force_defaults=c},a.Builder.prototype.dataBuffer=function(){return this.bb},a.Builder.prototype.asUint8Array=function(){return this.bb.bytes().subarray(this.bb.position(),this.bb.position()+this.offset())},a.Builder.prototype.prep=function(c,d){c>this.minalign&&(this.minalign=c);for(var g=1+~(this.bb.capacity()-this.space+d)&c-1;this.space<g+c+d;){var $=this.bb.capacity();this.bb=a.Builder.growByteBuffer(this.bb),this.space+=this.bb.capacity()-$}this.pad(g)},a.Builder.prototype.pad=function(c){for(var d=0;d<c;d++)this.bb.writeInt8(--this.space,0)},a.Builder.prototype.writeInt8=function(c){this.bb.writeInt8(this.space-=1,c)},a.Builder.prototype.writeInt16=function(c){this.bb.writeInt16(this.space-=2,c)},a.Builder.prototype.writeInt32=function(c){this.bb.writeInt32(this.space-=4,c)},a.Builder.prototype.writeInt64=function(c){this.bb.writeInt64(this.space-=8,c)},a.Builder.prototype.writeFloat32=function(c){this.bb.writeFloat32(this.space-=4,c)},a.Builder.prototype.writeFloat64=function(c){this.bb.writeFloat64(this.space-=8,c)},a.Builder.prototype.addInt8=function(c){this.prep(1,0),this.writeInt8(c)},a.Builder.prototype.addInt16=function(c){this.prep(2,0),this.writeInt16(c)},a.Builder.prototype.addInt32=function(c){this.prep(4,0),this.writeInt32(c)},a.Builder.prototype.addInt64=function(c){this.prep(8,0),this.writeInt64(c)},a.Builder.prototype.addFloat32=function(c){this.prep(4,0),this.writeFloat32(c)},a.Builder.prototype.addFloat64=function(c){this.prep(8,0),this.writeFloat64(c)},a.Builder.prototype.addFieldInt8=function(c,d,g){(this.force_defaults||d!=g)&&(this.addInt8(d),this.slot(c))},a.Builder.prototype.addFieldInt16=function(c,d,g){(this.force_defaults||d!=g)&&(this.addInt16(d),this.slot(c))},a.Builder.prototype.addFieldInt32=function(c,d,g){(this.force_defaults||d!=g)&&(this.addInt32(d),this.slot(c))},a.Builder.prototype.addFieldInt64=function(c,d,g){!this.force_defaults&&d.equals(g)||(this.addInt64(d),this.slot(c))},a.Builder.prototype.addFieldFloat32=function(c,d,g){(this.force_defaults||d!=g)&&(this.addFloat32(d),this.slot(c))},a.Builder.prototype.addFieldFloat64=function(c,d,g){(this.force_defaults||d!=g)&&(this.addFloat64(d),this.slot(c))},a.Builder.prototype.addFieldOffset=function(c,d,g){(this.force_defaults||d!=g)&&(this.addOffset(d),this.slot(c))},a.Builder.prototype.addFieldStruct=function(c,d,g){d!=g&&(this.nested(d),this.slot(c))},a.Builder.prototype.nested=function(c){if(c!=this.offset())throw new Error("FlatBuffers: struct must be serialized inline.")},a.Builder.prototype.notNested=function(){if(this.isNested)throw new Error("FlatBuffers: object serialization must not be nested.")},a.Builder.prototype.slot=function(c){this.vtable[c]=this.offset()},a.Builder.prototype.offset=function(){return this.bb.capacity()-this.space},a.Builder.growByteBuffer=function(c){var d=c.capacity();if(3221225472&d)throw new Error("FlatBuffers: cannot grow buffer beyond 2 gigabytes.");var g=d<<1,$=a.ByteBuffer.allocate(g);return $.setPosition(g-d),$.bytes().set(c.bytes(),g-d),$},a.Builder.prototype.addOffset=function(c){this.prep(a.SIZEOF_INT,0),this.writeInt32(this.offset()-c+a.SIZEOF_INT)},a.Builder.prototype.startObject=function(c){this.notNested(),this.vtable==null&&(this.vtable=[]),this.vtable_in_use=c;for(var d=0;d<c;d++)this.vtable[d]=0;this.isNested=!0,this.object_start=this.offset()},a.Builder.prototype.endObject=function(){if(this.vtable==null||!this.isNested)throw new Error("FlatBuffers: endObject called without startObject");this.addInt32(0);for(var c=this.offset(),d=this.vtable_in_use-1;d>=0&&this.vtable[d]==0;d--);for(var g=d+1;d>=0;d--)this.addInt16(this.vtable[d]!=0?c-this.vtable[d]:0);this.addInt16(c-this.object_start);var $=(g+2)*a.SIZEOF_SHORT;this.addInt16($);var j=0,_e=this.space;e:for(d=0;d<this.vtables.length;d++){var et=this.bb.capacity()-this.vtables[d];if($==this.bb.readInt16(et)){for(var _=a.SIZEOF_SHORT;_<$;_+=a.SIZEOF_SHORT)if(this.bb.readInt16(_e+_)!=this.bb.readInt16(et+_))continue e;j=this.vtables[d];break}}return j?(this.space=this.bb.capacity()-c,this.bb.writeInt32(this.space,j-c)):(this.vtables.push(this.offset()),this.bb.writeInt32(this.bb.capacity()-c,this.offset()-c)),this.isNested=!1,c},a.Builder.prototype.finish=function(c,d,g){var $=g?a.SIZE_PREFIX_LENGTH:0;if(d){var j=d;if(this.prep(this.minalign,a.SIZEOF_INT+a.FILE_IDENTIFIER_LENGTH+$),j.length!=a.FILE_IDENTIFIER_LENGTH)throw new Error("FlatBuffers: file identifier must be length "+a.FILE_IDENTIFIER_LENGTH);for(var _e=a.FILE_IDENTIFIER_LENGTH-1;_e>=0;_e--)this.writeInt8(j.charCodeAt(_e))}this.prep(this.minalign,a.SIZEOF_INT+$),this.addOffset(c),$&&this.addInt32(this.bb.capacity()-this.space),this.bb.setPosition(this.space)},a.Builder.prototype.finishSizePrefixed=function(c,d){this.finish(c,d,!0)},a.Builder.prototype.requiredField=function(c,d){var g=this.bb.capacity()-c,$=g-this.bb.readInt32(g);if(this.bb.readInt16($+d)==0)throw new Error("FlatBuffers: field "+d+" must be set")},a.Builder.prototype.startVector=function(c,d,g){this.notNested(),this.vector_num_elems=d,this.prep(a.SIZEOF_INT,c*d),this.prep(g,c*d)},a.Builder.prototype.endVector=function(){return this.writeInt32(this.vector_num_elems),this.offset()},a.Builder.prototype.createString=function(c){if(c instanceof Uint8Array)var d=c;else{d=[];for(var g=0;g<c.length;){var $,j=c.charCodeAt(g++);($=j<55296||j>=56320?j:(j<<10)+c.charCodeAt(g++)+-56613888)<128?d.push($):($<2048?d.push($>>6&31|192):($<65536?d.push($>>12&15|224):d.push($>>18&7|240,$>>12&63|128),d.push($>>6&63|128)),d.push(63&$|128))}}this.addInt8(0),this.startVector(1,d.length,1),this.bb.setPosition(this.space-=d.length),g=0;for(var _e=this.space,et=this.bb.bytes();g<d.length;g++)et[_e++]=d[g];return this.endVector()},a.Builder.prototype.createLong=function(c,d){return a.Long.create(c,d)},a.ByteBuffer=function(c){this.bytes_=c,this.position_=0},a.ByteBuffer.allocate=function(c){return new a.ByteBuffer(new Uint8Array(c))},a.ByteBuffer.prototype.clear=function(){this.position_=0},a.ByteBuffer.prototype.bytes=function(){return this.bytes_},a.ByteBuffer.prototype.position=function(){return this.position_},a.ByteBuffer.prototype.setPosition=function(c){this.position_=c},a.ByteBuffer.prototype.capacity=function(){return this.bytes_.length},a.ByteBuffer.prototype.readInt8=function(c){return this.readUint8(c)<<24>>24},a.ByteBuffer.prototype.readUint8=function(c){return this.bytes_[c]},a.ByteBuffer.prototype.readInt16=function(c){return this.readUint16(c)<<16>>16},a.ByteBuffer.prototype.readUint16=function(c){return this.bytes_[c]|this.bytes_[c+1]<<8},a.ByteBuffer.prototype.readInt32=function(c){return this.bytes_[c]|this.bytes_[c+1]<<8|this.bytes_[c+2]<<16|this.bytes_[c+3]<<24},a.ByteBuffer.prototype.readUint32=function(c){return this.readInt32(c)>>>0},a.ByteBuffer.prototype.readInt64=function(c){return new a.Long(this.readInt32(c),this.readInt32(c+4))},a.ByteBuffer.prototype.readUint64=function(c){return new a.Long(this.readUint32(c),this.readUint32(c+4))},a.ByteBuffer.prototype.readFloat32=function(c){return a.int32[0]=this.readInt32(c),a.float32[0]},a.ByteBuffer.prototype.readFloat64=function(c){return a.int32[a.isLittleEndian?0:1]=this.readInt32(c),a.int32[a.isLittleEndian?1:0]=this.readInt32(c+4),a.float64[0]},a.ByteBuffer.prototype.writeInt8=function(c,d){this.bytes_[c]=d},a.ByteBuffer.prototype.writeUint8=function(c,d){this.bytes_[c]=d},a.ByteBuffer.prototype.writeInt16=function(c,d){this.bytes_[c]=d,this.bytes_[c+1]=d>>8},a.ByteBuffer.prototype.writeUint16=function(c,d){this.bytes_[c]=d,this.bytes_[c+1]=d>>8},a.ByteBuffer.prototype.writeInt32=function(c,d){this.bytes_[c]=d,this.bytes_[c+1]=d>>8,this.bytes_[c+2]=d>>16,this.bytes_[c+3]=d>>24},a.ByteBuffer.prototype.writeUint32=function(c,d){this.bytes_[c]=d,this.bytes_[c+1]=d>>8,this.bytes_[c+2]=d>>16,this.bytes_[c+3]=d>>24},a.ByteBuffer.prototype.writeInt64=function(c,d){this.writeInt32(c,d.low),this.writeInt32(c+4,d.high)},a.ByteBuffer.prototype.writeUint64=function(c,d){this.writeUint32(c,d.low),this.writeUint32(c+4,d.high)},a.ByteBuffer.prototype.writeFloat32=function(c,d){a.float32[0]=d,this.writeInt32(c,a.int32[0])},a.ByteBuffer.prototype.writeFloat64=function(c,d){a.float64[0]=d,this.writeInt32(c,a.int32[a.isLittleEndian?0:1]),this.writeInt32(c+4,a.int32[a.isLittleEndian?1:0])},a.ByteBuffer.prototype.getBufferIdentifier=function(){if(this.bytes_.length<this.position_+a.SIZEOF_INT+a.FILE_IDENTIFIER_LENGTH)throw new Error("FlatBuffers: ByteBuffer is too short to contain an identifier.");for(var c="",d=0;d<a.FILE_IDENTIFIER_LENGTH;d++)c+=String.fromCharCode(this.readInt8(this.position_+a.SIZEOF_INT+d));return c},a.ByteBuffer.prototype.__offset=function(c,d){var g=c-this.readInt32(c);return d<this.readInt16(g)?this.readInt16(g+d):0},a.ByteBuffer.prototype.__union=function(c,d){return c.bb_pos=d+this.readInt32(d),c.bb=this,c},a.ByteBuffer.prototype.__string=function(c,d){c+=this.readInt32(c);var g=this.readInt32(c),$="",j=0;if(c+=a.SIZEOF_INT,d===a.Encoding.UTF8_BYTES)return this.bytes_.subarray(c,c+g);for(;j<g;){var _e,et=this.readUint8(c+j++);if(et<192)_e=et;else{var _=this.readUint8(c+j++);if(et<224)_e=(31&et)<<6|63&_;else{var b=this.readUint8(c+j++);_e=et<240?(15&et)<<12|(63&_)<<6|63&b:(7&et)<<18|(63&_)<<12|(63&b)<<6|63&this.readUint8(c+j++)}}_e<65536?$+=String.fromCharCode(_e):(_e-=65536,$+=String.fromCharCode(55296+(_e>>10),56320+(1023&_e)))}return $},a.ByteBuffer.prototype.__indirect=function(c){return c+this.readInt32(c)},a.ByteBuffer.prototype.__vector=function(c){return c+this.readInt32(c)+a.SIZEOF_INT},a.ByteBuffer.prototype.__vector_len=function(c){return this.readInt32(c+this.readInt32(c))},a.ByteBuffer.prototype.__has_identifier=function(c){if(c.length!=a.FILE_IDENTIFIER_LENGTH)throw new Error("FlatBuffers: file identifier must be length "+a.FILE_IDENTIFIER_LENGTH);for(var d=0;d<a.FILE_IDENTIFIER_LENGTH;d++)if(c.charCodeAt(d)!=this.readInt8(this.position_+a.SIZEOF_INT+d))return!1;return!0},a.ByteBuffer.prototype.createLong=function(c,d){return a.Long.create(c,d)}}},__webpack_module_cache__={};function __webpack_require__(i){var s=__webpack_module_cache__[i];if(s!==void 0)return s.exports;var o=__webpack_module_cache__[i]={exports:{}};return __webpack_modules__[i].call(o.exports,o,o.exports,__webpack_require__),o.exports}__webpack_require__.n=i=>{var s=i&&i.__esModule?()=>i.default:()=>i;return __webpack_require__.d(s,{a:s}),s},__webpack_require__.d=(i,s)=>{for(var o in s)__webpack_require__.o(s,o)&&!__webpack_require__.o(i,o)&&Object.defineProperty(i,o,{enumerable:!0,get:s[o]})},__webpack_require__.g=function(){if(typeof globalThis=="object")return globalThis;try{return this||new Function("return this")()}catch{if(typeof window=="object")return window}}(),__webpack_require__.o=(i,s)=>Object.prototype.hasOwnProperty.call(i,s),__webpack_require__.r=i=>{typeof Symbol<"u"&&Symbol.toStringTag&&Object.defineProperty(i,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(i,"__esModule",{value:!0})};var __webpack_exports__=__webpack_require__(6018);return __webpack_exports__})())})(ortWeb_min$1);var ortWeb_minExports=ortWeb_min$1.exports;const ortWeb_min=getDefaultExportFromCjs(ortWeb_minExports),ONNX_WEB=_mergeNamespaces({__proto__:null,default:ortWeb_min},[ortWeb_minExports]);let ONNX;const executionProviders=["wasm"];var Ks;typeof process<"u"&&((Ks=process==null?void 0:process.release)==null?void 0:Ks.name)==="node"?(ONNX=sharp??__viteBrowserExternal,executionProviders.unshift("cpu")):(ONNX=ortWeb_min??ONNX_WEB,typeof navigator<"u"&&/iP(hone|od|ad).+16_4.+AppleWebKit/.test(navigator.userAgent)&&(ONNX.env.wasm.simd=!1));const{env:onnx_env}=ONNX,VERSION="2.17.2",WEB_CACHE_AVAILABLE=typeof self<"u"&&"caches"in self,FS_AVAILABLE=!isEmpty(sharp),PATH_AVAILABLE=!isEmpty(sharp),RUNNING_LOCALLY=FS_AVAILABLE&&PATH_AVAILABLE,__dirname=RUNNING_LOCALLY?sharp.dirname(sharp.dirname(sharp.fileURLToPath(import.meta.url))):"./",DEFAULT_CACHE_DIR=RUNNING_LOCALLY?sharp.join(__dirname,"/.cache/"):null,DEFAULT_LOCAL_MODEL_PATH="/models/",localModelPath=RUNNING_LOCALLY?sharp.join(__dirname,DEFAULT_LOCAL_MODEL_PATH):DEFAULT_LOCAL_MODEL_PATH;onnx_env!=null&&onnx_env.wasm&&(onnx_env.wasm.wasmPaths=RUNNING_LOCALLY?sharp.join(__dirname,"/dist/"):`https://cdn.jsdelivr.net/npm/@xenova/transformers@${VERSION}/dist/`);const env$2={backends:{onnx:onnx_env,tfjs:{}},__dirname,version:VERSION,allowRemoteModels:!0,remoteHost:"https://huggingface.co/",remotePathTemplate:"{model}/resolve/{revision}/",allowLocalModels:!0,localModelPath,useFS:FS_AVAILABLE,useBrowserCache:WEB_CACHE_AVAILABLE,useFSCache:FS_AVAILABLE,cacheDir:DEFAULT_CACHE_DIR,useCustomCache:!1,customCache:null};function isEmpty(i){return Object.keys(i).length===0}var define_process_env_default={};class FileResponse{constructor(s){Ht(this,"_CONTENT_TYPE_MAP",{txt:"text/plain",html:"text/html",css:"text/css",js:"text/javascript",json:"application/json",png:"image/png",jpg:"image/jpeg",jpeg:"image/jpeg",gif:"image/gif"});if(this.filePath=s,this.headers=new Headers,this.exists=sharp.existsSync(s),this.exists){this.status=200,this.statusText="OK";let o=sharp.statSync(s);this.headers.set("content-length",o.size.toString()),this.updateContentType();let a=this;this.body=new ReadableStream({start(c){a.arrayBuffer().then(d=>{c.enqueue(new Uint8Array(d)),c.close()})}})}else this.status=404,this.statusText="Not Found",this.body=null}updateContentType(){const s=this.filePath.toString().split(".").pop().toLowerCase();this.headers.set("content-type",this._CONTENT_TYPE_MAP[s]??"application/octet-stream")}clone(){let s=new FileResponse(this.filePath);return s.exists=this.exists,s.status=this.status,s.statusText=this.statusText,s.headers=new Headers(this.headers),s}async arrayBuffer(){return(await sharp.promises.readFile(this.filePath)).buffer}async blob(){const s=await sharp.promises.readFile(this.filePath);return new Blob([s],{type:this.headers.get("content-type")})}async text(){return await sharp.promises.readFile(this.filePath,"utf8")}async json(){return JSON.parse(await this.text())}}function isValidUrl(i,s=null,o=null){let a;try{a=new URL(i)}catch{return!1}return!(s&&!s.includes(a.protocol)||o&&!o.includes(a.hostname))}async function getFile(i){var s;if(env$2.useFS&&!isValidUrl(i,["http:","https:","blob:"]))return new FileResponse(i);if(typeof process<"u"&&((s=process==null?void 0:process.release)==null?void 0:s.name)==="node"){const o=!!(define_process_env_default!=null&&define_process_env_default.TESTING_REMOTELY),a=env$2.version,c=new Headers;if(c.set("User-Agent",`transformers.js/${a}; is_ci/${o};`),isValidUrl(i,["http:","https:"],["huggingface.co","hf.co"])){const g=(define_process_env_default==null?void 0:define_process_env_default.HF_TOKEN)??(define_process_env_default==null?void 0:define_process_env_default.HF_ACCESS_TOKEN);g&&c.set("Authorization",`Bearer ${g}`)}return fetch(i,{headers:c})}else return fetch(i)}const ERROR_MAPPING={400:"Bad request error occurred while trying to load file",401:"Unauthorized access to file",403:"Forbidden access to file",404:"Could not locate file",408:"Request timeout error occurred while trying to load file",500:"Internal server error error occurred while trying to load file",502:"Bad gateway error occurred while trying to load file",503:"Service unavailable error occurred while trying to load file",504:"Gateway timeout error occurred while trying to load file"};function handleError(i,s,o){if(!o)return null;const a=ERROR_MAPPING[i]??`Error (${i}) occurred while trying to load file`;throw Error(`${a}: "${s}".`)}class FileCache{constructor(s){this.path=s}async match(s){let o=sharp.join(this.path,s),a=new FileResponse(o);if(a.exists)return a}async put(s,o){const a=Buffer.from(await o.arrayBuffer());let c=sharp.join(this.path,s);try{await sharp.promises.mkdir(sharp.dirname(c),{recursive:!0}),await sharp.promises.writeFile(c,a)}catch(d){console.warn("An error occurred while writing the file to cache:",d)}}}async function tryCache(i,...s){for(let o of s)try{let a=await i.match(o);if(a)return a}catch{continue}}async function getModelFile(i,s,o=!0,a={}){dispatchCallback(a.progress_callback,{status:"initiate",name:i,file:s});let c;if(!c&&env$2.useBrowserCache){if(typeof caches>"u")throw Error("Browser cache is not available in this environment.");try{c=await caches.open("transformers-cache")}catch(ot){console.warn("An error occurred while opening the browser cache:",ot)}}if(!c&&env$2.useFSCache&&(c=new FileCache(a.cache_dir??env$2.cacheDir)),!c&&env$2.useCustomCache)throw Error("`env.useCustomCache=true`, but `env.customCache` is not defined.");const d=a.revision??"main";let g=pathJoin(i,s),$=pathJoin(env$2.localModelPath,g),j=pathJoin(env$2.remoteHost,env$2.remotePathTemplate.replaceAll("{model}",i).replaceAll("{revision}",encodeURIComponent(d)),s),_e=d==="main"?g:pathJoin(i,d,s),et,_=c instanceof FileCache?_e:j,b=!1,tt;c&&(tt=await tryCache(c,$,_));const nt=tt!==void 0;if(tt===void 0){if(isValidUrl(g,["http:","https:"])){if(a.local_files_only)throw new Error(`\`local_files_only=true\`, but attempted to load a remote file from: ${g}.`)}else try{tt=await getFile($),et=$}catch(it){console.warn(`Unable to load from local path "${$}": "${it}"`)}if(tt===void 0||tt.status===404){if(a.local_files_only||!env$2.allowRemoteModels){if(o)throw Error(`\`local_files_only=true\` or \`env.allowRemoteModels=false\` and file was not found locally at "${$}".`);return null}if(tt=await getFile(j),tt.status!==200)return handleError(tt.status,j,o);et=_}b=c&&typeof Response<"u"&&tt instanceof Response&&tt.status===200}dispatchCallback(a.progress_callback,{status:"download",name:i,file:s});const rt={status:"progress",name:i,file:s};let st;return a.progress_callback?nt&&typeof navigator<"u"&&/firefox/i.test(navigator.userAgent)?(st=new Uint8Array(await tt.arrayBuffer()),dispatchCallback(a.progress_callback,{...rt,progress:100,loaded:st.length,total:st.length})):st=await readResponse(tt,ot=>{dispatchCallback(a.progress_callback,{...rt,...ot})}):st=new Uint8Array(await tt.arrayBuffer()),b&&et&&await c.match(et)===void 0&&await c.put(et,new Response(st,{headers:tt.headers})).catch(ot=>{console.warn(`Unable to add response to browser cache: ${ot}.`)}),dispatchCallback(a.progress_callback,{status:"done",name:i,file:s}),st}async function getModelJSON(i,s,o=!0,a={}){let c=await getModelFile(i,s,o,a);if(c===null)return{};let g=new TextDecoder("utf-8").decode(c);return JSON.parse(g)}async function readResponse(i,s){const o=i.headers.get("Content-Length");o===null&&console.warn("Unable to determine content-length from response headers. Will expand buffer when needed.");let a=parseInt(o??"0"),c=new Uint8Array(a),d=0;const g=i.body.getReader();async function $(){const{done:j,value:_e}=await g.read();if(j)return;let et=d+_e.length;if(et>a){a=et;let b=new Uint8Array(a);b.set(c),c=b}c.set(_e,d),d=et;const _=d/a*100;return s({progress:_,loaded:d,total:a}),$()}return await $(),c}function pathJoin(...i){return i=i.map((s,o)=>(o&&(s=s.replace(new RegExp("^/"),"")),o!==i.length-1&&(s=s.replace(new RegExp("/$"),"")),s)),i.join("/")}function interpolate_data(i,[s,o,a],[c,d],g="bilinear",$=!1){const j=d/a,_e=c/o,et=new i.constructor(c*d*s),_=o*a,b=c*d;for(let tt=0;tt<c;++tt)for(let nt=0;nt<d;++nt){const rt=tt*d+nt,st=(nt+.5)/j-.5,ot=(tt+.5)/_e-.5;let it=Math.floor(st),at=Math.floor(ot);const lt=Math.min(it+1,a-1),ut=Math.min(at+1,o-1);it=Math.max(it,0),at=Math.max(at,0);const ct=st-it,dt=ot-at,pt=(1-ct)*(1-dt),ht=ct*(1-dt),ft=(1-ct)*dt,yt=ct*dt,wt=at*a,_t=ut*a,bt=wt+it,xt=wt+lt,mt=_t+it,vt=_t+lt;for(let Et=0;Et<s;++Et){const Ct=Et*_;et[Et*b+rt]=pt*i[Ct+bt]+ht*i[Ct+xt]+ft*i[Ct+mt]+yt*i[Ct+vt]}}return et}function permute_data(i,s,o){const a=new Array(o.length),c=new Array(o.length);for(let $=o.length-1,j=1;$>=0;--$)c[$]=j,a[$]=s[o[$]],j*=a[$];const d=o.map(($,j)=>c[o.indexOf(j)]),g=new i.constructor(i.length);for(let $=0;$<i.length;++$){let j=0;for(let _e=s.length-1,et=$;_e>=0;--_e)j+=et%s[_e]*d[_e],et=Math.floor(et/s[_e]);g[j]=i[$]}return[g,a]}function softmax$3(i){const s=max$4(i)[0],o=i.map(d=>Math.exp(d-s)),a=o.reduce((d,g)=>d+g,0);return o.map(d=>d/a)}function log_softmax(i){return softmax$3(i).map(a=>Math.log(a))}function getTopItems(i,s=0){return i=Array.from(i).map((o,a)=>[a,o]).sort((o,a)=>a[1]-o[1]),s!==null&&s>0&&(i=i.slice(0,s)),i}function min$4(i){if(i.length===0)throw Error("Array must not be empty");let s=i[0],o=0;for(let a=1;a<i.length;++a)i[a]<s&&(s=i[a],o=a);return[s,o]}function max$4(i){if(i.length===0)throw Error("Array must not be empty");let s=i[0],o=0;for(let a=1;a<i.length;++a)i[a]>s&&(s=i[a],o=a);return[Number(s),o]}function isPowerOfTwo(i){return i>0&&(i&i-1)===0}class P2FFT{constructor(s){if(this.size=s|0,this.size<=1||!isPowerOfTwo(this.size))throw new Error("FFT size must be a power of two larger than 1");this._csize=s<<1,this.table=new Float64Array(this.size*2);for(let a=0;a<this.table.length;a+=2){const c=Math.PI*a/this.size;this.table[a]=Math.cos(c),this.table[a+1]=-Math.sin(c)}let o=0;for(let a=1;this.size>a;a<<=1)++o;this._width=o%2===0?o-1:o,this._bitrev=new Int32Array(1<<this._width);for(let a=0;a<this._bitrev.length;++a){this._bitrev[a]=0;for(let c=0;c<this._width;c+=2){const d=this._width-c-2;this._bitrev[a]|=(a>>>c&3)<<d}}}createComplexArray(){return new Float64Array(this._csize)}fromComplexArray(s,o){const a=o||new Array(s.length>>>1);for(let c=0;c<s.length;c+=2)a[c>>>1]=s[c];return a}toComplexArray(s,o){const a=o||this.createComplexArray();for(let c=0;c<a.length;c+=2)a[c]=s[c>>>1],a[c+1]=0;return a}transform(s,o){if(s===o)throw new Error("Input and output buffers must be different");this._transform4(s,o,1)}realTransform(s,o){if(s===o)throw new Error("Input and output buffers must be different");this._realTransform4(s,o,1)}inverseTransform(s,o){if(s===o)throw new Error("Input and output buffers must be different");this._transform4(s,o,-1);for(let a=0;a<s.length;++a)s[a]/=this.size}_transform4(s,o,a){const c=this._csize;let g=1<<this._width,$=c/g<<1,j,_e;const et=this._bitrev;if($===4)for(j=0,_e=0;j<c;j+=$,++_e){const b=et[_e];this._singleTransform2(o,s,j,b,g)}else for(j=0,_e=0;j<c;j+=$,++_e){const b=et[_e];this._singleTransform4(o,s,j,b,g,a)}const _=this.table;for(g>>=2;g>=2;g>>=2){$=c/g<<1;const b=$>>>2;for(j=0;j<c;j+=$){const tt=j+b-1;for(let nt=j,rt=0;nt<tt;nt+=2,rt+=g){const st=nt,ot=st+b,it=ot+b,at=it+b,lt=s[st],ut=s[st+1],ct=s[ot],dt=s[ot+1],pt=s[it],ht=s[it+1],ft=s[at],yt=s[at+1],wt=_[rt],_t=a*_[rt+1],bt=ct*wt-dt*_t,xt=ct*_t+dt*wt,mt=_[2*rt],vt=a*_[2*rt+1],Et=pt*mt-ht*vt,Ct=pt*vt+ht*mt,kt=_[3*rt],Nt=a*_[3*rt+1],Mt=ft*kt-yt*Nt,Vt=ft*Nt+yt*kt,Gt=lt+Et,Ft=ut+Ct,jt=lt-Et,qt=ut-Ct,Yt=bt+Mt,Qt=xt+Vt,Zt=a*(bt-Mt),en=a*(xt-Vt);s[st]=Gt+Yt,s[st+1]=Ft+Qt,s[ot]=jt+en,s[ot+1]=qt-Zt,s[it]=Gt-Yt,s[it+1]=Ft-Qt,s[at]=jt-en,s[at+1]=qt+Zt}}}}_singleTransform2(s,o,a,c,d){const g=s[c],$=s[c+1],j=s[c+d],_e=s[c+d+1];o[a]=g+j,o[a+1]=$+_e,o[a+2]=g-j,o[a+3]=$-_e}_singleTransform4(s,o,a,c,d,g){const $=d*2,j=d*3,_e=s[c],et=s[c+1],_=s[c+d],b=s[c+d+1],tt=s[c+$],nt=s[c+$+1],rt=s[c+j],st=s[c+j+1],ot=_e+tt,it=et+nt,at=_e-tt,lt=et-nt,ut=_+rt,ct=b+st,dt=g*(_-rt),pt=g*(b-st);o[a]=ot+ut,o[a+1]=it+ct,o[a+2]=at+pt,o[a+3]=lt-dt,o[a+4]=ot-ut,o[a+5]=it-ct,o[a+6]=at-pt,o[a+7]=lt+dt}_realTransform4(s,o,a){const c=this._csize;let g=1<<this._width,$=c/g<<1,j,_e;const et=this._bitrev;if($===4)for(j=0,_e=0;j<c;j+=$,++_e){const tt=et[_e];this._singleRealTransform2(o,s,j,tt>>>1,g>>>1)}else for(j=0,_e=0;j<c;j+=$,++_e){const tt=et[_e];this._singleRealTransform4(o,s,j,tt>>>1,g>>>1,a)}const _=this.table;for(g>>=2;g>=2;g>>=2){$=c/g<<1;const tt=$>>>1,nt=tt>>>1,rt=nt>>>1;for(j=0;j<c;j+=$)for(let st=0,ot=0;st<=rt;st+=2,ot+=g){const it=j+st,at=it+nt,lt=at+nt,ut=lt+nt,ct=s[it],dt=s[it+1],pt=s[at],ht=s[at+1],ft=s[lt],yt=s[lt+1],wt=s[ut],_t=s[ut+1],bt=ct,xt=dt,mt=_[ot],vt=a*_[ot+1],Et=pt*mt-ht*vt,Ct=pt*vt+ht*mt,kt=_[2*ot],Nt=a*_[2*ot+1],Mt=ft*kt-yt*Nt,Vt=ft*Nt+yt*kt,Gt=_[3*ot],Ft=a*_[3*ot+1],jt=wt*Gt-_t*Ft,qt=wt*Ft+_t*Gt,Yt=bt+Mt,Qt=xt+Vt,Zt=bt-Mt,en=xt-Vt,on=Et+jt,rn=Ct+qt,sn=a*(Et-jt),pn=a*(Ct-qt);if(s[it]=Yt+on,s[it+1]=Qt+rn,s[at]=Zt+pn,s[at+1]=en-sn,st===0){s[lt]=Yt-on,s[lt+1]=Qt-rn;continue}if(st===rt)continue;const dn=j+nt-st,mn=j+tt-st;s[dn]=Zt-a*pn,s[dn+1]=-en-a*sn,s[mn]=Yt-a*on,s[mn+1]=-Qt+a*rn}}const b=c>>>1;for(let tt=2;tt<b;tt+=2)s[c-tt]=s[tt],s[c-tt+1]=-s[tt+1]}_singleRealTransform2(s,o,a,c,d){const g=s[c],$=s[c+d];o[a]=g+$,o[a+1]=0,o[a+2]=g-$,o[a+3]=0}_singleRealTransform4(s,o,a,c,d,g){const $=d*2,j=d*3,_e=s[c],et=s[c+d],_=s[c+$],b=s[c+j],tt=_e+_,nt=_e-_,rt=et+b,st=g*(et-b);o[a]=tt+rt,o[a+1]=0,o[a+2]=nt,o[a+3]=-st,o[a+4]=tt-rt,o[a+5]=0,o[a+6]=nt,o[a+7]=st}}class NP2FFT{constructor(s){const o=2*(s-1),a=2*(2*s-1),c=2**Math.ceil(Math.log2(a));this.bufferSize=c,this._a=o;const d=new Float64Array(a),g=new Float64Array(c);this._chirpBuffer=new Float64Array(c),this._buffer1=new Float64Array(c),this._buffer2=new Float64Array(c),this._outBuffer1=new Float64Array(c),this._outBuffer2=new Float64Array(c);const $=-2*Math.PI/s,j=Math.cos($),_e=Math.sin($);for(let et=0;et<a>>1;++et){const _=(et+1-s)**2/2,b=Math.sqrt(j**2+_e**2)**_,tt=_*Math.atan2(_e,j),nt=2*et;d[nt]=b*Math.cos(tt),d[nt+1]=b*Math.sin(tt),g[nt]=d[nt],g[nt+1]=-d[nt+1]}this._slicedChirpBuffer=d.subarray(o,a),this._f=new P2FFT(c>>1),this._f.transform(this._chirpBuffer,g)}_transform(s,o,a){const c=this._buffer1,d=this._buffer2,g=this._outBuffer1,$=this._outBuffer2,j=this._chirpBuffer,_e=this._slicedChirpBuffer,et=this._a;if(a)for(let _=0;_<_e.length;_+=2){const b=_+1,tt=_>>1,nt=o[tt];c[_]=nt*_e[_],c[b]=nt*_e[b]}else for(let _=0;_<_e.length;_+=2){const b=_+1;c[_]=o[_]*_e[_]-o[b]*_e[b],c[b]=o[_]*_e[b]+o[b]*_e[_]}this._f.transform(g,c);for(let _=0;_<j.length;_+=2){const b=_+1;d[_]=g[_]*j[_]-g[b]*j[b],d[b]=g[_]*j[b]+g[b]*j[_]}this._f.inverseTransform($,d);for(let _=0;_<$.length;_+=2){const b=$[_+et],tt=$[_+et+1],nt=_e[_],rt=_e[_+1];s[_]=b*nt-tt*rt,s[_+1]=b*rt+tt*nt}}transform(s,o){this._transform(s,o,!1)}realTransform(s,o){this._transform(s,o,!0)}}let FFT$1=class{constructor(s){this.fft_length=s,this.isPowerOfTwo=isPowerOfTwo(s),this.isPowerOfTwo?(this.fft=new P2FFT(s),this.outputBufferSize=2*s):(this.fft=new NP2FFT(s),this.outputBufferSize=this.fft.bufferSize)}realTransform(s,o){this.fft.realTransform(s,o)}transform(s,o){this.fft.transform(s,o)}};function medianFilter(i,s){if(s%2===0||s<=0)throw new Error("Window size must be a positive odd number");const o=new i.constructor(i.length),a=new i.constructor(s),c=Math.floor(s/2);for(let d=0;d<i.length;++d){let g=0;for(let $=-c;$<=c;++$){let j=d+$;j<0?j=Math.abs(j):j>=i.length&&(j=2*(i.length-1)-j),a[g++]=i[j]}a.sort(),o[d]=a[c]}return o}function round$4(i,s){const o=Math.pow(10,s);return Math.round(i*o)/o}function bankers_round(i){const s=Math.round(i);return Math.abs(i)%1===.5?s%2===0?s:s-1:s}const DataTypeMap=Object.freeze({float32:Float32Array,float64:Float64Array,string:Array,int8:Int8Array,uint8:Uint8Array,int16:Int16Array,uint16:Uint16Array,int32:Int32Array,uint32:Uint32Array,int64:BigInt64Array,uint64:BigUint64Array,bool:Uint8Array}),ONNXTensor$1=ONNX.Tensor;let Tensor$1=class tr{constructor(...s){Ht(this,"dims");Ht(this,"type");Ht(this,"data");Ht(this,"size");return s[0]instanceof ONNXTensor$1?Object.assign(this,s[0]):Object.assign(this,new ONNXTensor$1(s[0],s[1],s[2])),new Proxy(this,{get:(o,a)=>{if(typeof a=="string"){let c=Number(a);if(Number.isInteger(c))return o._getitem(c)}return o[a]},set:(o,a,c)=>o[a]=c})}*[Symbol.iterator](){const[s,...o]=this.dims;if(o.length>0){const a=o.reduce((c,d)=>c*d);for(let c=0;c<s;++c)yield this._subarray(c,a,o)}else yield*this.data}_getitem(s){const[o,...a]=this.dims;if(s=safeIndex(s,o),a.length>0){const c=a.reduce((d,g)=>d*g);return this._subarray(s,c,a)}else return new tr(this.type,[this.data[s]],a)}indexOf(s){for(let o=0;o<this.data.length;++o)if(this.data[o]==s)return o;return-1}_subarray(s,o,a){const c=s*o,d=(s+1)*o,g="subarray"in this.data?this.data.subarray(c,d):this.data.slice(c,d);return new tr(this.type,g,a)}item(){if(this.data.length!==1)throw new Error(`a Tensor with ${this.data.length} elements cannot be converted to Scalar`);return this.data[0]}tolist(){return reshape$3(this.data,this.dims)}sigmoid(){return this.clone().sigmoid_()}sigmoid_(){for(let s=0;s<this.data.length;++s)this.data[s]=1/(1+Math.exp(-this.data[s]));return this}mul(s){return this.clone().mul_(s)}mul_(s){for(let o=0;o<this.data.length;++o)this.data[o]*=s;return this}add(s){return this.clone().add_(s)}add_(s){for(let o=0;o<this.data.length;++o)this.data[o]+=s;return this}clone(){return new tr(this.type,this.data.slice(),this.dims.slice())}slice(...s){let o=[],a=[];for(let j=0;j<this.dims.length;++j){let _e=s[j];if(_e==null)a.push([0,this.dims[j]]),o.push(this.dims[j]);else if(typeof _e=="number")_e=safeIndex(_e,this.dims[j],j),a.push([_e,_e+1]);else if(Array.isArray(_e)&&_e.length===2){if(_e[0]>_e[1])throw new Error(`Invalid slice: ${_e}`);let et=[Math.max(_e[0],0),Math.min(_e[1],this.dims[j])];a.push(et),o.push(et[1]-et[0])}else throw new Error(`Invalid slice: ${_e}`)}let c=a.map(([j,_e])=>_e-j),d=c.reduce((j,_e)=>j*_e),g=new this.data.constructor(d);const $=this.stride();for(let j=0;j<d;++j){let _e=0;for(let et=c.length-1,_=j;et>=0;--et){const b=c[et];_e+=(_%b+a[et][0])*$[et],_=Math.floor(_/b)}g[j]=this.data[_e]}return new tr(this.type,g,o)}permute(...s){return permute(this,s)}transpose(...s){return this.permute(...s)}sum(s=null,o=!1){return this.norm(1,s,o)}norm(s="fro",o=null,a=!1){if(s==="fro")s=2;else if(typeof s=="string")throw Error(`Unsupported norm: ${s}`);if(o===null){let g=this.data.reduce(($,j)=>$+j**s,0)**(1/s);return new tr(this.type,[g],[])}o=safeIndex(o,this.dims.length);const c=this.dims.slice();c[o]=1;const d=new this.data.constructor(this.data.length/this.dims[o]);for(let g=0;g<this.data.length;++g){let $=0;for(let j=this.dims.length-1,_e=g,et=1;j>=0;--j){const _=this.dims[j];if(j!==o){const b=_e%_;$+=b*et,et*=c[j]}_e=Math.floor(_e/_)}d[$]+=this.data[g]**s}if(s!==1)for(let g=0;g<d.length;++g)d[g]=d[g]**(1/s);return a||c.splice(o,1),new tr(this.type,d,c)}normalize_(s=2,o=1){o=safeIndex(o,this.dims.length);const a=this.norm(s,o,!0);for(let c=0;c<this.data.length;++c){let d=0;for(let g=this.dims.length-1,$=c,j=1;g>=0;--g){const _e=this.dims[g];if(g!==o){const et=$%_e;d+=et*j,j*=this.dims[g]}$=Math.floor($/_e)}this.data[c]/=a.data[d]}return this}normalize(s=2,o=1){return this.clone().normalize_(s,o)}stride(){return dimsToStride(this.dims)}squeeze(s=null){return new tr(this.type,this.data,calc_squeeze_dims(this.dims,s))}squeeze_(s=null){return this.dims=calc_squeeze_dims(this.dims,s),this}unsqueeze(s=null){return new tr(this.type,this.data,calc_unsqueeze_dims(this.dims,s))}unsqueeze_(s=null){return this.dims=calc_unsqueeze_dims(this.dims,s),this}flatten_(s=0,o=-1){o=(o+this.dims.length)%this.dims.length;let a=this.dims.slice(0,s),c=this.dims.slice(s,o+1),d=this.dims.slice(o+1);return this.dims=[...a,c.reduce((g,$)=>g*$,1),...d],this}flatten(s=0,o=-1){return this.clone().flatten_(s,o)}view(...s){let o=-1;for(let a=0;a<s.length;++a)if(s[a]===-1){if(o!==-1)throw new Error("Only one dimension can be inferred");o=a}if(o!==-1){const a=s.reduce((c,d,g)=>g!==o?c*d:c,1);s[o]=this.data.length/a}return new tr(this.type,this.data,s)}neg_(){for(let s=0;s<this.data.length;++s)this.data[s]=-this.data[s];return this}neg(){return this.clone().neg_()}clamp_(s,o){for(let a=0;a<this.data.length;++a)this.data[a]=Math.min(Math.max(this.data[a],s),o);return this}clamp(s,o){return this.clone().clamp_(s,o)}round_(){for(let s=0;s<this.data.length;++s)this.data[s]=Math.round(this.data[s]);return this}round(){return this.clone().round_()}to(s){if(this.type===s)return this;if(!DataTypeMap.hasOwnProperty(s))throw new Error(`Unsupported type: ${s}`);return new tr(s,DataTypeMap[s].from(this.data),this.dims)}};function reshape$3(i,s){const o=i.length,a=s.reduce((d,g)=>d*g);if(o!==a)throw Error(`cannot reshape array of size ${o} into shape (${s})`);let c=i;for(let d=s.length-1;d>=0;d--)c=c.reduce((g,$)=>{let j=g[g.length-1];return j.length<s[d]?j.push($):g.push([$]),g},[[]]);return c[0]}function permute(i,s){const[o,a]=permute_data(i.data,i.dims,s);return new Tensor$1(i.type,o,a)}function interpolate(i,[s,o],a="bilinear",c=!1){const d=i.dims.at(-3)??1,g=i.dims.at(-2),$=i.dims.at(-1);let j=interpolate_data(i.data,[d,g,$],[s,o],a,c);return new Tensor$1(i.type,j,[d,s,o])}function mean_pooling(i,s){let o=[i.dims[0],i.dims[2]],a=new i.data.constructor(o[0]*o[1]),[c,d,g]=i.dims,$=0;for(let j=0;j<c;++j){let _e=j*g*d;for(let et=0;et<g;++et){let _=0,b=0,tt=j*d,nt=_e+et;for(let st=0;st<d;++st){let ot=Number(s.data[tt+st]);b+=ot,_+=i.data[nt+st*g]*ot}let rt=_/b;a[$++]=rt}}return new Tensor$1(i.type,a,o)}function calc_squeeze_dims(i,s){return i=i.slice(),s===null?i=i.filter(o=>o!==1):typeof s=="number"?i[s]===1&&i.splice(s,1):Array.isArray(s)&&(i=i.filter((o,a)=>o!==1||!s.includes(a))),i}function calc_unsqueeze_dims(i,s){return s=safeIndex(s,i.length+1),i=i.slice(),i.splice(s,0,1),i}function safeIndex(i,s,o=null){if(i<-s||i>=s)throw new Error(`IndexError: index ${i} is out of bounds for dimension${o===null?"":" "+o} with size ${s}`);return i<0&&(i=(i%s+s)%s),i}function cat(i,s=0){s=safeIndex(s,i[0].dims.length);const o=i[0].dims.slice();o[s]=i.reduce((g,$)=>g+$.dims[s],0);const a=o.reduce((g,$)=>g*$,1),c=new i[0].data.constructor(a),d=i[0].type;if(s===0){let g=0;for(let $ of i)c.set($.data,g),g+=$.data.length}else{let g=0;for(let $=0;$<i.length;++$){let j=i[$];for(let _e=0;_e<j.data.length;++_e){let et=0;for(let _=j.dims.length-1,b=_e,tt=1;_>=0;--_){const nt=j.dims[_];let rt=b%nt;_===s&&(rt+=g),et+=rt*tt,tt*=o[_],b=Math.floor(b/nt)}c[et]=j.data[_e]}g+=j.dims[s]}}return new Tensor$1(d,c,o)}function stack$1(i,s=0){return cat(i.map(o=>o.unsqueeze(s)),s)}function std_mean(i,s=null,o=1,a=!1){if(s===null){const _e=i.data.reduce((tt,nt)=>tt+nt,0)/i.data.length,et=Math.sqrt(i.data.reduce((tt,nt)=>tt+(nt-_e)**2,0)/(i.data.length-o)),_=new Tensor$1(i.type,[_e],[]);return[new Tensor$1(i.type,[et],[]),_]}s=safeIndex(s,i.dims.length);const c=mean$2(i,s,a),d=i.dims.slice();d[s]=1;const g=new i.data.constructor(i.data.length/i.dims[s]);for(let j=0;j<i.data.length;++j){let _e=0;for(let et=i.dims.length-1,_=j,b=1;et>=0;--et){const tt=i.dims[et];if(et!==s){const nt=_%tt;_e+=nt*b,b*=d[et]}_=Math.floor(_/tt)}g[_e]+=(i.data[j]-c.data[_e])**2}for(let j=0;j<g.length;++j)g[j]=Math.sqrt(g[j]/(i.dims[s]-o));return a||d.splice(s,1),[new Tensor$1(i.type,g,d),c]}function mean$2(i,s=null,o=!1){if(s===null){let d=i.data.reduce((g,$)=>g+$,0);return new Tensor$1(i.type,[d/i.data.length],[])}s=safeIndex(s,i.dims.length);const a=i.dims.slice();a[s]=1;const c=new i.data.constructor(i.data.length/i.dims[s]);for(let d=0;d<i.data.length;++d){let g=0;for(let $=i.dims.length-1,j=d,_e=1;$>=0;--$){const et=i.dims[$];if($!==s){const _=j%et;g+=_*_e,_e*=a[$]}j=Math.floor(j/et)}c[g]+=i.data[d]}if(i.dims[s]!==1)for(let d=0;d<c.length;++d)c[d]=c[d]/i.dims[s];return o||a.splice(s,1),new Tensor$1(i.type,c,a)}function dynamicTimeWarping(i){const[s,o]=i.dims,a=[s+1,o+1],c=new Tensor$1("float32",new Float32Array(a[0]*a[1]).fill(1/0),a),d=new Tensor$1("float32",new Float32Array(a[0]*a[1]).fill(-1),a);c[0].data[0]=0;for(let et=1;et<o+1;++et)for(let _=1;_<s+1;++_){const b=c[_-1][et-1].item(),tt=c[_-1][et].item(),nt=c[_][et-1].item();let rt,st;b<tt&&b<nt?(rt=b,st=0):tt<b&&tt<nt?(rt=tt,st=1):(rt=nt,st=2),c[_].data[et]=i[_-1][et-1].item()+rt,d[_].data[et]=st}let g=s,$=o;d.data.fill(2,0,a[1]);for(let et=0;et<a[0];++et)d[et].data[0]=1;let j=[],_e=[];for(;g>0||$>0;)switch(j.push(g-1),_e.push($-1),d[g][$].item()){case 0:--g,--$;break;case 1:--g;break;case 2:--$;break;default:throw new Error(`Internal error in dynamic time warping. Unexpected trace[${g}, ${$}]. Please file a bug report.`)}return j.reverse(),_e.reverse(),[j,_e]}function dimsToStride(i){const s=new Array(i.length);for(let o=i.length-1,a=1;o>=0;--o)s[o]=a,a*=i[o];return s}function ones$2(i){const s=i.reduce((o,a)=>o*a,1);return new Tensor$1("int64",new BigInt64Array(s).fill(1n),i)}function ones_like(i){return ones$2(i.dims)}function quantize_embeddings(i,s){if(i.dims.length!==2)throw new Error("The tensor must have 2 dimensions");if(i.dims.at(-1)%8!==0)throw new Error("The last dimension of the tensor must be a multiple of 8");if(!["binary","ubinary"].includes(s))throw new Error("The precision must be either 'binary' or 'ubinary'");const o=s==="binary",a=o?"int8":"uint8",c=o?Int8Array:Uint8Array,d=i.data,g=new c(d.length/8);for(let $=0;$<d.length;++$){const j=d[$]>0?1:0,_e=Math.floor($/8),et=$%8;g[_e]|=j<<7-et,o&&et===0&&(g[_e]-=128)}return new Tensor$1(a,g,[i.dims[0],i.dims[1]/8])}class PriorityQueue{constructor(s=(o,a)=>o>a){this._heap=[],this._comparator=s}get size(){return this._heap.length}isEmpty(){return this.size===0}peek(){return this._heap[0]}push(...s){return this.extend(s)}extend(s){for(const o of s)this._heap.push(o),this._siftUp();return this.size}pop(){const s=this.peek(),o=this.size-1;return o>0&&this._swap(0,o),this._heap.pop(),this._siftDown(),s}replace(s){const o=this.peek();return this._heap[0]=s,this._siftDown(),o}_parent(s){return(s+1>>>1)-1}_left(s){return(s<<1)+1}_right(s){return s+1<<1}_greater(s,o){return this._comparator(this._heap[s],this._heap[o])}_swap(s,o){const a=this._heap[s];this._heap[s]=this._heap[o],this._heap[o]=a}_siftUp(){let s=this.size-1;for(;s>0&&this._greater(s,this._parent(s));)this._swap(s,this._parent(s)),s=this._parent(s)}_siftDown(){let s=0;for(;this._left(s)<this.size&&this._greater(this._left(s),s)||this._right(s)<this.size&&this._greater(this._right(s),s);){const o=this._right(s)<this.size&&this._greater(this._right(s),this._left(s))?this._right(s):this._left(s);this._swap(s,o),s=o}}}class CharTrie{constructor(){this.root=CharTrieNode.default()}extend(s){for(let o of s)this.push(o)}push(s){let o=this.root;for(let a of s){let c=o.children.get(a);c===void 0&&(c=CharTrieNode.default(),o.children.set(a,c)),o=c}o.isLeaf=!0}*commonPrefixSearch(s){let o=this.root,a="";for(let c=0;c<s.length&&o!==void 0;++c){const d=s[c];a+=d,o=o.children.get(d),o!==void 0&&o.isLeaf&&(yield a)}}}class CharTrieNode{constructor(s,o){this.isLeaf=s,this.children=o}static default(){return new CharTrieNode(!1,new Map)}}class TokenLattice{constructor(s,o,a){this.sentence=s,this.len=s.length,this.bosTokenId=o,this.eosTokenId=a,this.nodes=[],this.beginNodes=Array.from({length:this.len+1},()=>[]),this.endNodes=Array.from({length:this.len+1},()=>[]);const c=new TokenLatticeNode(this.bosTokenId,0,0,0,0),d=new TokenLatticeNode(this.eosTokenId,1,this.len,0,0);this.nodes.push(c.clone()),this.nodes.push(d.clone()),this.beginNodes[this.len].push(d),this.endNodes[0].push(c)}insert(s,o,a,c){const d=this.nodes.length,g=new TokenLatticeNode(c,d,s,o,a);this.beginNodes[s].push(g),this.endNodes[s+o].push(g),this.nodes.push(g)}viterbi(){const s=this.len;let o=0;for(;o<=s;){if(this.beginNodes[o].length==0)return[];for(let $ of this.beginNodes[o]){$.prev=null;let j=0,_e=null;for(let et of this.endNodes[o]){const _=et.backtraceScore+$.score;(_e===null||_>j)&&(_e=et.clone(),j=_)}if(_e!==null)$.prev=_e,$.backtraceScore=j;else return[]}++o}const a=[],d=this.beginNodes[s][0].prev;if(d===null)return[];let g=d.clone();for(;g.prev!==null;)a.push(g.clone()),g=g.clone().prev.clone();return a.reverse(),a}piece(s){return this.sentence.slice(s.pos,s.pos+s.length)}tokens(){return this.viterbi().map(o=>this.piece(o))}tokenIds(){return this.viterbi().map(o=>o.tokenId)}}class TokenLatticeNode{constructor(s,o,a,c,d){this.tokenId=s,this.nodeId=o,this.pos=a,this.length=c,this.score=d,this.prev=null,this.backtraceScore=0}clone(){const s=new TokenLatticeNode(this.tokenId,this.nodeId,this.pos,this.length,this.score);return s.prev=this.prev,s.backtraceScore=this.backtraceScore,s}}var TOKEN_TYPES=Object.freeze({Text:"Text",NumericLiteral:"NumericLiteral",BooleanLiteral:"BooleanLiteral",StringLiteral:"StringLiteral",Identifier:"Identifier",Equals:"Equals",OpenParen:"OpenParen",CloseParen:"CloseParen",OpenStatement:"OpenStatement",CloseStatement:"CloseStatement",OpenExpression:"OpenExpression",CloseExpression:"CloseExpression",OpenSquareBracket:"OpenSquareBracket",CloseSquareBracket:"CloseSquareBracket",OpenCurlyBracket:"OpenCurlyBracket",CloseCurlyBracket:"CloseCurlyBracket",Comma:"Comma",Dot:"Dot",Colon:"Colon",Pipe:"Pipe",CallOperator:"CallOperator",AdditiveBinaryOperator:"AdditiveBinaryOperator",MultiplicativeBinaryOperator:"MultiplicativeBinaryOperator",ComparisonBinaryOperator:"ComparisonBinaryOperator",UnaryOperator:"UnaryOperator",Set:"Set",If:"If",For:"For",In:"In",Is:"Is",NotIn:"NotIn",Else:"Else",EndIf:"EndIf",ElseIf:"ElseIf",EndFor:"EndFor",And:"And",Or:"Or",Not:"UnaryOperator"}),KEYWORDS=Object.freeze({set:TOKEN_TYPES.Set,for:TOKEN_TYPES.For,in:TOKEN_TYPES.In,is:TOKEN_TYPES.Is,if:TOKEN_TYPES.If,else:TOKEN_TYPES.Else,endif:TOKEN_TYPES.EndIf,elif:TOKEN_TYPES.ElseIf,endfor:TOKEN_TYPES.EndFor,and:TOKEN_TYPES.And,or:TOKEN_TYPES.Or,not:TOKEN_TYPES.Not,"not in":TOKEN_TYPES.NotIn,true:TOKEN_TYPES.BooleanLiteral,false:TOKEN_TYPES.BooleanLiteral}),Token=class{constructor(i,s){this.value=i,this.type=s}};function isWord(i){return/\w/.test(i)}function isInteger$1(i){return/[0-9]/.test(i)}var ORDERED_MAPPING_TABLE=[["{%",TOKEN_TYPES.OpenStatement],["%}",TOKEN_TYPES.CloseStatement],["{{",TOKEN_TYPES.OpenExpression],["}}",TOKEN_TYPES.CloseExpression],["(",TOKEN_TYPES.OpenParen],[")",TOKEN_TYPES.CloseParen],["{",TOKEN_TYPES.OpenCurlyBracket],["}",TOKEN_TYPES.CloseCurlyBracket],["[",TOKEN_TYPES.OpenSquareBracket],["]",TOKEN_TYPES.CloseSquareBracket],[",",TOKEN_TYPES.Comma],[".",TOKEN_TYPES.Dot],[":",TOKEN_TYPES.Colon],["|",TOKEN_TYPES.Pipe],["<=",TOKEN_TYPES.ComparisonBinaryOperator],[">=",TOKEN_TYPES.ComparisonBinaryOperator],["==",TOKEN_TYPES.ComparisonBinaryOperator],["!=",TOKEN_TYPES.ComparisonBinaryOperator],["<",TOKEN_TYPES.ComparisonBinaryOperator],[">",TOKEN_TYPES.ComparisonBinaryOperator],["+",TOKEN_TYPES.AdditiveBinaryOperator],["-",TOKEN_TYPES.AdditiveBinaryOperator],["*",TOKEN_TYPES.MultiplicativeBinaryOperator],["/",TOKEN_TYPES.MultiplicativeBinaryOperator],["%",TOKEN_TYPES.MultiplicativeBinaryOperator],["=",TOKEN_TYPES.Equals]],ESCAPE_CHARACTERS=new Map([["n",`
`],["t","	"],["r","\r"],["b","\b"],["f","\f"],["v","\v"],["'","'"],['"','"'],["\\","\\"]]);function preprocess(i,s={}){return i.endsWith(`
`)&&(i=i.slice(0,-1)),i=i.replace(/{#.*?#}/gs,"{##}"),s.lstrip_blocks&&(i=i.replace(/^[ \t]*({[#%])/gm,"$1")),s.trim_blocks&&(i=i.replace(/([#%]})\n/g,"$1")),i.replace(/{##}/g,"").replace(/-%}\s*/g,"%}").replace(/\s*{%-/g,"{%").replace(/-}}\s*/g,"}}").replace(/\s*{{-/g,"{{")}function tokenize(i,s={}){var g,$,j;const o=[],a=preprocess(i,s);let c=0;const d=_e=>{let et="";for(;_e(a[c]);){if(a[c]==="\\"){if(++c,c>=a.length)throw new SyntaxError("Unexpected end of input");const _=a[c++],b=ESCAPE_CHARACTERS.get(_);if(b===void 0)throw new SyntaxError(`Unexpected escaped character: ${_}`);et+=b;continue}if(et+=a[c++],c>=a.length)throw new SyntaxError("Unexpected end of input")}return et};e:for(;c<a.length;){const _e=(g=o.at(-1))==null?void 0:g.type;if(_e===void 0||_e===TOKEN_TYPES.CloseStatement||_e===TOKEN_TYPES.CloseExpression){let _="";for(;c<a.length&&!(a[c]==="{"&&(a[c+1]==="%"||a[c+1]==="{"));)_+=a[c++];if(_.length>0){o.push(new Token(_,TOKEN_TYPES.Text));continue}}d(_=>/\s/.test(_));const et=a[c];if(et==="-"||et==="+"){const _=($=o.at(-1))==null?void 0:$.type;if(_===TOKEN_TYPES.Text||_===void 0)throw new SyntaxError(`Unexpected character: ${et}`);switch(_){case TOKEN_TYPES.Identifier:case TOKEN_TYPES.NumericLiteral:case TOKEN_TYPES.BooleanLiteral:case TOKEN_TYPES.StringLiteral:case TOKEN_TYPES.CloseParen:case TOKEN_TYPES.CloseSquareBracket:break;default:{++c;const b=d(isInteger$1);o.push(new Token(`${et}${b}`,b.length>0?TOKEN_TYPES.NumericLiteral:TOKEN_TYPES.UnaryOperator));continue}}}for(const[_,b]of ORDERED_MAPPING_TABLE)if(a.slice(c,c+_.length)===_){o.push(new Token(_,b)),c+=_.length;continue e}if(et==="'"||et==='"'){++c;const _=d(b=>b!==et);o.push(new Token(_,TOKEN_TYPES.StringLiteral)),++c;continue}if(isInteger$1(et)){const _=d(isInteger$1);o.push(new Token(_,TOKEN_TYPES.NumericLiteral));continue}if(isWord(et)){const _=d(isWord),b=Object.hasOwn(KEYWORDS,_)?KEYWORDS[_]:TOKEN_TYPES.Identifier;b===TOKEN_TYPES.In&&((j=o.at(-1))==null?void 0:j.type)===TOKEN_TYPES.Not?(o.pop(),o.push(new Token("not in",TOKEN_TYPES.NotIn))):o.push(new Token(_,b));continue}throw new SyntaxError(`Unexpected character: ${et}`)}return o}var Statement=class{constructor(){Ht(this,"type","Statement")}},Program=class extends Statement{constructor(s){super();Ht(this,"type","Program");this.body=s}},If=class extends Statement{constructor(s,o,a){super();Ht(this,"type","If");this.test=s,this.body=o,this.alternate=a}},For=class extends Statement{constructor(s,o,a){super();Ht(this,"type","For");this.loopvar=s,this.iterable=o,this.body=a}},SetStatement=class extends Statement{constructor(s,o){super();Ht(this,"type","Set");this.assignee=s,this.value=o}},Expression=class extends Statement{constructor(){super(...arguments);Ht(this,"type","Expression")}},MemberExpression=class extends Expression{constructor(s,o,a){super();Ht(this,"type","MemberExpression");this.object=s,this.property=o,this.computed=a}},CallExpression=class extends Expression{constructor(s,o){super();Ht(this,"type","CallExpression");this.callee=s,this.args=o}},Identifier=class extends Expression{constructor(s){super();Ht(this,"type","Identifier");this.value=s}},Literal=class extends Expression{constructor(s){super();Ht(this,"type","Literal");this.value=s}},NumericLiteral=class extends Literal{constructor(){super(...arguments);Ht(this,"type","NumericLiteral")}},StringLiteral=class extends Literal{constructor(){super(...arguments);Ht(this,"type","StringLiteral")}},BooleanLiteral=class extends Literal{constructor(){super(...arguments);Ht(this,"type","BooleanLiteral")}},ArrayLiteral=class extends Literal{constructor(){super(...arguments);Ht(this,"type","ArrayLiteral")}},TupleLiteral=class extends Literal{constructor(){super(...arguments);Ht(this,"type","TupleLiteral")}},ObjectLiteral=class extends Literal{constructor(){super(...arguments);Ht(this,"type","ObjectLiteral")}},BinaryExpression=class extends Expression{constructor(s,o,a){super();Ht(this,"type","BinaryExpression");this.operator=s,this.left=o,this.right=a}},FilterExpression=class extends Expression{constructor(s,o){super();Ht(this,"type","FilterExpression");this.operand=s,this.filter=o}},TestExpression=class extends Expression{constructor(s,o,a){super();Ht(this,"type","TestExpression");this.operand=s,this.negate=o,this.test=a}},UnaryExpression=class extends Expression{constructor(s,o){super();Ht(this,"type","UnaryExpression");this.operator=s,this.argument=o}},SliceExpression=class extends Expression{constructor(s=void 0,o=void 0,a=void 0){super();Ht(this,"type","SliceExpression");this.start=s,this.stop=o,this.step=a}},KeywordArgumentExpression=class extends Expression{constructor(s,o){super();Ht(this,"type","KeywordArgumentExpression");this.key=s,this.value=o}};function parse(i){const s=new Program([]);let o=0;function a(xt,mt){const vt=i[o++];if(!vt||vt.type!==xt)throw new Error(`Parser Error: ${mt}. ${vt.type} !== ${xt}.`);return vt}function c(){switch(i[o].type){case TOKEN_TYPES.Text:return $();case TOKEN_TYPES.OpenStatement:return j();case TOKEN_TYPES.OpenExpression:return _e();default:throw new SyntaxError(`Unexpected token type: ${i[o].type}`)}}function d(...xt){return o+xt.length<=i.length&&xt.some((mt,vt)=>mt!==i[o+vt].type)}function g(...xt){return o+xt.length<=i.length&&xt.every((mt,vt)=>mt===i[o+vt].type)}function $(){return new StringLiteral(a(TOKEN_TYPES.Text,"Expected text token").value)}function j(){a(TOKEN_TYPES.OpenStatement,"Expected opening statement token");let xt;switch(i[o].type){case TOKEN_TYPES.Set:++o,xt=et(),a(TOKEN_TYPES.CloseStatement,"Expected closing statement token");break;case TOKEN_TYPES.If:++o,xt=_(),a(TOKEN_TYPES.OpenStatement,"Expected {% token"),a(TOKEN_TYPES.EndIf,"Expected endif token"),a(TOKEN_TYPES.CloseStatement,"Expected %} token");break;case TOKEN_TYPES.For:++o,xt=tt(),a(TOKEN_TYPES.OpenStatement,"Expected {% token"),a(TOKEN_TYPES.EndFor,"Expected endfor token"),a(TOKEN_TYPES.CloseStatement,"Expected %} token");break;default:throw new SyntaxError(`Unknown statement type: ${i[o].type}`)}return xt}function _e(){a(TOKEN_TYPES.OpenExpression,"Expected opening expression token");const xt=nt();return a(TOKEN_TYPES.CloseExpression,"Expected closing expression token"),xt}function et(){const xt=nt();if(g(TOKEN_TYPES.Equals)){++o;const mt=et();return new SetStatement(xt,mt)}return xt}function _(){var Et,Ct,kt,Nt,Mt,Vt,Gt,Ft;const xt=nt();a(TOKEN_TYPES.CloseStatement,"Expected closing statement token");const mt=[],vt=[];for(;!(((Et=i[o])==null?void 0:Et.type)===TOKEN_TYPES.OpenStatement&&(((Ct=i[o+1])==null?void 0:Ct.type)===TOKEN_TYPES.ElseIf||((kt=i[o+1])==null?void 0:kt.type)===TOKEN_TYPES.Else||((Nt=i[o+1])==null?void 0:Nt.type)===TOKEN_TYPES.EndIf));)mt.push(c());if(((Mt=i[o])==null?void 0:Mt.type)===TOKEN_TYPES.OpenStatement&&((Vt=i[o+1])==null?void 0:Vt.type)!==TOKEN_TYPES.EndIf)if(++o,g(TOKEN_TYPES.ElseIf))a(TOKEN_TYPES.ElseIf,"Expected elseif token"),vt.push(_());else for(a(TOKEN_TYPES.Else,"Expected else token"),a(TOKEN_TYPES.CloseStatement,"Expected closing statement token");!(((Gt=i[o])==null?void 0:Gt.type)===TOKEN_TYPES.OpenStatement&&((Ft=i[o+1])==null?void 0:Ft.type)===TOKEN_TYPES.EndIf);)vt.push(c());return new If(xt,mt,vt)}function b(xt=!1){const mt=xt?bt:nt,vt=[mt()],Et=g(TOKEN_TYPES.Comma);for(;Et&&(++o,vt.push(mt()),!!g(TOKEN_TYPES.Comma)););return Et?new TupleLiteral(vt):vt[0]}function tt(){const xt=b(!0);if(!(xt instanceof Identifier||xt instanceof TupleLiteral))throw new SyntaxError(`Expected identifier/tuple for the loop variable, got ${xt.type} instead`);a(TOKEN_TYPES.In,"Expected `in` keyword following loop variable");const mt=nt();a(TOKEN_TYPES.CloseStatement,"Expected closing statement token");const vt=[];for(;d(TOKEN_TYPES.OpenStatement,TOKEN_TYPES.EndFor);)vt.push(c());return new For(xt,mt,vt)}function nt(){return rt()}function rt(){const xt=st();if(g(TOKEN_TYPES.If)){++o;const mt=st();a(TOKEN_TYPES.Else,"Expected else token");const vt=st();return new If(mt,[xt],[vt])}return xt}function st(){let xt=ot();for(;g(TOKEN_TYPES.Or);){const mt=i[o];++o;const vt=ot();xt=new BinaryExpression(mt,xt,vt)}return xt}function ot(){let xt=it();for(;g(TOKEN_TYPES.And);){const mt=i[o];++o;const vt=it();xt=new BinaryExpression(mt,xt,vt)}return xt}function it(){let xt;for(;g(TOKEN_TYPES.Not);){const mt=i[o];++o;const vt=it();xt=new UnaryExpression(mt,vt)}return xt??at()}function at(){let xt=lt();for(;g(TOKEN_TYPES.ComparisonBinaryOperator)||g(TOKEN_TYPES.In)||g(TOKEN_TYPES.NotIn);){const mt=i[o];++o;const vt=lt();xt=new BinaryExpression(mt,xt,vt)}return xt}function lt(){let xt=yt();for(;g(TOKEN_TYPES.AdditiveBinaryOperator);){const mt=i[o];++o;const vt=yt();xt=new BinaryExpression(mt,xt,vt)}return xt}function ut(){const xt=ft();return g(TOKEN_TYPES.OpenParen)?ct(xt):xt}function ct(xt){let mt=new CallExpression(xt,dt());return g(TOKEN_TYPES.OpenParen)&&(mt=ct(mt)),mt}function dt(){a(TOKEN_TYPES.OpenParen,"Expected opening parenthesis for arguments list");const xt=pt();return a(TOKEN_TYPES.CloseParen,"Expected closing parenthesis for arguments list"),xt}function pt(){const xt=[];for(;!g(TOKEN_TYPES.CloseParen);){let mt=nt();if(g(TOKEN_TYPES.Equals)){if(++o,!(mt instanceof Identifier))throw new SyntaxError("Expected identifier for keyword argument");const vt=nt();mt=new KeywordArgumentExpression(mt,vt)}xt.push(mt),g(TOKEN_TYPES.Comma)&&++o}return xt}function ht(){const xt=[];let mt=!1;for(;!g(TOKEN_TYPES.CloseSquareBracket);)g(TOKEN_TYPES.Colon)?(xt.push(void 0),++o,mt=!0):(xt.push(nt()),g(TOKEN_TYPES.Colon)&&(++o,mt=!0));if(xt.length===0)throw new SyntaxError("Expected at least one argument for member/slice expression");if(mt){if(xt.length>3)throw new SyntaxError("Expected 0-3 arguments for slice expression");return new SliceExpression(...xt)}return xt[0]}function ft(){let xt=bt();for(;g(TOKEN_TYPES.Dot)||g(TOKEN_TYPES.OpenSquareBracket);){const mt=i[o];++o;let vt;const Et=mt.type!==TOKEN_TYPES.Dot;if(Et)vt=ht(),a(TOKEN_TYPES.CloseSquareBracket,"Expected closing square bracket");else if(vt=bt(),vt.type!=="Identifier")throw new SyntaxError("Expected identifier following dot operator");xt=new MemberExpression(xt,vt,Et)}return xt}function yt(){let xt=wt();for(;g(TOKEN_TYPES.MultiplicativeBinaryOperator);){const mt=i[o];++o;const vt=wt();xt=new BinaryExpression(mt,xt,vt)}return xt}function wt(){let xt=_t();for(;g(TOKEN_TYPES.Is);){++o;const mt=g(TOKEN_TYPES.Not);mt&&++o;let vt=bt();if(vt instanceof BooleanLiteral&&(vt=new Identifier(vt.value.toString())),!(vt instanceof Identifier))throw new SyntaxError("Expected identifier for the test");xt=new TestExpression(xt,mt,vt)}return xt}function _t(){let xt=ut();for(;g(TOKEN_TYPES.Pipe);){++o;let mt=bt();if(!(mt instanceof Identifier))throw new SyntaxError("Expected identifier for the filter");g(TOKEN_TYPES.OpenParen)&&(mt=ct(mt)),xt=new FilterExpression(xt,mt)}return xt}function bt(){const xt=i[o];switch(xt.type){case TOKEN_TYPES.NumericLiteral:return++o,new NumericLiteral(Number(xt.value));case TOKEN_TYPES.StringLiteral:return++o,new StringLiteral(xt.value);case TOKEN_TYPES.BooleanLiteral:return++o,new BooleanLiteral(xt.value==="true");case TOKEN_TYPES.Identifier:return++o,new Identifier(xt.value);case TOKEN_TYPES.OpenParen:{++o;const mt=b();if(i[o].type!==TOKEN_TYPES.CloseParen)throw new SyntaxError(`Expected closing parenthesis, got ${i[o].type} instead`);return++o,mt}case TOKEN_TYPES.OpenSquareBracket:{++o;const mt=[];for(;!g(TOKEN_TYPES.CloseSquareBracket);)mt.push(nt()),g(TOKEN_TYPES.Comma)&&++o;return++o,new ArrayLiteral(mt)}case TOKEN_TYPES.OpenCurlyBracket:{++o;const mt=new Map;for(;!g(TOKEN_TYPES.CloseCurlyBracket);){const vt=nt();a(TOKEN_TYPES.Colon,"Expected colon between key and value in object literal");const Et=nt();mt.set(vt,Et),g(TOKEN_TYPES.Comma)&&++o}return++o,new ObjectLiteral(mt)}default:throw new SyntaxError(`Unexpected token: ${xt.type}`)}}for(;o<i.length;)s.body.push(c());return s}function range$4(i,s,o=1){s===void 0&&(s=i,i=0);const a=[];for(let c=i;c<s;c+=o)a.push(c);return a}function slice$3(i,s,o,a=1){const c=Math.sign(a);c>=0?(s=(s??(s=0))<0?Math.max(i.length+s,0):Math.min(s,i.length),o=(o??(o=i.length))<0?Math.max(i.length+o,0):Math.min(o,i.length)):(s=(s??(s=i.length-1))<0?Math.max(i.length+s,-1):Math.min(s,i.length-1),o=(o??(o=-1))<-1?Math.max(i.length+o,-1):Math.min(o,i.length-1));const d=[];for(let g=s;c*g<c*o;g+=a)d.push(i[g]);return d}function titleCase(i){return i.replace(/\b\w/g,s=>s.toUpperCase())}var RuntimeValue=class{constructor(i=void 0){Ht(this,"type","RuntimeValue");Ht(this,"value");Ht(this,"builtins",new Map);this.value=i}__bool__(){return new BooleanValue(!!this.value)}},NumericValue=class extends RuntimeValue{constructor(){super(...arguments);Ht(this,"type","NumericValue")}},StringValue=class extends RuntimeValue{constructor(){super(...arguments);Ht(this,"type","StringValue");Ht(this,"builtins",new Map([["upper",new FunctionValue(()=>new StringValue(this.value.toUpperCase()))],["lower",new FunctionValue(()=>new StringValue(this.value.toLowerCase()))],["strip",new FunctionValue(()=>new StringValue(this.value.trim()))],["title",new FunctionValue(()=>new StringValue(titleCase(this.value)))],["length",new NumericValue(this.value.length)]]))}},BooleanValue=class extends RuntimeValue{constructor(){super(...arguments);Ht(this,"type","BooleanValue")}},ObjectValue=class extends RuntimeValue{constructor(){super(...arguments);Ht(this,"type","ObjectValue");Ht(this,"builtins",new Map([["get",new FunctionValue(([s,o])=>{if(!(s instanceof StringValue))throw new Error(`Object key must be a string: got ${s.type}`);return this.value.get(s.value)??o??new NullValue})],["items",new FunctionValue(()=>new ArrayValue(Array.from(this.value.entries()).map(([s,o])=>new ArrayValue([new StringValue(s),o]))))]]))}__bool__(){return new BooleanValue(this.value.size>0)}},ArrayValue=class extends RuntimeValue{constructor(){super(...arguments);Ht(this,"type","ArrayValue");Ht(this,"builtins",new Map([["length",new NumericValue(this.value.length)]]))}__bool__(){return new BooleanValue(this.value.length>0)}},TupleValue=class extends ArrayValue{constructor(){super(...arguments);Ht(this,"type","TupleValue")}},FunctionValue=class extends RuntimeValue{constructor(){super(...arguments);Ht(this,"type","FunctionValue")}},NullValue=class extends RuntimeValue{constructor(){super(...arguments);Ht(this,"type","NullValue")}},UndefinedValue=class extends RuntimeValue{constructor(){super(...arguments);Ht(this,"type","UndefinedValue")}},Environment$1=class{constructor(s){Ht(this,"variables",new Map([["namespace",new FunctionValue(s=>{if(s.length===0)return new ObjectValue(new Map);if(s.length!==1||!(s[0]instanceof ObjectValue))throw new Error("`namespace` expects either zero arguments or a single object argument");return s[0]})]]));Ht(this,"tests",new Map([["boolean",s=>s.type==="BooleanValue"],["callable",s=>s instanceof FunctionValue],["odd",s=>{if(s.type!=="NumericValue")throw new Error(`Cannot apply test "odd" to type: ${s.type}`);return s.value%2!==0}],["even",s=>{if(s.type!=="NumericValue")throw new Error(`Cannot apply test "even" to type: ${s.type}`);return s.value%2===0}],["false",s=>s.type==="BooleanValue"&&!s.value],["true",s=>s.type==="BooleanValue"&&s.value],["number",s=>s.type==="NumericValue"],["integer",s=>s.type==="NumericValue"&&Number.isInteger(s.value)],["iterable",s=>s instanceof ArrayValue||s instanceof StringValue],["lower",s=>{const o=s.value;return s.type==="StringValue"&&o===o.toLowerCase()}],["upper",s=>{const o=s.value;return s.type==="StringValue"&&o===o.toUpperCase()}],["none",s=>s.type==="NullValue"],["defined",s=>s.type!=="UndefinedValue"],["undefined",s=>s.type==="UndefinedValue"],["equalto",(s,o)=>s.value===o.value]]));this.parent=s}set(s,o){return this.declareVariable(s,convertToRuntimeValues(o))}declareVariable(s,o){if(this.variables.has(s))throw new SyntaxError(`Variable already declared: ${s}`);return this.variables.set(s,o),o}setVariable(s,o){return this.variables.set(s,o),o}resolve(s){if(this.variables.has(s))return this;if(this.parent)return this.parent.resolve(s);throw new Error(`Unknown variable: ${s}`)}lookupVariable(s){try{return this.resolve(s).variables.get(s)??new UndefinedValue}catch{return new UndefinedValue}}},Interpreter=class{constructor(i){Ht(this,"global");this.global=i??new Environment$1}run(i){return this.evaluate(i,this.global)}evaluateBinaryExpression(i,s){const o=this.evaluate(i.left,s);switch(i.operator.value){case"and":return o.__bool__().value?this.evaluate(i.right,s):o;case"or":return o.__bool__().value?o:this.evaluate(i.right,s)}const a=this.evaluate(i.right,s);switch(i.operator.value){case"==":return new BooleanValue(o.value==a.value);case"!=":return new BooleanValue(o.value!=a.value)}if(o instanceof UndefinedValue||a instanceof UndefinedValue)throw new Error("Cannot perform operation on undefined values");if(o instanceof NullValue||a instanceof NullValue)throw new Error("Cannot perform operation on null values");if(o instanceof NumericValue&&a instanceof NumericValue)switch(i.operator.value){case"+":return new NumericValue(o.value+a.value);case"-":return new NumericValue(o.value-a.value);case"*":return new NumericValue(o.value*a.value);case"/":return new NumericValue(o.value/a.value);case"%":return new NumericValue(o.value%a.value);case"<":return new BooleanValue(o.value<a.value);case">":return new BooleanValue(o.value>a.value);case">=":return new BooleanValue(o.value>=a.value);case"<=":return new BooleanValue(o.value<=a.value)}else if(o instanceof ArrayValue&&a instanceof ArrayValue)switch(i.operator.value){case"+":return new ArrayValue(o.value.concat(a.value))}else if(a instanceof ArrayValue){const c=a.value.find(d=>d.value===o.value)!==void 0;switch(i.operator.value){case"in":return new BooleanValue(c);case"not in":return new BooleanValue(!c)}}if(o instanceof StringValue||a instanceof StringValue)switch(i.operator.value){case"+":return new StringValue(o.value.toString()+a.value.toString())}if(o instanceof StringValue&&a instanceof StringValue)switch(i.operator.value){case"in":return new BooleanValue(a.value.includes(o.value));case"not in":return new BooleanValue(!a.value.includes(o.value))}if(o instanceof StringValue&&a instanceof ObjectValue)switch(i.operator.value){case"in":return new BooleanValue(a.value.has(o.value));case"not in":return new BooleanValue(!a.value.has(o.value))}throw new SyntaxError(`Unknown operator "${i.operator.value}" between ${o.type} and ${a.type}`)}evaluateFilterExpression(i,s){const o=this.evaluate(i.operand,s);if(i.filter.type==="Identifier"){const a=i.filter;if(o instanceof ArrayValue)switch(a.value){case"list":return o;case"first":return o.value[0];case"last":return o.value[o.value.length-1];case"length":return new NumericValue(o.value.length);case"reverse":return new ArrayValue(o.value.reverse());case"sort":return new ArrayValue(o.value.sort((c,d)=>{if(c.type!==d.type)throw new Error(`Cannot compare different types: ${c.type} and ${d.type}`);switch(c.type){case"NumericValue":return c.value-d.value;case"StringValue":return c.value.localeCompare(d.value);default:throw new Error(`Cannot compare type: ${c.type}`)}}));default:throw new Error(`Unknown ArrayValue filter: ${a.value}`)}else if(o instanceof StringValue)switch(a.value){case"length":return new NumericValue(o.value.length);case"upper":return new StringValue(o.value.toUpperCase());case"lower":return new StringValue(o.value.toLowerCase());case"title":return new StringValue(titleCase(o.value));case"capitalize":return new StringValue(o.value.charAt(0).toUpperCase()+o.value.slice(1));case"trim":return new StringValue(o.value.trim());default:throw new Error(`Unknown StringValue filter: ${a.value}`)}else if(o instanceof NumericValue)switch(a.value){case"abs":return new NumericValue(Math.abs(o.value));default:throw new Error(`Unknown NumericValue filter: ${a.value}`)}else if(o instanceof ObjectValue)switch(a.value){case"items":return new ArrayValue(Array.from(o.value.entries()).map(([c,d])=>new ArrayValue([new StringValue(c),d])));case"length":return new NumericValue(o.value.size);default:throw new Error(`Unknown ObjectValue filter: ${a.value}`)}throw new Error(`Cannot apply filter "${a.value}" to type: ${o.type}`)}else if(i.filter.type==="CallExpression"){const a=i.filter;if(a.callee.type!=="Identifier")throw new Error(`Unknown filter: ${a.callee.type}`);const c=a.callee.value;if(o instanceof ArrayValue){switch(c){case"selectattr":{if(o.value.some(et=>!(et instanceof ObjectValue)))throw new Error("`selectattr` can only be applied to array of objects");if(a.args.some(et=>et.type!=="StringLiteral"))throw new Error("arguments of `selectattr` must be strings");const[d,g,$]=a.args.map(et=>this.evaluate(et,s));let j;if(g){const et=s.tests.get(g.value);if(!et)throw new Error(`Unknown test: ${g.value}`);j=et}else j=(...et)=>et[0].__bool__().value;const _e=o.value.filter(et=>{const _=et.value.get(d.value);return _?j(_,$):!1});return new ArrayValue(_e)}}throw new Error(`Unknown ArrayValue filter: ${c}`)}else throw new Error(`Cannot apply filter "${c}" to type: ${o.type}`)}throw new Error(`Unknown filter: ${i.filter.type}`)}evaluateTestExpression(i,s){const o=this.evaluate(i.operand,s),a=s.tests.get(i.test.value);if(!a)throw new Error(`Unknown test: ${i.test.value}`);const c=a(o);return new BooleanValue(i.negate?!c:c)}evaluateUnaryExpression(i,s){const o=this.evaluate(i.argument,s);switch(i.operator.value){case"not":return new BooleanValue(!o.value);default:throw new SyntaxError(`Unknown operator: ${i.operator.value}`)}}evalProgram(i,s){return this.evaluateBlock(i.body,s)}evaluateBlock(i,s){let o="";for(const a of i){const c=this.evaluate(a,s);c.type!=="NullValue"&&c.type!=="UndefinedValue"&&(o+=c.value)}return new StringValue(o)}evaluateIdentifier(i,s){return s.lookupVariable(i.value)}evaluateCallExpression(i,s){const o=[],a=new Map;for(const d of i.args)if(d.type==="KeywordArgumentExpression"){const g=d;a.set(g.key.value,this.evaluate(g.value,s))}else o.push(this.evaluate(d,s));a.size>0&&o.push(new ObjectValue(a));const c=this.evaluate(i.callee,s);if(c.type!=="FunctionValue")throw new Error(`Cannot call something that is not a function: got ${c.type}`);return c.value(o,s)}evaluateSliceExpression(i,s,o){if(!(i instanceof ArrayValue||i instanceof StringValue))throw new Error("Slice object must be an array or string");const a=this.evaluate(s.start,o),c=this.evaluate(s.stop,o),d=this.evaluate(s.step,o);if(!(a instanceof NumericValue||a instanceof UndefinedValue))throw new Error("Slice start must be numeric or undefined");if(!(c instanceof NumericValue||c instanceof UndefinedValue))throw new Error("Slice stop must be numeric or undefined");if(!(d instanceof NumericValue||d instanceof UndefinedValue))throw new Error("Slice step must be numeric or undefined");return i instanceof ArrayValue?new ArrayValue(slice$3(i.value,a.value,c.value,d.value)):new StringValue(slice$3(Array.from(i.value),a.value,c.value,d.value).join(""))}evaluateMemberExpression(i,s){const o=this.evaluate(i.object,s);let a;if(i.computed){if(i.property.type==="SliceExpression")return this.evaluateSliceExpression(o,i.property,s);a=this.evaluate(i.property,s)}else a=new StringValue(i.property.value);let c;if(o instanceof ObjectValue){if(!(a instanceof StringValue))throw new Error(`Cannot access property with non-string: got ${a.type}`);c=o.value.get(a.value)??o.builtins.get(a.value)}else if(o instanceof ArrayValue||o instanceof StringValue)if(a instanceof NumericValue)c=o.value.at(a.value),o instanceof StringValue&&(c=new StringValue(o.value.at(a.value)));else if(a instanceof StringValue)c=o.builtins.get(a.value);else throw new Error(`Cannot access property with non-string/non-number: got ${a.type}`);else{if(!(a instanceof StringValue))throw new Error(`Cannot access property with non-string: got ${a.type}`);c=o.builtins.get(a.value)}return c instanceof RuntimeValue?c:new UndefinedValue}evaluateSet(i,s){const o=this.evaluate(i.value,s);if(i.assignee.type==="Identifier"){const a=i.assignee.value;s.setVariable(a,o)}else if(i.assignee.type==="MemberExpression"){const a=i.assignee,c=this.evaluate(a.object,s);if(!(c instanceof ObjectValue))throw new Error("Cannot assign to member of non-object");if(a.property.type!=="Identifier")throw new Error("Cannot assign to member with non-identifier property");c.value.set(a.property.value,o)}else throw new Error(`Invalid LHS inside assignment expression: ${JSON.stringify(i.assignee)}`);return new NullValue}evaluateIf(i,s){const o=this.evaluate(i.test,s);return this.evaluateBlock(o.__bool__().value?i.body:i.alternate,s)}evaluateFor(i,s){const o=new Environment$1(s),a=this.evaluate(i.iterable,o);if(!(a instanceof ArrayValue))throw new Error(`Expected iterable type in for loop: got ${a.type}`);let c="";for(let d=0;d<a.value.length;++d){const g=new Map([["index",new NumericValue(d+1)],["index0",new NumericValue(d)],["revindex",new NumericValue(a.value.length-d)],["revindex0",new NumericValue(a.value.length-d-1)],["first",new BooleanValue(d===0)],["last",new BooleanValue(d===a.value.length-1)],["length",new NumericValue(a.value.length)],["previtem",d>0?a.value[d-1]:new UndefinedValue],["nextitem",d<a.value.length-1?a.value[d+1]:new UndefinedValue]]);o.setVariable("loop",new ObjectValue(g));const $=a.value[d];if(i.loopvar.type==="Identifier")o.setVariable(i.loopvar.value,$);else if(i.loopvar.type==="TupleLiteral"){const _e=i.loopvar;if($.type!=="ArrayValue")throw new Error(`Cannot unpack non-iterable type: ${$.type}`);const et=$;if(_e.value.length!==et.value.length)throw new Error(`Too ${_e.value.length>et.value.length?"few":"many"} items to unpack`);for(let _=0;_<_e.value.length;++_){if(_e.value[_].type!=="Identifier")throw new Error(`Cannot unpack non-identifier type: ${_e.value[_].type}`);o.setVariable(_e.value[_].value,et.value[_])}}const j=this.evaluateBlock(i.body,o);c+=j.value}return new StringValue(c)}evaluate(i,s){if(i===void 0)return new UndefinedValue;switch(i.type){case"Program":return this.evalProgram(i,s);case"Set":return this.evaluateSet(i,s);case"If":return this.evaluateIf(i,s);case"For":return this.evaluateFor(i,s);case"NumericLiteral":return new NumericValue(Number(i.value));case"StringLiteral":return new StringValue(i.value);case"BooleanLiteral":return new BooleanValue(i.value);case"ArrayLiteral":return new ArrayValue(i.value.map(o=>this.evaluate(o,s)));case"TupleLiteral":return new TupleValue(i.value.map(o=>this.evaluate(o,s)));case"ObjectLiteral":{const o=new Map;for(const[a,c]of i.value){const d=this.evaluate(a,s);if(!(d instanceof StringValue))throw new Error(`Object keys must be strings: got ${d.type}`);o.set(d.value,this.evaluate(c,s))}return new ObjectValue(o)}case"Identifier":return this.evaluateIdentifier(i,s);case"CallExpression":return this.evaluateCallExpression(i,s);case"MemberExpression":return this.evaluateMemberExpression(i,s);case"UnaryExpression":return this.evaluateUnaryExpression(i,s);case"BinaryExpression":return this.evaluateBinaryExpression(i,s);case"FilterExpression":return this.evaluateFilterExpression(i,s);case"TestExpression":return this.evaluateTestExpression(i,s);default:throw new SyntaxError(`Unknown node type: ${i.type}`)}}};function convertToRuntimeValues(i){switch(typeof i){case"number":return new NumericValue(i);case"string":return new StringValue(i);case"boolean":return new BooleanValue(i);case"object":return i===null?new NullValue:Array.isArray(i)?new ArrayValue(i.map(convertToRuntimeValues)):new ObjectValue(new Map(Object.entries(i).map(([s,o])=>[s,convertToRuntimeValues(o)])));case"function":return new FunctionValue((s,o)=>{const a=i(...s.map(c=>c.value))??null;return convertToRuntimeValues(a)});default:throw new Error(`Cannot convert to runtime value: ${i}`)}}var Template=class{constructor(i){Ht(this,"parsed");const s=tokenize(i,{lstrip_blocks:!0,trim_blocks:!0});this.parsed=parse(s)}render(i){const s=new Environment$1;s.set("false",!1),s.set("true",!0),s.set("raise_exception",c=>{throw new Error(c)}),s.set("range",range$4);for(const[c,d]of Object.entries(i))s.set(c,d);return new Interpreter(s).run(this.parsed).value}};async function loadTokenizer(i,s){const o=await Promise.all([getModelJSON(i,"tokenizer.json",!0,s),getModelJSON(i,"tokenizer_config.json",!0,s)]);return s.legacy!==null&&(o[1].legacy=s.legacy),o}function regexSplit(i,s){const o=[];let a=0;for(const c of i.matchAll(s)){const d=c[0];a<c.index&&o.push(i.slice(a,c.index)),d.length>0&&o.push(d),a=c.index+d.length}return a<i.length&&o.push(i.slice(a)),o}function createPattern(i,s=!0){if(i.Regex!==void 0){let o=i.Regex.replace(/\\([#&~])/g,"$1");for(const[a,c]of PROBLEMATIC_REGEX_MAP)o=o.replaceAll(a,c);return new RegExp(o,"gu")}else if(i.String!==void 0){const o=escapeRegExp(i.String);return new RegExp(s?o:`(${o})`,"gu")}else return console.warn("Unknown pattern type:",i),null}function objectToMap(i){return new Map(Object.entries(i))}function prepareTensorForDecode(i){const s=i.dims;switch(s.length){case 1:return i.tolist();case 2:if(s[0]!==1)throw new Error("Unable to decode tensor with `batch size !== 1`. Use `tokenizer.batch_decode(...)` for batched inputs.");return i.tolist()[0];default:throw new Error(`Expected tensor to have 1-2 dimensions, got ${s.length}.`)}}function clean_up_tokenization(i){return i.replace(/ \./g,".").replace(/ \?/g,"?").replace(/ \!/g,"!").replace(/ ,/g,",").replace(/ \' /g,"'").replace(/ n\'t/g,"n't").replace(/ \'m/g,"'m").replace(/ \'s/g,"'s").replace(/ \'ve/g,"'ve").replace(/ \'re/g,"'re")}function remove_accents(i){return i.replace(/[\u0300-\u036f]/g,"")}function lowercase_and_remove_accent(i){return remove_accents(i.toLowerCase())}function fuse(i,s,o){const a=[];let c=0;for(;c<i.length;){if(a.push(i[c]),(o.get(i[c])??s)!==s){++c;continue}for(;c<i.length&&(o.get(i[c])??s)===s;)++c}return a}function whitespace_split(i){return i.match(/\S+/g)||[]}const PUNCTUATION_REGEX="\\p{P}\\u0021-\\u002F\\u003A-\\u0040\\u005B-\\u0060\\u007B-\\u007E",PROBLEMATIC_REGEX_MAP=new Map([["(?i:'s|'t|'re|'ve|'m|'ll|'d)","(?:'([sS]|[tT]|[rR][eE]|[vV][eE]|[mM]|[lL][lL]|[dD]))"]]);class AddedToken{constructor(s){this.content=s.content,this.id=s.id,this.single_word=s.single_word??!1,this.lstrip=s.lstrip??!1,this.rstrip=s.rstrip??!1,this.special=s.special??!1,this.normalized=s.normalized??null}}class TokenizerModel extends Callable{constructor(s){super(),this.config=s,this.vocab=[],this.tokens_to_ids=new Map,this.unk_token_id=void 0,this.unk_token=void 0,this.end_of_word_suffix=void 0,this.fuse_unk=this.config.fuse_unk??!1}static fromConfig(s,...o){switch(s.type){case"WordPiece":return new WordPieceTokenizer(s);case"Unigram":return new Unigram(s,...o);case"BPE":return new BPE(s);default:if(s.vocab)return new LegacyTokenizerModel(s,...o);throw new Error(`Unknown TokenizerModel type: ${s.type}`)}}_call(s){let o=this.encode(s);return this.fuse_unk&&(o=fuse(o,this.unk_token_id,this.tokens_to_ids)),o}encode(s){throw Error("encode should be implemented in subclass.")}convert_tokens_to_ids(s){return s.map(o=>this.tokens_to_ids.get(o)??this.unk_token_id)}convert_ids_to_tokens(s){return s.map(o=>this.vocab[o]??this.unk_token)}}class WordPieceTokenizer extends TokenizerModel{constructor(s){super(s),this.tokens_to_ids=objectToMap(s.vocab),this.unk_token_id=this.tokens_to_ids.get(s.unk_token),this.unk_token=s.unk_token,this.max_input_chars_per_word=s.max_input_chars_per_word??100,this.vocab=new Array(this.tokens_to_ids.size);for(const[o,a]of this.tokens_to_ids)this.vocab[a]=o}encode(s){const o=[];for(const a of s){const c=[...a];if(c.length>this.max_input_chars_per_word){o.push(this.unk_token);continue}let d=!1,g=0;const $=[];for(;g<c.length;){let j=c.length,_e=null;for(;g<j;){let et=c.slice(g,j).join("");if(g>0&&(et=this.config.continuing_subword_prefix+et),this.tokens_to_ids.has(et)){_e=et;break}--j}if(_e===null){d=!0;break}$.push(_e),g=j}d?o.push(this.unk_token):o.push(...$)}return o}}class Unigram extends TokenizerModel{constructor(s,o){super(s);const a=s.vocab.length;this.vocab=new Array(a),this.scores=new Array(a);for(let c=0;c<a;++c){const d=s.vocab[c];this.vocab[c]=d[0],this.scores[c]=d[1]}this.unk_token_id=s.unk_id,this.unk_token=this.vocab[s.unk_id],this.tokens_to_ids=new Map(this.vocab.map((c,d)=>[c,d])),this.bosToken=" ",this.bosTokenId=this.tokens_to_ids.get(this.bosToken),this.eosToken=o.eos_token,this.eosTokenId=this.tokens_to_ids.get(this.eosToken),this.unkToken=this.vocab[this.unk_token_id],this.minScore=min$4(this.scores)[0],this.unkScore=this.minScore-10,this.scores[this.unk_token_id]=this.unkScore,this.trie=new CharTrie,this.trie.extend(this.vocab),this.fuse_unk=!0}populateNodes(s){const o=s.sentence,a=o.length;let c=0;for(;c<a;){let g=!1;for(let $ of this.trie.commonPrefixSearch(o.slice(c))){const j=this.tokens_to_ids.get($),_e=this.scores[j],et=$.length;s.insert(c,et,_e,j),!g&&et===1&&(g=!0)}g||s.insert(c,1,this.unkScore,this.unk_token_id),c+=1}}tokenize(s){const o=new TokenLattice(s,this.bosTokenId,this.eosTokenId);return this.populateNodes(o),o.tokens()}encode(s){const o=[];for(const a of s){const c=this.tokenize(a);o.push(...c)}return o}}const BYTES_TO_UNICODE=(()=>{const i=[...Array.from({length:94},(c,d)=>d+33),...Array.from({length:12},(c,d)=>d+161),...Array.from({length:82},(c,d)=>d+174)],s=i.slice();let o=0;for(let c=0;c<256;++c)i.includes(c)||(i.push(c),s.push(256+o),o+=1);const a=s.map(c=>String.fromCharCode(c));return Object.fromEntries(i.map((c,d)=>[c,a[d]]))})(),UNICODE_TO_BYTES=reverseDictionary(BYTES_TO_UNICODE);class BPE extends TokenizerModel{constructor(s){super(s),this.BPE_SPLIT_TOKEN=" ",this.tokens_to_ids=objectToMap(s.vocab),this.unk_token_id=this.tokens_to_ids.get(s.unk_token),this.unk_token=s.unk_token,this.vocab=new Array(this.tokens_to_ids.size);for(const[o,a]of this.tokens_to_ids)this.vocab[a]=o;this.bpe_ranks=new Map(s.merges.map((o,a)=>[o,a])),this.merges=s.merges.map(o=>o.split(this.BPE_SPLIT_TOKEN)),this.end_of_word_suffix=s.end_of_word_suffix,this.continuing_subword_suffix=s.continuing_subword_suffix??null,this.byte_fallback=this.config.byte_fallback??!1,this.byte_fallback&&(this.text_encoder=new TextEncoder),this.ignore_merges=this.config.ignore_merges??!1,this.cache=new Map}bpe(s){if(s.length===0)return[];const o=this.cache.get(s);if(o!==void 0)return o;const a=Array.from(s);this.end_of_word_suffix&&(a[a.length-1]+=this.end_of_word_suffix);let c=[];if(a.length>1){const d=new PriorityQueue((j,_e)=>j.score<_e.score);let g={token:a[0],bias:0,prev:null,next:null},$=g;for(let j=1;j<a.length;++j){const _e={bias:j/a.length,token:a[j],prev:$,next:null};$.next=_e,this._add_node(d,$),$=_e}for(;!d.isEmpty();){const j=d.pop();if(j.deleted||!j.next||j.next.deleted)continue;if(j.deleted=!0,j.next.deleted=!0,j.prev){const et={...j.prev};j.prev.deleted=!0,j.prev=et,et.prev?et.prev.next=et:g=et}const _e={token:j.token+j.next.token,bias:j.bias,prev:j.prev,next:j.next.next};_e.prev?(_e.prev.next=_e,this._add_node(d,_e.prev)):g=_e,_e.next&&(_e.next.prev=_e,this._add_node(d,_e))}for(let j=g;j!==null;j=j.next)c.push(j.token)}else c=a;if(this.continuing_subword_suffix)for(let d=0;d<c.length-1;++d)c[d]+=this.continuing_subword_suffix;return this.cache.set(s,c),c}_add_node(s,o){const a=this.bpe_ranks.get(o.token+this.BPE_SPLIT_TOKEN+o.next.token);a!==void 0&&(o.score=a+o.bias,s.push(o))}encode(s){const o=[];for(const a of s){if(this.ignore_merges&&this.tokens_to_ids.has(a)){o.push(a);continue}const c=this.bpe(a);for(const d of c)this.tokens_to_ids.has(d)?o.push(d):this.byte_fallback?o.push(...Array.from(this.text_encoder.encode(d)).map(g=>`<0x${g.toString(16).toUpperCase().padStart(2,"0")}>`)):o.push(this.unk_token)}return o}}class LegacyTokenizerModel extends TokenizerModel{constructor(s,o){super(s),this.tokens_to_ids=objectToMap(o.target_lang?s.vocab[o.target_lang]:s.vocab),this.bos_token=o.bos_token,this.bos_token_id=this.tokens_to_ids.get(this.bos_token),this.eos_token=o.eos_token,this.eos_token_id=this.tokens_to_ids.get(this.eos_token),this.pad_token=o.pad_token,this.pad_token_id=this.tokens_to_ids.get(this.pad_token),this.unk_token=o.unk_token,this.unk_token_id=this.tokens_to_ids.get(this.unk_token),this.vocab=new Array(this.tokens_to_ids.size);for(const[a,c]of this.tokens_to_ids)this.vocab[c]=a}encode(s){return s}}class Normalizer extends Callable{constructor(s){super(),this.config=s}static fromConfig(s){if(s===null)return null;switch(s.type){case"BertNormalizer":return new BertNormalizer(s);case"Precompiled":return new Precompiled(s);case"Sequence":return new NormalizerSequence(s);case"Replace":return new Replace(s);case"NFC":return new NFC(s);case"NFKC":return new NFKC(s);case"NFKD":return new NFKD(s);case"Strip":return new StripNormalizer(s);case"StripAccents":return new StripAccents(s);case"Lowercase":return new Lowercase(s);case"Prepend":return new Prepend(s);default:throw new Error(`Unknown Normalizer type: ${s.type}`)}}normalize(s){throw Error("normalize should be implemented in subclass.")}_call(s){return this.normalize(s)}}class Replace extends Normalizer{normalize(s){const o=createPattern(this.config.pattern);return o===null?s:s.replaceAll(o,this.config.content)}}class NFC extends Normalizer{normalize(s){return s=s.normalize("NFC"),s}}class NFKC extends Normalizer{normalize(s){return s=s.normalize("NFKC"),s}}class NFKD extends Normalizer{normalize(s){return s=s.normalize("NFKD"),s}}class StripNormalizer extends Normalizer{normalize(s){return this.config.strip_left&&this.config.strip_right?s=s.trim():(this.config.strip_left&&(s=s.trimStart()),this.config.strip_right&&(s=s.trimEnd())),s}}class StripAccents extends Normalizer{normalize(s){return s=remove_accents(s),s}}class Lowercase extends Normalizer{normalize(s){return s=s.toLowerCase(),s}}class Prepend extends Normalizer{normalize(s){return s=this.config.prepend+s,s}}class NormalizerSequence extends Normalizer{constructor(s){super(s),this.normalizers=s.normalizers.map(o=>Normalizer.fromConfig(o))}normalize(s){return this.normalizers.reduce((o,a)=>a.normalize(o),s)}}class BertNormalizer extends Normalizer{_tokenize_chinese_chars(s){const o=[];for(let a=0;a<s.length;++a){const c=s[a],d=c.charCodeAt(0);this._is_chinese_char(d)?(o.push(" "),o.push(c),o.push(" ")):o.push(c)}return o.join("")}_is_chinese_char(s){return s>=19968&&s<=40959||s>=13312&&s<=19903||s>=131072&&s<=173791||s>=173824&&s<=177983||s>=177984&&s<=178207||s>=178208&&s<=183983||s>=63744&&s<=64255||s>=194560&&s<=195103}stripAccents(s){return s.normalize("NFD").replace(/[\u0300-\u036f]/g,"")}_is_control(s){switch(s){case"	":case`
`:case"\r":return!1;default:return new RegExp("^\\p{Cc}|\\p{Cf}|\\p{Co}|\\p{Cs}$","u").test(s)}}_clean_text(s){const o=[];for(const a of s){const c=a.charCodeAt(0);c===0||c===65533||this._is_control(a)||(/^\s$/.test(a)?o.push(" "):o.push(a))}return o.join("")}normalize(s){return this.config.clean_text&&(s=this._clean_text(s)),this.config.handle_chinese_chars&&(s=this._tokenize_chinese_chars(s)),this.config.lowercase?(s=s.toLowerCase(),this.config.strip_accents!==!1&&(s=this.stripAccents(s))):this.config.strip_accents&&(s=this.stripAccents(s)),s}}class PreTokenizer extends Callable{static fromConfig(s){if(s===null)return null;switch(s.type){case"BertPreTokenizer":return new BertPreTokenizer(s);case"Sequence":return new PreTokenizerSequence(s);case"Whitespace":return new WhitespacePreTokenizer(s);case"WhitespaceSplit":return new WhitespaceSplit(s);case"Metaspace":return new MetaspacePreTokenizer(s);case"ByteLevel":return new ByteLevelPreTokenizer(s);case"Split":return new SplitPreTokenizer(s);case"Punctuation":return new PunctuationPreTokenizer(s);case"Digits":return new DigitsPreTokenizer(s);case"Replace":return new ReplacePreTokenizer(s);default:throw new Error(`Unknown PreTokenizer type: ${s.type}`)}}pre_tokenize_text(s,o){throw Error("pre_tokenize_text should be implemented in subclass.")}pre_tokenize(s,o){return(Array.isArray(s)?s.map(a=>this.pre_tokenize_text(a,o)):this.pre_tokenize_text(s,o)).flat()}_call(s,o){return this.pre_tokenize(s,o)}}class BertPreTokenizer extends PreTokenizer{constructor(s){super(),this.pattern=new RegExp(`[^\\s${PUNCTUATION_REGEX}]+|[${PUNCTUATION_REGEX}]`,"gu")}pre_tokenize_text(s,o){return s.trim().match(this.pattern)||[]}}class ByteLevelPreTokenizer extends PreTokenizer{constructor(s){super(),this.config=s,this.add_prefix_space=this.config.add_prefix_space,this.trim_offsets=this.config.trim_offsets,this.use_regex=this.config.use_regex??!0,this.pattern=new RegExp("'s|'t|'re|'ve|'m|'ll|'d| ?\\p{L}+| ?\\p{N}+| ?[^\\s\\p{L}\\p{N}]+|\\s+(?!\\S)|\\s+","gu"),this.byte_encoder=BYTES_TO_UNICODE,this.text_encoder=new TextEncoder}pre_tokenize_text(s,o){return this.add_prefix_space&&!s.startsWith(" ")&&(s=" "+s),(this.use_regex?s.match(this.pattern)||[]:[s]).map(c=>Array.from(this.text_encoder.encode(c),d=>this.byte_encoder[d]).join(""))}}class SplitPreTokenizer extends PreTokenizer{constructor(s){super(),this.config=s,this.pattern=createPattern(this.config.pattern,this.config.invert)}pre_tokenize_text(s,o){return this.pattern===null?[]:this.config.invert?s.match(this.pattern)||[]:regexSplit(s,this.pattern)}}class PunctuationPreTokenizer extends PreTokenizer{constructor(s){super(),this.config=s,this.pattern=new RegExp(`[^${PUNCTUATION_REGEX}]+|[${PUNCTUATION_REGEX}]+`,"gu")}pre_tokenize_text(s,o){return s.match(this.pattern)||[]}}class DigitsPreTokenizer extends PreTokenizer{constructor(s){super(),this.config=s;const o=`[^\\d]+|\\d${this.config.individual_digits?"":"+"}`;this.pattern=new RegExp(o,"gu")}pre_tokenize_text(s,o){return s.match(this.pattern)||[]}}class PostProcessor extends Callable{constructor(s){super(),this.config=s}static fromConfig(s){if(s===null)return null;switch(s.type){case"TemplateProcessing":return new TemplateProcessing(s);case"ByteLevel":return new ByteLevelPostProcessor(s);case"RobertaProcessing":return new RobertaProcessing(s);case"BertProcessing":return new BertProcessing(s);case"Sequence":return new PostProcessorSequence(s);default:throw new Error(`Unknown PostProcessor type: ${s.type}`)}}post_process(s,...o){throw Error("post_process should be implemented in subclass.")}_call(s,...o){return this.post_process(s,...o)}}class BertProcessing extends PostProcessor{constructor(s){super(s),this.cls=s.cls[0],this.sep=s.sep[0]}post_process(s,o=null,{add_special_tokens:a=!0}={}){a&&(s=mergeArrays([this.cls],s,[this.sep]));let c=new Array(s.length).fill(0);if(o!==null){const d=a&&this instanceof RobertaProcessing?[this.sep]:[],g=a?[this.sep]:[];s=mergeArrays(s,d,o,g),c=mergeArrays(c,new Array(o.length+d.length+g.length).fill(1))}return{tokens:s,token_type_ids:c}}}class RobertaProcessing extends BertProcessing{}class TemplateProcessing extends PostProcessor{constructor(s){super(s),this.single=s.single,this.pair=s.pair}post_process(s,o=null,{add_special_tokens:a=!0}={}){const c=o===null?this.single:this.pair;let d=[],g=[];for(const $ of c)"SpecialToken"in $?a&&(d.push($.SpecialToken.id),g.push($.SpecialToken.type_id)):"Sequence"in $&&($.Sequence.id==="A"?(d=mergeArrays(d,s),g=mergeArrays(g,new Array(s.length).fill($.Sequence.type_id))):$.Sequence.id==="B"&&(d=mergeArrays(d,o),g=mergeArrays(g,new Array(o.length).fill($.Sequence.type_id))));return{tokens:d,token_type_ids:g}}}class ByteLevelPostProcessor extends PostProcessor{post_process(s,o=null){return o&&(s=mergeArrays(s,o)),{tokens:s}}}class PostProcessorSequence extends PostProcessor{constructor(s){super(s),this.processors=s.processors.map(o=>PostProcessor.fromConfig(o))}post_process(s,o=null,a={}){let c;for(const d of this.processors)if(d instanceof ByteLevelPostProcessor)s=d.post_process(s).tokens,o&&(o=d.post_process(o).tokens);else{const g=d.post_process(s,o,a);s=g.tokens,c=g.token_type_ids}return{tokens:s,token_type_ids:c}}}class Decoder extends Callable{constructor(s){super(),this.config=s,this.added_tokens=[],this.end_of_word_suffix=null,this.trim_offsets=s.trim_offsets}static fromConfig(s){if(s===null)return null;switch(s.type){case"WordPiece":return new WordPieceDecoder(s);case"Metaspace":return new MetaspaceDecoder(s);case"ByteLevel":return new ByteLevelDecoder(s);case"Replace":return new ReplaceDecoder(s);case"ByteFallback":return new ByteFallback(s);case"Fuse":return new FuseDecoder(s);case"Strip":return new StripDecoder(s);case"Sequence":return new DecoderSequence(s);case"CTC":return new CTCDecoder(s);case"BPEDecoder":return new BPEDecoder(s);default:throw new Error(`Unknown Decoder type: ${s.type}`)}}_call(s){return this.decode(s)}decode(s){return this.decode_chain(s).join("")}decode_chain(s){throw Error("`decode_chain` should be implemented in subclass.")}}class ReplaceDecoder extends Decoder{decode_chain(s){const o=createPattern(this.config.pattern);return o===null?s:s.map(a=>a.replaceAll(o,this.config.content))}}class ByteFallback extends Decoder{constructor(s){super(s),this.text_decoder=new TextDecoder}decode_chain(s){const o=[];let a=[];for(const c of s){let d=null;if(c.length===6&&c.startsWith("<0x")&&c.endsWith(">")){const g=parseInt(c.slice(3,5),16);isNaN(g)||(d=g)}if(d!==null)a.push(d);else{if(a.length>0){const g=this.text_decoder.decode(Uint8Array.from(a));o.push(g),a=[]}o.push(c)}}if(a.length>0){const c=this.text_decoder.decode(Uint8Array.from(a));o.push(c),a=[]}return o}}class FuseDecoder extends Decoder{decode_chain(s){return[s.join("")]}}class StripDecoder extends Decoder{constructor(s){super(s),this.content=this.config.content,this.start=this.config.start,this.stop=this.config.stop}decode_chain(s){return s.map(o=>{let a=0;for(let d=0;d<this.start&&o[d]===this.content;++d){a=d+1;continue}let c=o.length;for(let d=0;d<this.stop;++d){const g=o.length-d-1;if(o[g]===this.content){c=g;continue}else break}return o.slice(a,c)})}}class WordPieceDecoder extends Decoder{constructor(s){super(s),this.cleanup=s.cleanup}decode_chain(s){return s.map((o,a)=>(a!==0&&(o.startsWith(this.config.prefix)?o=o.replace(this.config.prefix,""):o=" "+o),this.cleanup&&(o=clean_up_tokenization(o)),o))}}class ByteLevelDecoder extends Decoder{constructor(s){super(s),this.byte_decoder=UNICODE_TO_BYTES,this.text_decoder=new TextDecoder("utf-8",{fatal:!1,ignoreBOM:!0}),this.end_of_word_suffix=null}convert_tokens_to_string(s){const o=s.join(""),a=new Uint8Array([...o].map(d=>this.byte_decoder[d]));return this.text_decoder.decode(a)}decode_chain(s){const o=[];let a=[];for(const c of s)this.added_tokens.find(d=>d.content===c)!==void 0?(a.length>0&&(o.push(this.convert_tokens_to_string(a)),a=[]),o.push(c)):a.push(c);return a.length>0&&o.push(this.convert_tokens_to_string(a)),o}}class CTCDecoder extends Decoder{constructor(s){super(s),this.pad_token=this.config.pad_token,this.word_delimiter_token=this.config.word_delimiter_token,this.cleanup=this.config.cleanup}convert_tokens_to_string(s){if(s.length===0)return"";const o=[s[0]];for(let d=1;d<s.length;++d)s[d]!==o.at(-1)&&o.push(s[d]);let c=o.filter(d=>d!==this.pad_token).join("");return this.cleanup&&(c=clean_up_tokenization(c).replaceAll(this.word_delimiter_token," ").trim()),c}decode_chain(s){return[this.convert_tokens_to_string(s)]}}class DecoderSequence extends Decoder{constructor(s){super(s),this.decoders=s.decoders.map(o=>Decoder.fromConfig(o))}decode_chain(s){return this.decoders.reduce((o,a)=>a.decode_chain(o),s)}}class BPEDecoder extends Decoder{constructor(s){super(s),this.suffix=this.config.suffix}decode_chain(s){return s.map((o,a)=>o.replaceAll(this.suffix,a===s.length-1?"":" "))}}class VitsDecoder extends Decoder{decode_chain(s){let o="";for(let a=1;a<s.length;a+=2)o+=s[a];return[o]}}class MetaspacePreTokenizer extends PreTokenizer{constructor(s){super(),this.addPrefixSpace=s.add_prefix_space,this.replacement=s.replacement,this.strRep=s.str_rep||this.replacement,this.prepend_scheme=s.prepend_scheme??"always"}pre_tokenize_text(s,{section_index:o=void 0}={}){let a=s.replaceAll(" ",this.strRep);return this.addPrefixSpace&&!a.startsWith(this.replacement)&&(this.prepend_scheme==="always"||this.prepend_scheme==="first"&&o===0)&&(a=this.strRep+a),[a]}}class MetaspaceDecoder extends Decoder{constructor(s){super(s),this.addPrefixSpace=s.add_prefix_space,this.replacement=s.replacement}decode_chain(s){const o=[];for(let a=0;a<s.length;++a){let c=s[a].replaceAll(this.replacement," ");this.addPrefixSpace&&a==0&&c.startsWith(" ")&&(c=c.substring(1)),o.push(c)}return o}}class Precompiled extends Normalizer{constructor(s){super(s),this.charsmap=s.precompiled_charsmap}normalize(s){return s=s.replace(/[\u0001-\u0008\u000B\u000E-\u001F\u007F\u008F\u009F]/gm,""),s=s.replace(/[\u0009\u000A\u000C\u000D\u1680\u200B\u200C\u200E\u200F\u2028\u2029\u2581\uFEFF\uFFFD]/gm," "),s.includes("～")?s=s.split("～").map(a=>a.normalize("NFKC")).join("～"):s=s.normalize("NFKC"),s}}class PreTokenizerSequence extends PreTokenizer{constructor(s){super(),this.tokenizers=s.pretokenizers.map(o=>PreTokenizer.fromConfig(o))}pre_tokenize_text(s,o){return this.tokenizers.reduce((a,c)=>c.pre_tokenize(a,o),[s])}}class WhitespacePreTokenizer extends PreTokenizer{constructor(s){super()}pre_tokenize_text(s,o){return s.match(/\w+|[^\w\s]+/g)||[]}}class WhitespaceSplit extends PreTokenizer{constructor(s){super()}pre_tokenize_text(s,o){return whitespace_split(s)}}class ReplacePreTokenizer extends PreTokenizer{constructor(s){super(),this.config=s,this.pattern=createPattern(this.config.pattern),this.content=this.config.content}pre_tokenize_text(s,o){return this.pattern===null?[s]:[s.replaceAll(this.pattern,this.config.content)]}}const SPECIAL_TOKEN_ATTRIBUTES=["bos_token","eos_token","unk_token","sep_token","pad_token","cls_token","mask_token"];function padHelper(i,s,o,a){for(const c of Object.keys(i)){const d=s-i[c].length,g=o(c),$=new Array(d).fill(g);i[c]=a==="right"?mergeArrays(i[c],$):mergeArrays($,i[c])}}function truncateHelper(i,s){for(const o of Object.keys(i))i[o].length=s}class PreTrainedTokenizer extends Callable{constructor(o,a){super();Ht(this,"return_token_type_ids",!1);Ht(this,"_default_chat_template",`{% for message in messages %}{{'<|im_start|>' + message['role'] + '
' + message['content'] + '<|im_end|>' + '
'}}{% endfor %}{% if add_generation_prompt %}{{ '<|im_start|>assistant
' }}{% endif %}`);this._tokenizer_config=a,this.normalizer=Normalizer.fromConfig(o.normalizer),this.pre_tokenizer=PreTokenizer.fromConfig(o.pre_tokenizer),this.model=TokenizerModel.fromConfig(o.model,a),this.post_processor=PostProcessor.fromConfig(o.post_processor),this.decoder=Decoder.fromConfig(o.decoder),this.special_tokens=[],this.all_special_ids=[],this.added_tokens=[];for(const c of o.added_tokens){const d=new AddedToken(c);this.added_tokens.push(d),this.model.tokens_to_ids.set(d.content,d.id),this.model.vocab[d.id]=d.content,d.special&&(this.special_tokens.push(d.content),this.all_special_ids.push(d.id))}if(this.additional_special_tokens=a.additional_special_tokens??[],this.special_tokens.push(...this.additional_special_tokens),this.special_tokens=[...new Set(this.special_tokens)],this.decoder&&(this.decoder.added_tokens=this.added_tokens,this.decoder.end_of_word_suffix=this.model.end_of_word_suffix),this.added_tokens_regex=this.added_tokens.length>0?new RegExp(this.added_tokens.map(c=>`${c.lstrip?"\\s*":""}(${escapeRegExp(c.content)})${c.rstrip?"\\s*":""}`).join("|")):null,this.mask_token=this.getToken("mask_token"),this.mask_token_id=this.model.tokens_to_ids.get(this.mask_token),this.pad_token=this.getToken("pad_token","eos_token"),this.pad_token_id=this.model.tokens_to_ids.get(this.pad_token),this.sep_token=this.getToken("sep_token"),this.sep_token_id=this.model.tokens_to_ids.get(this.sep_token),this.unk_token=this.getToken("unk_token"),this.unk_token_id=this.model.tokens_to_ids.get(this.unk_token),this.model_max_length=a.model_max_length,this.remove_space=a.remove_space,this.clean_up_tokenization_spaces=a.clean_up_tokenization_spaces??!0,this.do_lowercase_and_remove_accent=a.do_lowercase_and_remove_accent??!1,this.padding_side="right",this.legacy=!1,this.chat_template=a.chat_template??null,Array.isArray(this.chat_template)){const c=Object.create(null);for(const{name:d,template:g}of this.chat_template){if(typeof d!="string"||typeof g!="string")throw new Error('Chat template must be a list of objects with "name" and "template" properties');c[d]=g}this.chat_template=c}this._compiled_template_cache=new Map}getToken(...o){for(const a of o){const c=this._tokenizer_config[a];if(c)if(typeof c=="object"){if(c.__type==="AddedToken")return c.content;throw Error(`Unknown token: ${c}`)}else return c}return null}static async from_pretrained(o,{progress_callback:a=null,config:c=null,cache_dir:d=null,local_files_only:g=!1,revision:$="main",legacy:j=null}={}){const _e=await loadTokenizer(o,{progress_callback:a,config:c,cache_dir:d,local_files_only:g,revision:$,legacy:j});return new this(..._e)}_call(o,{text_pair:a=null,add_special_tokens:c=!0,padding:d=!1,truncation:g=null,max_length:$=null,return_tensor:j=!0,return_token_type_ids:_e=null}={}){const et=Array.isArray(o);let _;if(et){if(o.length===0)throw Error("text array must be non-empty");if(a!==null){if(Array.isArray(a)){if(o.length!==a.length)throw Error("text and text_pair must have the same length")}else throw Error("text_pair must also be an array");_=o.map((tt,nt)=>this._encode_plus(tt,a[nt],{add_special_tokens:c,return_token_type_ids:_e}))}else _=o.map(tt=>this._encode_plus(tt,null,{add_special_tokens:c,return_token_type_ids:_e}))}else{if(o==null)throw Error("text may not be null or undefined");if(Array.isArray(a))throw Error("When specifying `text_pair`, since `text` is a string, `text_pair` must also be a string (i.e., not an array).");_=[this._encode_plus(o,a,{add_special_tokens:c,return_token_type_ids:_e})]}if($===null?d==="max_length"?$=this.model_max_length:$=max$4(_.map(tt=>tt.input_ids.length))[0]:g||console.warn("Truncation was not explicitly activated but `max_length` is provided a specific value, please use `truncation=true` to explicitly truncate examples to max length."),$=Math.min($,this.model_max_length),d||g)for(let tt=0;tt<_.length;++tt)_[tt].input_ids.length!==$&&(_[tt].input_ids.length>$?g&&truncateHelper(_[tt],$):d&&padHelper(_[tt],$,nt=>nt==="input_ids"?this.pad_token_id:0,this.padding_side));const b={};if(j){if(!(d&&g)&&_.some(nt=>{var rt;for(const st of Object.keys(nt))if(nt[st].length!==((rt=_[0][st])==null?void 0:rt.length))return!0;return!1}))throw Error("Unable to create tensor, you should probably activate truncation and/or padding with 'padding=true' and 'truncation=true' to have batched tensors with the same length.");const tt=[_.length,_[0].input_ids.length];for(const nt of Object.keys(_[0]))b[nt]=new Tensor$1("int64",BigInt64Array.from(_.flatMap(rt=>rt[nt]).map(BigInt)),tt)}else{for(const tt of Object.keys(_[0]))b[tt]=_.map(nt=>nt[tt]);if(!et)for(const tt of Object.keys(b))b[tt]=b[tt][0]}return b}_encode_text(o){return o===null?null:(this.added_tokens_regex?o.split(this.added_tokens_regex).filter(d=>d):[o]).map((d,g)=>{if(this.added_tokens.find(j=>j.content===d)!==void 0)return d;{if(this.remove_space===!0&&(d=d.trim().split(/\s+/).join(" ")),this.do_lowercase_and_remove_accent&&(d=lowercase_and_remove_accent(d)),this.normalizer!==null&&(d=this.normalizer(d)),d.length===0)return[];const j=this.pre_tokenizer!==null?this.pre_tokenizer(d,{section_index:g}):[d];return this.model(j)}}).flat()}_encode_plus(o,a=null,{add_special_tokens:c=!0,return_token_type_ids:d=null}={}){const g=this._encode_text(o),$=this._encode_text(a),j=this.post_processor?this.post_processor(g,$,{add_special_tokens:c}):{tokens:mergeArrays(g??[],$??[])},_e=this.model.convert_tokens_to_ids(j.tokens),et={input_ids:_e,attention_mask:new Array(_e.length).fill(1)};return(d??this.return_token_type_ids)&&j.token_type_ids&&(et.token_type_ids=j.token_type_ids),et}encode(o,a=null,{add_special_tokens:c=!0,return_token_type_ids:d=null}={}){const{input_ids:g}=this._encode_plus(o,a,{add_special_tokens:c,return_token_type_ids:d});return g}batch_decode(o,a={}){return o instanceof Tensor$1&&(o=o.tolist()),o.map(c=>this.decode(c,a))}decode(o,a={}){if(o instanceof Tensor$1&&(o=prepareTensorForDecode(o)),!Array.isArray(o)||o.length===0||!isIntegralNumber(o[0]))throw Error("token_ids must be a non-empty array of integers.");return this.decode_single(o,a)}decode_single(o,{skip_special_tokens:a=!1,clean_up_tokenization_spaces:c=null}){let d=this.model.convert_ids_to_tokens(o);a&&(d=d.filter($=>!this.special_tokens.includes($)));let g=this.decoder?this.decoder(d):d.join(" ");return this.decoder&&this.decoder.end_of_word_suffix&&(g=g.replaceAll(this.decoder.end_of_word_suffix," "),a&&(g=g.trim())),(c??this.clean_up_tokenization_spaces)&&(g=clean_up_tokenization(g)),g}get default_chat_template(){return this._warned_about_chat_template||(console.warn("No chat template is defined for this tokenizer - using a default chat template that implements the ChatML format. If the default is not appropriate for your model, please set `tokenizer.chat_template` to an appropriate template. See https://huggingface.co/docs/transformers/main/chat_templating for more information."),this._warned_about_chat_template=!0),this._default_chat_template}apply_chat_template(o,{chat_template:a=null,add_generation_prompt:c=!1,tokenize:d=!0,padding:g=!1,truncation:$=!1,max_length:j=null,return_tensor:_e=!0,tokenizer_kwargs:et={},..._}={}){if(this.chat_template&&typeof this.chat_template=="object"||this.chat_template===null&&this.default_chat_template&&typeof this.default_chat_template=="object"){const rt=this.chat_template??this.default_chat_template;if(a!==null&&Object.hasOwn(rt,a))a=rt[a];else if(a===null&&"default"in rt)a=rt.default;else if(a===null)throw Error(`This model has multiple chat templates with no default specified! Please either pass a chat template or the name of the template you wish to use to the 'chat_template' argument. Available template names are ${Object.keys(rt).sort()}.`)}else a??(a=this.chat_template??this.default_chat_template);if(typeof a!="string")throw Error(`chat_template must be a string, but got ${typeof a}`);let b=this._compiled_template_cache.get(a);b===void 0&&(b=new Template(a),this._compiled_template_cache.set(a,b));const tt=Object.create(null);for(const rt of SPECIAL_TOKEN_ATTRIBUTES){const st=this.getToken(rt);st&&(tt[rt]=st)}const nt=b.render({messages:o,add_generation_prompt:c,...tt,..._});return d?this._call(nt,{add_special_tokens:!1,padding:g,truncation:$,max_length:j,return_tensor:_e,...et}).input_ids:nt}}class BertTokenizer extends PreTrainedTokenizer{constructor(){super(...arguments);Ht(this,"return_token_type_ids",!0)}}class AlbertTokenizer extends PreTrainedTokenizer{constructor(){super(...arguments);Ht(this,"return_token_type_ids",!0)}}class MobileBertTokenizer extends PreTrainedTokenizer{constructor(){super(...arguments);Ht(this,"return_token_type_ids",!0)}}class SqueezeBertTokenizer extends PreTrainedTokenizer{constructor(){super(...arguments);Ht(this,"return_token_type_ids",!0)}}class DebertaTokenizer extends PreTrainedTokenizer{constructor(){super(...arguments);Ht(this,"return_token_type_ids",!0)}}class DebertaV2Tokenizer extends PreTrainedTokenizer{constructor(){super(...arguments);Ht(this,"return_token_type_ids",!0)}}class HerbertTokenizer extends PreTrainedTokenizer{constructor(){super(...arguments);Ht(this,"return_token_type_ids",!0)}}class ConvBertTokenizer extends PreTrainedTokenizer{constructor(){super(...arguments);Ht(this,"return_token_type_ids",!0)}}class RoFormerTokenizer extends PreTrainedTokenizer{constructor(){super(...arguments);Ht(this,"return_token_type_ids",!0)}}class DistilBertTokenizer extends PreTrainedTokenizer{}class CamembertTokenizer extends PreTrainedTokenizer{}class XLMTokenizer extends PreTrainedTokenizer{constructor(o,a){super(o,a);Ht(this,"return_token_type_ids",!0);console.warn('WARNING: `XLMTokenizer` is not yet supported by Hugging Face\'s "fast" tokenizers library. Therefore, you may experience slightly inaccurate results.')}}class ElectraTokenizer extends PreTrainedTokenizer{constructor(){super(...arguments);Ht(this,"return_token_type_ids",!0)}}class T5Tokenizer extends PreTrainedTokenizer{}class GPT2Tokenizer extends PreTrainedTokenizer{constructor(){super(...arguments);Ht(this,"_default_chat_template",'{% for message in messages %}" "{{ message.content }}{{ eos_token }}" "{% endfor %}')}}class BartTokenizer extends PreTrainedTokenizer{}class MBartTokenizer extends PreTrainedTokenizer{constructor(s,o){super(s,o),this.languageRegex=/^[a-z]{2}_[A-Z]{2}$/,this.language_codes=this.special_tokens.filter(a=>this.languageRegex.test(a)),this.lang_to_token=a=>a}_build_translation_inputs(s,o,a){return _build_translation_inputs(this,s,o,a)}}class MBart50Tokenizer extends MBartTokenizer{}class RobertaTokenizer extends PreTrainedTokenizer{}class BloomTokenizer extends GPT2Tokenizer{constructor(s,o){var d,g;const a=".,!?…。，、।۔،",c=(g=(d=s.pre_tokenizer)==null?void 0:d.pretokenizers[0])==null?void 0:g.pattern;c&&c.Regex===` ?[^(\\s|[${a}])]+`&&(c.Regex=` ?[^\\s${a}]+`),super(s,o)}}const SPIECE_UNDERLINE="▁";class LlamaTokenizer extends PreTrainedTokenizer{constructor(o,a){super(o,a);Ht(this,"_default_chat_template",`{% if messages[0]['role'] == 'system' %}{% set loop_messages = messages[1:] %}{% set system_message = messages[0]['content'] %}{% elif USE_DEFAULT_PROMPT == true and not '<<SYS>>' in messages[0]['content'] %}{% set loop_messages = messages %}{% set system_message = 'DEFAULT_SYSTEM_MESSAGE' %}{% else %}{% set loop_messages = messages %}{% set system_message = false %}{% endif %}{% for message in loop_messages %}{% if (message['role'] == 'user') != (loop.index0 % 2 == 0) %}{{ raise_exception('Conversation roles must alternate user/assistant/user/assistant/...') }}{% endif %}{% if loop.index0 == 0 and system_message != false %}{% set content = '<<SYS>>
' + system_message + '
<</SYS>>

' + message['content'] %}{% else %}{% set content = message['content'] %}{% endif %}{% if message['role'] == 'user' %}{{ bos_token + '[INST] ' + content.strip() + ' [/INST]' }}{% elif message['role'] == 'system' %}{{ '<<SYS>>
' + content.strip() + '
<</SYS>>

' }}{% elif message['role'] == 'assistant' %}{{ ' '  + content.strip() + ' ' + eos_token }}{% endif %}{% endfor %}`);Ht(this,"DEFAULT_SYSTEM_PROMPT",`You are a helpful, respectful and honest assistant. Always answer as helpfully as possible, while being safe. Your answers should not include any harmful, unethical, racist, sexist, toxic, dangerous, or illegal content. Please ensure that your responses are socially unbiased and positive in nature.

If a question does not make any sense, or is not factually coherent, explain why instead of answering something not correct. If you don't know the answer to a question, please don't share false information.`);this.use_default_system_prompt=a.use_default_system_prompt??!1,this.legacy=a.legacy??!0,this.legacy||(this.normalizer=null,this.pre_tokenizer=new MetaspacePreTokenizer({replacement:SPIECE_UNDERLINE,add_prefix_space:!0,prepend_scheme:"first"}))}_encode_text(o){if(o===null)return null;if(this.legacy||o.length===0)return super._encode_text(o);let a=super._encode_text(SPIECE_UNDERLINE+o.replaceAll(SPIECE_UNDERLINE," "));return a.length>1&&a[0]===SPIECE_UNDERLINE&&this.special_tokens.includes(a[1])&&(a=a.slice(1)),a}get default_chat_template(){return super.default_chat_template.replaceAll("USE_DEFAULT_PROMPT",this.use_default_system_prompt?"true":"false").replaceAll("DEFAULT_SYSTEM_MESSAGE",this.DEFAULT_SYSTEM_PROMPT.replaceAll(`
`,"\\n").replaceAll("'","\\'"))}}class CodeLlamaTokenizer extends LlamaTokenizer{}class XLMRobertaTokenizer extends PreTrainedTokenizer{}class MPNetTokenizer extends PreTrainedTokenizer{}class FalconTokenizer extends PreTrainedTokenizer{}class GPTNeoXTokenizer extends PreTrainedTokenizer{}class EsmTokenizer extends PreTrainedTokenizer{}class Qwen2Tokenizer extends PreTrainedTokenizer{}class GemmaTokenizer extends PreTrainedTokenizer{constructor(){super(...arguments);Ht(this,"_default_chat_template",`{% if messages[0]['role'] == 'system' %}{{ raise_exception('System role not supported') }}{% endif %}{% for message in messages %}{% if (message['role'] == 'user') != (loop.index0 % 2 == 0) %}{{ raise_exception('Conversation roles must alternate user/assistant/user/assistant/...') }}{% endif %}{% if (message['role'] == 'assistant') %}{% set role = 'model' %}{% else %}{% set role = message['role'] %}{% endif %}{{ '<start_of_turn>' + role + '
' + message['content'] | trim + '<end_of_turn>
' }}{% endfor %}{% if add_generation_prompt %}{{'<start_of_turn>model
'}}{% endif %}`)}}class Grok1Tokenizer extends PreTrainedTokenizer{}function _build_translation_inputs(i,s,o,a){if(!("language_codes"in i)||!Array.isArray(i.language_codes))throw new Error("Tokenizer must have `language_codes` attribute set and it should be an array of language ids.");if(!("languageRegex"in i)||!(i.languageRegex instanceof RegExp))throw new Error("Tokenizer must have `languageRegex` attribute set and it should be a regular expression.");if(!("lang_to_token"in i)||typeof i.lang_to_token!="function")throw new Error("Tokenizer must have `lang_to_token` attribute set and it should be a function.");const c=a.src_lang,d=a.tgt_lang;if(!i.language_codes.includes(d))throw new Error(`Target language code "${d}" is not valid. Must be one of: {${i.language_codes.join(", ")}}`);if(c!==void 0){if(!i.language_codes.includes(c))throw new Error(`Source language code "${c}" is not valid. Must be one of: {${i.language_codes.join(", ")}}`);for(const g of i.post_processor.config.single)if("SpecialToken"in g&&i.languageRegex.test(g.SpecialToken.id)){g.SpecialToken.id=i.lang_to_token(c);break}}return a.forced_bos_token_id=i.model.convert_tokens_to_ids([i.lang_to_token(d)])[0],i._call(s,o)}class NllbTokenizer extends PreTrainedTokenizer{constructor(s,o){super(s,o),this.languageRegex=/^[a-z]{3}_[A-Z][a-z]{3}$/,this.language_codes=this.special_tokens.filter(a=>this.languageRegex.test(a)),this.lang_to_token=a=>a}_build_translation_inputs(s,o,a){return _build_translation_inputs(this,s,o,a)}}class M2M100Tokenizer extends PreTrainedTokenizer{constructor(s,o){super(s,o),this.languageRegex=/^__[a-z]{2,3}__$/,this.language_codes=this.special_tokens.filter(a=>this.languageRegex.test(a)).map(a=>a.slice(2,-2)),this.lang_to_token=a=>`__${a}__`}_build_translation_inputs(s,o,a){return _build_translation_inputs(this,s,o,a)}}const WHISPER_LANGUAGES=[["en","english"],["zh","chinese"],["de","german"],["es","spanish"],["ru","russian"],["ko","korean"],["fr","french"],["ja","japanese"],["pt","portuguese"],["tr","turkish"],["pl","polish"],["ca","catalan"],["nl","dutch"],["ar","arabic"],["sv","swedish"],["it","italian"],["id","indonesian"],["hi","hindi"],["fi","finnish"],["vi","vietnamese"],["he","hebrew"],["uk","ukrainian"],["el","greek"],["ms","malay"],["cs","czech"],["ro","romanian"],["da","danish"],["hu","hungarian"],["ta","tamil"],["no","norwegian"],["th","thai"],["ur","urdu"],["hr","croatian"],["bg","bulgarian"],["lt","lithuanian"],["la","latin"],["mi","maori"],["ml","malayalam"],["cy","welsh"],["sk","slovak"],["te","telugu"],["fa","persian"],["lv","latvian"],["bn","bengali"],["sr","serbian"],["az","azerbaijani"],["sl","slovenian"],["kn","kannada"],["et","estonian"],["mk","macedonian"],["br","breton"],["eu","basque"],["is","icelandic"],["hy","armenian"],["ne","nepali"],["mn","mongolian"],["bs","bosnian"],["kk","kazakh"],["sq","albanian"],["sw","swahili"],["gl","galician"],["mr","marathi"],["pa","punjabi"],["si","sinhala"],["km","khmer"],["sn","shona"],["yo","yoruba"],["so","somali"],["af","afrikaans"],["oc","occitan"],["ka","georgian"],["be","belarusian"],["tg","tajik"],["sd","sindhi"],["gu","gujarati"],["am","amharic"],["yi","yiddish"],["lo","lao"],["uz","uzbek"],["fo","faroese"],["ht","haitian creole"],["ps","pashto"],["tk","turkmen"],["nn","nynorsk"],["mt","maltese"],["sa","sanskrit"],["lb","luxembourgish"],["my","myanmar"],["bo","tibetan"],["tl","tagalog"],["mg","malagasy"],["as","assamese"],["tt","tatar"],["haw","hawaiian"],["ln","lingala"],["ha","hausa"],["ba","bashkir"],["jw","javanese"],["su","sundanese"]],WHISPER_LANGUAGE_MAPPING=new Map(WHISPER_LANGUAGES),WHISPER_TO_LANGUAGE_CODE_MAPPING=new Map([...WHISPER_LANGUAGES.map(([i,s])=>[s,i]),["burmese","my"],["valencian","ca"],["flemish","nl"],["haitian","ht"],["letzeburgesch","lb"],["pushto","ps"],["panjabi","pa"],["moldavian","ro"],["moldovan","ro"],["sinhalese","si"],["castilian","es"]]);class WhisperTokenizer extends PreTrainedTokenizer{constructor(){super(...arguments);Ht(this,"_default_chat_template",'{% for message in messages %}" "{{ message.content }}{{ eos_token }}" "{% endfor %}')}_decode_asr(o,{return_timestamps:a=!1,return_language:c=!1,time_precision:d=null,force_full_sequences:g=!0}={}){if(d===null)throw Error("Must specify time_precision");let $=null;const j=a==="word";function _e(){return{language:$,timestamp:[null,null],text:""}}const et=[];let _=_e(),b=0;const tt=this.model.convert_tokens_to_ids(["<|notimestamps|>"])[0]+1;let nt=[],rt=[],st=!1,ot=null;const it=new Set(this.all_special_ids);for(const ut of o){const ct=ut.tokens,dt=j?ut.token_timestamps:null;let pt=null,ht=tt;if("stride"in ut){const[wt,_t,bt]=ut.stride;if(b-=_t,ot=wt-bt,_t&&(ht=_t/d+tt),bt)for(let xt=ct.length-1;xt>=0;--xt){const mt=ct[xt];if(mt>=tt){if(pt!==null&&(mt-tt)*d<ot)break;pt=mt}}}let ft=[],yt=[];for(let wt=0;wt<ct.length;++wt){const _t=ct[wt];if(it.has(_t)){const bt=this.decode([_t]),xt=WHISPER_LANGUAGE_MAPPING.get(bt.slice(2,-2));if(xt!==void 0){if($!==null&&xt!==$&&!a){nt.push(ft);const mt=this.findLongestCommonSequence(nt)[0],vt=this.decode(mt);_.text=vt,et.push(_),nt=[],ft=[],_=_e()}$=_.language=xt}}else if(_t>=tt){const bt=(_t-tt)*d+b,xt=round$4(bt,2);if(pt!==null&&_t>=pt)st=!0;else if(st||nt.length>0&&_t<ht)st=!1;else if(_.timestamp[0]===null)_.timestamp[0]=xt;else if(xt!==_.timestamp[0]){_.timestamp[1]=xt,nt.push(ft),j&&rt.push(yt);const[mt,vt]=this.findLongestCommonSequence(nt,rt),Et=this.decode(mt);_.text=Et,j&&(_.words=this.collateWordTimestamps(mt,vt,$)),et.push(_),nt=[],ft=[],rt=[],yt=[],_=_e()}}else if(ft.push(_t),j){let bt=round$4(dt[wt]+b,2),xt;wt+1<dt.length?xt=round$4(dt[wt+1]+b,2):xt=null,yt.push([bt,xt])}}if("stride"in ut){const[wt,_t,bt]=ut.stride;b+=wt-bt}ft.length>0?(nt.push(ft),j&&rt.push(yt)):nt.every(wt=>wt.length===0)&&(_=_e(),nt=[],ft=[],rt=[],yt=[])}if(nt.length>0){if(g&&a)throw new Error("Whisper did not predict an ending timestamp, which can happen if audio is cut off in the middle of a word. Also make sure WhisperTimeStampLogitsProcessor was used during generation.");const[ut,ct]=this.findLongestCommonSequence(nt,rt),dt=this.decode(ut);_.text=dt,j&&(_.words=this.collateWordTimestamps(ut,ct,$)),et.push(_)}let at=Object.create(null);const lt=et.map(ut=>ut.text).join("");if(a||c){for(let ut=0;ut<et.length;++ut){const ct=et[ut];a||delete ct.timestamp,c||delete ct.language}if(j){const ut=[];for(const ct of et)for(const dt of ct.words)ut.push(dt);at={chunks:ut}}else at={chunks:et}}return[lt,at]}findLongestCommonSequence(o,a=null){let c=o[0],d=c.length,g=[];const $=Array.isArray(a)&&a.length>0;let j=$?[]:null,_e=$?a[0]:null;for(let et=1;et<o.length;++et){const _=o[et];let b=0,tt=[d,d,0,0];const nt=_.length;for(let ut=1;ut<d+nt;++ut){const ct=ut/1e4,dt=Math.max(0,d-ut),pt=Math.min(d,d+nt-ut),ht=c.slice(dt,pt),ft=Math.max(0,ut-d),yt=Math.min(nt,ut),wt=_.slice(ft,yt);if(ht.length!==wt.length)throw new Error("There is a bug within whisper `decode_asr` function, please report it. Dropping to prevent bad inference.");const _t=ht.filter((xt,mt)=>xt===wt[mt]).length,bt=_t/ut+ct;_t>1&&bt>b&&(b=bt,tt=[dt,pt,ft,yt])}const[rt,st,ot,it]=tt,at=Math.floor((st+rt)/2),lt=Math.floor((it+ot)/2);g.push(...c.slice(0,at)),c=_.slice(lt),d=c.length,$&&(j.push(..._e.slice(0,at)),_e=a[et].slice(lt))}return g.push(...c),$?(j.push(..._e),[g,j]):[g,[]]}collateWordTimestamps(o,a,c){const[d,g,$]=this.combineTokensIntoWords(o,c),j=[];for(let _e=0;_e<d.length;++_e){const et=$[_e];j.push({text:d[_e],timestamp:[a[et.at(0)][0],a[et.at(-1)][1]]})}return j}combineTokensIntoWords(o,a,c=`"'“¡¿([{-`,d=`"'.。,，!！?？:：”)]}、`){a=a??"english";let g,$,j;return["chinese","japanese","thai","lao","myanmar"].includes(a)?[g,$,j]=this.splitTokensOnUnicode(o):[g,$,j]=this.splitTokensOnSpaces(o),this.mergePunctuations(g,$,j,c,d)}decode(o,a){let c;return a&&a.decode_with_timestamps?(o instanceof Tensor$1&&(o=prepareTensorForDecode(o)),c=this.decodeWithTimestamps(o,a)):c=super.decode(o,a),c}decodeWithTimestamps(o,a){const c=(a==null?void 0:a.time_precision)??.02,d=Array.from(this.all_special_ids).at(-1)+1;let g=[[]];for(const $ of o)if($>=d){const j=round$4(($-d)*c,2);g.push(`<|${j}|>`),g.push([])}else g[g.length-1].push($);return g=g.map($=>typeof $=="string"?$:super.decode($,a)),g.join("")}splitTokensOnUnicode(o){const a=this.decode(o,{decode_with_timestamps:!0}),c="�",d=[],g=[],$=[];let j=[],_e=[],et=0;for(let _=0;_<o.length;++_){const b=o[_];j.push(b),_e.push(_);const tt=this.decode(j,{decode_with_timestamps:!0});(!tt.includes(c)||a[et+tt.indexOf(c)]===c)&&(d.push(tt),g.push(j),$.push(_e),j=[],_e=[],et+=tt.length)}return[d,g,$]}splitTokensOnSpaces(o){const[a,c,d]=this.splitTokensOnUnicode(o),g=[],$=[],j=[],_e=new RegExp(`^[${PUNCTUATION_REGEX}]$`,"gu");for(let et=0;et<a.length;++et){const _=a[et],b=c[et],tt=d[et],nt=b[0]>=this.model.tokens_to_ids.get("<|endoftext|>"),rt=_.startsWith(" "),st=_.trim(),ot=_e.test(st);if(nt||rt||ot||g.length===0)g.push(_),$.push(b),j.push(tt);else{const it=g.length-1;g[it]+=_,$[it].push(...b),j[it].push(...tt)}}return[g,$,j]}mergePunctuations(o,a,c,d,g){const $=structuredClone(o),j=structuredClone(a),_e=structuredClone(c);let et=$.length-2,_=$.length-1;for(;et>=0;)$[et].startsWith(" ")&&d.includes($[et].trim())?($[_]=$[et]+$[_],j[_]=mergeArrays(j[et],j[_]),_e[_]=mergeArrays(_e[et],_e[_]),$[et]="",j[et]=[],_e[et]=[]):_=et,--et;for(et=0,_=1;_<$.length;)!$[et].endsWith(" ")&&g.includes($[_])?($[et]+=$[_],j[et]=mergeArrays(j[et],j[_]),_e[et]=mergeArrays(_e[et],_e[_]),$[_]="",j[_]=[],_e[_]=[]):et=_,++_;return[$.filter(b=>b),j.filter(b=>b.length>0),_e.filter(b=>b.length>0)]}get_decoder_prompt_ids({language:o=null,task:a=null,no_timestamps:c=!0}={}){const d=[];if(o){o=o.toLowerCase();let g=WHISPER_TO_LANGUAGE_CODE_MAPPING.get(o);if(g===void 0)if(WHISPER_LANGUAGE_MAPPING.has(o))g=o;else{const _e=o.length===2?WHISPER_LANGUAGE_MAPPING.keys():WHISPER_LANGUAGE_MAPPING.values();throw new Error(`Language "${o}" is not supported. Must be one of: ${JSON.stringify(_e)}`)}const $=this.model.tokens_to_ids.get(`<|${g}|>`);if($===void 0)throw new Error(`Unable to find language "${g}" in model vocabulary. Please report this issue at https://github.com/xenova/transformers.js/issues/new/choose.`);d.push($)}else d.push(null);if(a){if(a=a.toLowerCase(),a!=="transcribe"&&a!=="translate")throw new Error(`Task "${a}" is not supported. Must be one of: ["transcribe", "translate"]`);const g=this.model.tokens_to_ids.get(`<|${a}|>`);if(g===void 0)throw new Error(`Unable to find task "${a}" in model vocabulary. Please report this issue at https://github.com/xenova/transformers.js/issues/new/choose.`);d.push(g)}else d.push(null);if(c){const g=this.model.tokens_to_ids.get("<|notimestamps|>");if(g===void 0)throw new Error('Unable to find "<|notimestamps|>" in model vocabulary. Please report this issue at https://github.com/xenova/transformers.js/issues/new/choose.');d.push(g)}return d.map((g,$)=>[$+1,g]).filter(g=>g[1]!==null)}}class CodeGenTokenizer extends PreTrainedTokenizer{}class CLIPTokenizer extends PreTrainedTokenizer{}class SiglipTokenizer extends PreTrainedTokenizer{}class MarianTokenizer extends PreTrainedTokenizer{constructor(s,o){super(s,o),this.languageRegex=/^(>>\w+<<)\s*/g,this.supported_language_codes=this.model.vocab.filter(a=>this.languageRegex.test(a)),console.warn('WARNING: `MarianTokenizer` is not yet supported by Hugging Face\'s "fast" tokenizers library. Therefore, you may experience slightly inaccurate results.')}_encode_text(s){if(s===null)return null;const[o,...a]=s.trim().split(this.languageRegex);if(a.length===0)return super._encode_text(o);if(a.length===2){const[c,d]=a;return this.supported_language_codes.includes(c)||console.warn(`Unsupported language code "${c}" detected, which may lead to unexpected behavior. Should be one of: ${JSON.stringify(this.supported_language_codes)}`),mergeArrays([c],super._encode_text(d))}}}class Wav2Vec2CTCTokenizer extends PreTrainedTokenizer{}class BlenderbotTokenizer extends PreTrainedTokenizer{constructor(){super(...arguments);Ht(this,"_default_chat_template","{% for message in messages %}{% if message['role'] == 'user' %}{{ ' ' }}{% endif %}{{ message['content'] }}{% if not loop.last %}{{ '  ' }}{% endif %}{% endfor %}{{ eos_token }}")}}class BlenderbotSmallTokenizer extends BlenderbotTokenizer{}class SpeechT5Tokenizer extends PreTrainedTokenizer{}class NougatTokenizer extends PreTrainedTokenizer{}class VitsTokenizer extends PreTrainedTokenizer{constructor(s,o){super(s,o),this.decoder=new VitsDecoder({})}}class CohereTokenizer extends PreTrainedTokenizer{}class AutoTokenizer{static async from_pretrained(s,{quantized:o=!0,progress_callback:a=null,config:c=null,cache_dir:d=null,local_files_only:g=!1,revision:$="main",legacy:j=null}={}){var tt;const[_e,et]=await loadTokenizer(s,{quantized:o,progress_callback:a,config:c,cache_dir:d,local_files_only:g,revision:$,legacy:j}),_=((tt=et.tokenizer_class)==null?void 0:tt.replace(/Fast$/,""))??"PreTrainedTokenizer";let b=this.TOKENIZER_CLASS_MAPPING[_];return b||(console.warn(`Unknown tokenizer class "${_}", attempting to construct from base class.`),b=PreTrainedTokenizer),new b(_e,et)}}Ht(AutoTokenizer,"TOKENIZER_CLASS_MAPPING",{T5Tokenizer,DistilBertTokenizer,CamembertTokenizer,DebertaTokenizer,DebertaV2Tokenizer,BertTokenizer,HerbertTokenizer,ConvBertTokenizer,RoFormerTokenizer,XLMTokenizer,ElectraTokenizer,MobileBertTokenizer,SqueezeBertTokenizer,AlbertTokenizer,GPT2Tokenizer,BartTokenizer,MBartTokenizer,MBart50Tokenizer,RobertaTokenizer,WhisperTokenizer,CodeGenTokenizer,CLIPTokenizer,SiglipTokenizer,MarianTokenizer,BloomTokenizer,NllbTokenizer,M2M100Tokenizer,LlamaTokenizer,CodeLlamaTokenizer,XLMRobertaTokenizer,MPNetTokenizer,FalconTokenizer,GPTNeoXTokenizer,EsmTokenizer,Wav2Vec2CTCTokenizer,BlenderbotTokenizer,BlenderbotSmallTokenizer,SpeechT5Tokenizer,NougatTokenizer,VitsTokenizer,Qwen2Tokenizer,GemmaTokenizer,Grok1Tokenizer,CohereTokenizer,PreTrainedTokenizer});async function loadConfig(i,s){return await getModelJSON(i,"config.json",!0,s)}class PretrainedConfig{constructor(s){this.model_type=null,this.is_encoder_decoder=!1,Object.assign(this,s)}static async from_pretrained(s,{progress_callback:o=null,config:a=null,cache_dir:c=null,local_files_only:d=!1,revision:g="main"}={}){let $=a??await loadConfig(s,{progress_callback:o,config:a,cache_dir:c,local_files_only:d,revision:g});return new this($)}}class AutoConfig{static async from_pretrained(...s){return PretrainedConfig.from_pretrained(...s)}}class LogitsProcessorList extends Callable{constructor(){super(),this.processors=[]}push(s){this.processors.push(s)}extend(s){this.processors.push(...s)}_call(s,o){for(let a of o)this.processors.forEach(c=>c(s,a))}[Symbol.iterator](){return this.processors.values()}}class LogitsProcessor extends Callable{_call(s,o){throw Error("`_call` should be implemented in a subclass")}}class ForceTokensLogitsProcessor extends LogitsProcessor{constructor(s){super(),this.force_token_map=Object.fromEntries(s??[])}_call(s,o){let a=this.force_token_map[s.length];return exists(a)&&(o.data.fill(-1/0),o.data[a]=0),o}}class ForcedBOSTokenLogitsProcessor extends LogitsProcessor{constructor(s){super(),this.bos_token_id=s}_call(s,o){return s.length===1&&(o.data.fill(-1/0),o.data[this.bos_token_id]=0),o}}class ForcedEOSTokenLogitsProcessor extends LogitsProcessor{constructor(s,o){super(),this.max_length=s,this.forced_eos_token_id=o}_call(s,o){}}class SuppressTokensAtBeginLogitsProcessor extends LogitsProcessor{constructor(s,o){super(),this.begin_suppress_tokens=s,this.begin_index=o}_call(s,o){if(s.length===this.begin_index)for(let a of this.begin_suppress_tokens)o.data[a]=-1/0;return o}}class WhisperTimeStampLogitsProcessor extends LogitsProcessor{constructor(s){super(),this.eos_token_id=s.eos_token_id,this.no_timestamps_token_id=s.no_timestamps_token_id,this.timestamp_begin=this.no_timestamps_token_id+1,this.begin_index=(s.forced_decoder_ids||[]).length+2,s.forced_decoder_ids.slice(-1)[0][1]===this.no_timestamps_token_id&&(this.begin_index-=1),this.max_initial_timestamp_index=s.max_initial_timestamp_index}_call(s,o){const a=o.data;if(a[this.no_timestamps_token_id]=-1/0,s.length===this.begin_index-1)return a.fill(-1/0),a[this.timestamp_begin]=0,o;const c=s.slice(this.begin_index),d=c.length>=1&&c[c.length-1]>=this.timestamp_begin,g=c.length<2||c[c.length-2]>=this.timestamp_begin;if(d&&(g?a.subarray(this.timestamp_begin).fill(-1/0):a.subarray(0,this.eos_token_id).fill(-1/0)),s.length===this.begin_index&&this.max_initial_timestamp_index!==null){const et=this.timestamp_begin+this.max_initial_timestamp_index;a.subarray(et+1).fill(-1/0)}const $=log_softmax(a),j=Math.log($.subarray(this.timestamp_begin).map(Math.exp).reduce((et,_)=>et+_)),_e=max$4($.subarray(0,this.timestamp_begin))[0];return j>_e&&a.subarray(0,this.timestamp_begin).fill(-1/0),o}}class NoRepeatNGramLogitsProcessor extends LogitsProcessor{constructor(s){super(),this.no_repeat_ngram_size=s}getNgrams(s){const o=s.length,a=[];for(let d=0;d<o+1-this.no_repeat_ngram_size;++d){const g=[];for(let $=0;$<this.no_repeat_ngram_size;++$)g.push(s[d+$]);a.push(g)}const c=new Map;for(const d of a){const g=d.slice(0,d.length-1),$=JSON.stringify(g),j=c.get($)??[];j.push(d[d.length-1]),c.set($,j)}return c}getGeneratedNgrams(s,o){const a=o.slice(o.length+1-this.no_repeat_ngram_size,o.length);return s.get(JSON.stringify(a))??[]}calcBannedNgramTokens(s){const o=[];if(s.length+1<this.no_repeat_ngram_size)return o;{const a=this.getNgrams(s);return this.getGeneratedNgrams(a,s)}}_call(s,o){const a=this.calcBannedNgramTokens(s);for(const c of a)o.data[c]=-1/0;return o}}class RepetitionPenaltyLogitsProcessor extends LogitsProcessor{constructor(s){super(),this.penalty=s}_call(s,o){for(const a of s)o.data[a]<0?o.data[a]*=this.penalty:o.data[a]/=this.penalty;return o}}class MinLengthLogitsProcessor extends LogitsProcessor{constructor(s,o){super(),this.min_length=s,this.eos_token_id=Array.isArray(o)?o:[o]}_call(s,o){if(s.length<this.min_length)for(const a of this.eos_token_id)o.data[a]=-1/0;return o}}class MinNewTokensLengthLogitsProcessor extends LogitsProcessor{constructor(s,o,a){super(),this.prompt_length_to_skip=s,this.min_new_tokens=o,this.eos_token_id=Array.isArray(a)?a:[a]}_call(s,o){if(s.length-this.prompt_length_to_skip<this.min_new_tokens)for(const c of this.eos_token_id)o.data[c]=-1/0;return o}}class NoBadWordsLogitsProcessor extends LogitsProcessor{constructor(s,o){super(),this.bad_words_ids=s,this.eos_token_id=Array.isArray(o)?o:[o]}_call(s,o){for(const a of this.bad_words_ids){let c=!0;for(let d=1;d<=a.length-1&&a.length<s.length;++d)if(a.at(-d-1)!==s.at(-d)){c=!1;break}c&&(o.data[a.at(-1)]=-1/0)}return o}}const GenerationConfig=class{constructor(i={}){this.max_length=i.max_length??20,this.max_new_tokens=i.max_new_tokens??null,this.min_length=i.min_length??0,this.min_new_tokens=i.min_new_tokens??null,this.early_stopping=i.early_stopping??!1,this.max_time=i.max_time??null,this.do_sample=i.do_sample??!1,this.num_beams=i.num_beams??1,this.num_beam_groups=i.num_beam_groups??1,this.penalty_alpha=i.penalty_alpha??null,this.use_cache=i.use_cache??!0,this.temperature=i.temperature??1,this.top_k=i.top_k??50,this.top_p=i.top_p??1,this.typical_p=i.typical_p??1,this.epsilon_cutoff=i.epsilon_cutoff??0,this.eta_cutoff=i.eta_cutoff??0,this.diversity_penalty=i.diversity_penalty??0,this.repetition_penalty=i.repetition_penalty??1,this.encoder_repetition_penalty=i.encoder_repetition_penalty??1,this.length_penalty=i.length_penalty??1,this.no_repeat_ngram_size=i.no_repeat_ngram_size??0,this.bad_words_ids=i.bad_words_ids??null,this.force_words_ids=i.force_words_ids??null,this.renormalize_logits=i.renormalize_logits??!1,this.constraints=i.constraints??null,this.forced_bos_token_id=i.forced_bos_token_id??null,this.forced_eos_token_id=i.forced_eos_token_id??null,this.remove_invalid_values=i.remove_invalid_values??!1,this.exponential_decay_length_penalty=i.exponential_decay_length_penalty??null,this.suppress_tokens=i.suppress_tokens??null,this.begin_suppress_tokens=i.begin_suppress_tokens??null,this.forced_decoder_ids=i.forced_decoder_ids??null,this.num_return_sequences=i.num_return_sequences??1,this.output_attentions=i.output_attentions??!1,this.output_hidden_states=i.output_hidden_states??!1,this.output_scores=i.output_scores??!1,this.return_dict_in_generate=i.return_dict_in_generate??!1,this.pad_token_id=i.pad_token_id??null,this.bos_token_id=i.bos_token_id??null,this.eos_token_id=i.eos_token_id??null,this.encoder_no_repeat_ngram_size=i.encoder_no_repeat_ngram_size??0,this.decoder_start_token_id=i.decoder_start_token_id??null,this.generation_kwargs=i.generation_kwargs??{}}};class Sampler extends Callable{constructor(s){super(),this.generation_config=s}_call(s,o=-1){return this.sample(s,o)}sample(s,o){throw Error("sample should be implemented in subclasses.")}getLogits(s,o){let a=s.dims.at(-1),c=s.data;if(o===-1)c=c.slice(-a);else{let d=o*a;c=c.slice(d,d+a)}return this.generation_config.temperature>0&&(c=c.map(d=>d/this.generation_config.temperature)),c}randomSelect(s){let o=s.reduce((c,d)=>c+d,0),a=Math.random()*o;for(let c=0;c<s.length;++c)if(a-=s[c],a<=0)return c;return 0}static getSampler(s){if(s.do_sample)return new MultinomialSampler(s);if(s.num_beams>1)return new BeamSearchSampler(s);if(s.num_return_sequences>1)throw Error(`num_return_sequences has to be 1 when doing greedy search, but is ${s.num_return_sequences}.`);return new GreedySampler(s)}}class GreedySampler extends Sampler{sample(s,o=-1){let a=this.getLogits(s,o);return[[max$4(a)[1],0]]}}class MultinomialSampler extends Sampler{sample(s,o=-1){let a=s.dims.at(-1);this.generation_config.top_k>0&&(a=Math.min(this.generation_config.top_k,a));const c=this.getLogits(s,o),d=getTopItems(c,a),g=softmax$3(d.map($=>$[1]));return Array.from({length:this.generation_config.num_beams},()=>{const $=this.randomSelect(g);return[d[$][0],Math.log(g[$])]})}}class BeamSearchSampler extends Sampler{sample(s,o=-1){let a=s.dims.at(-1);this.generation_config.top_k>0&&(a=Math.min(this.generation_config.top_k,a));const c=this.getLogits(s,o),d=getTopItems(c,a),g=softmax$3(d.map($=>$[1]));return Array.from({length:this.generation_config.num_beams},($,j)=>[d[j][0],Math.log(g[j])])}}const{InferenceSession,Tensor:ONNXTensor,env:env$1}=ONNX,MODEL_TYPES={EncoderOnly:0,EncoderDecoder:1,Seq2Seq:2,Vision2Seq:3,DecoderOnly:4,MaskGeneration:5},MODEL_TYPE_MAPPING=new Map,MODEL_NAME_TO_CLASS_MAPPING=new Map,MODEL_CLASS_TO_NAME_MAPPING=new Map;async function constructSession(i,s,o){let a=`onnx/${s}${o.quantized?"_quantized":""}.onnx`,c=await getModelFile(i,a,!0,o);try{return await InferenceSession.create(c,{executionProviders})}catch(d){if(executionProviders.length===1&&executionProviders[0]==="wasm")throw d;return console.warn(d),console.warn("Something went wrong during model construction (most likely a missing operation). Using `wasm` as a fallback. "),await InferenceSession.create(c,{executionProviders:["wasm"]})}}function validateInputs(i,s){const o=Object.create(null),a=[];for(const g of i.inputNames){const $=s[g];if(!($ instanceof Tensor$1)){a.push(g);continue}o[g]=env$1.wasm.proxy?$.clone():$}if(a.length>0)throw new Error(`An error occurred during model execution: "Missing the following inputs: ${a.join(", ")}.`);const c=Object.keys(s).length,d=i.inputNames.length;if(c>d){let g=Object.keys(s).filter($=>!i.inputNames.includes($));console.warn(`WARNING: Too many inputs were provided (${c} > ${d}). The following inputs will be ignored: "${g.join(", ")}".`)}return o}async function sessionRun(i,s){const o=validateInputs(i,s);try{let a=await i.run(o);return a=replaceTensors(a),a}catch(a){throw console.error(`An error occurred during model execution: "${a}".`),console.error("Inputs given to model:",o),a}}function replaceTensors(i){for(let s in i)i[s]instanceof ONNXTensor?i[s]=new Tensor$1(i[s]):typeof i[s]=="object"&&replaceTensors(i[s]);return i}function toI64Tensor(i){if(i instanceof Tensor$1)return i;if(i.length===0)throw Error("items must be non-empty");if(Array.isArray(i[0])){if(i.some(s=>s.length!==i[0].length))throw Error("Unable to create tensor, you should probably activate truncation and/or padding with 'padding=True' and/or 'truncation=True' to have batched tensors with the same length.");return new Tensor$1("int64",BigInt64Array.from(i.flat().map(s=>BigInt(s))),[i.length,i[0].length])}else return new Tensor$1("int64",BigInt64Array.from(i.map(s=>BigInt(s))),[1,i.length])}function prepareAttentionMask(i,s){let o=i.config.pad_token_id??null,a=i.config.eos_token_id??null;isIntegralNumber(a)&&(a=[a]);let c=s.indexOf(o)!==-1,d=a===null||!a.includes(o);if(c&&d){let g=BigInt64Array.from(s.data.map($=>$!=o));return new Tensor$1("int64",g,s.dims)}else return ones_like(s)}function preparePositionIds(i,s,o){if(!i.inputNames.includes("position_ids"))return;const a=new BigInt64Array(s.attention_mask.data.length);for(let c=0;c<s.attention_mask.dims[0];++c){let d=c*s.attention_mask.dims[1],g=BigInt(0);for(let $=0;$<s.attention_mask.dims[1];++$){const j=d+$;s.attention_mask.data[j]===0n?a[j]=BigInt(1):(a[j]=g,g+=s.attention_mask.data[j])}}s.position_ids=new Tensor$1("int64",a,s.attention_mask.dims),o&&(s.position_ids=s.position_ids.slice(null,-1).unsqueeze_(-1))}function boolTensor(i){return new Tensor$1("bool",[i],[1])}async function seq2seqForward(i,s){let{encoder_outputs:o,past_key_values:a}=s;o||(o=(await encoderForward(i,s)).last_hidden_state);let c={input_ids:s.decoder_input_ids,encoder_hidden_states:o};const d=!!a;i.decoder_merged_session.inputNames.includes("use_cache_branch")&&(c.use_cache_branch=boolTensor(d)),i.decoder_merged_session.inputNames.includes("encoder_attention_mask")&&(c.encoder_attention_mask=s.attention_mask),preparePositionIds(i.decoder_merged_session,c,d),i.addPastKeyValues(c,a);const g=await sessionRun(i.decoder_merged_session,c);let $=g.logits;a=i.getPastKeyValues(g,a);const j=i.getAttentions(g);return new Seq2SeqLMOutput({logits:$,past_key_values:a,encoder_outputs:o,...j})}function seq2seqStartBeams(i,s,o,a){let c=[],d=0;const g=i.requires_attention_mask??!0;let $=o.decoder_input_ids??o.decoder_start_token_id??o.bos_token_id??o.eos_token_id;$ instanceof Tensor$1?$=$.tolist().flat():Array.isArray($)||($=[$]);for(let j of s){j.dims=[1,...j.dims];let _e={inputs:j,encoder_outputs:null,prev_model_outputs:null,output_token_ids:$,done:!1,score:0,id:d++};g&&(_e.attention_mask=prepareAttentionMask(i,j)),c.push(_e)}return c}async function seq2seqRunBeam(i,s){var g;const o=i.main_input_name;let a=s.output_token_ids;s.prev_model_outputs&&(a=a.slice(-1));let c={[o]:s.inputs,decoder_input_ids:toI64Tensor(a),encoder_outputs:s.encoder_outputs,past_key_values:(g=s.prev_model_outputs)==null?void 0:g.past_key_values};s.attention_mask&&(c.attention_mask=s.attention_mask);let d=await i.forward(c);return s.prev_model_outputs=d,s.encoder_outputs=d.encoder_outputs,d}function seq2seqUpdatebeam(i,s){i.output_token_ids=[...i.output_token_ids,s]}async function encoderForward(i,s){const o=Object.create(null);for(const a of i.session.inputNames)o[a]=s[a];return i.session.inputNames.includes("token_type_ids")&&!o.token_type_ids&&(o.token_type_ids=new Tensor$1("int64",new BigInt64Array(o.input_ids.data.length),o.input_ids.dims)),await sessionRun(i.session,o)}async function decoderForward(i,s){let{input_ids:o,past_key_values:a,attention_mask:c}=s,d={input_ids:o,attention_mask:c??prepareAttentionMask(i,o)};const g=!!a;i.session.inputNames.includes("use_cache_branch")&&(d.use_cache_branch=boolTensor(g)),preparePositionIds(i.session,d,g),i.addPastKeyValues(d,a);let $=await sessionRun(i.session,d),j=$.logits;return a=i.getPastKeyValues($,a),{logits:j,past_key_values:a}}function decoderStartBeams(i,s,o,a,c){let d=[],g=0;for(let $ of s){let j=$.tolist().map(Number);$.dims=[1,...$.dims];let _e;c?(_e=c[g],_e.dims=[1,..._e.dims]):_e=prepareAttentionMask(i,$);let et={input:$,model_input_ids:$,attention_mask:_e,prev_model_outputs:null,output_token_ids:j,num_output_tokens:a,done:!1,score:0,id:g++};d.push(et)}return d}async function decoderRunBeam(i,s){var d;let o=new BigInt64Array(s.output_token_ids.length).fill(1n),a={input_ids:s.model_input_ids,attention_mask:new Tensor$1("int64",o,[1,o.length]),past_key_values:(d=s.prev_model_outputs)==null?void 0:d.past_key_values},c=await i.forward(a);return s.prev_model_outputs=c,c}function decoderUpdatebeam(i,s){i.output_token_ids=[...i.output_token_ids,s],i.model_input_ids=new Tensor$1("int64",[BigInt(s)],[1,1])}class PreTrainedModel extends Callable{constructor(o,a){super();Ht(this,"main_input_name","input_ids");this.config=o,this.session=a;const c=MODEL_CLASS_TO_NAME_MAPPING.get(this.constructor),d=MODEL_TYPE_MAPPING.get(c);this.can_generate=!1,this._runBeam=null,this._getStartBeams=null,this._updateBeam=null,this._forward=null,d===MODEL_TYPES.DecoderOnly?(this.can_generate=!0,this._runBeam=decoderRunBeam,this._getStartBeams=decoderStartBeams,this._updateBeam=decoderUpdatebeam,this._forward=decoderForward):d===MODEL_TYPES.Seq2Seq||d===MODEL_TYPES.Vision2Seq?(this.can_generate=!0,this._runBeam=seq2seqRunBeam,this._getStartBeams=seq2seqStartBeams,this._updateBeam=seq2seqUpdatebeam,this._forward=seq2seqForward):d===MODEL_TYPES.EncoderDecoder?this._forward=encoderForward:this._forward=encoderForward}async dispose(){const o=[];for(let a of Object.keys(this)){const c=this[a];c instanceof InferenceSession&&o.push(c.handler.dispose())}return await Promise.all(o)}static async from_pretrained(o,{quantized:a=!0,progress_callback:c=null,config:d=null,cache_dir:g=null,local_files_only:$=!1,revision:j="main",model_file_name:_e=null}={}){let et={quantized:a,progress_callback:c,config:d,cache_dir:g,local_files_only:$,revision:j,model_file_name:_e};const _=MODEL_CLASS_TO_NAME_MAPPING.get(this),b=MODEL_TYPE_MAPPING.get(_);let tt;return b===MODEL_TYPES.DecoderOnly?tt=await Promise.all([AutoConfig.from_pretrained(o,et),constructSession(o,et.model_file_name??"decoder_model_merged",et),getModelJSON(o,"generation_config.json",!1,et)]):b===MODEL_TYPES.Seq2Seq||b===MODEL_TYPES.Vision2Seq?tt=await Promise.all([AutoConfig.from_pretrained(o,et),constructSession(o,"encoder_model",et),constructSession(o,"decoder_model_merged",et),getModelJSON(o,"generation_config.json",!1,et)]):b===MODEL_TYPES.MaskGeneration?tt=await Promise.all([AutoConfig.from_pretrained(o,et),constructSession(o,"vision_encoder",et),constructSession(o,"prompt_encoder_mask_decoder",et)]):b===MODEL_TYPES.EncoderDecoder?tt=await Promise.all([AutoConfig.from_pretrained(o,et),constructSession(o,"encoder_model",et),constructSession(o,"decoder_model_merged",et)]):(b!==MODEL_TYPES.EncoderOnly&&console.warn(`Model type for '${_??(d==null?void 0:d.model_type)}' not found, assuming encoder-only architecture. Please report this at https://github.com/xenova/transformers.js/issues/new/choose.`),tt=await Promise.all([AutoConfig.from_pretrained(o,et),constructSession(o,et.model_file_name??"model",et)])),new this(...tt)}async _call(o){return await this.forward(o)}async forward(o){return await this._forward(this,o)}_get_logits_processor(o,a,c=null){const d=new LogitsProcessorList;if(o.repetition_penalty!==null&&o.repetition_penalty!==1&&d.push(new RepetitionPenaltyLogitsProcessor(o.repetition_penalty)),o.no_repeat_ngram_size!==null&&o.no_repeat_ngram_size>0&&d.push(new NoRepeatNGramLogitsProcessor(o.no_repeat_ngram_size)),o.bad_words_ids!==null&&d.push(new NoBadWordsLogitsProcessor(o.bad_words_ids,o.eos_token_id)),o.min_length!==null&&o.eos_token_id!==null&&o.min_length>0&&d.push(new MinLengthLogitsProcessor(o.min_length,o.eos_token_id)),o.min_new_tokens!==null&&o.eos_token_id!==null&&o.min_new_tokens>0&&d.push(new MinNewTokensLengthLogitsProcessor(a,o.min_new_tokens,o.eos_token_id)),o.forced_bos_token_id!==null&&d.push(new ForcedBOSTokenLogitsProcessor(o.forced_bos_token_id)),o.forced_eos_token_id!==null&&d.push(new ForcedEOSTokenLogitsProcessor(o.max_length,o.forced_eos_token_id)),o.begin_suppress_tokens!==null){let g=a>1||o.forced_bos_token_id===null?a:a+1;o.forced_decoder_ids!==null&&(g+=o.forced_decoder_ids[o.forced_decoder_ids.length-1][0]),d.push(new SuppressTokensAtBeginLogitsProcessor(o.begin_suppress_tokens,g))}return o.forced_decoder_ids!==null&&d.push(new ForceTokensLogitsProcessor(o.forced_decoder_ids)),c!==null&&d.extend(c),d}_get_generation_config(o){let a=new GenerationConfig(this.config);return"generation_config"in this&&Object.assign(a,this.generation_config),o!==null&&Object.assign(a,o),a}async generate(o,a=null,c=null,{inputs_attention_mask:d=null}={}){if(!this.can_generate){let ot=`The current model class (${MODEL_CLASS_TO_NAME_MAPPING.get(this.constructor)}) is not compatible with \`.generate()\`, as it doesn't have a language model head.`;const it=this.config.model_type,at=MODEL_WITH_LM_HEAD_MAPPING_NAMES.get(it)??MODEL_FOR_SEQ_TO_SEQ_CAUSAL_LM_MAPPING_NAMES.get(it)??MODEL_FOR_SPEECH_SEQ_2_SEQ_MAPPING_NAMES.get(it)??MODEL_FOR_VISION_2_SEQ_MAPPING_NAMES.get(it);throw at&&(ot+=` Please use the following class instead: '${at[0]}'`),Error(ot)}if(!(o instanceof Tensor$1)&&!isTypedArray$1(o)&&!Array.isArray(o))throw Error(`\`inputs\` must be a Tensor, TypedArray, or Array, but is "${o.constructor.name}".`);let g;if(this.config.is_encoder_decoder)g=0;else if(g=o instanceof Tensor$1?o.dims.at(-1):o.length,g===0)throw Error("Must supply a non-empty array of input token ids.");a=this._get_generation_config(a),c=c??new LogitsProcessorList,c=this._get_logits_processor(a,g,c);let $=a.eos_token_id;$!==null&&!Array.isArray($)&&($=[$]);let j=1;const _e=j+(a.max_new_tokens??1/0),et=Number.isInteger(a.max_length)&&(a.max_new_tokens??null)===null;let _=Sampler.getSampler(a),b=this.getStartBeams(o,a,j,d);for(;b.some(st=>!st.done)&&j<_e;){let st=[];for(let ot of b){if(ot.done){st.push(ot);continue}if(et&&ot.output_token_ids.length>=a.max_length){ot.done=!0,st.push(ot);continue}let it=await this.runBeam(ot);a.output_attentions&&this.addAttentionsToBeam(ot,it),a.output_scores;let at=it.logits.slice(null,-1,null);c(ot.output_token_ids,at);let lt=_(at);for(let[ut,ct]of lt){let dt={...ot};this.updateBeam(dt,ut),dt.score+=ct,$&&$.includes(ut)&&(dt.done=!0),st.push(dt)}}++j,st=this.groupBeams(st).map(ot=>ot.sort((it,at)=>at.score-it.score).slice(0,a.num_beams)),b=st.flat(),a.callback_function&&a.callback_function(b)}const tt=this.groupBeams(b),nt=st=>tt.map(ot=>a.num_return_sequences>1?ot.slice(0,a.num_return_sequences).map(it=>it[st]):[ot[0][st]]).flat(),rt=nt("output_token_ids");if(a.return_dict_in_generate){const st=nt("decoder_attentions"),ot=nt("cross_attentions");return{sequences:rt,decoder_attentions:st,cross_attentions:ot}}else return rt}addAttentionsToBeam(o,a){if(this.config.is_encoder_decoder){if(!a.cross_attentions||a.cross_attentions.length===0)throw Error("`output_attentions` is true, but the model did not produce cross-attentions. This is most likely because the model was not exported with `output_attentions=True`.");o.cross_attentions||(o.cross_attentions=[]),o.cross_attentions.push(a.cross_attentions)}if(!a.decoder_attentions||a.decoder_attentions.length===0)throw Error("`output_attentions` is true, but the model did not produce decoder-attentions. This is most likely because the model was not exported with `output_attentions=True`.");o.decoder_attentions||(o.decoder_attentions=[]),o.decoder_attentions.push(a.decoder_attentions)}groupBeams(o){const a=Object.create(null);for(const c of o)a[c.id]===void 0?a[c.id]=[c]:a[c.id].push(c);return Object.values(a)}getPastKeyValues(o,a){const c=Object.create(null);for(const d in o)if(d.startsWith("present")){let g=d.replace("present","past_key_values");a&&d.includes("encoder")?c[g]=a[g]:c[g]=o[d]}return c}getAttentions(o){const a=Object.create(null);for(const c of["cross_attentions","decoder_attentions"]){const d=[];for(const g in o)if(g.startsWith(c)){const $=g.split(".").pop();d[$]=o[g]}a[c]=d}return a}addPastKeyValues(o,a){if(a)Object.assign(o,a);else if(this.config.is_encoder_decoder&&(this.add_encoder_pkv??!0)){let d=[1,this.num_encoder_heads,0,this.encoder_dim_kv],g=[1,this.num_decoder_heads,0,this.decoder_dim_kv];for(let $=0;$<this.num_decoder_layers;++$)o[`past_key_values.${$}.encoder.key`]=new Tensor$1("float32",[],d),o[`past_key_values.${$}.encoder.value`]=new Tensor$1("float32",[],d),o[`past_key_values.${$}.decoder.key`]=new Tensor$1("float32",[],g),o[`past_key_values.${$}.decoder.value`]=new Tensor$1("float32",[],g)}else if(this.config.model_type==="falcon"){let d=[1*this.num_heads,0,this.dim_kv];for(let g=0;g<this.num_layers;++g)o[`past_key_values.${g}.key`]=new Tensor$1("float32",[],d),o[`past_key_values.${g}.value`]=new Tensor$1("float32",[],d)}else if(this.config.multi_query){let d=[1*this.num_heads,0,2*this.dim_kv];for(let g=0;g<this.num_layers;++g)o[`past_key_values.${g}.key_value`]=new Tensor$1("float32",[],d)}else if(this.config.model_type==="bloom"){let d=[1*this.num_heads,this.dim_kv,0],g=[1*this.num_heads,0,this.dim_kv];for(let $=0;$<this.num_layers;++$)o[`past_key_values.${$}.key`]=new Tensor$1("float32",[],d),o[`past_key_values.${$}.value`]=new Tensor$1("float32",[],g)}else{let d=[1,this.num_heads,0,this.dim_kv];for(let g=0;g<this.num_layers;++g)o[`past_key_values.${g}.key`]=new Tensor$1("float32",[],d),o[`past_key_values.${g}.value`]=new Tensor$1("float32",[],d)}}getStartBeams(o,a,c,d){return this._getStartBeams(this,o,a,c,d)}async runBeam(o){return await this._runBeam(this,o)}updateBeam(o,a){return this._updateBeam(o,a)}}class ModelOutput{}class BertPreTrainedModel extends PreTrainedModel{}class BertModel extends BertPreTrainedModel{}class BertForMaskedLM extends BertPreTrainedModel{async _call(s){return new MaskedLMOutput(await super._call(s))}}class BertForSequenceClassification extends BertPreTrainedModel{async _call(s){return new SequenceClassifierOutput(await super._call(s))}}class BertForTokenClassification extends BertPreTrainedModel{async _call(s){return new TokenClassifierOutput(await super._call(s))}}class BertForQuestionAnswering extends BertPreTrainedModel{async _call(s){return new QuestionAnsweringModelOutput(await super._call(s))}}class NomicBertPreTrainedModel extends PreTrainedModel{}class NomicBertModel extends NomicBertPreTrainedModel{}class RoFormerPreTrainedModel extends PreTrainedModel{}class RoFormerModel extends RoFormerPreTrainedModel{}class RoFormerForMaskedLM extends RoFormerPreTrainedModel{async _call(s){return new MaskedLMOutput(await super._call(s))}}class RoFormerForSequenceClassification extends RoFormerPreTrainedModel{async _call(s){return new SequenceClassifierOutput(await super._call(s))}}class RoFormerForTokenClassification extends RoFormerPreTrainedModel{async _call(s){return new TokenClassifierOutput(await super._call(s))}}class RoFormerForQuestionAnswering extends RoFormerPreTrainedModel{async _call(s){return new QuestionAnsweringModelOutput(await super._call(s))}}class ConvBertPreTrainedModel extends PreTrainedModel{}class ConvBertModel extends ConvBertPreTrainedModel{}class ConvBertForMaskedLM extends ConvBertPreTrainedModel{async _call(s){return new MaskedLMOutput(await super._call(s))}}class ConvBertForSequenceClassification extends ConvBertPreTrainedModel{async _call(s){return new SequenceClassifierOutput(await super._call(s))}}class ConvBertForTokenClassification extends ConvBertPreTrainedModel{async _call(s){return new TokenClassifierOutput(await super._call(s))}}class ConvBertForQuestionAnswering extends ConvBertPreTrainedModel{async _call(s){return new QuestionAnsweringModelOutput(await super._call(s))}}class ElectraPreTrainedModel extends PreTrainedModel{}class ElectraModel extends ElectraPreTrainedModel{}class ElectraForMaskedLM extends ElectraPreTrainedModel{async _call(s){return new MaskedLMOutput(await super._call(s))}}class ElectraForSequenceClassification extends ElectraPreTrainedModel{async _call(s){return new SequenceClassifierOutput(await super._call(s))}}class ElectraForTokenClassification extends ElectraPreTrainedModel{async _call(s){return new TokenClassifierOutput(await super._call(s))}}class ElectraForQuestionAnswering extends ElectraPreTrainedModel{async _call(s){return new QuestionAnsweringModelOutput(await super._call(s))}}class CamembertPreTrainedModel extends PreTrainedModel{}class CamembertModel extends CamembertPreTrainedModel{}class CamembertForMaskedLM extends CamembertPreTrainedModel{async _call(s){return new MaskedLMOutput(await super._call(s))}}class CamembertForSequenceClassification extends CamembertPreTrainedModel{async _call(s){return new SequenceClassifierOutput(await super._call(s))}}class CamembertForTokenClassification extends CamembertPreTrainedModel{async _call(s){return new TokenClassifierOutput(await super._call(s))}}class CamembertForQuestionAnswering extends CamembertPreTrainedModel{async _call(s){return new QuestionAnsweringModelOutput(await super._call(s))}}class DebertaPreTrainedModel extends PreTrainedModel{}class DebertaModel extends DebertaPreTrainedModel{}class DebertaForMaskedLM extends DebertaPreTrainedModel{async _call(s){return new MaskedLMOutput(await super._call(s))}}class DebertaForSequenceClassification extends DebertaPreTrainedModel{async _call(s){return new SequenceClassifierOutput(await super._call(s))}}class DebertaForTokenClassification extends DebertaPreTrainedModel{async _call(s){return new TokenClassifierOutput(await super._call(s))}}class DebertaForQuestionAnswering extends DebertaPreTrainedModel{async _call(s){return new QuestionAnsweringModelOutput(await super._call(s))}}class DebertaV2PreTrainedModel extends PreTrainedModel{}class DebertaV2Model extends DebertaV2PreTrainedModel{}class DebertaV2ForMaskedLM extends DebertaV2PreTrainedModel{async _call(s){return new MaskedLMOutput(await super._call(s))}}class DebertaV2ForSequenceClassification extends DebertaV2PreTrainedModel{async _call(s){return new SequenceClassifierOutput(await super._call(s))}}class DebertaV2ForTokenClassification extends DebertaV2PreTrainedModel{async _call(s){return new TokenClassifierOutput(await super._call(s))}}class DebertaV2ForQuestionAnswering extends DebertaV2PreTrainedModel{async _call(s){return new QuestionAnsweringModelOutput(await super._call(s))}}class DistilBertPreTrainedModel extends PreTrainedModel{}class DistilBertModel extends DistilBertPreTrainedModel{}class DistilBertForSequenceClassification extends DistilBertPreTrainedModel{async _call(s){return new SequenceClassifierOutput(await super._call(s))}}class DistilBertForTokenClassification extends DistilBertPreTrainedModel{async _call(s){return new TokenClassifierOutput(await super._call(s))}}class DistilBertForQuestionAnswering extends DistilBertPreTrainedModel{async _call(s){return new QuestionAnsweringModelOutput(await super._call(s))}}class DistilBertForMaskedLM extends DistilBertPreTrainedModel{async _call(s){return new MaskedLMOutput(await super._call(s))}}class EsmPreTrainedModel extends PreTrainedModel{}class EsmModel extends EsmPreTrainedModel{}class EsmForMaskedLM extends EsmPreTrainedModel{async _call(s){return new MaskedLMOutput(await super._call(s))}}class EsmForSequenceClassification extends EsmPreTrainedModel{async _call(s){return new SequenceClassifierOutput(await super._call(s))}}class EsmForTokenClassification extends EsmPreTrainedModel{async _call(s){return new TokenClassifierOutput(await super._call(s))}}class MobileBertPreTrainedModel extends PreTrainedModel{}class MobileBertModel extends MobileBertPreTrainedModel{}class MobileBertForMaskedLM extends MobileBertPreTrainedModel{async _call(s){return new MaskedLMOutput(await super._call(s))}}class MobileBertForSequenceClassification extends MobileBertPreTrainedModel{async _call(s){return new SequenceClassifierOutput(await super._call(s))}}class MobileBertForQuestionAnswering extends MobileBertPreTrainedModel{async _call(s){return new QuestionAnsweringModelOutput(await super._call(s))}}class MPNetPreTrainedModel extends PreTrainedModel{}class MPNetModel extends MPNetPreTrainedModel{}class MPNetForMaskedLM extends MPNetPreTrainedModel{async _call(s){return new MaskedLMOutput(await super._call(s))}}class MPNetForSequenceClassification extends MPNetPreTrainedModel{async _call(s){return new SequenceClassifierOutput(await super._call(s))}}class MPNetForTokenClassification extends MPNetPreTrainedModel{async _call(s){return new TokenClassifierOutput(await super._call(s))}}class MPNetForQuestionAnswering extends MPNetPreTrainedModel{async _call(s){return new QuestionAnsweringModelOutput(await super._call(s))}}class SqueezeBertPreTrainedModel extends PreTrainedModel{}class SqueezeBertModel extends SqueezeBertPreTrainedModel{}class SqueezeBertForMaskedLM extends SqueezeBertPreTrainedModel{async _call(s){return new MaskedLMOutput(await super._call(s))}}class SqueezeBertForSequenceClassification extends SqueezeBertPreTrainedModel{async _call(s){return new SequenceClassifierOutput(await super._call(s))}}class SqueezeBertForQuestionAnswering extends SqueezeBertPreTrainedModel{async _call(s){return new QuestionAnsweringModelOutput(await super._call(s))}}class AlbertPreTrainedModel extends PreTrainedModel{}class AlbertModel extends AlbertPreTrainedModel{}class AlbertForSequenceClassification extends AlbertPreTrainedModel{async _call(s){return new SequenceClassifierOutput(await super._call(s))}}class AlbertForQuestionAnswering extends AlbertPreTrainedModel{async _call(s){return new QuestionAnsweringModelOutput(await super._call(s))}}class AlbertForMaskedLM extends AlbertPreTrainedModel{async _call(s){return new MaskedLMOutput(await super._call(s))}}class T5PreTrainedModel extends PreTrainedModel{}class T5Model extends T5PreTrainedModel{}class T5ForConditionalGeneration extends T5PreTrainedModel{constructor(s,o,a,c){super(s,o),this.decoder_merged_session=a,this.generation_config=c,this.num_decoder_layers=this.config.num_decoder_layers,this.num_decoder_heads=this.config.num_heads,this.decoder_dim_kv=this.config.d_kv,this.num_encoder_layers=this.config.num_layers,this.num_encoder_heads=this.config.num_heads,this.encoder_dim_kv=this.config.d_kv}}class LongT5PreTrainedModel extends PreTrainedModel{}class LongT5Model extends LongT5PreTrainedModel{}class LongT5ForConditionalGeneration extends LongT5PreTrainedModel{constructor(s,o,a,c){super(s,o),this.decoder_merged_session=a,this.generation_config=c,this.num_decoder_layers=this.config.num_decoder_layers,this.num_decoder_heads=this.config.num_heads,this.decoder_dim_kv=this.config.d_kv,this.num_encoder_layers=this.config.num_layers,this.num_encoder_heads=this.config.num_heads,this.encoder_dim_kv=this.config.d_kv}}class MT5PreTrainedModel extends PreTrainedModel{}class MT5Model extends MT5PreTrainedModel{}class MT5ForConditionalGeneration extends MT5PreTrainedModel{constructor(s,o,a,c){super(s,o),this.decoder_merged_session=a,this.generation_config=c,this.num_decoder_layers=this.config.num_decoder_layers,this.num_decoder_heads=this.config.num_heads,this.decoder_dim_kv=this.config.d_kv,this.num_encoder_layers=this.config.num_layers,this.num_encoder_heads=this.config.num_heads,this.encoder_dim_kv=this.config.d_kv}}class BartPretrainedModel extends PreTrainedModel{}class BartModel extends BartPretrainedModel{}class BartForConditionalGeneration extends BartPretrainedModel{constructor(s,o,a,c){super(s,o),this.decoder_merged_session=a,this.generation_config=c,this.num_decoder_layers=this.config.decoder_layers,this.num_decoder_heads=this.config.decoder_attention_heads,this.decoder_dim_kv=this.config.d_model/this.num_decoder_heads,this.num_encoder_layers=this.config.encoder_layers,this.num_encoder_heads=this.config.encoder_attention_heads,this.encoder_dim_kv=this.config.d_model/this.num_encoder_heads}}class BartForSequenceClassification extends BartPretrainedModel{async _call(s){return new SequenceClassifierOutput(await super._call(s))}}class MBartPreTrainedModel extends PreTrainedModel{}class MBartModel extends MBartPreTrainedModel{}class MBartForConditionalGeneration extends MBartPreTrainedModel{constructor(s,o,a,c){super(s,o),this.decoder_merged_session=a,this.generation_config=c,this.num_decoder_layers=this.config.decoder_layers,this.num_decoder_heads=this.config.decoder_attention_heads,this.decoder_dim_kv=this.config.d_model/this.num_decoder_heads,this.num_encoder_layers=this.config.encoder_layers,this.num_encoder_heads=this.config.encoder_attention_heads,this.encoder_dim_kv=this.config.d_model/this.num_encoder_heads}}class MBartForSequenceClassification extends MBartPreTrainedModel{async _call(s){return new SequenceClassifierOutput(await super._call(s))}}class MBartForCausalLM extends MBartPreTrainedModel{constructor(s,o,a){super(s,o),this.generation_config=a,this.num_decoder_layers=this.config.decoder_layers,this.num_decoder_heads=this.config.decoder_attention_heads,this.decoder_dim_kv=this.config.d_model/this.num_decoder_heads,this.num_encoder_layers=this.config.encoder_layers,this.num_encoder_heads=this.config.encoder_attention_heads,this.encoder_dim_kv=this.config.d_model/this.num_encoder_heads}}class BlenderbotPreTrainedModel extends PreTrainedModel{}class BlenderbotModel extends BlenderbotPreTrainedModel{}class BlenderbotForConditionalGeneration extends BlenderbotPreTrainedModel{constructor(s,o,a,c){super(s,o),this.decoder_merged_session=a,this.generation_config=c,this.num_decoder_layers=this.config.decoder_layers,this.num_decoder_heads=this.config.decoder_attention_heads,this.decoder_dim_kv=this.config.d_model/this.num_decoder_heads,this.num_encoder_layers=this.config.encoder_layers,this.num_encoder_heads=this.config.encoder_attention_heads,this.encoder_dim_kv=this.config.d_model/this.num_encoder_heads}}class BlenderbotSmallPreTrainedModel extends PreTrainedModel{}class BlenderbotSmallModel extends BlenderbotSmallPreTrainedModel{}class BlenderbotSmallForConditionalGeneration extends BlenderbotSmallPreTrainedModel{constructor(s,o,a,c){super(s,o),this.decoder_merged_session=a,this.generation_config=c,this.num_decoder_layers=this.config.decoder_layers,this.num_decoder_heads=this.config.decoder_attention_heads,this.decoder_dim_kv=this.config.d_model/this.num_decoder_heads,this.num_encoder_layers=this.config.encoder_layers,this.num_encoder_heads=this.config.encoder_attention_heads,this.encoder_dim_kv=this.config.d_model/this.num_encoder_heads}}class RobertaPreTrainedModel extends PreTrainedModel{}class RobertaModel extends RobertaPreTrainedModel{}class RobertaForMaskedLM extends RobertaPreTrainedModel{async _call(s){return new MaskedLMOutput(await super._call(s))}}class RobertaForSequenceClassification extends RobertaPreTrainedModel{async _call(s){return new SequenceClassifierOutput(await super._call(s))}}class RobertaForTokenClassification extends RobertaPreTrainedModel{async _call(s){return new TokenClassifierOutput(await super._call(s))}}class RobertaForQuestionAnswering extends RobertaPreTrainedModel{async _call(s){return new QuestionAnsweringModelOutput(await super._call(s))}}class XLMPreTrainedModel extends PreTrainedModel{}class XLMModel extends XLMPreTrainedModel{}class XLMWithLMHeadModel extends XLMPreTrainedModel{async _call(s){return new MaskedLMOutput(await super._call(s))}}class XLMForSequenceClassification extends XLMPreTrainedModel{async _call(s){return new SequenceClassifierOutput(await super._call(s))}}class XLMForTokenClassification extends XLMPreTrainedModel{async _call(s){return new TokenClassifierOutput(await super._call(s))}}class XLMForQuestionAnswering extends XLMPreTrainedModel{async _call(s){return new QuestionAnsweringModelOutput(await super._call(s))}}class XLMRobertaPreTrainedModel extends PreTrainedModel{}class XLMRobertaModel extends XLMRobertaPreTrainedModel{}class XLMRobertaForMaskedLM extends XLMRobertaPreTrainedModel{async _call(s){return new MaskedLMOutput(await super._call(s))}}class XLMRobertaForSequenceClassification extends XLMRobertaPreTrainedModel{async _call(s){return new SequenceClassifierOutput(await super._call(s))}}class XLMRobertaForTokenClassification extends XLMRobertaPreTrainedModel{async _call(s){return new TokenClassifierOutput(await super._call(s))}}class XLMRobertaForQuestionAnswering extends XLMRobertaPreTrainedModel{async _call(s){return new QuestionAnsweringModelOutput(await super._call(s))}}class ASTPreTrainedModel extends PreTrainedModel{}class ASTModel extends ASTPreTrainedModel{}class ASTForAudioClassification extends ASTPreTrainedModel{}class WhisperPreTrainedModel extends PreTrainedModel{}class WhisperModel extends WhisperPreTrainedModel{}class WhisperForConditionalGeneration extends WhisperPreTrainedModel{constructor(o,a,c,d){super(o,a);Ht(this,"requires_attention_mask",!1);Ht(this,"main_input_name","input_features");this.decoder_merged_session=c,this.generation_config=d,this.num_decoder_layers=this.config.decoder_layers,this.num_decoder_heads=this.config.decoder_attention_heads,this.decoder_dim_kv=this.config.d_model/this.num_decoder_heads,this.num_encoder_layers=this.config.encoder_layers,this.num_encoder_heads=this.config.encoder_attention_heads,this.encoder_dim_kv=this.config.d_model/this.num_encoder_heads}async generate(o,a=null,c=null){if(a=this._get_generation_config(a),a.return_timestamps??(a.return_timestamps=!1),a.return_timestamps&&(c=[new WhisperTimeStampLogitsProcessor(a)]),a.return_token_timestamps&&(a.output_attentions=!0,a.return_dict_in_generate=!0,a.task==="translate"&&console.warn("Token-level timestamps may not be reliable for task 'translate'."),!a.alignment_heads))throw new Error("Model generation config has no `alignment_heads`, token-level timestamps not available. See https://gist.github.com/hollance/42e32852f24243b748ae6bc1f985b13a on how to add this property to the generation config.");const d=await super.generate(o,a,c);return a.return_token_timestamps&&a.alignment_heads&&(d.token_timestamps=this._extract_token_timestamps(d,a.alignment_heads,a.num_frames)),d}_extract_token_timestamps(o,a,c=null,d=.02){if(!o.cross_attentions)throw new Error("Model outputs must contain cross attentions to extract timestamps. This is most likely because the model was not exported with `output_attentions=True`.");let g=this.config.median_filter_width;g===void 0&&(console.warn("Model config has no `median_filter_width`, using default value of 7."),g=7);const $=o.cross_attentions.map(et=>{let _=Array.from({length:this.config.decoder_layers},(ot,it)=>cat(et.map(at=>at[it]),2)),b=stack$1(a.map(([ot,it])=>c?_[ot].slice(null,it,null,[0,c]):_[ot].slice(null,it)));b=b.transpose(1,0,2,3);let[tt,nt]=std_mean(b,-2,0,!0),rt=b.clone();for(let ot=0;ot<rt.dims[0];++ot){let it=rt[ot];for(let at=0;at<it.dims[0];++at){let lt=it[at];const ut=tt[ot][at][0],ct=nt[ot][at][0];for(let dt=0;dt<lt.dims[0];++dt){let pt=lt[dt];for(let ht=0;ht<pt.data.length;++ht)pt.data[ht]=(pt.data[ht]-ct.data[ht])/ut.data[ht];pt.data.set(medianFilter(pt.data,g))}}}return mean$2(rt,1)}),j=[o.sequences.length,o.sequences[0].length],_e=new Tensor$1("float32",new Float32Array(j[0]*j[1]),j);for(let et=0;et<j[0];++et){const _=$[et].neg().squeeze_(0);let[b,tt]=dynamicTimeWarping(_),nt=Array.from({length:b.length-1},(ot,it)=>b[it+1]-b[it]),rt=mergeArrays([1],nt).map(ot=>!!ot),st=[];for(let ot=0;ot<rt.length;++ot)rt[ot]&&st.push(tt[ot]*d);_e[et].data.set(st,1)}return _e}}class VisionEncoderDecoderModel extends PreTrainedModel{constructor(o,a,c,d){super(o,a);Ht(this,"main_input_name","pixel_values");this.decoder_merged_session=c,this.generation_config=d;const g=this.config.encoder,$=this.config.decoder,j=g.model_type;(MODEL_MAPPING_NAMES_ENCODER_ONLY.get(j)??MODEL_MAPPING_NAMES_ENCODER_DECODER.get(j))||console.warn(`Model type for encoder '${j}' not found, assuming encoder-only architecture. Please report this at https://github.com/xenova/transformers.js/issues/new/choose.`);const et=MODEL_WITH_LM_HEAD_MAPPING_NAMES.get($.model_type);if(!et)throw new Error(`Unable to construct \`VisionEncoderDecoder\` due to unsupported decoder: "${this.config.decoder.model_type}"`);const _=et[1],b=new _($,c,d);this.add_encoder_pkv="num_decoder_layers"in b,this.add_encoder_pkv?(this.num_decoder_layers=b.num_decoder_layers,this.num_decoder_heads=b.num_decoder_heads,this.decoder_dim_kv=b.decoder_dim_kv,this.num_encoder_layers=b.num_encoder_layers,this.num_encoder_heads=b.num_encoder_heads,this.encoder_dim_kv=b.encoder_dim_kv):(this.num_layers=b.num_layers,this.num_heads=b.num_heads,this.dim_kv=b.dim_kv)}}class CLIPPreTrainedModel extends PreTrainedModel{}class CLIPModel extends CLIPPreTrainedModel{}class CLIPTextModelWithProjection extends CLIPPreTrainedModel{static async from_pretrained(s,o={}){return o.model_file_name??(o.model_file_name="text_model"),super.from_pretrained(s,o)}}class CLIPVisionModelWithProjection extends CLIPPreTrainedModel{static async from_pretrained(s,o={}){return o.model_file_name??(o.model_file_name="vision_model"),super.from_pretrained(s,o)}}class SiglipPreTrainedModel extends PreTrainedModel{}class SiglipModel extends SiglipPreTrainedModel{}class SiglipTextModel extends SiglipPreTrainedModel{static async from_pretrained(s,o={}){return o.model_file_name??(o.model_file_name="text_model"),super.from_pretrained(s,o)}}class SiglipVisionModel extends CLIPPreTrainedModel{static async from_pretrained(s,o={}){return o.model_file_name??(o.model_file_name="vision_model"),super.from_pretrained(s,o)}}class ChineseCLIPPreTrainedModel extends PreTrainedModel{}class ChineseCLIPModel extends ChineseCLIPPreTrainedModel{}class CLIPSegPreTrainedModel extends PreTrainedModel{}class CLIPSegModel extends CLIPSegPreTrainedModel{}class CLIPSegForImageSegmentation extends CLIPSegPreTrainedModel{}class GPT2PreTrainedModel extends PreTrainedModel{constructor(s,o,a){super(s,o),this.generation_config=a,this.config.pad_token_id=this.config.eos_token_id,this.num_heads=this.config.n_head,this.num_layers=this.config.n_layer,this.dim_kv=this.config.n_embd/this.num_heads}}class GPT2Model extends GPT2PreTrainedModel{}class GPT2LMHeadModel extends GPT2PreTrainedModel{}class GPTNeoPreTrainedModel extends PreTrainedModel{constructor(s,o,a){super(s,o),this.generation_config=a,this.config.pad_token_id=this.config.eos_token_id,this.num_heads=this.config.num_heads,this.num_layers=this.config.num_layers,this.dim_kv=this.config.hidden_size/this.num_heads}}class GPTNeoModel extends GPTNeoPreTrainedModel{}class GPTNeoForCausalLM extends GPTNeoPreTrainedModel{}class GPTNeoXPreTrainedModel extends PreTrainedModel{constructor(s,o,a){super(s,o),this.generation_config=a,this.config.pad_token_id=this.config.eos_token_id,this.num_heads=this.config.num_attention_heads,this.num_layers=this.config.num_hidden_layers,this.dim_kv=this.config.hidden_size/this.num_heads}}class GPTNeoXModel extends GPTNeoXPreTrainedModel{}class GPTNeoXForCausalLM extends GPTNeoXPreTrainedModel{}class GPTJPreTrainedModel extends PreTrainedModel{constructor(s,o,a){super(s,o),this.generation_config=a,this.config.pad_token_id=this.config.eos_token_id,this.num_heads=this.config.n_head,this.num_layers=this.config.n_layer,this.dim_kv=this.config.n_embd/this.num_heads}}class GPTJModel extends GPTJPreTrainedModel{}class GPTJForCausalLM extends GPTJPreTrainedModel{}class GPTBigCodePreTrainedModel extends PreTrainedModel{constructor(s,o,a){super(s,o),this.generation_config=a,this.config.pad_token_id=this.config.eos_token_id,this.num_heads=this.config.n_head,this.num_layers=this.config.n_layer,this.dim_kv=this.config.n_embd/this.num_heads}}class GPTBigCodeModel extends GPTBigCodePreTrainedModel{}class GPTBigCodeForCausalLM extends GPTBigCodePreTrainedModel{}class CodeGenPreTrainedModel extends PreTrainedModel{constructor(s,o,a){super(s,o),this.generation_config=a,this.config.pad_token_id=this.config.eos_token_id,this.num_heads=this.config.n_head,this.num_layers=this.config.n_layer,this.dim_kv=this.config.n_embd/this.num_heads}}class CodeGenModel extends CodeGenPreTrainedModel{}class CodeGenForCausalLM extends CodeGenPreTrainedModel{}class LlamaPreTrainedModel extends PreTrainedModel{constructor(s,o,a){super(s,o),this.generation_config=a,this.config.pad_token_id=this.config.eos_token_id,this.num_heads=this.config.num_key_value_heads??this.config.num_attention_heads,this.num_layers=this.config.num_hidden_layers,this.dim_kv=this.config.hidden_size/this.config.num_attention_heads}}class LlamaModel extends LlamaPreTrainedModel{}class LlamaForCausalLM extends LlamaPreTrainedModel{}class Qwen2PreTrainedModel extends PreTrainedModel{constructor(s,o,a){super(s,o),this.generation_config=a,this.config.pad_token_id=this.config.eos_token_id,this.num_heads=this.config.num_key_value_heads??this.config.num_attention_heads,this.num_layers=this.config.num_hidden_layers,this.dim_kv=this.config.hidden_size/this.config.num_attention_heads}}class Qwen2Model extends Qwen2PreTrainedModel{}class Qwen2ForCausalLM extends Qwen2PreTrainedModel{}class PhiPreTrainedModel extends PreTrainedModel{constructor(s,o,a){super(s,o),this.generation_config=a,this.config.pad_token_id=this.config.eos_token_id,this.num_heads=this.config.num_attention_heads,this.num_layers=this.config.num_hidden_layers,this.dim_kv=this.config.hidden_size/this.num_heads}}class PhiModel extends PhiPreTrainedModel{}class PhiForCausalLM extends PhiPreTrainedModel{}class BloomPreTrainedModel extends PreTrainedModel{constructor(s,o,a){super(s,o),this.generation_config=a,this.config.pad_token_id=this.config.eos_token_id,this.num_heads=this.config.n_head,this.num_layers=this.config.n_layer,this.dim_kv=this.config.hidden_size/this.num_heads}}class BloomModel extends BloomPreTrainedModel{}class BloomForCausalLM extends BloomPreTrainedModel{}class MptPreTrainedModel extends PreTrainedModel{constructor(s,o,a){super(s,o),this.generation_config=a,this.config.pad_token_id=this.config.eos_token_id,this.num_heads=this.config.n_heads,this.num_layers=this.config.n_layers,this.dim_kv=this.config.d_model/this.num_heads}}class MptModel extends MptPreTrainedModel{}class MptForCausalLM extends MptPreTrainedModel{}class OPTPreTrainedModel extends PreTrainedModel{constructor(s,o,a){super(s,o),this.generation_config=a,this.config.pad_token_id=this.config.eos_token_id,this.num_heads=this.config.num_attention_heads,this.num_layers=this.config.num_hidden_layers,this.dim_kv=this.config.hidden_size/this.num_heads}}class OPTModel extends OPTPreTrainedModel{}class OPTForCausalLM extends OPTPreTrainedModel{}class ViTPreTrainedModel extends PreTrainedModel{}class ViTModel extends ViTPreTrainedModel{}class ViTForImageClassification extends ViTPreTrainedModel{async _call(s){return new SequenceClassifierOutput(await super._call(s))}}class FastViTPreTrainedModel extends PreTrainedModel{}class FastViTModel extends FastViTPreTrainedModel{}class FastViTForImageClassification extends FastViTPreTrainedModel{async _call(s){return new SequenceClassifierOutput(await super._call(s))}}class VitMattePreTrainedModel extends PreTrainedModel{}class VitMatteForImageMatting extends VitMattePreTrainedModel{async _call(s){return new ImageMattingOutput(await super._call(s))}}class MobileViTPreTrainedModel extends PreTrainedModel{}class MobileViTModel extends MobileViTPreTrainedModel{}class MobileViTForImageClassification extends MobileViTPreTrainedModel{async _call(s){return new SequenceClassifierOutput(await super._call(s))}}class MobileViTV2PreTrainedModel extends PreTrainedModel{}class MobileViTV2Model extends MobileViTV2PreTrainedModel{}class MobileViTV2ForImageClassification extends MobileViTV2PreTrainedModel{async _call(s){return new SequenceClassifierOutput(await super._call(s))}}class OwlViTPreTrainedModel extends PreTrainedModel{}class OwlViTModel extends OwlViTPreTrainedModel{}class OwlViTForObjectDetection extends OwlViTPreTrainedModel{}class Owlv2PreTrainedModel extends PreTrainedModel{}class Owlv2Model extends Owlv2PreTrainedModel{}class Owlv2ForObjectDetection extends Owlv2PreTrainedModel{}class BeitPreTrainedModel extends PreTrainedModel{}class BeitModel extends BeitPreTrainedModel{}class BeitForImageClassification extends BeitPreTrainedModel{async _call(s){return new SequenceClassifierOutput(await super._call(s))}}class DetrPreTrainedModel extends PreTrainedModel{}class DetrModel extends DetrPreTrainedModel{}class DetrForObjectDetection extends DetrPreTrainedModel{async _call(s){return new DetrObjectDetectionOutput(await super._call(s))}}class DetrForSegmentation extends DetrPreTrainedModel{async _call(s){return new DetrSegmentationOutput(await super._call(s))}}class DetrObjectDetectionOutput extends ModelOutput{constructor({logits:s,pred_boxes:o}){super(),this.logits=s,this.pred_boxes=o}}class DetrSegmentationOutput extends ModelOutput{constructor({logits:s,pred_boxes:o,pred_masks:a}){super(),this.logits=s,this.pred_boxes=o,this.pred_masks=a}}class TableTransformerPreTrainedModel extends PreTrainedModel{}class TableTransformerModel extends TableTransformerPreTrainedModel{}class TableTransformerForObjectDetection extends TableTransformerPreTrainedModel{async _call(s){return new TableTransformerObjectDetectionOutput(await super._call(s))}}class TableTransformerObjectDetectionOutput extends DetrObjectDetectionOutput{}class DeiTPreTrainedModel extends PreTrainedModel{}class DeiTModel extends DeiTPreTrainedModel{}class DeiTForImageClassification extends DeiTPreTrainedModel{async _call(s){return new SequenceClassifierOutput(await super._call(s))}}class ResNetPreTrainedModel extends PreTrainedModel{}class ResNetModel extends ResNetPreTrainedModel{}class ResNetForImageClassification extends ResNetPreTrainedModel{async _call(s){return new SequenceClassifierOutput(await super._call(s))}}class SwinPreTrainedModel extends PreTrainedModel{}class SwinModel extends SwinPreTrainedModel{}class SwinForImageClassification extends SwinPreTrainedModel{async _call(s){return new SequenceClassifierOutput(await super._call(s))}}class Swin2SRPreTrainedModel extends PreTrainedModel{}class Swin2SRModel extends Swin2SRPreTrainedModel{}class Swin2SRForImageSuperResolution extends Swin2SRPreTrainedModel{}class DPTPreTrainedModel extends PreTrainedModel{}class DPTModel extends DPTPreTrainedModel{}class DPTForDepthEstimation extends DPTPreTrainedModel{}class DepthAnythingPreTrainedModel extends PreTrainedModel{}class DepthAnythingForDepthEstimation extends DepthAnythingPreTrainedModel{}class GLPNPreTrainedModel extends PreTrainedModel{}class GLPNModel extends GLPNPreTrainedModel{}class GLPNForDepthEstimation extends GLPNPreTrainedModel{}class DonutSwinPreTrainedModel extends PreTrainedModel{}class DonutSwinModel extends DonutSwinPreTrainedModel{}class ConvNextPreTrainedModel extends PreTrainedModel{}class ConvNextModel extends ConvNextPreTrainedModel{}class ConvNextForImageClassification extends ConvNextPreTrainedModel{async _call(s){return new SequenceClassifierOutput(await super._call(s))}}class ConvNextV2PreTrainedModel extends PreTrainedModel{}class ConvNextV2Model extends ConvNextV2PreTrainedModel{}class ConvNextV2ForImageClassification extends ConvNextV2PreTrainedModel{async _call(s){return new SequenceClassifierOutput(await super._call(s))}}class Dinov2PreTrainedModel extends PreTrainedModel{}class Dinov2Model extends Dinov2PreTrainedModel{}class Dinov2ForImageClassification extends Dinov2PreTrainedModel{async _call(s){return new SequenceClassifierOutput(await super._call(s))}}class YolosPreTrainedModel extends PreTrainedModel{}class YolosModel extends YolosPreTrainedModel{}class YolosForObjectDetection extends YolosPreTrainedModel{async _call(s){return new YolosObjectDetectionOutput(await super._call(s))}}class YolosObjectDetectionOutput extends ModelOutput{constructor({logits:s,pred_boxes:o}){super(),this.logits=s,this.pred_boxes=o}}class SamPreTrainedModel extends PreTrainedModel{}class SamModel extends SamPreTrainedModel{constructor(s,o,a){super(s,o),this.prompt_encoder_mask_decoder=a}async get_image_embeddings({pixel_values:s}){return await encoderForward(this,{pixel_values:s})}async forward(s){if((!s.image_embeddings||!s.image_positional_embeddings)&&(s={...s,...await this.get_image_embeddings(s)}),!s.input_labels){const o=s.input_points.dims.slice(0,-1),a=o.reduce((c,d)=>c*d,1);s.input_labels=new Tensor$1("int64",new BigInt64Array(a).fill(1n),o)}return await sessionRun(this.prompt_encoder_mask_decoder,{input_points:s.input_points,input_labels:s.input_labels,image_embeddings:s.image_embeddings,image_positional_embeddings:s.image_positional_embeddings})}async _call(s){return new SamImageSegmentationOutput(await super._call(s))}}class SamImageSegmentationOutput extends ModelOutput{constructor({iou_scores:s,pred_masks:o}){super(),this.iou_scores=s,this.pred_masks=o}}class MarianPreTrainedModel extends PreTrainedModel{}class MarianModel extends MarianPreTrainedModel{}class MarianMTModel extends MarianPreTrainedModel{constructor(s,o,a,c){super(s,o),this.decoder_merged_session=a,this.generation_config=c,this.num_decoder_layers=this.config.decoder_layers,this.num_decoder_heads=this.config.decoder_attention_heads,this.decoder_dim_kv=this.config.d_model/this.num_decoder_heads,this.num_encoder_layers=this.config.encoder_layers,this.num_encoder_heads=this.config.encoder_attention_heads,this.encoder_dim_kv=this.config.d_model/this.num_encoder_heads}}class M2M100PreTrainedModel extends PreTrainedModel{}class M2M100Model extends M2M100PreTrainedModel{}class M2M100ForConditionalGeneration extends M2M100PreTrainedModel{constructor(s,o,a,c){super(s,o),this.decoder_merged_session=a,this.generation_config=c,this.num_decoder_layers=this.config.decoder_layers,this.num_decoder_heads=this.config.decoder_attention_heads,this.decoder_dim_kv=this.config.d_model/this.num_decoder_heads,this.num_encoder_layers=this.config.encoder_layers,this.num_encoder_heads=this.config.encoder_attention_heads,this.encoder_dim_kv=this.config.d_model/this.num_encoder_heads}}class Wav2Vec2PreTrainedModel extends PreTrainedModel{}class Wav2Vec2Model extends Wav2Vec2PreTrainedModel{}class Wav2Vec2ForCTC extends Wav2Vec2PreTrainedModel{async _call(s){return new CausalLMOutput(await super._call(s))}}class Wav2Vec2ForSequenceClassification extends Wav2Vec2PreTrainedModel{async _call(s){return new SequenceClassifierOutput(await super._call(s))}}class Wav2Vec2ForAudioFrameClassification extends Wav2Vec2PreTrainedModel{async _call(s){return new TokenClassifierOutput(await super._call(s))}}class UniSpeechPreTrainedModel extends PreTrainedModel{}class UniSpeechModel extends UniSpeechPreTrainedModel{}class UniSpeechForCTC extends UniSpeechPreTrainedModel{async _call(s){return new CausalLMOutput(await super._call(s))}}class UniSpeechForSequenceClassification extends UniSpeechPreTrainedModel{async _call(s){return new SequenceClassifierOutput(await super._call(s))}}class UniSpeechSatPreTrainedModel extends PreTrainedModel{}class UniSpeechSatModel extends UniSpeechSatPreTrainedModel{}class UniSpeechSatForCTC extends UniSpeechSatPreTrainedModel{async _call(s){return new CausalLMOutput(await super._call(s))}}class UniSpeechSatForSequenceClassification extends UniSpeechSatPreTrainedModel{async _call(s){return new SequenceClassifierOutput(await super._call(s))}}class UniSpeechSatForAudioFrameClassification extends UniSpeechSatPreTrainedModel{async _call(s){return new TokenClassifierOutput(await super._call(s))}}class Wav2Vec2BertPreTrainedModel extends PreTrainedModel{}class Wav2Vec2BertModel extends Wav2Vec2BertPreTrainedModel{}class Wav2Vec2BertForCTC extends Wav2Vec2BertPreTrainedModel{async _call(s){return new CausalLMOutput(await super._call(s))}}class Wav2Vec2BertForSequenceClassification extends Wav2Vec2BertPreTrainedModel{async _call(s){return new SequenceClassifierOutput(await super._call(s))}}class HubertModel extends Wav2Vec2PreTrainedModel{}class HubertForCTC extends Wav2Vec2PreTrainedModel{async _call(s){return new CausalLMOutput(await super._call(s))}}class HubertForSequenceClassification extends Wav2Vec2PreTrainedModel{async _call(s){return new SequenceClassifierOutput(await super._call(s))}}class WavLMPreTrainedModel extends PreTrainedModel{}class WavLMModel extends WavLMPreTrainedModel{}class WavLMForCTC extends WavLMPreTrainedModel{async _call(s){return new CausalLMOutput(await super._call(s))}}class WavLMForSequenceClassification extends WavLMPreTrainedModel{async _call(s){return new SequenceClassifierOutput(await super._call(s))}}class WavLMForXVector extends WavLMPreTrainedModel{async _call(s){return new XVectorOutput(await super._call(s))}}class WavLMForAudioFrameClassification extends WavLMPreTrainedModel{async _call(s){return new TokenClassifierOutput(await super._call(s))}}class SpeechT5PreTrainedModel extends PreTrainedModel{}class SpeechT5ForSpeechToText extends SpeechT5PreTrainedModel{}class SpeechT5ForTextToSpeech extends SpeechT5PreTrainedModel{constructor(s,o,a,c){super(s,o),this.decoder_merged_session=a,this.generation_config=c,this.num_decoder_layers=this.config.decoder_layers,this.num_decoder_heads=this.config.decoder_attention_heads,this.decoder_dim_kv=this.config.hidden_size/this.num_decoder_heads,this.num_encoder_layers=this.config.encoder_layers,this.num_encoder_heads=this.config.encoder_attention_heads,this.encoder_dim_kv=this.config.hidden_size/this.num_encoder_heads}async generate_speech(s,o,{threshold:a=.5,minlenratio:c=0,maxlenratio:d=20,vocoder:g=null}={}){const $={input_ids:s},{encoder_outputs:j,encoder_attention_mask:_e}=await encoderForward(this,$),et=j.dims[1]/this.config.reduction_factor,_=Math.floor(et*d),b=Math.floor(et*c),tt=this.config.num_mel_bins;let nt=[],rt=null,st=null,ot=0;for(;;){++ot;const lt=boolTensor(!!st);let ut;st?ut=st.output_sequence_out:ut=new Tensor$1("float32",new Float32Array(tt),[1,1,tt]);let ct={use_cache_branch:lt,output_sequence:ut,encoder_attention_mask:_e,speaker_embeddings:o,encoder_hidden_states:j};this.addPastKeyValues(ct,rt),st=await sessionRun(this.decoder_merged_session,ct),rt=this.getPastKeyValues(st,rt);const{prob:dt,spectrum:pt}=st;if(nt.push(pt),ot>=b&&(Array.from(dt.data).filter(ht=>ht>=a).length>0||ot>=_))break}const it=cat(nt),{waveform:at}=await sessionRun(g.session,{spectrogram:it});return{spectrogram:it,waveform:at}}}class SpeechT5HifiGan extends PreTrainedModel{constructor(){super(...arguments);Ht(this,"main_input_name","spectrogram")}}class TrOCRPreTrainedModel extends PreTrainedModel{constructor(s,o,a){super(s,o),this.generation_config=a,this.config.pad_token_id=this.config.eos_token_id,this.num_encoder_layers=this.num_decoder_layers=this.config.decoder_layers,this.num_encoder_heads=this.num_decoder_heads=this.config.decoder_attention_heads,this.encoder_dim_kv=this.decoder_dim_kv=this.config.d_model/this.num_decoder_heads}}class TrOCRForCausalLM extends TrOCRPreTrainedModel{}class MistralPreTrainedModel extends PreTrainedModel{constructor(s,o,a){super(s,o),this.generation_config=a,this.config.pad_token_id=this.config.eos_token_id,this.num_heads=this.config.num_key_value_heads,this.num_layers=this.config.num_hidden_layers,this.dim_kv=this.config.hidden_size/this.config.num_attention_heads}}class MistralModel extends MistralPreTrainedModel{}class MistralForCausalLM extends MistralPreTrainedModel{}class Starcoder2PreTrainedModel extends PreTrainedModel{constructor(s,o,a){super(s,o),this.generation_config=a,this.config.pad_token_id=this.config.eos_token_id,this.num_heads=this.config.num_key_value_heads,this.num_layers=this.config.num_hidden_layers,this.dim_kv=this.config.hidden_size/this.config.num_attention_heads}}class Starcoder2Model extends Starcoder2PreTrainedModel{}class Starcoder2ForCausalLM extends Starcoder2PreTrainedModel{}class FalconPreTrainedModel extends PreTrainedModel{constructor(s,o,a){super(s,o),this.generation_config=a,this.config.pad_token_id=this.config.eos_token_id,this.num_heads=this.config.num_attention_heads,this.num_layers=this.config.num_hidden_layers,this.dim_kv=this.config.hidden_size/this.config.num_attention_heads}}class FalconModel extends FalconPreTrainedModel{}class FalconForCausalLM extends FalconPreTrainedModel{}class ClapPreTrainedModel extends PreTrainedModel{}class ClapModel extends ClapPreTrainedModel{}class ClapTextModelWithProjection extends ClapPreTrainedModel{static async from_pretrained(s,o={}){return o.model_file_name??(o.model_file_name="text_model"),super.from_pretrained(s,o)}}class ClapAudioModelWithProjection extends ClapPreTrainedModel{static async from_pretrained(s,o={}){return o.model_file_name??(o.model_file_name="audio_model"),super.from_pretrained(s,o)}}class VitsPreTrainedModel extends PreTrainedModel{}class VitsModel extends VitsPreTrainedModel{async _call(s){return new VitsModelOutput(await super._call(s))}}class SegformerPreTrainedModel extends PreTrainedModel{}class SegformerForImageClassification extends SegformerPreTrainedModel{}class SegformerForSemanticSegmentation extends SegformerPreTrainedModel{}class StableLmPreTrainedModel extends PreTrainedModel{constructor(s,o,a){super(s,o),this.generation_config=a,this.config.pad_token_id=this.config.eos_token_id,this.num_heads=this.config.num_attention_heads,this.num_layers=this.config.num_hidden_layers,this.dim_kv=this.config.hidden_size/this.num_heads}}class StableLmForCausalLM extends StableLmPreTrainedModel{}class EfficientNetPreTrainedModel extends PreTrainedModel{}class EfficientNetModel extends EfficientNetPreTrainedModel{}class EfficientNetForImageClassification extends EfficientNetPreTrainedModel{async _call(s){return new SequenceClassifierOutput(await super._call(s))}}class PretrainedMixin{static async from_pretrained(s,{quantized:o=!0,progress_callback:a=null,config:c=null,cache_dir:d=null,local_files_only:g=!1,revision:$="main",model_file_name:j=null}={}){let _e={quantized:o,progress_callback:a,config:c,cache_dir:d,local_files_only:g,revision:$,model_file_name:j};if(c=await AutoConfig.from_pretrained(s,_e),_e.config||(_e.config=c),!this.MODEL_CLASS_MAPPINGS)throw new Error("`MODEL_CLASS_MAPPINGS` not implemented for this type of `AutoClass`: "+this.name);for(let et of this.MODEL_CLASS_MAPPINGS){const _=et.get(c.model_type);if(_)return await _[1].from_pretrained(s,_e)}if(this.BASE_IF_FAIL)return console.warn(`Unknown model class "${c.model_type}", attempting to construct from base class.`),await PreTrainedModel.from_pretrained(s,_e);throw Error(`Unsupported model type: ${c.model_type}`)}}Ht(PretrainedMixin,"MODEL_CLASS_MAPPINGS",null),Ht(PretrainedMixin,"BASE_IF_FAIL",!1);const MODEL_MAPPING_NAMES_ENCODER_ONLY=new Map([["bert",["BertModel",BertModel]],["nomic_bert",["NomicBertModel",NomicBertModel]],["roformer",["RoFormerModel",RoFormerModel]],["electra",["ElectraModel",ElectraModel]],["esm",["EsmModel",EsmModel]],["convbert",["ConvBertModel",ConvBertModel]],["camembert",["CamembertModel",CamembertModel]],["deberta",["DebertaModel",DebertaModel]],["deberta-v2",["DebertaV2Model",DebertaV2Model]],["mpnet",["MPNetModel",MPNetModel]],["albert",["AlbertModel",AlbertModel]],["distilbert",["DistilBertModel",DistilBertModel]],["roberta",["RobertaModel",RobertaModel]],["xlm",["XLMModel",XLMModel]],["xlm-roberta",["XLMRobertaModel",XLMRobertaModel]],["clap",["ClapModel",ClapModel]],["clip",["CLIPModel",CLIPModel]],["clipseg",["CLIPSegModel",CLIPSegModel]],["chinese_clip",["ChineseCLIPModel",ChineseCLIPModel]],["siglip",["SiglipModel",SiglipModel]],["mobilebert",["MobileBertModel",MobileBertModel]],["squeezebert",["SqueezeBertModel",SqueezeBertModel]],["wav2vec2",["Wav2Vec2Model",Wav2Vec2Model]],["wav2vec2-bert",["Wav2Vec2BertModel",Wav2Vec2BertModel]],["unispeech",["UniSpeechModel",UniSpeechModel]],["unispeech-sat",["UniSpeechSatModel",UniSpeechSatModel]],["hubert",["HubertModel",HubertModel]],["wavlm",["WavLMModel",WavLMModel]],["audio-spectrogram-transformer",["ASTModel",ASTModel]],["vits",["VitsModel",VitsModel]],["detr",["DetrModel",DetrModel]],["table-transformer",["TableTransformerModel",TableTransformerModel]],["vit",["ViTModel",ViTModel]],["fastvit",["FastViTModel",FastViTModel]],["mobilevit",["MobileViTModel",MobileViTModel]],["mobilevitv2",["MobileViTV2Model",MobileViTV2Model]],["owlvit",["OwlViTModel",OwlViTModel]],["owlv2",["Owlv2Model",Owlv2Model]],["beit",["BeitModel",BeitModel]],["deit",["DeiTModel",DeiTModel]],["convnext",["ConvNextModel",ConvNextModel]],["convnextv2",["ConvNextV2Model",ConvNextV2Model]],["dinov2",["Dinov2Model",Dinov2Model]],["resnet",["ResNetModel",ResNetModel]],["swin",["SwinModel",SwinModel]],["swin2sr",["Swin2SRModel",Swin2SRModel]],["donut-swin",["DonutSwinModel",DonutSwinModel]],["yolos",["YolosModel",YolosModel]],["dpt",["DPTModel",DPTModel]],["glpn",["GLPNModel",GLPNModel]],["hifigan",["SpeechT5HifiGan",SpeechT5HifiGan]],["efficientnet",["EfficientNetModel",EfficientNetModel]]]),MODEL_MAPPING_NAMES_ENCODER_DECODER=new Map([["t5",["T5Model",T5Model]],["longt5",["LongT5Model",LongT5Model]],["mt5",["MT5Model",MT5Model]],["bart",["BartModel",BartModel]],["mbart",["MBartModel",MBartModel]],["marian",["MarianModel",MarianModel]],["whisper",["WhisperModel",WhisperModel]],["m2m_100",["M2M100Model",M2M100Model]],["blenderbot",["BlenderbotModel",BlenderbotModel]],["blenderbot-small",["BlenderbotSmallModel",BlenderbotSmallModel]]]),MODEL_MAPPING_NAMES_DECODER_ONLY=new Map([["bloom",["BloomModel",BloomModel]],["gpt2",["GPT2Model",GPT2Model]],["gptj",["GPTJModel",GPTJModel]],["gpt_bigcode",["GPTBigCodeModel",GPTBigCodeModel]],["gpt_neo",["GPTNeoModel",GPTNeoModel]],["gpt_neox",["GPTNeoXModel",GPTNeoXModel]],["codegen",["CodeGenModel",CodeGenModel]],["llama",["LlamaModel",LlamaModel]],["qwen2",["Qwen2Model",Qwen2Model]],["phi",["PhiModel",PhiModel]],["mpt",["MptModel",MptModel]],["opt",["OPTModel",OPTModel]],["mistral",["MistralModel",MistralModel]],["starcoder2",["Starcoder2Model",Starcoder2Model]],["falcon",["FalconModel",FalconModel]]]),MODEL_FOR_SPEECH_SEQ_2_SEQ_MAPPING_NAMES=new Map([["speecht5",["SpeechT5ForSpeechToText",SpeechT5ForSpeechToText]],["whisper",["WhisperForConditionalGeneration",WhisperForConditionalGeneration]]]),MODEL_FOR_TEXT_TO_SPECTROGRAM_MAPPING_NAMES=new Map([["speecht5",["SpeechT5ForTextToSpeech",SpeechT5ForTextToSpeech]]]),MODEL_FOR_TEXT_TO_WAVEFORM_MAPPING_NAMES=new Map([["vits",["VitsModel",VitsModel]]]),MODEL_FOR_SEQUENCE_CLASSIFICATION_MAPPING_NAMES=new Map([["bert",["BertForSequenceClassification",BertForSequenceClassification]],["roformer",["RoFormerForSequenceClassification",RoFormerForSequenceClassification]],["electra",["ElectraForSequenceClassification",ElectraForSequenceClassification]],["esm",["EsmForSequenceClassification",EsmForSequenceClassification]],["convbert",["ConvBertForSequenceClassification",ConvBertForSequenceClassification]],["camembert",["CamembertForSequenceClassification",CamembertForSequenceClassification]],["deberta",["DebertaForSequenceClassification",DebertaForSequenceClassification]],["deberta-v2",["DebertaV2ForSequenceClassification",DebertaV2ForSequenceClassification]],["mpnet",["MPNetForSequenceClassification",MPNetForSequenceClassification]],["albert",["AlbertForSequenceClassification",AlbertForSequenceClassification]],["distilbert",["DistilBertForSequenceClassification",DistilBertForSequenceClassification]],["roberta",["RobertaForSequenceClassification",RobertaForSequenceClassification]],["xlm",["XLMForSequenceClassification",XLMForSequenceClassification]],["xlm-roberta",["XLMRobertaForSequenceClassification",XLMRobertaForSequenceClassification]],["bart",["BartForSequenceClassification",BartForSequenceClassification]],["mbart",["MBartForSequenceClassification",MBartForSequenceClassification]],["mobilebert",["MobileBertForSequenceClassification",MobileBertForSequenceClassification]],["squeezebert",["SqueezeBertForSequenceClassification",SqueezeBertForSequenceClassification]]]),MODEL_FOR_TOKEN_CLASSIFICATION_MAPPING_NAMES=new Map([["bert",["BertForTokenClassification",BertForTokenClassification]],["roformer",["RoFormerForTokenClassification",RoFormerForTokenClassification]],["electra",["ElectraForTokenClassification",ElectraForTokenClassification]],["esm",["EsmForTokenClassification",EsmForTokenClassification]],["convbert",["ConvBertForTokenClassification",ConvBertForTokenClassification]],["camembert",["CamembertForTokenClassification",CamembertForTokenClassification]],["deberta",["DebertaForTokenClassification",DebertaForTokenClassification]],["deberta-v2",["DebertaV2ForTokenClassification",DebertaV2ForTokenClassification]],["mpnet",["MPNetForTokenClassification",MPNetForTokenClassification]],["distilbert",["DistilBertForTokenClassification",DistilBertForTokenClassification]],["roberta",["RobertaForTokenClassification",RobertaForTokenClassification]],["xlm",["XLMForTokenClassification",XLMForTokenClassification]],["xlm-roberta",["XLMRobertaForTokenClassification",XLMRobertaForTokenClassification]]]),MODEL_FOR_SEQ_TO_SEQ_CAUSAL_LM_MAPPING_NAMES=new Map([["t5",["T5ForConditionalGeneration",T5ForConditionalGeneration]],["longt5",["LongT5ForConditionalGeneration",LongT5ForConditionalGeneration]],["mt5",["MT5ForConditionalGeneration",MT5ForConditionalGeneration]],["bart",["BartForConditionalGeneration",BartForConditionalGeneration]],["mbart",["MBartForConditionalGeneration",MBartForConditionalGeneration]],["marian",["MarianMTModel",MarianMTModel]],["m2m_100",["M2M100ForConditionalGeneration",M2M100ForConditionalGeneration]],["blenderbot",["BlenderbotForConditionalGeneration",BlenderbotForConditionalGeneration]],["blenderbot-small",["BlenderbotSmallForConditionalGeneration",BlenderbotSmallForConditionalGeneration]]]),MODEL_WITH_LM_HEAD_MAPPING_NAMES=new Map([["bloom",["BloomForCausalLM",BloomForCausalLM]],["gpt2",["GPT2LMHeadModel",GPT2LMHeadModel]],["gptj",["GPTJForCausalLM",GPTJForCausalLM]],["gpt_bigcode",["GPTBigCodeForCausalLM",GPTBigCodeForCausalLM]],["gpt_neo",["GPTNeoForCausalLM",GPTNeoForCausalLM]],["gpt_neox",["GPTNeoXForCausalLM",GPTNeoXForCausalLM]],["codegen",["CodeGenForCausalLM",CodeGenForCausalLM]],["llama",["LlamaForCausalLM",LlamaForCausalLM]],["qwen2",["Qwen2ForCausalLM",Qwen2ForCausalLM]],["phi",["PhiForCausalLM",PhiForCausalLM]],["mpt",["MptForCausalLM",MptForCausalLM]],["opt",["OPTForCausalLM",OPTForCausalLM]],["mbart",["MBartForCausalLM",MBartForCausalLM]],["mistral",["MistralForCausalLM",MistralForCausalLM]],["starcoder2",["Starcoder2ForCausalLM",Starcoder2ForCausalLM]],["falcon",["FalconForCausalLM",FalconForCausalLM]],["trocr",["TrOCRForCausalLM",TrOCRForCausalLM]],["stablelm",["StableLmForCausalLM",StableLmForCausalLM]]]),MODEL_FOR_MASKED_LM_MAPPING_NAMES=new Map([["bert",["BertForMaskedLM",BertForMaskedLM]],["roformer",["RoFormerForMaskedLM",RoFormerForMaskedLM]],["electra",["ElectraForMaskedLM",ElectraForMaskedLM]],["esm",["EsmForMaskedLM",EsmForMaskedLM]],["convbert",["ConvBertForMaskedLM",ConvBertForMaskedLM]],["camembert",["CamembertForMaskedLM",CamembertForMaskedLM]],["deberta",["DebertaForMaskedLM",DebertaForMaskedLM]],["deberta-v2",["DebertaV2ForMaskedLM",DebertaV2ForMaskedLM]],["mpnet",["MPNetForMaskedLM",MPNetForMaskedLM]],["albert",["AlbertForMaskedLM",AlbertForMaskedLM]],["distilbert",["DistilBertForMaskedLM",DistilBertForMaskedLM]],["roberta",["RobertaForMaskedLM",RobertaForMaskedLM]],["xlm",["XLMWithLMHeadModel",XLMWithLMHeadModel]],["xlm-roberta",["XLMRobertaForMaskedLM",XLMRobertaForMaskedLM]],["mobilebert",["MobileBertForMaskedLM",MobileBertForMaskedLM]],["squeezebert",["SqueezeBertForMaskedLM",SqueezeBertForMaskedLM]]]),MODEL_FOR_QUESTION_ANSWERING_MAPPING_NAMES=new Map([["bert",["BertForQuestionAnswering",BertForQuestionAnswering]],["roformer",["RoFormerForQuestionAnswering",RoFormerForQuestionAnswering]],["electra",["ElectraForQuestionAnswering",ElectraForQuestionAnswering]],["convbert",["ConvBertForQuestionAnswering",ConvBertForQuestionAnswering]],["camembert",["CamembertForQuestionAnswering",CamembertForQuestionAnswering]],["deberta",["DebertaForQuestionAnswering",DebertaForQuestionAnswering]],["deberta-v2",["DebertaV2ForQuestionAnswering",DebertaV2ForQuestionAnswering]],["mpnet",["MPNetForQuestionAnswering",MPNetForQuestionAnswering]],["albert",["AlbertForQuestionAnswering",AlbertForQuestionAnswering]],["distilbert",["DistilBertForQuestionAnswering",DistilBertForQuestionAnswering]],["roberta",["RobertaForQuestionAnswering",RobertaForQuestionAnswering]],["xlm",["XLMForQuestionAnswering",XLMForQuestionAnswering]],["xlm-roberta",["XLMRobertaForQuestionAnswering",XLMRobertaForQuestionAnswering]],["mobilebert",["MobileBertForQuestionAnswering",MobileBertForQuestionAnswering]],["squeezebert",["SqueezeBertForQuestionAnswering",SqueezeBertForQuestionAnswering]]]),MODEL_FOR_VISION_2_SEQ_MAPPING_NAMES=new Map([["vision-encoder-decoder",["VisionEncoderDecoderModel",VisionEncoderDecoderModel]]]),MODEL_FOR_DOCUMENT_QUESTION_ANSWERING_MAPPING_NAMES=new Map([["vision-encoder-decoder",["VisionEncoderDecoderModel",VisionEncoderDecoderModel]]]),MODEL_FOR_IMAGE_CLASSIFICATION_MAPPING_NAMES=new Map([["vit",["ViTForImageClassification",ViTForImageClassification]],["fastvit",["FastViTForImageClassification",FastViTForImageClassification]],["mobilevit",["MobileViTForImageClassification",MobileViTForImageClassification]],["mobilevitv2",["MobileViTV2ForImageClassification",MobileViTV2ForImageClassification]],["beit",["BeitForImageClassification",BeitForImageClassification]],["deit",["DeiTForImageClassification",DeiTForImageClassification]],["convnext",["ConvNextForImageClassification",ConvNextForImageClassification]],["convnextv2",["ConvNextV2ForImageClassification",ConvNextV2ForImageClassification]],["dinov2",["Dinov2ForImageClassification",Dinov2ForImageClassification]],["resnet",["ResNetForImageClassification",ResNetForImageClassification]],["swin",["SwinForImageClassification",SwinForImageClassification]],["segformer",["SegformerForImageClassification",SegformerForImageClassification]],["efficientnet",["EfficientNetForImageClassification",EfficientNetForImageClassification]]]),MODEL_FOR_OBJECT_DETECTION_MAPPING_NAMES=new Map([["detr",["DetrForObjectDetection",DetrForObjectDetection]],["table-transformer",["TableTransformerForObjectDetection",TableTransformerForObjectDetection]],["yolos",["YolosForObjectDetection",YolosForObjectDetection]]]),MODEL_FOR_ZERO_SHOT_OBJECT_DETECTION_MAPPING_NAMES=new Map([["owlvit",["OwlViTForObjectDetection",OwlViTForObjectDetection]],["owlv2",["Owlv2ForObjectDetection",Owlv2ForObjectDetection]]]),MODEL_FOR_IMAGE_SEGMENTATION_MAPPING_NAMES=new Map([["detr",["DetrForSegmentation",DetrForSegmentation]],["clipseg",["CLIPSegForImageSegmentation",CLIPSegForImageSegmentation]]]),MODEL_FOR_SEMANTIC_SEGMENTATION_MAPPING_NAMES=new Map([["segformer",["SegformerForSemanticSegmentation",SegformerForSemanticSegmentation]]]),MODEL_FOR_MASK_GENERATION_MAPPING_NAMES=new Map([["sam",["SamModel",SamModel]]]),MODEL_FOR_CTC_MAPPING_NAMES=new Map([["wav2vec2",["Wav2Vec2ForCTC",Wav2Vec2ForCTC]],["wav2vec2-bert",["Wav2Vec2BertForCTC",Wav2Vec2BertForCTC]],["unispeech",["UniSpeechForCTC",UniSpeechForCTC]],["unispeech-sat",["UniSpeechSatForCTC",UniSpeechSatForCTC]],["wavlm",["WavLMForCTC",WavLMForCTC]],["hubert",["HubertForCTC",HubertForCTC]]]),MODEL_FOR_AUDIO_CLASSIFICATION_MAPPING_NAMES=new Map([["wav2vec2",["Wav2Vec2ForSequenceClassification",Wav2Vec2ForSequenceClassification]],["wav2vec2-bert",["Wav2Vec2BertForSequenceClassification",Wav2Vec2BertForSequenceClassification]],["unispeech",["UniSpeechForSequenceClassification",UniSpeechForSequenceClassification]],["unispeech-sat",["UniSpeechSatForSequenceClassification",UniSpeechSatForSequenceClassification]],["wavlm",["WavLMForSequenceClassification",WavLMForSequenceClassification]],["hubert",["HubertForSequenceClassification",HubertForSequenceClassification]],["audio-spectrogram-transformer",["ASTForAudioClassification",ASTForAudioClassification]]]),MODEL_FOR_AUDIO_XVECTOR_MAPPING_NAMES=new Map([["wavlm",["WavLMForXVector",WavLMForXVector]]]),MODEL_FOR_AUDIO_FRAME_CLASSIFICATION_MAPPING_NAMES=new Map([["unispeech-sat",["UniSpeechSatForAudioFrameClassification",UniSpeechSatForAudioFrameClassification]],["wavlm",["WavLMForAudioFrameClassification",WavLMForAudioFrameClassification]],["wav2vec2",["Wav2Vec2ForAudioFrameClassification",Wav2Vec2ForAudioFrameClassification]]]),MODEL_FOR_IMAGE_MATTING_MAPPING_NAMES=new Map([["vitmatte",["VitMatteForImageMatting",VitMatteForImageMatting]]]),MODEL_FOR_IMAGE_TO_IMAGE_MAPPING_NAMES=new Map([["swin2sr",["Swin2SRForImageSuperResolution",Swin2SRForImageSuperResolution]]]),MODEL_FOR_DEPTH_ESTIMATION_MAPPING_NAMES=new Map([["dpt",["DPTForDepthEstimation",DPTForDepthEstimation]],["depth_anything",["DepthAnythingForDepthEstimation",DepthAnythingForDepthEstimation]],["glpn",["GLPNForDepthEstimation",GLPNForDepthEstimation]]]),MODEL_FOR_IMAGE_FEATURE_EXTRACTION_MAPPING_NAMES=new Map([["clip",["CLIPVisionModelWithProjection",CLIPVisionModelWithProjection]],["siglip",["SiglipVisionModel",SiglipVisionModel]]]),MODEL_CLASS_TYPE_MAPPING=[[MODEL_MAPPING_NAMES_ENCODER_ONLY,MODEL_TYPES.EncoderOnly],[MODEL_MAPPING_NAMES_ENCODER_DECODER,MODEL_TYPES.EncoderDecoder],[MODEL_MAPPING_NAMES_DECODER_ONLY,MODEL_TYPES.DecoderOnly],[MODEL_FOR_SEQUENCE_CLASSIFICATION_MAPPING_NAMES,MODEL_TYPES.EncoderOnly],[MODEL_FOR_TOKEN_CLASSIFICATION_MAPPING_NAMES,MODEL_TYPES.EncoderOnly],[MODEL_FOR_SEQ_TO_SEQ_CAUSAL_LM_MAPPING_NAMES,MODEL_TYPES.Seq2Seq],[MODEL_FOR_SPEECH_SEQ_2_SEQ_MAPPING_NAMES,MODEL_TYPES.Seq2Seq],[MODEL_WITH_LM_HEAD_MAPPING_NAMES,MODEL_TYPES.DecoderOnly],[MODEL_FOR_MASKED_LM_MAPPING_NAMES,MODEL_TYPES.EncoderOnly],[MODEL_FOR_QUESTION_ANSWERING_MAPPING_NAMES,MODEL_TYPES.EncoderOnly],[MODEL_FOR_VISION_2_SEQ_MAPPING_NAMES,MODEL_TYPES.Vision2Seq],[MODEL_FOR_IMAGE_CLASSIFICATION_MAPPING_NAMES,MODEL_TYPES.EncoderOnly],[MODEL_FOR_IMAGE_SEGMENTATION_MAPPING_NAMES,MODEL_TYPES.EncoderOnly],[MODEL_FOR_SEMANTIC_SEGMENTATION_MAPPING_NAMES,MODEL_TYPES.EncoderOnly],[MODEL_FOR_IMAGE_MATTING_MAPPING_NAMES,MODEL_TYPES.EncoderOnly],[MODEL_FOR_IMAGE_TO_IMAGE_MAPPING_NAMES,MODEL_TYPES.EncoderOnly],[MODEL_FOR_DEPTH_ESTIMATION_MAPPING_NAMES,MODEL_TYPES.EncoderOnly],[MODEL_FOR_OBJECT_DETECTION_MAPPING_NAMES,MODEL_TYPES.EncoderOnly],[MODEL_FOR_ZERO_SHOT_OBJECT_DETECTION_MAPPING_NAMES,MODEL_TYPES.EncoderOnly],[MODEL_FOR_MASK_GENERATION_MAPPING_NAMES,MODEL_TYPES.MaskGeneration],[MODEL_FOR_CTC_MAPPING_NAMES,MODEL_TYPES.EncoderOnly],[MODEL_FOR_AUDIO_CLASSIFICATION_MAPPING_NAMES,MODEL_TYPES.EncoderOnly],[MODEL_FOR_TEXT_TO_SPECTROGRAM_MAPPING_NAMES,MODEL_TYPES.Seq2Seq],[MODEL_FOR_TEXT_TO_WAVEFORM_MAPPING_NAMES,MODEL_TYPES.EncoderOnly],[MODEL_FOR_AUDIO_XVECTOR_MAPPING_NAMES,MODEL_TYPES.EncoderOnly],[MODEL_FOR_AUDIO_FRAME_CLASSIFICATION_MAPPING_NAMES,MODEL_TYPES.EncoderOnly],[MODEL_FOR_IMAGE_FEATURE_EXTRACTION_MAPPING_NAMES,MODEL_TYPES.EncoderOnly]];for(const[i,s]of MODEL_CLASS_TYPE_MAPPING)for(const[o,a]of i.values())MODEL_TYPE_MAPPING.set(o,s),MODEL_CLASS_TO_NAME_MAPPING.set(a,o),MODEL_NAME_TO_CLASS_MAPPING.set(o,a);const CUSTOM_MAPPING=[["CLIPTextModelWithProjection",CLIPTextModelWithProjection,MODEL_TYPES.EncoderOnly],["SiglipTextModel",SiglipTextModel,MODEL_TYPES.EncoderOnly],["ClapTextModelWithProjection",ClapTextModelWithProjection,MODEL_TYPES.EncoderOnly],["ClapAudioModelWithProjection",ClapAudioModelWithProjection,MODEL_TYPES.EncoderOnly]];for(const[i,s,o]of CUSTOM_MAPPING)MODEL_TYPE_MAPPING.set(i,o),MODEL_CLASS_TO_NAME_MAPPING.set(s,i),MODEL_NAME_TO_CLASS_MAPPING.set(i,s);class AutoModel extends PretrainedMixin{}Ht(AutoModel,"MODEL_CLASS_MAPPINGS",MODEL_CLASS_TYPE_MAPPING.map(s=>s[0])),Ht(AutoModel,"BASE_IF_FAIL",!0);class AutoModelForSequenceClassification extends PretrainedMixin{}Ht(AutoModelForSequenceClassification,"MODEL_CLASS_MAPPINGS",[MODEL_FOR_SEQUENCE_CLASSIFICATION_MAPPING_NAMES]);class AutoModelForTokenClassification extends PretrainedMixin{}Ht(AutoModelForTokenClassification,"MODEL_CLASS_MAPPINGS",[MODEL_FOR_TOKEN_CLASSIFICATION_MAPPING_NAMES]);class AutoModelForSeq2SeqLM extends PretrainedMixin{}Ht(AutoModelForSeq2SeqLM,"MODEL_CLASS_MAPPINGS",[MODEL_FOR_SEQ_TO_SEQ_CAUSAL_LM_MAPPING_NAMES]);class AutoModelForSpeechSeq2Seq extends PretrainedMixin{}Ht(AutoModelForSpeechSeq2Seq,"MODEL_CLASS_MAPPINGS",[MODEL_FOR_SPEECH_SEQ_2_SEQ_MAPPING_NAMES]);class AutoModelForTextToSpectrogram extends PretrainedMixin{}Ht(AutoModelForTextToSpectrogram,"MODEL_CLASS_MAPPINGS",[MODEL_FOR_TEXT_TO_SPECTROGRAM_MAPPING_NAMES]);class AutoModelForTextToWaveform extends PretrainedMixin{}Ht(AutoModelForTextToWaveform,"MODEL_CLASS_MAPPINGS",[MODEL_FOR_TEXT_TO_WAVEFORM_MAPPING_NAMES]);class AutoModelForCausalLM extends PretrainedMixin{}Ht(AutoModelForCausalLM,"MODEL_CLASS_MAPPINGS",[MODEL_WITH_LM_HEAD_MAPPING_NAMES]);class AutoModelForMaskedLM extends PretrainedMixin{}Ht(AutoModelForMaskedLM,"MODEL_CLASS_MAPPINGS",[MODEL_FOR_MASKED_LM_MAPPING_NAMES]);class AutoModelForQuestionAnswering extends PretrainedMixin{}Ht(AutoModelForQuestionAnswering,"MODEL_CLASS_MAPPINGS",[MODEL_FOR_QUESTION_ANSWERING_MAPPING_NAMES]);class AutoModelForVision2Seq extends PretrainedMixin{}Ht(AutoModelForVision2Seq,"MODEL_CLASS_MAPPINGS",[MODEL_FOR_VISION_2_SEQ_MAPPING_NAMES]);class AutoModelForImageClassification extends PretrainedMixin{}Ht(AutoModelForImageClassification,"MODEL_CLASS_MAPPINGS",[MODEL_FOR_IMAGE_CLASSIFICATION_MAPPING_NAMES]);class AutoModelForImageSegmentation extends PretrainedMixin{}Ht(AutoModelForImageSegmentation,"MODEL_CLASS_MAPPINGS",[MODEL_FOR_IMAGE_SEGMENTATION_MAPPING_NAMES]);class AutoModelForSemanticSegmentation extends PretrainedMixin{}Ht(AutoModelForSemanticSegmentation,"MODEL_CLASS_MAPPINGS",[MODEL_FOR_SEMANTIC_SEGMENTATION_MAPPING_NAMES]);class AutoModelForObjectDetection extends PretrainedMixin{}Ht(AutoModelForObjectDetection,"MODEL_CLASS_MAPPINGS",[MODEL_FOR_OBJECT_DETECTION_MAPPING_NAMES]);class AutoModelForZeroShotObjectDetection extends PretrainedMixin{}Ht(AutoModelForZeroShotObjectDetection,"MODEL_CLASS_MAPPINGS",[MODEL_FOR_ZERO_SHOT_OBJECT_DETECTION_MAPPING_NAMES]);class AutoModelForCTC extends PretrainedMixin{}Ht(AutoModelForCTC,"MODEL_CLASS_MAPPINGS",[MODEL_FOR_CTC_MAPPING_NAMES]);class AutoModelForAudioClassification extends PretrainedMixin{}Ht(AutoModelForAudioClassification,"MODEL_CLASS_MAPPINGS",[MODEL_FOR_AUDIO_CLASSIFICATION_MAPPING_NAMES]);class AutoModelForDocumentQuestionAnswering extends PretrainedMixin{}Ht(AutoModelForDocumentQuestionAnswering,"MODEL_CLASS_MAPPINGS",[MODEL_FOR_DOCUMENT_QUESTION_ANSWERING_MAPPING_NAMES]);class AutoModelForImageToImage extends PretrainedMixin{}Ht(AutoModelForImageToImage,"MODEL_CLASS_MAPPINGS",[MODEL_FOR_IMAGE_TO_IMAGE_MAPPING_NAMES]);class AutoModelForDepthEstimation extends PretrainedMixin{}Ht(AutoModelForDepthEstimation,"MODEL_CLASS_MAPPINGS",[MODEL_FOR_DEPTH_ESTIMATION_MAPPING_NAMES]);class AutoModelForImageFeatureExtraction extends PretrainedMixin{}Ht(AutoModelForImageFeatureExtraction,"MODEL_CLASS_MAPPINGS",[MODEL_FOR_IMAGE_FEATURE_EXTRACTION_MAPPING_NAMES]);class Seq2SeqLMOutput extends ModelOutput{constructor({logits:s,past_key_values:o,encoder_outputs:a,decoder_attentions:c=null,cross_attentions:d=null}){super(),this.logits=s,this.past_key_values=o,this.encoder_outputs=a,this.decoder_attentions=c,this.cross_attentions=d}}class SequenceClassifierOutput extends ModelOutput{constructor({logits:s}){super(),this.logits=s}}class XVectorOutput extends ModelOutput{constructor({logits:s,embeddings:o}){super(),this.logits=s,this.embeddings=o}}class TokenClassifierOutput extends ModelOutput{constructor({logits:s}){super(),this.logits=s}}class MaskedLMOutput extends ModelOutput{constructor({logits:s}){super(),this.logits=s}}class QuestionAnsweringModelOutput extends ModelOutput{constructor({start_logits:s,end_logits:o}){super(),this.start_logits=s,this.end_logits=o}}class CausalLMOutput extends ModelOutput{constructor({logits:s}){super(),this.logits=s}}class ImageMattingOutput extends ModelOutput{constructor({alphas:s}){super(),this.alphas=s}}class VitsModelOutput extends ModelOutput{constructor({waveform:s,spectrogram:o}){super(),this.waveform=s,this.spectrogram=o}}const BROWSER_ENV=typeof self<"u",WEBWORKER_ENV=BROWSER_ENV&&self.constructor.name==="DedicatedWorkerGlobalScope";let createCanvasFunction,ImageDataClass,loadImageFunction;if(BROWSER_ENV)createCanvasFunction=(i,s)=>{if(!self.OffscreenCanvas)throw new Error("OffscreenCanvas not supported by this browser.");return new self.OffscreenCanvas(i,s)},loadImageFunction=self.createImageBitmap,ImageDataClass=self.ImageData;else if(sharp)loadImageFunction=async i=>{const o=(await i.metadata()).channels;let{data:a,info:c}=await i.rotate().raw().toBuffer({resolveWithObject:!0});const d=new RawImage(new Uint8ClampedArray(a),c.width,c.height,c.channels);return o!==void 0&&o!==c.channels&&d.convert(o),d};else throw new Error("Unable to load image processing library.");const RESAMPLING_MAPPING={0:"nearest",1:"lanczos",2:"bilinear",3:"bicubic",4:"box",5:"hamming"},CONTENT_TYPE_MAP=new Map([["png","image/png"],["jpg","image/jpeg"],["jpeg","image/jpeg"],["gif","image/gif"]]);class RawImage{constructor(s,o,a,c){this.data=s,this.width=o,this.height=a,this.channels=c}get size(){return[this.width,this.height]}static async read(s){if(s instanceof RawImage)return s;if(typeof s=="string"||s instanceof URL)return await this.fromURL(s);throw new Error(`Unsupported input type: ${typeof s}`)}static async fromURL(s){let o=await getFile(s);if(o.status!==200)throw new Error(`Unable to read image from "${s}" (${o.status} ${o.statusText})`);let a=await o.blob();return this.fromBlob(a)}static async fromBlob(s){if(BROWSER_ENV){let o=await loadImageFunction(s);const a=createCanvasFunction(o.width,o.height).getContext("2d");return a.drawImage(o,0,0),new this(a.getImageData(0,0,o.width,o.height).data,o.width,o.height,4)}else{let o=sharp(await s.arrayBuffer());return await loadImageFunction(o)}}static fromTensor(s,o="CHW"){if(s.dims.length!==3)throw new Error(`Tensor should have 3 dimensions, but has ${s.dims.length} dimensions.`);if(o==="CHW")s=s.transpose(1,2,0);else if(o!=="HWC")throw new Error(`Unsupported channel format: ${o}`);if(!(s.data instanceof Uint8ClampedArray||s.data instanceof Uint8Array))throw new Error(`Unsupported tensor type: ${s.type}`);switch(s.dims[2]){case 1:case 2:case 3:case 4:return new RawImage(s.data,s.dims[1],s.dims[0],s.dims[2]);default:throw new Error(`Unsupported number of channels: ${s.dims[2]}`)}}grayscale(){if(this.channels===1)return this;let s=new Uint8ClampedArray(this.width*this.height*1);switch(this.channels){case 3:case 4:for(let o=0,a=0;o<this.data.length;o+=this.channels){const c=this.data[o],d=this.data[o+1],g=this.data[o+2];s[a++]=Math.round(.2989*c+.587*d+.114*g)}break;default:throw new Error(`Conversion failed due to unsupported number of channels: ${this.channels}`)}return this._update(s,this.width,this.height,1)}rgb(){if(this.channels===3)return this;let s=new Uint8ClampedArray(this.width*this.height*3);switch(this.channels){case 1:for(let o=0,a=0;o<this.data.length;++o)s[a++]=this.data[o],s[a++]=this.data[o],s[a++]=this.data[o];break;case 4:for(let o=0,a=0;o<this.data.length;o+=4)s[a++]=this.data[o],s[a++]=this.data[o+1],s[a++]=this.data[o+2];break;default:throw new Error(`Conversion failed due to unsupported number of channels: ${this.channels}`)}return this._update(s,this.width,this.height,3)}rgba(){if(this.channels===4)return this;let s=new Uint8ClampedArray(this.width*this.height*4);switch(this.channels){case 1:for(let o=0,a=0;o<this.data.length;++o)s[a++]=this.data[o],s[a++]=this.data[o],s[a++]=this.data[o],s[a++]=255;break;case 3:for(let o=0,a=0;o<this.data.length;o+=3)s[a++]=this.data[o],s[a++]=this.data[o+1],s[a++]=this.data[o+2],s[a++]=255;break;default:throw new Error(`Conversion failed due to unsupported number of channels: ${this.channels}`)}return this._update(s,this.width,this.height,4)}async resize(s,o,{resample:a=2}={}){let c=RESAMPLING_MAPPING[a]??a;if(BROWSER_ENV){let d=this.channels,g=this.toCanvas();const $=createCanvasFunction(s,o).getContext("2d");return $.drawImage(g,0,0,s,o),new RawImage($.getImageData(0,0,s,o).data,s,o,4).convert(d)}else{let d=this.toSharp();switch(c){case"box":case"hamming":(c==="box"||c==="hamming")&&(console.warn(`Resampling method ${c} is not yet supported. Using bilinear instead.`),c="bilinear");case"nearest":case"bilinear":case"bicubic":d=d.affine([s/this.width,0,0,o/this.height],{interpolator:c});break;case"lanczos":d=d.resize({width:s,height:o,fit:"fill",kernel:"lanczos3"});break;default:throw new Error(`Resampling method ${c} is not supported.`)}return await loadImageFunction(d)}}async pad([s,o,a,c]){if(s=Math.max(s,0),o=Math.max(o,0),a=Math.max(a,0),c=Math.max(c,0),s===0&&o===0&&a===0&&c===0)return this;if(BROWSER_ENV){let d=this.channels,g=this.toCanvas(),$=this.width+s+o,j=this.height+a+c;const _e=createCanvasFunction($,j).getContext("2d");return _e.drawImage(g,0,0,this.width,this.height,s,a,$,j),new RawImage(_e.getImageData(0,0,$,j).data,$,j,4).convert(d)}else{let d=this.toSharp().extend({left:s,right:o,top:a,bottom:c});return await loadImageFunction(d)}}async crop([s,o,a,c]){if(s=Math.max(s,0),o=Math.max(o,0),a=Math.min(a,this.width-1),c=Math.min(c,this.height-1),s===0&&o===0&&a===this.width-1&&c===this.height-1)return this;const d=a-s+1,g=c-o+1;if(BROWSER_ENV){const $=this.channels,j=this.toCanvas(),_e=createCanvasFunction(d,g).getContext("2d");return _e.drawImage(j,s,o,d,g,0,0,d,g),new RawImage(_e.getImageData(0,0,d,g).data,d,g,4).convert($)}else{const $=this.toSharp().extract({left:s,top:o,width:d,height:g});return await loadImageFunction($)}}async center_crop(s,o){if(this.width===s&&this.height===o)return this;let a=(this.width-s)/2,c=(this.height-o)/2;if(BROWSER_ENV){let d=this.channels,g=this.toCanvas();const $=createCanvasFunction(s,o).getContext("2d");let j=0,_e=0,et=0,_=0;return a>=0?j=a:et=-a,c>=0?_e=c:_=-c,$.drawImage(g,j,_e,s,o,et,_,s,o),new RawImage($.getImageData(0,0,s,o).data,s,o,4).convert(d)}else{let d=this.toSharp();if(a>=0&&c>=0)d=d.extract({left:Math.floor(a),top:Math.floor(c),width:s,height:o});else if(a<=0&&c<=0){let g=Math.floor(-c),$=Math.floor(-a);d=d.extend({top:g,left:$,right:s-this.width-$,bottom:o-this.height-g})}else{let g=[0,0],$=0;c<0?(g[0]=Math.floor(-c),g[1]=o-this.height-g[0]):$=Math.floor(c);let j=[0,0],_e=0;a<0?(j[0]=Math.floor(-a),j[1]=s-this.width-j[0]):_e=Math.floor(a),d=d.extend({top:g[0],bottom:g[1],left:j[0],right:j[1]}).extract({left:_e,top:$,width:s,height:o})}return await loadImageFunction(d)}}async toBlob(s="image/png",o=1){if(!BROWSER_ENV)throw new Error("toBlob() is only supported in browser environments.");return await this.toCanvas().convertToBlob({type:s,quality:o})}toTensor(s="CHW"){let o=new Tensor$1("uint8",new Uint8Array(this.data),[this.height,this.width,this.channels]);if(s!=="HWC")if(s==="CHW")o=o.permute(2,0,1);else throw new Error(`Unsupported channel format: ${s}`);return o}toCanvas(){if(!BROWSER_ENV)throw new Error("toCanvas() is only supported in browser environments.");let s=this.clone().rgba(),o=createCanvasFunction(s.width,s.height),a=new ImageDataClass(s.data,s.width,s.height);return o.getContext("2d").putImageData(a,0,0),o}_update(s,o,a,c=null){return this.data=s,this.width=o,this.height=a,c!==null&&(this.channels=c),this}clone(){return new RawImage(this.data.slice(),this.width,this.height,this.channels)}convert(s){if(this.channels===s)return this;switch(s){case 1:this.grayscale();break;case 3:this.rgb();break;case 4:this.rgba();break;default:throw new Error(`Conversion failed due to unsupported number of channels: ${this.channels}`)}return this}async save(s){if(BROWSER_ENV){if(WEBWORKER_ENV)throw new Error("Unable to save an image from a Web Worker.");const o=s.split(".").pop().toLowerCase(),a=CONTENT_TYPE_MAP.get(o)??"image/png",c=await this.toBlob(a),d=URL.createObjectURL(c),g=document.createElement("a");g.href=d,g.download=s,g.click(),g.remove()}else{if(env$2.useFS)return await this.toSharp().toFile(s);throw new Error("Unable to save the image because filesystem is disabled in this environment.")}}toSharp(){if(BROWSER_ENV)throw new Error("toSharp() is only supported in server-side environments.");return sharp(this.data,{raw:{width:this.width,height:this.height,channels:this.channels}})}}async function read_audio(i,s){if(typeof AudioContext>"u")throw Error("Unable to load audio from path/URL since `AudioContext` is not available in your environment. Instead, audio data should be passed directly to the pipeline/processor. For more information and some example code, see https://huggingface.co/docs/transformers.js/guides/node-audio-processing.");const o=await(await getFile(i)).arrayBuffer(),a=new AudioContext({sampleRate:s});typeof s>"u"&&console.warn(`No sampling rate provided, using default of ${a.sampleRate}Hz.`);const c=await a.decodeAudioData(o);let d;if(c.numberOfChannels===2){const g=Math.sqrt(2),$=c.getChannelData(0),j=c.getChannelData(1);d=new Float32Array($.length);for(let _e=0;_e<c.length;++_e)d[_e]=g*($[_e]+j[_e])/2}else d=c.getChannelData(0);return d}function hanning(i){if(i<1)return new Float64Array;if(i===1)return new Float64Array([1]);const s=i-1,o=Math.PI/s,a=new Float64Array(i);for(let c=0;c<i;++c){const d=2*c-s;a[c]=.5+.5*Math.cos(o*d)}return a}const HERTZ_TO_MEL_MAPPING={htk:i=>2595*Math.log10(1+i/700),kaldi:i=>1127*Math.log(1+i/700),slaney:(i,s=1e3,o=15,a=27/Math.log(6.4))=>i>=s?o+Math.log(i/s)*a:3*i/200};function hertz_to_mel(i,s="htk"){const o=HERTZ_TO_MEL_MAPPING[s];if(!o)throw new Error('mel_scale should be one of "htk", "slaney" or "kaldi".');return typeof i=="number"?o(i):i.map(a=>o(a))}const MEL_TO_HERTZ_MAPPING={htk:i=>700*(10**(i/2595)-1),kaldi:i=>700*(Math.exp(i/1127)-1),slaney:(i,s=1e3,o=15,a=Math.log(6.4)/27)=>i>=o?s*Math.exp(a*(i-o)):200*i/3};function mel_to_hertz(i,s="htk"){const o=MEL_TO_HERTZ_MAPPING[s];if(!o)throw new Error('mel_scale should be one of "htk", "slaney" or "kaldi".');return typeof i=="number"?o(i):i.map(a=>o(a))}function _create_triangular_filter_bank(i,s){const o=Float64Array.from({length:s.length-1},(g,$)=>s[$+1]-s[$]),a=Array.from({length:i.length},()=>new Array(s.length));for(let g=0;g<i.length;++g){const $=a[g];for(let j=0;j<s.length;++j)$[j]=s[j]-i[g]}const c=s.length-2,d=Array.from({length:c},()=>new Array(i.length));for(let g=0;g<i.length;++g){const $=a[g];for(let j=0;j<c;++j){const _e=-$[j]/o[j],et=$[j+2]/o[j+1];d[j][g]=Math.max(0,Math.min(_e,et))}}return d}function linspace(i,s,o){const a=(s-i)/(o-1);return Float64Array.from({length:o},(c,d)=>i+a*d)}function mel_filter_bank(i,s,o,a,c,d=null,g="htk",$=!1){if(d!==null&&d!=="slaney")throw new Error('norm must be one of null or "slaney"');const j=hertz_to_mel(o,g),_e=hertz_to_mel(a,g),et=linspace(j,_e,s+2);let _=mel_to_hertz(et,g),b;if($){const nt=c/(i*2);b=hertz_to_mel(Float64Array.from({length:i},(rt,st)=>st*nt),g),_=et}else b=linspace(0,Math.floor(c/2),i);const tt=_create_triangular_filter_bank(b,_);if(d!==null&&d==="slaney")for(let nt=0;nt<s;++nt){const rt=tt[nt],st=2/(_[nt+2]-_[nt]);for(let ot=0;ot<i;++ot)rt[ot]*=st}return tt}function padReflect(i,s,o){const a=new i.constructor(i.length+s+o),c=i.length-1;for(let d=0;d<i.length;++d)a[s+d]=i[d];for(let d=1;d<=s;++d)a[s-d]=i[calculateReflectOffset(d,c)];for(let d=1;d<=o;++d)a[c+s+d]=i[calculateReflectOffset(c-d,c)];return a}function _db_conversion_helper(i,s,o,a,c){if(o<=0)throw new Error("reference must be greater than zero");if(a<=0)throw new Error("min_value must be greater than zero");o=Math.max(a,o);const d=Math.log10(o);for(let g=0;g<i.length;++g)i[g]=s*Math.log10(Math.max(a,i[g])-d);if(c!==null){if(c<=0)throw new Error("db_range must be greater than zero");const g=max$4(i)[0]-c;for(let $=0;$<i.length;++$)i[$]=Math.max(i[$],g)}return i}function amplitude_to_db(i,s=1,o=1e-5,a=null){return _db_conversion_helper(i,20,s,o,a)}function power_to_db(i,s=1,o=1e-10,a=null){return _db_conversion_helper(i,10,s,o,a)}function spectrogram(i,s,o,a,{fft_length:c=null,power:d=1,center:g=!0,pad_mode:$="reflect",onesided:j=!0,preemphasis:_e=null,mel_filters:et=null,mel_floor:_=1e-10,log_mel:b=null,reference:tt=1,min_value:nt=1e-10,db_range:rt=null,remove_dc_offset:st=null,max_num_frames:ot=null,do_pad:it=!0,transpose:at=!1}={}){const lt=s.length;if(c===null&&(c=o),o>c)throw Error(`frame_length (${o}) may not be larger than fft_length (${c})`);if(lt!==o)throw new Error(`Length of the window (${lt}) must equal frame_length (${o})`);if(a<=0)throw new Error("hop_length must be greater than zero");if(d===null&&et!==null)throw new Error("You have provided `mel_filters` but `power` is `None`. Mel spectrogram computation is not yet supported for complex-valued spectrogram. Specify `power` to fix this issue.");if(g){if($!=="reflect")throw new Error(`pad_mode="${$}" not implemented yet.`);const mt=Math.floor((c-1)/2)+1;i=padReflect(i,mt,mt)}const ut=Math.floor(1+Math.floor((i.length-o)/a)),ct=j?Math.floor(c/2)+1:c;let dt=ut,pt=ut;ot!==null&&(ot>ut?it&&(pt=ot):pt=dt=ot);const ht=new FFT$1(c),ft=new Float64Array(c),yt=new Float64Array(ht.outputBufferSize),wt=new Array(dt);for(let mt=0;mt<dt;++mt){const vt=mt*a;for(let Ct=0;Ct<o;++Ct)ft[Ct]=i[vt+Ct];if(st){let Ct=0;for(let Nt=0;Nt<o;++Nt)Ct+=ft[Nt];const kt=Ct/o;for(let Nt=0;Nt<o;++Nt)ft[Nt]-=kt}if(_e!==null){for(let Ct=o-1;Ct>=1;--Ct)ft[Ct]-=_e*ft[Ct-1];ft[0]*=1-_e}for(let Ct=0;Ct<s.length;++Ct)ft[Ct]*=s[Ct];ht.realTransform(yt,ft);const Et=new Array(ct);for(let Ct=0;Ct<Et.length;++Ct){const kt=Ct<<1;Et[Ct]=yt[kt]**2+yt[kt+1]**2}wt[mt]=Et}if(d!==null&&d!==2){const mt=2/d;for(let vt=0;vt<wt.length;++vt){const Et=wt[vt];for(let Ct=0;Ct<Et.length;++Ct)Et[Ct]**=mt}}const _t=et.length,bt=new Float32Array(_t*pt),xt=at?[pt,_t]:[_t,pt];for(let mt=0;mt<_t;++mt){const vt=et[mt];for(let Et=0;Et<dt;++Et){const Ct=wt[Et];let kt=0;for(let Nt=0;Nt<ct;++Nt)kt+=vt[Nt]*Ct[Nt];bt[at?Et*_t+mt:mt*dt+Et]=Math.max(_,kt)}}if(d!==null&&b!==null){const mt=Math.min(bt.length,dt*_t);switch(b){case"log":for(let vt=0;vt<mt;++vt)bt[vt]=Math.log(bt[vt]);break;case"log10":for(let vt=0;vt<mt;++vt)bt[vt]=Math.log10(bt[vt]);break;case"dB":if(d===1)amplitude_to_db(bt,tt,nt,rt);else if(d===2)power_to_db(bt,tt,nt,rt);else throw new Error(`Cannot use log_mel option '${b}' with power ${d}`);break;default:throw new Error(`log_mel must be one of null, 'log', 'log10' or 'dB'. Got '${b}'`)}}return{data:bt,dims:xt}}function window_function(i,s,{periodic:o=!0,frame_length:a=null,center:c=!0}={}){const d=o?i+1:i;let g;switch(s){case"boxcar":g=new Float64Array(d).fill(1);break;case"hann":case"hann_window":g=hanning(d);break;case"povey":g=hanning(d).map($=>Math.pow($,.85));break;default:throw new Error(`Unknown window type ${s}.`)}if(o&&(g=g.subarray(0,i)),a===null)return g;if(i>a)throw new Error(`Length of the window (${i}) may not be larger than frame_length (${a})`);return g}function center_to_corners_format([i,s,o,a]){return[i-o/2,s-a/2,i+o/2,s+a/2]}function post_process_object_detection(i,s=.5,o=null,a=!1){const c=i.logits,d=i.pred_boxes,[g,$,j]=c.dims;if(o!==null&&o.length!==g)throw Error("Make sure that you pass in as many target sizes as the batch dimension of the logits");let _e=[];for(let et=0;et<g;++et){let _=o!==null?o[et]:null,b={boxes:[],classes:[],scores:[]},tt=c[et],nt=d[et];for(let rt=0;rt<$;++rt){let st=tt[rt],ot=[],it;if(a){it=st.sigmoid().data;for(let at=0;at<it.length;++at)it[at]>s&&ot.push(at)}else{let at=max$4(st.data)[1];if(at===j-1)continue;ot.push(at),it=softmax$3(st.data)}for(const at of ot){let lt=nt[rt].data;lt=center_to_corners_format(lt),_!==null&&(lt=lt.map((ut,ct)=>ut*_[(ct+1)%2])),b.boxes.push(lt),b.classes.push(at),b.scores.push(it[at])}}_e.push(b)}return _e}function validate_audio_inputs(i,s){var o;if(!(i instanceof Float32Array||i instanceof Float64Array))throw new Error(`${s} expects input to be a Float32Array or a Float64Array, but got ${((o=i==null?void 0:i.constructor)==null?void 0:o.name)??typeof i} instead. If using the feature extractor directly, remember to use \`read_audio(url, sampling_rate)\` to obtain the raw audio data of the file/url.`)}function constraint_to_multiple_of(i,s,o=0,a=null){const c=i/s;let d=bankers_round(c)*s;return a!==null&&d>a&&(d=Math.floor(c)*s),d<o&&(d=Math.ceil(c)*s),d}function enforce_size_divisibility([i,s],o){return[Math.max(Math.floor(i/o),1)*o,Math.max(Math.floor(s/o),1)*o]}class FeatureExtractor extends Callable{constructor(s){super(),this.config=s}}class ImageFeatureExtractor extends FeatureExtractor{constructor(s){super(s),this.image_mean=this.config.image_mean??this.config.mean,this.image_std=this.config.image_std??this.config.std,this.resample=this.config.resample??2,this.do_rescale=this.config.do_rescale??!0,this.rescale_factor=this.config.rescale_factor??1/255,this.do_normalize=this.config.do_normalize,this.do_resize=this.config.do_resize,this.do_thumbnail=this.config.do_thumbnail,this.size=this.config.size,this.size_divisibility=this.config.size_divisibility??this.config.size_divisor,this.do_center_crop=this.config.do_center_crop,this.crop_size=this.config.crop_size,this.do_convert_rgb=this.config.do_convert_rgb??!0,this.do_crop_margin=this.config.do_crop_margin,this.pad_size=this.config.pad_size,this.do_pad=this.config.do_pad,this.do_pad&&!this.pad_size&&this.size&&this.size.width!==void 0&&this.size.height!==void 0&&(this.pad_size=this.size),this.do_flip_channel_order=this.config.do_flip_channel_order??!1}async thumbnail(s,o,a=2){const c=s.height,d=s.width,g=o.height,$=o.width;let j=Math.min(c,g),_e=Math.min(d,$);return j===c&&_e===d?s:(c>d?_e=Math.floor(d*j/c):d>c&&(j=Math.floor(c*_e/d)),await s.resize(_e,j,{resample:a}))}async crop_margin(s,o=200){const a=s.clone().grayscale(),c=min$4(a.data)[0],g=max$4(a.data)[0]-c;if(g===0)return s;const $=o/255;let j=a.width,_e=a.height,et=0,_=0;for(let b=0;b<a.height;++b){const tt=b*a.width;for(let nt=0;nt<a.width;++nt)(a.data[tt+nt]-c)/g<$&&(j=Math.min(j,nt),_e=Math.min(_e,b),et=Math.max(et,nt),_=Math.max(_,b))}return s=await s.crop([j,_e,et,_]),s}pad_image(s,o,a,{mode:c="constant",center:d=!1,constant_values:g=0}={}){const[$,j,_e]=o;let et,_;if(typeof a=="number"?(et=a,_=a):(et=a.width,_=a.height),et!==j||_!==$){const b=new Float32Array(et*_*_e);if(Array.isArray(g))for(let rt=0;rt<b.length;++rt)b[rt]=g[rt%_e];else g!==0&&b.fill(g);const[tt,nt]=d?[Math.floor((et-j)/2),Math.floor((_-$)/2)]:[0,0];for(let rt=0;rt<$;++rt){const st=(rt+nt)*et,ot=rt*j;for(let it=0;it<j;++it){const at=(st+it+tt)*_e,lt=(ot+it)*_e;for(let ut=0;ut<_e;++ut)b[at+ut]=s[lt+ut]}}if(c==="symmetric"){if(d)throw new Error("`center` padding is not supported when `mode` is set to `symmetric`.");const rt=$-1,st=j-1;for(let ot=0;ot<_;++ot){const it=ot*et,at=calculateReflectOffset(ot,rt)*j;for(let lt=0;lt<et;++lt){if(ot<$&&lt<j)continue;const ut=(it+lt)*_e,ct=(at+calculateReflectOffset(lt,st))*_e;for(let dt=0;dt<_e;++dt)b[ut+dt]=s[ct+dt]}}}s=b,o=[_,et,_e]}return[s,o]}rescale(s){for(let o=0;o<s.length;++o)s[o]=this.rescale_factor*s[o]}get_resize_output_image_size(s,o){const[a,c]=s.size;let d,g;if(this.do_thumbnail){const{height:$,width:j}=o;d=Math.min($,j)}else Number.isInteger(o)?(d=o,g=this.config.max_size??d):o!==void 0&&(d=o.shortest_edge,g=o.longest_edge);if(d!==void 0||g!==void 0){const $=d===void 0?1:Math.max(d/a,d/c),j=a*$,_e=c*$,et=g===void 0?1:Math.min(g/j,g/_e);let _=Math.floor(Number((j*et).toFixed(2))),b=Math.floor(Number((_e*et).toFixed(2)));return this.size_divisibility!==void 0&&([_,b]=enforce_size_divisibility([_,b],this.size_divisibility)),[_,b]}else if(o!==void 0&&o.width!==void 0&&o.height!==void 0){let $=o.width,j=o.height;if(this.config.keep_aspect_ratio&&this.config.ensure_multiple_of){let _e=j/c,et=$/a;Math.abs(1-et)<Math.abs(1-_e)?_e=et:et=_e,j=constraint_to_multiple_of(_e*c,this.config.ensure_multiple_of),$=constraint_to_multiple_of(et*a,this.config.ensure_multiple_of)}return[$,j]}else{if(this.size_divisibility!==void 0)return enforce_size_divisibility([a,c],this.size_divisibility);throw new Error(`Could not resize image due to unsupported \`this.size\` option in config: ${JSON.stringify(o)}`)}}async resize(s){const[o,a]=this.get_resize_output_image_size(s,this.size);return await s.resize(o,a,{resample:this.resample})}async preprocess(s,{do_normalize:o=null,do_pad:a=null,do_convert_rgb:c=null,do_convert_grayscale:d=null,do_flip_channel_order:g=null}={}){this.do_crop_margin&&(s=await this.crop_margin(s));const[$,j]=s.size;if(c??this.do_convert_rgb?s=s.rgb():d&&(s=s.grayscale()),this.do_resize&&(s=await this.resize(s)),this.do_thumbnail&&(s=await this.thumbnail(s,this.size,this.resample)),this.do_center_crop){let tt,nt;Number.isInteger(this.crop_size)?(tt=this.crop_size,nt=this.crop_size):(tt=this.crop_size.width,nt=this.crop_size.height),s=await s.center_crop(tt,nt)}const _e=[s.height,s.width];let et=Float32Array.from(s.data),_=[s.height,s.width,s.channels];if(this.do_rescale&&this.rescale(et),o??this.do_normalize){let tt=this.image_mean;Array.isArray(this.image_mean)||(tt=new Array(s.channels).fill(tt));let nt=this.image_std;if(Array.isArray(this.image_std)||(nt=new Array(s.channels).fill(tt)),tt.length!==s.channels||nt.length!==s.channels)throw new Error(`When set to arrays, the length of \`image_mean\` (${tt.length}) and \`image_std\` (${nt.length}) must match the number of channels in the image (${s.channels}).`);for(let rt=0;rt<et.length;rt+=s.channels)for(let st=0;st<s.channels;++st)et[rt+st]=(et[rt+st]-tt[st])/nt[st]}if(a??this.do_pad){if(this.pad_size)[et,_]=this.pad_image(et,[s.height,s.width,s.channels],this.pad_size);else if(this.size_divisibility){const[tt,nt]=enforce_size_divisibility([_[1],_[0]],this.size_divisibility);[et,_]=this.pad_image(et,_,{width:tt,height:nt})}}if(g??this.do_flip_channel_order){if(_[2]!==3)throw new Error("Flipping channel order is only supported for RGB images.");for(let tt=0;tt<et.length;tt+=3){const nt=et[tt];et[tt]=et[tt+2],et[tt+2]=nt}}const b=new Tensor$1("float32",et,_).permute(2,0,1);return{original_size:[j,$],reshaped_input_size:_e,pixel_values:b}}async _call(s,...o){Array.isArray(s)||(s=[s]);const a=await Promise.all(s.map(d=>this.preprocess(d)));return{pixel_values:stack$1(a.map(d=>d.pixel_values),0),original_sizes:a.map(d=>d.original_size),reshaped_input_sizes:a.map(d=>d.reshaped_input_size)}}}class SegformerFeatureExtractor extends ImageFeatureExtractor{post_process_semantic_segmentation(s,o=null){const a=s.logits,c=a.dims[0];if(o!==null&&o.length!==c)throw Error("Make sure that you pass in as many target sizes as the batch dimension of the logits");const d=[];for(let g=0;g<c;++g){const $=o!==null?o[g]:null;let j=a[g];$!==null&&(j=interpolate(j,$,"bilinear",!1));const[_e,et]=$??j.dims.slice(-2),_=new Tensor$1("int32",new Int32Array(_e*et),[_e,et]),b=j[0].data;for(let st=1;st<j.dims[0];++st){const ot=j[st].data;for(let it=0;it<ot.length;++it)ot[it]>b[it]&&(b[it]=ot[it],_.data[it]=st)}const tt=new Array(j.dims[0]),nt=_.data;for(let st=0;st<nt.length;++st){const ot=nt[st];tt[ot]=ot}const rt=tt.filter(st=>st!==void 0);d.push({segmentation:_,labels:rt})}return d}}class DPTFeatureExtractor extends ImageFeatureExtractor{}class DPTImageProcessor extends DPTFeatureExtractor{}class BitImageProcessor extends ImageFeatureExtractor{}class GLPNFeatureExtractor extends ImageFeatureExtractor{}class CLIPFeatureExtractor extends ImageFeatureExtractor{}class ChineseCLIPFeatureExtractor extends ImageFeatureExtractor{}class SiglipImageProcessor extends ImageFeatureExtractor{}class ConvNextFeatureExtractor extends ImageFeatureExtractor{constructor(s){super(s),this.crop_pct=this.config.crop_pct??224/256}async resize(s){var a;const o=(a=this.size)==null?void 0:a.shortest_edge;if(o===void 0)throw new Error("Size dictionary must contain 'shortest_edge' key.");if(o<384){const c=Math.floor(o/this.crop_pct),[d,g]=this.get_resize_output_image_size(s,{shortest_edge:c});s=await s.resize(d,g,{resample:this.resample}),s=await s.center_crop(o,o)}else s=await s.resize(o,o,{resample:this.resample});return s}}class ConvNextImageProcessor extends ConvNextFeatureExtractor{}class ViTFeatureExtractor extends ImageFeatureExtractor{}class ViTImageProcessor extends ImageFeatureExtractor{}class EfficientNetImageProcessor extends ImageFeatureExtractor{constructor(s){super(s),this.include_top=this.config.include_top??!0,this.include_top&&(this.image_std=this.image_std.map(o=>o*o))}}class MobileViTFeatureExtractor extends ImageFeatureExtractor{}class MobileViTImageProcessor extends MobileViTFeatureExtractor{}class OwlViTFeatureExtractor extends ImageFeatureExtractor{post_process_object_detection(...s){return post_process_object_detection(...s)}}class Owlv2ImageProcessor extends OwlViTFeatureExtractor{}class DeiTFeatureExtractor extends ImageFeatureExtractor{}class BeitFeatureExtractor extends ImageFeatureExtractor{}class DonutFeatureExtractor extends ImageFeatureExtractor{pad_image(s,o,a,c={}){const[d,g,$]=o;let j=this.image_mean;Array.isArray(this.image_mean)||(j=new Array($).fill(j));let _e=this.image_std;Array.isArray(_e)||(_e=new Array($).fill(j));const et=j.map((_,b)=>-_/_e[b]);return super.pad_image(s,o,a,{center:!0,constant_values:et,...c})}}class NougatImageProcessor extends DonutFeatureExtractor{}class DetrFeatureExtractor extends ImageFeatureExtractor{async _call(s){const o=await super._call(s),a=[o.pixel_values.dims[0],64,64],c=new Tensor$1("int64",new BigInt64Array(a.reduce((d,g)=>d*g)).fill(1n),a);return{...o,pixel_mask:c}}post_process_object_detection(...s){return post_process_object_detection(...s)}remove_low_and_no_objects(s,o,a,c){let d=[],g=[],$=[];for(let j=0;j<s.dims[0];++j){let _e=s[j],et=o[j],_=max$4(_e.data)[1];if(_===c)continue;let tt=softmax$3(_e.data)[_];tt>a&&(d.push(et),g.push(tt),$.push(_))}return[d,g,$]}check_segment_validity(s,o,a,c=.5,d=.8){let g=[],$=0,j=0;for(let et=0;et<s.length;++et)s[et]===a&&(g.push(et),++$),o[a].data[et]>=c&&++j;let _e=$>0&&j>0;return _e&&(_e=$/j>d),[_e,g]}compute_segments(s,o,a,c,d,g=null,$=null){let[j,_e]=$??s[0].dims,et=new Tensor$1("int32",new Int32Array(j*_e),[j,_e]),_=[];if($!==null)for(let rt=0;rt<s.length;++rt)s[rt]=interpolate(s[rt],$,"bilinear",!1);let b=new Int32Array(s[0].data.length),tt=new Float32Array(s[0].data.length);for(let rt=0;rt<s.length;++rt){let st=o[rt];for(let ot=0;ot<s[rt].data.length;++ot)s[rt].data[ot]*=st,s[rt].data[ot]>tt[ot]&&(b[ot]=rt,tt[ot]=s[rt].data[ot])}let nt=0;for(let rt=0;rt<a.length;++rt){let st=a[rt],[ot,it]=this.check_segment_validity(b,s,rt,c,d);if(ot){++nt;for(let at of it)et.data[at]=nt;_.push({id:nt,label_id:st,score:o[rt]})}}return[et,_]}post_process_panoptic_segmentation(s,o=.5,a=.5,c=.8,d=null,g=null){d===null&&(console.warn("`label_ids_to_fuse` unset. No instance will be fused."),d=new Set);const $=s.logits,_e=s.pred_masks.sigmoid();let[et,_,b]=$.dims;if(b-=1,g!==null&&g.length!==et)throw Error("Make sure that you pass in as many target sizes as the batch dimension of the logits");let tt=[];for(let nt=0;nt<et;++nt){let rt=g!==null?g[nt]:null,st=$[nt],ot=_e[nt],[it,at,lt]=this.remove_low_and_no_objects(st,ot,o,b);if(lt.length===0){let[dt,pt]=rt??ot.dims.slice(-2),ht=new Tensor$1("int32",new Int32Array(dt*pt).fill(-1),[dt,pt]);tt.push({segmentation:ht,segments_info:[]});continue}let[ut,ct]=this.compute_segments(it,at,lt,a,c,d,rt);tt.push({segmentation:ut,segments_info:ct})}return tt}post_process_instance_segmentation(){throw Error("Not implemented yet")}}class YolosFeatureExtractor extends ImageFeatureExtractor{post_process_object_detection(...s){return post_process_object_detection(...s)}}class SamImageProcessor extends ImageFeatureExtractor{reshape_input_points(s,o,a){s=structuredClone(s);let c=calculateDimensions(s);if(c.length===3)c=[1,...c],s=[s];else if(c.length!==4)throw Error("The input_points must be a 4D tensor of shape `batch_size`, `point_batch_size`, `nb_points_per_image`, `2`.");for(let d=0;d<s.length;++d){let g=o[d],$=a[d],j=[$[0]/g[0],$[1]/g[1]];for(let _e=0;_e<s[d].length;++_e)for(let et=0;et<s[d][_e].length;++et)for(let _=0;_<s[d][_e][et].length;++_)s[d][_e][et][_]*=j[_]}return new Tensor$1("float32",Float32Array.from(s.flat(1/0)),c)}add_input_labels(s,o){let a=calculateDimensions(s);if(a.length===2)a=[1,...a],s=[s];else if(a.length!==3)throw Error("The input_points must be a 4D tensor of shape `batch_size`, `point_batch_size`, `nb_points_per_image`, `2`.");if(a.some((c,d)=>c!==o.dims[d]))throw Error(`The first ${a.length} dimensions of 'input_points' and 'input_labels' must be the same.`);return new Tensor$1("int64",s.flat(1/0).map(BigInt),a)}async _call(s,o=null,a=null){const c=await super._call(s);if(o&&(c.input_points=this.reshape_input_points(o,c.original_sizes,c.reshaped_input_sizes)),a){if(!c.input_points)throw Error("`input_points` must be provided if `input_labels` are provided.");c.input_labels=this.add_input_labels(a,c.input_points)}return c}post_process_masks(s,o,a,{mask_threshold:c=0,binarize:d=!0,pad_size:g=null}={}){const $=[];g=g??this.pad_size;const j=[g.height,g.width];for(let _e=0;_e<o.length;++_e){const et=o[_e],_=a[_e],b=s[_e],tt=[];for(let nt=0;nt<b.dims[0];++nt){const rt=b[nt];let st=interpolate(rt,j,"bilinear",!1);if(st=st.slice(null,[0,_[0]],[0,_[1]]),st=interpolate(st,et,"bilinear",!1),d){const ot=new Uint8Array(st.data.length);for(let it=0;it<st.data.length;++it)st.data[it]>c&&(ot[it]=1);st=new Tensor$1("bool",ot,st.dims)}tt.push(st)}$.push(stack$1(tt))}return $}}class Swin2SRImageProcessor extends ImageFeatureExtractor{pad_image(s,o,a,c={}){const[d,g,$]=o;return super.pad_image(s,o,{width:g+(a-g%a)%a,height:d+(a-d%a)%a},{mode:"symmetric",center:!1,constant_values:-1,...c})}}class VitMatteImageProcessor extends ImageFeatureExtractor{async _call(s,o){Array.isArray(s)||(s=[s]),Array.isArray(o)||(o=[o]);const a=await Promise.all(s.map(g=>this.preprocess(g))),c=await Promise.all(o.map(g=>this.preprocess(g,{do_normalize:!1,do_convert_rgb:!1,do_convert_grayscale:!0})));return{pixel_values:stack$1(a.map((g,$)=>cat([g.pixel_values,c[$].pixel_values],0)),0),original_sizes:a.map(g=>g.original_size),reshaped_input_sizes:a.map(g=>g.reshaped_input_size)}}}class WhisperFeatureExtractor extends FeatureExtractor{constructor(s){var o;super(s),(o=this.config).mel_filters??(o.mel_filters=mel_filter_bank(Math.floor(1+this.config.n_fft/2),this.config.feature_size,0,8e3,this.config.sampling_rate,"slaney","slaney")),this.window=window_function(this.config.n_fft,"hann")}_extract_fbank_features(s){const{data:o,dims:a}=spectrogram(s,this.window,this.config.n_fft,this.config.hop_length,{power:2,mel_filters:this.config.mel_filters,log_mel:"log10",max_num_frames:this.config.nb_max_frames}),c=max$4(o)[0];for(let d=0;d<o.length;++d)o[d]=(Math.max(o[d],c-8)+4)/4;return{data:o,dims:a}}async _call(s){validate_audio_inputs(s,"WhisperFeatureExtractor");let o;s.length>this.config.n_samples?(console.warn("Attempting to extract features for audio longer than 30 seconds. If using a pipeline to extract transcript from a long audio clip, remember to specify `chunk_length_s` and/or `stride_length_s`."),o=s.slice(0,this.config.n_samples)):(o=new Float32Array(this.config.n_samples),o.set(s));const{data:a,dims:c}=this._extract_fbank_features(o);return{input_features:new Tensor$1("float32",a,[1,...c])}}}class Wav2Vec2FeatureExtractor extends FeatureExtractor{_zero_mean_unit_var_norm(s){const a=s.reduce((d,g)=>d+g,0)/s.length,c=s.reduce((d,g)=>d+(g-a)**2,0)/s.length;return s.map(d=>(d-a)/Math.sqrt(c+1e-7))}async _call(s){validate_audio_inputs(s,"Wav2Vec2FeatureExtractor"),s instanceof Float64Array&&(s=new Float32Array(s));let o=s;this.config.do_normalize&&(o=this._zero_mean_unit_var_norm(o));const a=[1,o.length];return{input_values:new Tensor$1("float32",o,a),attention_mask:new Tensor$1("int64",new BigInt64Array(o.length).fill(1n),a)}}}class SeamlessM4TFeatureExtractor extends FeatureExtractor{constructor(s){super(s);const o=this.config.sampling_rate,a=mel_filter_bank(256,this.config.num_mel_bins,20,Math.floor(o/2),o,null,"kaldi",!0);for(let c=0;c<a.length;++c)a[c].push(0);this.mel_filters=a,this.window=window_function(400,"povey",{periodic:!1})}_extract_fbank_features(s,o){return s=s.map(a=>a*32768),spectrogram(s,this.window,400,160,{fft_length:512,power:2,center:!1,preemphasis:.97,mel_filters:this.mel_filters,log_mel:"log",mel_floor:1192092955078125e-22,remove_dc_offset:!0,max_num_frames:o,transpose:!0})}async _call(s,{padding:o=!0,pad_to_multiple_of:a=2,do_normalize_per_mel_bins:c=!0,return_attention_mask:d=!0}={}){validate_audio_inputs(s,"SeamlessM4TFeatureExtractor");let g=this._extract_fbank_features(s,this.config.max_length);if(c){const[nt,rt]=g.dims;for(let st=0;st<rt;++st){let ot=0;for(let ut=0;ut<nt;++ut)ot+=g.data[ut*rt+st];const it=ot/nt;let at=0;for(let ut=0;ut<nt;++ut)at+=(g.data[ut*rt+st]-it)**2;at/=nt-1;const lt=Math.sqrt(at+1e-7);for(let ut=0;ut<nt;++ut){const ct=ut*rt+st;g.data[ct]=(g.data[ct]-it)/lt}}}let $;if(o){const[nt,rt]=g.dims,st=nt%a;if(st>0){const ot=new Float32Array(rt*(nt+st));ot.set(g.data),ot.fill(this.config.padding_value,g.data.length);const it=nt+st;g={data:ot,dims:[it,rt]},d&&($=new Tensor$1("int64",new BigInt64Array(it),[1,it]),$.data.fill(1n,0,nt))}}const[j,_e]=g.dims,et=this.config.stride;if(j%et!==0)throw new Error(`The number of frames (${j}) must be a multiple of the stride (${et}).`);const b=new Tensor$1("float32",g.data,g.dims).view(1,Math.floor(j/et),_e*et),tt={input_features:b};if(d){const nt=b.dims[1],rt=new Tensor$1("int64",new BigInt64Array(nt),[1,nt]);if($)for(let st=1,ot=0;st<j;st+=et,++ot)rt.data[ot]=$.data[st];else rt.data.fill(1n);tt.attention_mask=rt}return tt}}class ASTFeatureExtractor extends FeatureExtractor{constructor(s){super(s);const o=this.config.sampling_rate,a=mel_filter_bank(256,this.config.num_mel_bins,20,Math.floor(o/2),o,null,"kaldi",!0);for(let c=0;c<a.length;++c)a[c].push(0);this.mel_filters=a,this.window=window_function(400,"hann",{periodic:!1}),this.mean=this.config.mean,this.std=this.config.std}_extract_fbank_features(s,o){return spectrogram(s,this.window,400,160,{fft_length:512,power:2,center:!1,preemphasis:.97,mel_filters:this.mel_filters,log_mel:"log",mel_floor:1192092955078125e-22,remove_dc_offset:!0,max_num_frames:o,transpose:!0})}async _call(s){validate_audio_inputs(s,"ASTFeatureExtractor");const o=this._extract_fbank_features(s,this.config.max_length);if(this.config.do_normalize){const a=this.std*2;for(let c=0;c<o.data.length;++c)o.data[c]=(o.data[c]-this.mean)/a}return{input_values:new Tensor$1("float32",o.data,[1,...o.dims])}}}class ClapFeatureExtractor extends FeatureExtractor{constructor(s){super(s),this.mel_filters=mel_filter_bank(this.config.nb_frequency_bins,this.config.feature_size,this.config.frequency_min,this.config.frequency_max,this.config.sampling_rate,null,"htk"),this.mel_filters_slaney=mel_filter_bank(this.config.nb_frequency_bins,this.config.feature_size,this.config.frequency_min,this.config.frequency_max,this.config.sampling_rate,"slaney","slaney"),this.window=window_function(this.config.fft_window_size,"hann")}_get_input_mel(s,o,a,c){let d,g=!1;const $=s.length-o;if($>0)if(a==="rand_trunc"){g=!0;const j=Math.floor(Math.random()*($+1));s=s.subarray(j,j+o),d=this._extract_fbank_features(s,this.mel_filters_slaney,this.config.nb_max_samples),d.dims=[1,...d.dims]}else throw new Error(`Truncation strategy "${a}" not implemented`);else{if($<0){let j=new Float64Array(o);if(j.set(s),c==="repeat")for(let _e=s.length;_e<o;_e+=s.length)j.set(s.subarray(0,Math.min(s.length,o-_e)),_e);else if(c==="repeatpad")for(let _e=s.length;_e<-$;_e+=s.length)j.set(s,_e);s=j}if(a==="fusion")throw new Error(`Truncation strategy "${a}" not implemented`);d=this._extract_fbank_features(s,this.mel_filters_slaney,this.config.nb_max_samples),d.dims=[1,...d.dims]}return{...d,longer:g}}_extract_fbank_features(s,o,a=null){return spectrogram(s,this.window,this.config.fft_window_size,this.config.hop_length,{power:2,mel_filters:o,log_mel:"dB",max_num_frames:a,do_pad:!1,transpose:!0})}async _call(s,{max_length:o=null}={}){validate_audio_inputs(s,"ClapFeatureExtractor");const a=this._get_input_mel(s,o??this.config.nb_max_samples,this.config.truncation,this.config.padding);return{input_features:new Tensor$1("float32",a.data,[1,...a.dims])}}}class SpeechT5FeatureExtractor extends FeatureExtractor{}class Processor extends Callable{constructor(s){super(),this.feature_extractor=s}async _call(s,...o){return await this.feature_extractor(s,...o)}}class SamProcessor extends Processor{async _call(...s){return await this.feature_extractor(...s)}post_process_masks(...s){return this.feature_extractor.post_process_masks(...s)}reshape_input_points(...s){return this.feature_extractor.reshape_input_points(...s)}}class WhisperProcessor extends Processor{async _call(s){return await this.feature_extractor(s)}}class Wav2Vec2ProcessorWithLM extends Processor{async _call(s){return await this.feature_extractor(s)}}class SpeechT5Processor extends Processor{async _call(s){return await this.feature_extractor(s)}}class OwlViTProcessor extends Processor{}class AutoProcessor{static async from_pretrained(s,{progress_callback:o=null,config:a=null,cache_dir:c=null,local_files_only:d=!1,revision:g="main"}={}){let $=a??await getModelJSON(s,"preprocessor_config.json",!0,{progress_callback:o,config:a,cache_dir:c,local_files_only:d,revision:g}),j=$.feature_extractor_type??$.image_processor_type,_e=this.FEATURE_EXTRACTOR_CLASS_MAPPING[j];if(!_e)if($.size!==void 0)console.warn(`Feature extractor type "${j}" not found, assuming ImageFeatureExtractor due to size parameter in config.`),_e=ImageFeatureExtractor;else throw new Error(`Unknown Feature Extractor type: ${j}`);let et=this.PROCESSOR_CLASS_MAPPING[$.processor_class]??Processor,_=new _e($);return new et(_)}}Ht(AutoProcessor,"FEATURE_EXTRACTOR_CLASS_MAPPING",{ImageFeatureExtractor,WhisperFeatureExtractor,ViTFeatureExtractor,MobileViTFeatureExtractor,MobileViTImageProcessor,OwlViTFeatureExtractor,Owlv2ImageProcessor,CLIPFeatureExtractor,ChineseCLIPFeatureExtractor,SiglipImageProcessor,ConvNextFeatureExtractor,ConvNextImageProcessor,SegformerFeatureExtractor,BitImageProcessor,DPTImageProcessor,DPTFeatureExtractor,GLPNFeatureExtractor,BeitFeatureExtractor,DeiTFeatureExtractor,DetrFeatureExtractor,YolosFeatureExtractor,DonutFeatureExtractor,NougatImageProcessor,EfficientNetImageProcessor,ViTImageProcessor,VitMatteImageProcessor,SamImageProcessor,Swin2SRImageProcessor,Wav2Vec2FeatureExtractor,SeamlessM4TFeatureExtractor,SpeechT5FeatureExtractor,ASTFeatureExtractor,ClapFeatureExtractor}),Ht(AutoProcessor,"PROCESSOR_CLASS_MAPPING",{WhisperProcessor,Wav2Vec2ProcessorWithLM,SamProcessor,SpeechT5Processor,OwlViTProcessor});async function prepareImages(i){return Array.isArray(i)||(i=[i]),await Promise.all(i.map(s=>RawImage.read(s)))}async function prepareAudios(i,s){return Array.isArray(i)||(i=[i]),await Promise.all(i.map(o=>typeof o=="string"||o instanceof URL?read_audio(o,s):o instanceof Float64Array?new Float32Array(o):o))}function get_bounding_box(i,s){s&&(i=i.map(g=>g|0));const[o,a,c,d]=i;return{xmin:o,ymin:a,xmax:c,ymax:d}}class Pipeline extends Callable{constructor({task:s,model:o,tokenizer:a=null,processor:c=null}){super(),this.task=s,this.model=o,this.tokenizer=a,this.processor=c}async dispose(){await this.model.dispose()}}class TextClassificationPipeline extends Pipeline{constructor(s){super(s)}async _call(s,{topk:o=1}={}){const a=this.tokenizer(s,{padding:!0,truncation:!0}),c=await this.model(a),d=this.model.config.problem_type==="multi_label_classification"?j=>j.sigmoid().data:j=>softmax$3(j.data),g=this.model.config.id2label,$=[];for(const j of c.logits){const _e=d(j),_=getTopItems(_e,o).map(b=>({label:g[b[0]],score:b[1]}));o===1?$.push(..._):$.push(_)}return Array.isArray(s)||o===1?$:$[0]}}class TokenClassificationPipeline extends Pipeline{constructor(s){super(s)}async _call(s,{ignore_labels:o=["O"]}={}){const a=Array.isArray(s),c=this.tokenizer(a?s:[s],{padding:!0,truncation:!0}),g=(await this.model(c)).logits,$=this.model.config.id2label,j=[];for(let _e=0;_e<g.dims[0];++_e){const et=c.input_ids[_e],_=g[_e],b=[];for(let tt=0;tt<_.dims[0];++tt){const nt=_[tt],rt=max$4(nt.data)[1],st=$?$[rt]:`LABEL_${rt}`;if(o.includes(st))continue;const ot=this.tokenizer.decode([et[tt].item()],{skip_special_tokens:!0});if(ot==="")continue;const it=softmax$3(nt.data);b.push({entity:st,score:it[rt],index:tt,word:ot,start:null,end:null})}j.push(b)}return a?j:j[0]}}class QuestionAnsweringPipeline extends Pipeline{constructor(s){super(s)}async _call(s,o,{topk:a=1}={}){const c=this.tokenizer(s,{text_pair:o,padding:!0,truncation:!0}),d=await this.model(c),g=[];for(let $=0;$<d.start_logits.dims[0];++$){const j=c.input_ids[$],_e=j.indexOf(this.tokenizer.sep_token_id),et=Array.from(softmax$3(d.start_logits[$].data)).map((tt,nt)=>[tt,nt]).filter(tt=>tt[1]>_e),_=Array.from(softmax$3(d.end_logits[$].data)).map((tt,nt)=>[tt,nt]).filter(tt=>tt[1]>_e),b=product(et,_).filter(tt=>tt[0][1]<=tt[1][1]).map(tt=>[tt[0][1],tt[1][1],tt[0][0]*tt[1][0]]).sort((tt,nt)=>nt[2]-tt[2]);for(let tt=0;tt<Math.min(b.length,a);++tt){const[nt,rt,st]=b[tt],ot=[...j].slice(nt,rt+1),it=this.tokenizer.decode(ot,{skip_special_tokens:!0});g.push({answer:it,score:st})}}return a===1?g[0]:g}}class FillMaskPipeline extends Pipeline{constructor(s){super(s)}async _call(s,{topk:o=5}={}){const a=this.tokenizer(s,{padding:!0,truncation:!0}),c=await this.model(a),d=[];for(let g=0;g<a.input_ids.dims[0];++g){const $=a.input_ids[g],j=$.indexOf(this.tokenizer.mask_token_id);if(j===-1)throw Error(`Mask token (${this.tokenizer.mask_token}) not found in text.`);const et=c.logits[g][j],_=getTopItems(softmax$3(et.data),o);d.push(_.map(b=>{const tt=[...$];return tt[j]=b[0],{score:b[1],token:b[0],token_str:this.tokenizer.model.vocab[b[0]],sequence:this.tokenizer.decode(tt,{skip_special_tokens:!0})}}))}return Array.isArray(s)?d:d[0]}}class Text2TextGenerationPipeline extends Pipeline{constructor(o){super(o);Ht(this,"_key","generated_text")}async _call(o,a={}){Array.isArray(o)||(o=[o]),this.model.config.prefix&&(o=o.map(_e=>this.model.config.prefix+_e));const c=this.model.config.task_specific_params;c&&c[this.task]&&c[this.task].prefix&&(o=o.map(_e=>c[this.task].prefix+_e));const d=this.tokenizer,g={padding:!0,truncation:!0};let $;this instanceof TranslationPipeline&&"_build_translation_inputs"in d?$=d._build_translation_inputs(o,g,a).input_ids:$=d(o,g).input_ids;const j=await this.model.generate($,a);return d.batch_decode(j,{skip_special_tokens:!0}).map(_e=>({[this._key]:_e}))}}class SummarizationPipeline extends Text2TextGenerationPipeline{constructor(o){super(o);Ht(this,"_key","summary_text")}}class TranslationPipeline extends Text2TextGenerationPipeline{constructor(o){super(o);Ht(this,"_key","translation_text")}}function isChat(i){return Array.isArray(i)&&i.every(s=>"role"in s&&"content"in s)}class TextGenerationPipeline extends Pipeline{constructor(s){super(s)}async _call(s,o={}){let a=!1,c=!1,d;if(typeof s=="string")d=s=[s];else if(Array.isArray(s)&&s.every(nt=>typeof nt=="string"))a=!0,d=s;else{if(isChat(s))s=[s];else if(Array.isArray(s)&&s.every(isChat))a=!0;else throw new Error("Input must be a string, an array of strings, a Chat, or an array of Chats");c=!0,d=s.map(nt=>this.tokenizer.apply_chat_template(nt,{tokenize:!1,add_generation_prompt:!0}))}const g=o.add_special_tokens??!1,$=c?!1:o.return_full_text??!0;this.tokenizer.padding_side="left";const{input_ids:j,attention_mask:_e}=this.tokenizer(d,{add_special_tokens:g,padding:!0,truncation:!0}),et=await this.model.generate(j,o,null,{inputs_attention_mask:_e});let _=this.tokenizer.batch_decode(et,{skip_special_tokens:!0}),b;!$&&j.dims.at(-1)>0&&(b=this.tokenizer.batch_decode(j,{skip_special_tokens:!0}).map(nt=>nt.length));const tt=Array.from({length:s.length},nt=>[]);for(let nt=0;nt<_.length;++nt){const rt=Math.floor(nt/et.length*s.length);b&&(_[nt]=_[nt].slice(b[rt])),tt[rt].push({generated_text:c?[...s[rt],{role:"assistant",content:_[nt]}]:_[nt]})}return!a&&tt.length===1?tt[0]:tt}}class ZeroShotClassificationPipeline extends Pipeline{constructor(s){super(s),this.label2id=Object.fromEntries(Object.entries(this.model.config.label2id).map(([o,a])=>[o.toLowerCase(),a])),this.entailment_id=this.label2id.entailment,this.entailment_id===void 0&&(console.warn("Could not find 'entailment' in label2id mapping. Using 2 as entailment_id."),this.entailment_id=2),this.contradiction_id=this.label2id.contradiction??this.label2id.not_entailment,this.contradiction_id===void 0&&(console.warn("Could not find 'contradiction' in label2id mapping. Using 0 as contradiction_id."),this.contradiction_id=0)}async _call(s,o,{hypothesis_template:a="This example is {}.",multi_label:c=!1}={}){const d=Array.isArray(s);d||(s=[s]),Array.isArray(o)||(o=[o]);const g=o.map(_e=>a.replace("{}",_e)),$=c||o.length===1,j=[];for(const _e of s){const et=[];for(const tt of g){const nt=this.tokenizer(_e,{text_pair:tt,padding:!0,truncation:!0}),rt=await this.model(nt);$?et.push([rt.logits.data[this.contradiction_id],rt.logits.data[this.entailment_id]]):et.push(rt.logits.data[this.entailment_id])}const b=($?et.map(tt=>softmax$3(tt)[1]):softmax$3(et)).map((tt,nt)=>[tt,nt]).sort((tt,nt)=>nt[0]-tt[0]);j.push({sequence:_e,labels:b.map(tt=>o[tt[1]]),scores:b.map(tt=>tt[0])})}return d?j:j[0]}}class FeatureExtractionPipeline extends Pipeline{constructor(s){super(s)}async _call(s,{pooling:o="none",normalize:a=!1,quantize:c=!1,precision:d="binary"}={}){const g=this.tokenizer(s,{padding:!0,truncation:!0}),$=await this.model(g);let j=$.last_hidden_state??$.logits??$.token_embeddings;if(o!=="none")if(o==="mean")j=mean_pooling(j,g.attention_mask);else if(o==="cls")j=j.slice(null,0);else throw Error(`Pooling method '${o}' not supported.`);return a&&(j=j.normalize(2,-1)),c&&(j=quantize_embeddings(j,d)),j}}class ImageFeatureExtractionPipeline extends Pipeline{constructor(s){super(s)}async _call(s,{pool:o=null}={}){const a=await prepareImages(s),{pixel_values:c}=await this.processor(a),d=await this.model({pixel_values:c});let g;if(o){if(!("pooler_output"in d))throw Error("No pooled output was returned. Make sure the model has a 'pooler' layer when using the 'pool' option.");g=d.pooler_output}else g=d.last_hidden_state??d.logits??d.image_embeds;return g}}class AudioClassificationPipeline extends Pipeline{constructor(s){super(s)}async _call(s,{topk:o=null}={}){const a=!Array.isArray(s),c=this.processor.feature_extractor.config.sampling_rate,d=await prepareAudios(s,c),g=this.model.config.id2label,$=[];for(const j of d){const _e=await this.processor(j),_=(await this.model(_e)).logits[0],tt=getTopItems(softmax$3(_.data),o).map(nt=>({label:g[nt[0]],score:nt[1]}));o===1?$.push(...tt):$.push(tt)}return!a||o===1?$:$[0]}}class ZeroShotAudioClassificationPipeline extends Pipeline{constructor(s){super(s)}async _call(s,o,{hypothesis_template:a="This is a sound of {}."}={}){const c=!Array.isArray(s);c&&(s=[s]);const d=o.map(et=>a.replace("{}",et)),g=this.tokenizer(d,{padding:!0,truncation:!0}),$=this.processor.feature_extractor.config.sampling_rate,j=await prepareAudios(s,$),_e=[];for(const et of j){const _=await this.processor(et),b=await this.model({...g,..._}),tt=softmax$3(b.logits_per_audio.data);_e.push([...tt].map((nt,rt)=>({score:nt,label:o[rt]})))}return c?_e[0]:_e}}class AutomaticSpeechRecognitionPipeline extends Pipeline{constructor(s){super(s)}async _call(s,o={}){switch(this.model.config.model_type){case"whisper":return this._call_whisper(s,o);case"wav2vec2":case"wav2vec2-bert":case"unispeech":case"unispeech-sat":case"hubert":return this._call_wav2vec2(s,o);default:throw new Error(`AutomaticSpeechRecognitionPipeline does not support model type '${this.model.config.model_type}'.`)}}async _call_wav2vec2(s,o={}){o.language&&console.warn('`language` parameter is not yet supported for `wav2vec2` models, defaulting to "English".'),o.task&&console.warn('`task` parameter is not yet supported for `wav2vec2` models, defaulting to "transcribe".');const a=!Array.isArray(s);a&&(s=[s]);const c=this.processor.feature_extractor.config.sampling_rate,d=await prepareAudios(s,c),g=[];for(const $ of d){const j=await this.processor($),et=(await this.model(j)).logits[0],_=[];for(const tt of et)_.push(max$4(tt.data)[1]);const b=this.tokenizer.decode(_);g.push({text:b})}return a?g[0]:g}async _call_whisper(s,o={}){const a=o.return_timestamps??!1,c=o.chunk_length_s??0,d=o.chunk_callback??null,g=o.force_full_sequences??!1;let $=o.stride_length_s??null;a==="word"&&(o.return_token_timestamps=!0);const j=pop(o,"language",null),_e=pop(o,"task",null);if(j||_e||a){if(o.forced_decoder_ids)throw new Error("Cannot specify `language`/`task`/`return_timestamps` and `forced_decoder_ids` at the same time.");const st=this.tokenizer.get_decoder_prompt_ids({language:j,task:_e,no_timestamps:!a});st.length>0&&(o.forced_decoder_ids=st)}const et=!Array.isArray(s);et&&(s=[s]);const _=this.processor.feature_extractor.config.chunk_length/this.model.config.max_source_positions,b=this.processor.feature_extractor.config.hop_length,tt=this.processor.feature_extractor.config.sampling_rate,nt=await prepareAudios(s,tt),rt=[];for(const st of nt){let ot=[];if(c>0){if($===null)$=c/6;else if(c<=$)throw Error("`chunk_length_s` must be larger than `stride_length_s`.");const lt=tt*c,ut=tt*$,ct=lt-2*ut;let dt=0;for(;dt<st.length;){const pt=st.subarray(dt,dt+lt),ht=await this.processor(pt),ft=dt===0,yt=dt+ct>=st.length;ot.push({stride:[pt.length,ft?0:ut,yt?0:ut],input_features:ht.input_features,is_last:yt}),dt+=ct}}else ot=[{stride:[st.length,0,0],input_features:(await this.processor(st)).input_features,is_last:!0}];for(const lt of ot){o.num_frames=Math.floor(lt.stride[0]/b);const ut=await this.model.generate(lt.input_features,o);a==="word"?(lt.tokens=ut.sequences[0],lt.token_timestamps=ut.token_timestamps.tolist()[0].map(ct=>round$4(ct,2))):lt.tokens=ut[0],lt.stride=lt.stride.map(ct=>ct/tt),d!==null&&d(lt)}const[it,at]=this.tokenizer._decode_asr(ot,{time_precision:_,return_timestamps:a,force_full_sequences:g});rt.push({text:it,...at})}return et?rt[0]:rt}}class ImageToTextPipeline extends Pipeline{constructor(s){super(s)}async _call(s,o={}){const a=Array.isArray(s),c=await prepareImages(s),{pixel_values:d}=await this.processor(c),g=[];for(const $ of d){$.dims=[1,...$.dims];const j=await this.model.generate($,o),_e=this.tokenizer.batch_decode(j,{skip_special_tokens:!0}).map(et=>({generated_text:et.trim()}));g.push(_e)}return a?g:g[0]}}class ImageClassificationPipeline extends Pipeline{constructor(s){super(s)}async _call(s,{topk:o=1}={}){const a=Array.isArray(s),c=await prepareImages(s),{pixel_values:d}=await this.processor(c),g=await this.model({pixel_values:d}),$=this.model.config.id2label,j=[];for(const _e of g.logits){const _=getTopItems(softmax$3(_e.data),o).map(b=>({label:$[b[0]],score:b[1]}));o===1?j.push(..._):j.push(_)}return a||o===1?j:j[0]}}class ImageSegmentationPipeline extends Pipeline{constructor(s){super(s),this.subtasks_mapping={panoptic:"post_process_panoptic_segmentation",instance:"post_process_instance_segmentation",semantic:"post_process_semantic_segmentation"}}async _call(s,{threshold:o=.5,mask_threshold:a=.5,overlap_mask_area_threshold:c=.8,label_ids_to_fuse:d=null,target_sizes:g=null,subtask:$=null}={}){if(Array.isArray(s)&&s.length!==1)throw Error("Image segmentation pipeline currently only supports a batch size of 1.");const _e=await prepareImages(s),et=_e.map(ot=>[ot.height,ot.width]),{pixel_values:_,pixel_mask:b}=await this.processor(_e),tt=await this.model({pixel_values:_,pixel_mask:b});let nt=null;if($!==null)nt=this.subtasks_mapping[$];else for(let[ot,it]of Object.entries(this.subtasks_mapping))if(it in this.processor.feature_extractor){nt=this.processor.feature_extractor[it].bind(this.processor.feature_extractor),$=ot;break}const rt=this.model.config.id2label,st=[];if($==="panoptic"||$==="instance"){const ot=nt(tt,o,a,c,d,g??et)[0],it=ot.segmentation;for(const at of ot.segments_info){const lt=new Uint8ClampedArray(it.data.length);for(let ct=0;ct<it.data.length;++ct)it.data[ct]===at.id&&(lt[ct]=255);const ut=new RawImage(lt,it.dims[1],it.dims[0],1);st.push({score:at.score,label:rt[at.label_id],mask:ut})}}else if($==="semantic"){const{segmentation:ot,labels:it}=nt(tt,g??et)[0];for(const at of it){const lt=new Uint8ClampedArray(ot.data.length);for(let ct=0;ct<ot.data.length;++ct)ot.data[ct]===at&&(lt[ct]=255);const ut=new RawImage(lt,ot.dims[1],ot.dims[0],1);st.push({score:null,label:rt[at],mask:ut})}}else throw Error(`Subtask ${$} not supported.`);return st}}class ZeroShotImageClassificationPipeline extends Pipeline{constructor(s){super(s)}async _call(s,o,{hypothesis_template:a="This is a photo of {}"}={}){const c=Array.isArray(s),d=await prepareImages(s),g=o.map(b=>a.replace("{}",b)),$=this.tokenizer(g,{padding:this.model.config.model_type==="siglip"?"max_length":!0,truncation:!0}),{pixel_values:j}=await this.processor(d),_e=await this.model({...$,pixel_values:j}),et=this.model.config.model_type==="siglip"?b=>b.sigmoid().data:b=>softmax$3(b.data),_=[];for(const b of _e.logits_per_image){const nt=[...et(b)].map((rt,st)=>({score:rt,label:o[st]}));nt.sort((rt,st)=>st.score-rt.score),_.push(nt)}return c?_:_[0]}}class ObjectDetectionPipeline extends Pipeline{constructor(s){super(s)}async _call(s,{threshold:o=.9,percentage:a=!1}={}){const c=Array.isArray(s);if(c&&s.length!==1)throw Error("Object detection pipeline currently only supports a batch size of 1.");const d=await prepareImages(s),g=a?null:d.map(tt=>[tt.height,tt.width]),{pixel_values:$,pixel_mask:j}=await this.processor(d),_e=await this.model({pixel_values:$,pixel_mask:j}),et=this.processor.feature_extractor.post_process_object_detection(_e,o,g),_=this.model.config.id2label,b=et.map(tt=>tt.boxes.map((nt,rt)=>({score:tt.scores[rt],label:_[tt.classes[rt]],box:get_bounding_box(nt,!a)})));return c?b:b[0]}}class ZeroShotObjectDetectionPipeline extends Pipeline{constructor(s){super(s)}async _call(s,o,{threshold:a=.1,topk:c=null,percentage:d=!1}={}){const g=Array.isArray(s),$=await prepareImages(s),j=this.tokenizer(o,{padding:!0,truncation:!0}),_e=await this.processor($),et=[];for(let _=0;_<$.length;++_){const b=$[_],tt=d?null:[[b.height,b.width]],nt=_e.pixel_values[_].unsqueeze_(0),rt=await this.model({...j,pixel_values:nt}),st=this.processor.feature_extractor.post_process_object_detection(rt,a,tt,!0)[0];let ot=st.boxes.map((it,at)=>({score:st.scores[at],label:o[st.classes[at]],box:get_bounding_box(it,!d)})).sort((it,at)=>at.score-it.score);c!==null&&(ot=ot.slice(0,c)),et.push(ot)}return g?et:et[0]}}class DocumentQuestionAnsweringPipeline extends Pipeline{constructor(s){super(s)}async _call(s,o,a={}){const c=(await prepareImages(s))[0],{pixel_values:d}=await this.processor(c),g=`<s_docvqa><s_question>${o}</s_question><s_answer>`,$=this.tokenizer(g,{add_special_tokens:!1,padding:!0,truncation:!0}).input_ids,j=await this.model.generate(d,{...a,decoder_input_ids:$,max_length:this.model.config.decoder.max_position_embeddings}),et=this.tokenizer.batch_decode(j)[0].match(/<s_answer>(.*?)<\/s_answer>/);let _=null;return et&&et.length>=2&&(_=et[1].trim()),[{answer:_}]}}class TextToAudioPipeline extends Pipeline{constructor(o){super(o);Ht(this,"DEFAULT_VOCODER_ID","Xenova/speecht5_hifigan");this.vocoder=o.vocoder??null}async _call(o,{speaker_embeddings:a=null}={}){return this.processor?this._call_text_to_spectrogram(o,{speaker_embeddings:a}):this._call_text_to_waveform(o)}async _call_text_to_waveform(o){const a=this.tokenizer(o,{padding:!0,truncation:!0}),{waveform:c}=await this.model(a),d=this.model.config.sampling_rate;return{audio:c.data,sampling_rate:d}}async _call_text_to_spectrogram(o,{speaker_embeddings:a}){if(this.vocoder||(console.log("No vocoder specified, using default HifiGan vocoder."),this.vocoder=await AutoModel.from_pretrained(this.DEFAULT_VOCODER_ID,{quantized:!1})),(typeof a=="string"||a instanceof URL)&&(a=new Float32Array(await(await fetch(a)).arrayBuffer())),a instanceof Float32Array)a=new Tensor$1("float32",a,[1,a.length]);else if(!(a instanceof Tensor$1))throw new Error("Speaker embeddings must be a `Tensor`, `Float32Array`, `string`, or `URL`.");const{input_ids:c}=this.tokenizer(o,{padding:!0,truncation:!0}),{waveform:d}=await this.model.generate_speech(c,a,{vocoder:this.vocoder}),g=this.processor.feature_extractor.config.sampling_rate;return{audio:d.data,sampling_rate:g}}}class ImageToImagePipeline extends Pipeline{constructor(s){super(s)}async _call(s){const o=await prepareImages(s),a=await this.processor(o),c=await this.model(a),d=[];for(const g of c.reconstruction){const $=g.squeeze().clamp_(0,1).mul_(255).round_().to("uint8");d.push(RawImage.fromTensor($))}return d.length>1?d:d[0]}}class DepthEstimationPipeline extends Pipeline{constructor(s){super(s)}async _call(s){const o=await prepareImages(s),a=await this.processor(o),{predicted_depth:c}=await this.model(a),d=[];for(let g=0;g<o.length;++g){const $=interpolate(c[g],o[g].size.reverse(),"bilinear",!1),j=$.mul_(255/max$4($.data)[0]).to("uint8");d.push({predicted_depth:c[g],depth:RawImage.fromTensor(j)})}return d.length>1?d:d[0]}}const SUPPORTED_TASKS=Object.freeze({"text-classification":{tokenizer:AutoTokenizer,pipeline:TextClassificationPipeline,model:AutoModelForSequenceClassification,default:{model:"Xenova/distilbert-base-uncased-finetuned-sst-2-english"},type:"text"},"token-classification":{tokenizer:AutoTokenizer,pipeline:TokenClassificationPipeline,model:AutoModelForTokenClassification,default:{model:"Xenova/bert-base-multilingual-cased-ner-hrl"},type:"text"},"question-answering":{tokenizer:AutoTokenizer,pipeline:QuestionAnsweringPipeline,model:AutoModelForQuestionAnswering,default:{model:"Xenova/distilbert-base-cased-distilled-squad"},type:"text"},"fill-mask":{tokenizer:AutoTokenizer,pipeline:FillMaskPipeline,model:AutoModelForMaskedLM,default:{model:"Xenova/bert-base-uncased"},type:"text"},summarization:{tokenizer:AutoTokenizer,pipeline:SummarizationPipeline,model:AutoModelForSeq2SeqLM,default:{model:"Xenova/distilbart-cnn-6-6"},type:"text"},translation:{tokenizer:AutoTokenizer,pipeline:TranslationPipeline,model:AutoModelForSeq2SeqLM,default:{model:"Xenova/t5-small"},type:"text"},"text2text-generation":{tokenizer:AutoTokenizer,pipeline:Text2TextGenerationPipeline,model:AutoModelForSeq2SeqLM,default:{model:"Xenova/flan-t5-small"},type:"text"},"text-generation":{tokenizer:AutoTokenizer,pipeline:TextGenerationPipeline,model:AutoModelForCausalLM,default:{model:"Xenova/gpt2"},type:"text"},"zero-shot-classification":{tokenizer:AutoTokenizer,pipeline:ZeroShotClassificationPipeline,model:AutoModelForSequenceClassification,default:{model:"Xenova/distilbert-base-uncased-mnli"},type:"text"},"audio-classification":{pipeline:AudioClassificationPipeline,model:AutoModelForAudioClassification,processor:AutoProcessor,default:{model:"Xenova/wav2vec2-base-superb-ks"},type:"audio"},"zero-shot-audio-classification":{tokenizer:AutoTokenizer,pipeline:ZeroShotAudioClassificationPipeline,model:AutoModel,processor:AutoProcessor,default:{model:"Xenova/clap-htsat-unfused"},type:"multimodal"},"automatic-speech-recognition":{tokenizer:AutoTokenizer,pipeline:AutomaticSpeechRecognitionPipeline,model:[AutoModelForSpeechSeq2Seq,AutoModelForCTC],processor:AutoProcessor,default:{model:"Xenova/whisper-tiny.en"},type:"multimodal"},"text-to-audio":{tokenizer:AutoTokenizer,pipeline:TextToAudioPipeline,model:[AutoModelForTextToWaveform,AutoModelForTextToSpectrogram],processor:[AutoProcessor,null],default:{model:"Xenova/speecht5_tts"},type:"text"},"image-to-text":{tokenizer:AutoTokenizer,pipeline:ImageToTextPipeline,model:AutoModelForVision2Seq,processor:AutoProcessor,default:{model:"Xenova/vit-gpt2-image-captioning"},type:"multimodal"},"image-classification":{pipeline:ImageClassificationPipeline,model:AutoModelForImageClassification,processor:AutoProcessor,default:{model:"Xenova/vit-base-patch16-224"},type:"multimodal"},"image-segmentation":{pipeline:ImageSegmentationPipeline,model:[AutoModelForImageSegmentation,AutoModelForSemanticSegmentation],processor:AutoProcessor,default:{model:"Xenova/detr-resnet-50-panoptic"},type:"multimodal"},"zero-shot-image-classification":{tokenizer:AutoTokenizer,pipeline:ZeroShotImageClassificationPipeline,model:AutoModel,processor:AutoProcessor,default:{model:"Xenova/clip-vit-base-patch32"},type:"multimodal"},"object-detection":{pipeline:ObjectDetectionPipeline,model:AutoModelForObjectDetection,processor:AutoProcessor,default:{model:"Xenova/detr-resnet-50"},type:"multimodal"},"zero-shot-object-detection":{tokenizer:AutoTokenizer,pipeline:ZeroShotObjectDetectionPipeline,model:AutoModelForZeroShotObjectDetection,processor:AutoProcessor,default:{model:"Xenova/owlvit-base-patch32"},type:"multimodal"},"document-question-answering":{tokenizer:AutoTokenizer,pipeline:DocumentQuestionAnsweringPipeline,model:AutoModelForDocumentQuestionAnswering,processor:AutoProcessor,default:{model:"Xenova/donut-base-finetuned-docvqa"},type:"multimodal"},"image-to-image":{pipeline:ImageToImagePipeline,model:AutoModelForImageToImage,processor:AutoProcessor,default:{model:"Xenova/swin2SR-classical-sr-x2-64"},type:"image"},"depth-estimation":{pipeline:DepthEstimationPipeline,model:AutoModelForDepthEstimation,processor:AutoProcessor,default:{model:"Xenova/dpt-large"},type:"image"},"feature-extraction":{tokenizer:AutoTokenizer,pipeline:FeatureExtractionPipeline,model:AutoModel,default:{model:"Xenova/all-MiniLM-L6-v2"},type:"text"},"image-feature-extraction":{processor:AutoProcessor,pipeline:ImageFeatureExtractionPipeline,model:[AutoModelForImageFeatureExtraction,AutoModel],default:{model:"Xenova/vit-base-patch16-224-in21k"},type:"image"}}),TASK_ALIASES=Object.freeze({"sentiment-analysis":"text-classification",ner:"token-classification",asr:"automatic-speech-recognition","text-to-speech":"text-to-audio",embeddings:"feature-extraction"});async function pipeline(i,s=null,{quantized:o=!0,progress_callback:a=null,config:c=null,cache_dir:d=null,local_files_only:g=!1,revision:$="main",model_file_name:j=null}={}){i=TASK_ALIASES[i]??i;const _e=SUPPORTED_TASKS[i.split("_",1)[0]];if(!_e)throw Error(`Unsupported pipeline: ${i}. Must be one of [${Object.keys(SUPPORTED_TASKS)}]`);s||(s=_e.default.model,console.log(`No model specified. Using default model: "${s}".`));const et={quantized:o,progress_callback:a,config:c,cache_dir:d,local_files_only:g,revision:$,model_file_name:j},_=new Map([["tokenizer",_e.tokenizer],["model",_e.model],["processor",_e.processor]]),b=await loadItems(_,s,et);b.task=i,dispatchCallback(a,{status:"ready",task:i,model:s});const tt=_e.pipeline;return new tt(b)}async function loadItems(i,s,o){const a=Object.create(null),c=[];for(let[d,g]of i.entries()){if(!g)continue;let $;Array.isArray(g)?$=new Promise(async(j,_e)=>{let et;for(let _ of g){if(_===null){j(null);return}try{j(await _.from_pretrained(s,o));return}catch(b){et=b}}_e(et)}):$=g.from_pretrained(s,o),a[d]=$,c.push($)}await Promise.all(c);for(let[d,g]of Object.entries(a))a[d]=await g;return a}const modelState={tokenizer:null,isLoading:!1,error:null},MODEL_LOAD_TIMEOUT=3e4,basicPatterns={cpr:/\b\d{6}[-]?\d{4}\b/g,phone:/\b(?:\+45[ ]?)?(?:\d{2}[ ]?\d{2}[ ]?\d{2}[ ]?\d{2}|\d{8})\b/g,email:/\b[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\.[A-Z|a-z]{2,}\b/g,name:/\b[A-ZÆØÅ][a-zæøå]+(?:\s+[A-ZÆØÅ][a-zæøå]+)+\b/g,address:/\b[A-ZÆØÅ][a-zæøå]+(?:vej|gade|allé|plads)\s+\d+\b/gi};async function initializeModel(){if(modelState.tokenizer)return console.log("Using cached model"),modelState.tokenizer;if(modelState.isLoading)return console.log("Model is already loading, waiting..."),new Promise((i,s)=>{const o=Date.now(),a=setInterval(()=>{modelState.tokenizer&&(clearInterval(a),i(modelState.tokenizer)),Date.now()-o>MODEL_LOAD_TIMEOUT&&(clearInterval(a),modelState.isLoading=!1,modelState.error="Model loading timed out",s(new Error("Model loading timed out after 30 seconds")))},100)});try{console.log("Starting model initialization..."),modelState.isLoading=!0,modelState.error=null;const i=new Promise((o,a)=>{setTimeout(()=>a(new Error("Model loading timed out")),MODEL_LOAD_TIMEOUT)}),s=pipeline("token-classification","Xenova/bert-base-NER",{quantized:!0,progress_callback:o=>{const a=Math.round(o.progress*100);console.log(`Model loading progress: ${a}%`),console.log("Progress details:",o)}});if(modelState.tokenizer=await Promise.race([s,i]),!modelState.tokenizer)throw new Error("Pipeline returned null tokenizer");return console.log("Model initialized successfully"),modelState.tokenizer}catch(i){const s=i instanceof Error?i.message:"Unknown error";throw console.error("Model initialization failed:",s),i instanceof Error&&i.stack&&console.error("Stack trace:",i.stack),modelState.error=s,i}finally{modelState.isLoading=!1}}async function anonymizeText(i){if(!i.trim())throw new Error("Ingen tekst at anonymisere");console.log("Starting anonymization of text:",i);let s=i;try{console.log("Attempting to initialize model...");const o=await initializeModel();console.log("Model loaded successfully, running inference...");const a=await o(i,{aggregation_strategy:"simple"});console.log("AI model returned entities:",a),a&&a.length>0?a.filter(c=>{const d=c.score>.7;return console.log(`Entity "${i.slice(c.start,c.end)}" score: ${c.score}, valid: ${d}`),d}).sort((c,d)=>d.start-c.start).forEach(c=>{const d=i.slice(c.start,c.end);console.log(`Processing entity: "${d}" (${c.entity_group})`);let g="[INFORMATION]";switch(c.entity_group.toUpperCase()){case"PER":case"PERSON":g="[NAVN]";break;case"LOC":case"LOCATION":g="[STED]";break;case"ORG":case"ORGANIZATION":g="[ORGANISATION]";break}console.log(`Replacing "${d}" with "${g}"`),s=s.slice(0,c.start)+g+s.slice(c.end)}):console.log("AI model found no entities, falling back to patterns")}catch(o){console.error("AI processing failed, falling back to pattern matching:",o)}return console.log("Applying pattern matching..."),Object.entries(basicPatterns).forEach(([o,a])=>{const c=s.match(a);c&&console.log(`Pattern found ${o} matches:`,c),s=s.replace(a,d=>{if(d.toLowerCase().match(/^(jeg|du|han|hun|den|det|de|vi|i|på|og|eller|men)$/))return d;const g=`[${o.toUpperCase()}]`;return console.log(`Regex replacing "${d}" with "${g}"`),g})}),console.log("Final anonymized text:",s),s}async function getDetectedTypes(i){if(!i.trim())return[];const s=new Set;try{(await(await initializeModel())(i,{aggregation_strategy:"simple"})).filter(c=>c.score>.7).forEach(c=>{const d=c.entity_group.toUpperCase();switch(d){case"PER":case"PERSON":s.add("PER");break;case"LOC":case"LOCATION":s.add("LOC");break;case"ORG":case"ORGANIZATION":s.add("ORG");break;default:s.add(d)}})}catch(o){console.error("AI model detection failed:",o instanceof Error?o.message:o)}return Object.entries(basicPatterns).forEach(([o,a])=>{a.test(i)&&s.add(o.toUpperCase())}),Array.from(s)}const replacements={PER:"Navn",LOC:"Sted",ORG:"Organisation",MISC:"Information",CPR:"CPR-nummer",PHONE:"Telefonnummer",EMAIL:"Email",NAME:"Navn",ADDRESS:"Adresse"};function Home(){const[i,s]=reactExports.useState(""),[o,a]=reactExports.useState(""),[c,d]=reactExports.useState(!1),[g,$]=reactExports.useState([]),[j,_e]=reactExports.useState(null),{toast:et}=useToast(),_=reactExports.useCallback(async()=>{if(!i.trim()){et({title:"Ingen tekst at behandle",description:"Indtast venligst noget tekst først",variant:"destructive"});return}d(!0),_e(null);try{console.log("Starter tekstbehandling..."),et({title:"Indlæser AI model",description:"Dette kan tage et øjeblik..."});const[tt,nt]=await Promise.all([getDetectedTypes(i),anonymizeText(i)]);et({title:"Tekst behandlet",description:tt.length>0?"Din tekst er blevet anonymiseret":"Ingen personfølsomme data fundet i teksten"}),$(tt),a(nt),_e(null)}catch(tt){console.error("Behandlingsfejl:",tt);const nt=tt instanceof Error?tt.message:"Der skete en uventet fejl";_e(nt),et({title:"Fejl under behandling af tekst",description:"Bruger simpel mønstergenkendelse i stedet for AI model",variant:"destructive"});try{const rt=await anonymizeText(i);a(rt)}catch(rt){console.error("Fallback fejl:",rt),et({title:"Kritisk fejl",description:"Kunne ikke behandle teksten. Prøv igen senere.",variant:"destructive"})}}finally{d(!1)}},[i,et]),b=async()=>{try{await navigator.clipboard.writeText(o),et({title:"Kopieret til udklipsholder",description:"Den anonymiserede tekst er blevet kopieret"})}catch{et({title:"Kunne ikke kopiere",description:"Prøv at kopiere manuelt",variant:"destructive"})}};return jsxRuntimeExports.jsx("div",{className:"min-h-screen bg-background p-6",children:jsxRuntimeExports.jsxs("div",{className:"max-w-6xl mx-auto space-y-8",children:[jsxRuntimeExports.jsxs("div",{className:"flex items-center space-x-3",children:[jsxRuntimeExports.jsx(Shield,{className:"h-8 w-8 text-primary"}),jsxRuntimeExports.jsx("h1",{className:"text-2xl font-semibold",children:"Fjern persondata fra tekst"})]}),jsxRuntimeExports.jsx(Card,{className:"p-4 bg-primary/5 border-primary/20",children:jsxRuntimeExports.jsxs("div",{children:[jsxRuntimeExports.jsx("h2",{className:"font-medium",children:"Ingen data forlader din computer"}),jsxRuntimeExports.jsx("p",{className:"text-sm text-muted-foreground",children:"Al tekstbehandling foregår lokalt i din browser. Den anvendte AI-model kører også lokalt, så dine data forlader aldrig din enhed."})]})}),j&&jsxRuntimeExports.jsx(Card,{className:"p-4 bg-destructive/5 border-destructive/20",children:jsxRuntimeExports.jsxs("div",{className:"flex items-center gap-2 text-sm text-destructive",children:[jsxRuntimeExports.jsx(CircleAlert,{className:"h-4 w-4"}),jsxRuntimeExports.jsx("span",{children:j})]})}),jsxRuntimeExports.jsxs("div",{className:"grid md:grid-cols-2 gap-6",children:[jsxRuntimeExports.jsxs("div",{className:"space-y-4",children:[jsxRuntimeExports.jsx("h2",{className:"text-lg font-medium",children:"Original tekst"}),jsxRuntimeExports.jsx(Textarea,{placeholder:"Indsæt din tekst her...",className:"min-h-[300px] resize-none",value:i,onChange:tt=>{s(tt.target.value),j&&_e(null)},disabled:c}),jsxRuntimeExports.jsx(Button,{onClick:_,className:"w-full",disabled:!i.trim()||c,children:c?jsxRuntimeExports.jsxs(jsxRuntimeExports.Fragment,{children:[jsxRuntimeExports.jsx(RefreshCw,{className:"mr-2 h-4 w-4 animate-spin"}),"Behandler tekst..."]}):"Fjern persondata"})]}),jsxRuntimeExports.jsxs("div",{className:"space-y-4",children:[jsxRuntimeExports.jsx("h2",{className:"text-lg font-medium",children:"Renset tekst"}),jsxRuntimeExports.jsx(Textarea,{readOnly:!0,className:"min-h-[300px] resize-none bg-muted",value:o,placeholder:"Renset tekst vil blive vist her..."}),jsxRuntimeExports.jsxs(Button,{variant:"outline",className:"w-full",onClick:b,disabled:!o,children:[jsxRuntimeExports.jsx(Copy,{className:"mr-2 h-4 w-4"}),"Kopiér til udklipsholder"]})]})]}),g.length>0&&jsxRuntimeExports.jsxs("div",{className:"space-y-2",children:[jsxRuntimeExports.jsx("h3",{className:"text-sm font-medium",children:"Detekteret og fjernet:"}),jsxRuntimeExports.jsx("div",{className:"flex flex-wrap gap-2",children:g.map(tt=>jsxRuntimeExports.jsx(Badge,{variant:"secondary",className:"capitalize",children:replacements[tt]||tt},tt))})]})]})})}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const EPSILON_FLOAT32$1=1e-7,EPSILON_FLOAT16$1=1e-4;class DataStorage{constructor(s,o){this.backend=s,this.dataMover=o,this.data=new WeakMap,this.dataIdsCount=0}get(s){return this.data.has(s)||this.dataMover.moveData(this.backend,s),this.data.get(s)}set(s,o){this.dataIdsCount++,this.data.set(s,o)}has(s){return this.data.has(s)}delete(s){return this.dataIdsCount--,this.data.delete(s)}numDataIds(){return this.dataIdsCount}}class KernelBackend{refCount(s){return notYetImplemented("refCount")}incRef(s){return notYetImplemented("incRef")}timerAvailable(){return!0}time(s){return notYetImplemented("time")}read(s){return notYetImplemented("read")}readSync(s){return notYetImplemented("readSync")}readToGPU(s,o){return notYetImplemented("readToGPU")}numDataIds(){return notYetImplemented("numDataIds")}disposeData(s,o){return notYetImplemented("disposeData")}write(s,o,a){return notYetImplemented("write")}move(s,o,a,c,d){return notYetImplemented("move")}createTensorFromGPUData(s,o,a){return notYetImplemented("createTensorFromGPUData")}memory(){return notYetImplemented("memory")}floatPrecision(){return notYetImplemented("floatPrecision")}epsilon(){return this.floatPrecision()===32?EPSILON_FLOAT32$1:EPSILON_FLOAT16$1}dispose(){return notYetImplemented("dispose")}}function notYetImplemented(i){throw new Error(`'${i}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function shuffle(i){let s=i.length,o=0;for(;s>0;)o=Math.random()*s|0,s--,swap(i,s,o)}function clamp(i,s,o){return Math.max(i,Math.min(s,o))}function nearestLargerEven(i){return i%2===0?i:i+1}function swap(i,s,o){const a=i[s];i[s]=i[o],i[o]=a}function sum$3(i){let s=0;for(let o=0;o<i.length;o++)s+=i[o];return s}function assert$1(i,s){if(!i)throw new Error(typeof s=="string"?s:s())}function assertShapesMatch(i,s,o=""){assert$1(arraysEqual(i,s),()=>o+` Shapes ${i} and ${s} must match`)}function assertNonNull(i){assert$1(i!=null,()=>"The input to the tensor constructor must be a non-null value.")}function sizeFromShape(i){if(i.length===0)return 1;let s=i[0];for(let o=1;o<i.length;o++)s*=i[o];return s}function arraysEqual(i,s){if(i===s)return!0;if(i==null||s==null||i.length!==s.length)return!1;for(let o=0;o<i.length;o++)if(i[o]!==s[o])return!1;return!0}function isInt(i){return i%1===0}function sizeToSquarishShape(i){const s=Math.ceil(Math.sqrt(i));return[s,Math.ceil(i/s)]}function rightPad(i,s){return s<=i.length?i:i+" ".repeat(s-i.length)}function repeatedTry(i,s=c=>0,o,a){return new Promise((c,d)=>{let g=0;const $=()=>{if(i()){c();return}g++;const j=s(g);if(o!=null&&g>=o){d();return}a!=null?a($,j):setTimeout($,j)};$()})}function inferFromImplicitShape(i,s){let o=1,a=-1;for(let d=0;d<i.length;++d)if(i[d]>=0)o*=i[d];else if(i[d]===-1){if(a!==-1)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${a} and dim ${d}`);a=d}else if(i[d]<0)throw Error(`Shapes can not be < 0. Found ${i[d]} at dim ${d}`);if(a===-1){if(s>0&&s!==o)throw Error(`Size(${s}) must match the product of shape ${i}`);return i}if(o===0)throw Error(`Cannot infer the missing size in [${i}] when there are 0 elements`);if(s%o!==0)throw Error(`The implicit shape can't be a fractional number. Got ${s} / ${o}`);const c=i.slice();return c[a]=s/o,c}function parseAxisParam(i,s){const o=s.length;return i=i==null?s.map((a,c)=>c):[].concat(i),assert$1(i.every(a=>a>=-o&&a<o),()=>`All values in axis param must be in range [-${o}, ${o}) but got axis ${i}`),assert$1(i.every(a=>isInt(a)),()=>`All values in axis param must be integers but got axis ${i}`),i.map(a=>a<0?o+a:a)}function squeezeShape(i,s){const o=[],a=[],c=s!=null&&Array.isArray(s)&&s.length===0,d=s==null||c?null:parseAxisParam(s,i).sort();let g=0;for(let $=0;$<i.length;++$){if(d!=null){if(d[g]===$&&i[$]!==1)throw new Error(`Can't squeeze axis ${$} since its dim '${i[$]}' is not 1`);(d[g]==null||d[g]>$)&&i[$]===1&&(o.push(i[$]),a.push($)),d[g]<=$&&g++}i[$]!==1&&(o.push(i[$]),a.push($))}return{newShape:o,keptDims:a}}function getTypedArrayFromDType(i,s){return getArrayFromDType(i,s)}function getArrayFromDType(i,s){let o=null;if(i==null||i==="float32")o=new Float32Array(s);else if(i==="int32")o=new Int32Array(s);else if(i==="bool")o=new Uint8Array(s);else if(i==="string")o=new Array(s);else throw new Error(`Unknown data type ${i}`);return o}function checkConversionForErrors(i,s){for(let o=0;o<i.length;o++){const a=i[o];if(isNaN(a)||!isFinite(a))throw Error(`A tensor of type ${s} being uploaded contains ${a}.`)}}function isValidDtype(i){return i==="bool"||i==="complex64"||i==="float32"||i==="int32"||i==="string"}function hasEncodingLoss(i,s){return!(s==="complex64"||s==="float32"&&i!=="complex64"||s==="int32"&&i!=="float32"&&i!=="complex64"||s==="bool"&&i==="bool")}function bytesPerElement(i){if(i==="float32"||i==="int32")return 4;if(i==="complex64")return 8;if(i==="bool")return 1;throw new Error(`Unknown dtype ${i}`)}function bytesFromStringArray(i){if(i==null)return 0;let s=0;return i.forEach(o=>s+=o.length),s}function isString(i){return typeof i=="string"||i instanceof String}function isBoolean(i){return typeof i=="boolean"}function isNumber(i){return typeof i=="number"}function inferDtype(i){return Array.isArray(i)?inferDtype(i[0]):i instanceof Float32Array?"float32":i instanceof Int32Array||i instanceof Uint8Array||i instanceof Uint8ClampedArray?"int32":isNumber(i)?"float32":isString(i)?"string":isBoolean(i)?"bool":"float32"}function isFunction(i){return!!(i&&i.constructor&&i.call&&i.apply)}function nearestDivisor(i,s){for(let o=s;o<i;++o)if(i%o===0)return o;return i}function computeStrides(i){const s=i.length;if(s<2)return[];const o=new Array(s-1);o[s-2]=i[s-1];for(let a=s-3;a>=0;--a)o[a]=o[a+1]*i[a+1];return o}function createNestedArray(i,s,o,a=!1){const c=new Array;if(s.length===1){const d=s[0]*(a?2:1);for(let g=0;g<d;g++)c[g]=o[i+g]}else{const d=s[0],g=s.slice(1),$=g.reduce((j,_e)=>j*_e)*(a?2:1);for(let j=0;j<d;j++)c[j]=createNestedArray(i+j*$,g,o,a)}return c}function toNestedArray(i,s,o=!1){if(i.length===0)return s[0];const a=i.reduce((c,d)=>c*d)*(o?2:1);if(a===0)return[];if(a!==s.length)throw new Error(`[${i}] does not match the input size ${s.length}${o?" for a complex tensor":""}.`);return createNestedArray(0,i,s,o)}function convertBackendValuesAndArrayBuffer(i,s){if(Array.isArray(i))return i;if(s==="float32")return i instanceof Float32Array?i:new Float32Array(i);if(s==="int32")return i instanceof Int32Array?i:new Int32Array(i);if(s==="bool"||s==="string")return Uint8Array.from(new Int32Array(i));throw new Error(`Unknown dtype ${s}`)}function makeOnesTypedArray(i,s){const o=makeZerosTypedArray(i,s);for(let a=0;a<o.length;a++)o[a]=1;return o}function makeZerosTypedArray(i,s){if(s==null||s==="float32"||s==="complex64")return new Float32Array(i);if(s==="int32")return new Int32Array(i);if(s==="bool")return new Uint8Array(i);throw new Error(`Unknown data type ${s}`)}function makeZerosNestedTypedArray(i,s){const o=i.reduce((a,c)=>a*c,1);if(s==null||s==="float32")return toNestedArray(i,new Float32Array(o));if(s==="int32")return toNestedArray(i,new Int32Array(o));if(s==="bool")return toNestedArray(i,new Uint8Array(o));throw new Error(`Unknown data type ${s}`)}function assertNonNegativeIntegerDimensions(i){i.forEach(s=>{assert$1(Number.isInteger(s)&&s>=0,()=>`Tensor must have a shape comprised of positive integers but got shape [${i}].`)})}function locToIndex(i,s,o){if(s===0)return 0;if(s===1)return i[0];let a=i[i.length-1];for(let c=0;c<i.length-1;++c)a+=o[c]*i[c];return a}function indexToLoc(i,s,o){if(s===0)return[];if(s===1)return[i];const a=new Array(s);for(let c=0;c<a.length-1;++c)a[c]=Math.floor(i/o[c]),i-=a[c]*o[c];return a[a.length-1]=i,a}function isPromise(i){return i&&i.then&&typeof i.then=="function"}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const TENSORFLOWJS_FLAGS_PREFIX="tfjsflags";class Environment{constructor(s){this.global=s,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=getQueryParams,this.populateURLFlags()}setPlatform(s,o){this.platform!=null&&(env().getBool("IS_TEST")||env().getBool("PROD")||console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${s}.`)),this.platformName=s,this.platform=o}registerFlag(s,o,a){if(this.flagRegistry[s]={evaluationFn:o,setHook:a},this.urlFlags[s]!=null){const c=this.urlFlags[s];env().getBool("IS_TEST")||env().getBool("PROD")||console.warn(`Setting feature override from URL ${s}: ${c}.`),this.set(s,c)}}async getAsync(s){return s in this.flags?this.flags[s]:(this.flags[s]=await this.evaluateFlag(s),this.flags[s])}get(s){if(s in this.flags)return this.flags[s];const o=this.evaluateFlag(s);if(isPromise(o))throw new Error(`Flag ${s} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[s]=o,this.flags[s]}getNumber(s){return this.get(s)}getBool(s){return this.get(s)}getString(s){return this.get(s)}getFlags(){return this.flags}get features(){return this.flags}set(s,o){if(this.flagRegistry[s]==null)throw new Error(`Cannot set flag ${s} as it has not been registered.`);this.flags[s]=o,this.flagRegistry[s].setHook!=null&&this.flagRegistry[s].setHook(o)}evaluateFlag(s){if(this.flagRegistry[s]==null)throw new Error(`Cannot evaluate flag '${s}': no evaluation function found.`);return this.flagRegistry[s].evaluationFn()}setFlags(s){this.flags=Object.assign({},s)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(typeof this.global>"u"||typeof this.global.location>"u"||typeof this.global.location.search>"u")return;const s=this.getQueryParams(this.global.location.search);TENSORFLOWJS_FLAGS_PREFIX in s&&s[TENSORFLOWJS_FLAGS_PREFIX].split(",").forEach(a=>{const[c,d]=a.split(":");this.urlFlags[c]=parseValue(c,d)})}}function getQueryParams(i){const s={};return i.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,(o,...a)=>(decodeParam(s,a[0],a[1]),a.join("="))),s}function decodeParam(i,s,o){i[decodeURIComponent(s)]=decodeURIComponent(o||"")}function parseValue(i,s){const o=s.toLowerCase();return o==="true"||o==="false"?o==="true":`${+o}`===o?+o:s}function env(){return ENV$4}let ENV$4=null;function setEnvironmentGlobal(i){ENV$4=i}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let globalNameSpace;function getGlobalNamespace(){if(globalNameSpace==null){let i;if(typeof window<"u")i=window;else if(typeof global<"u")i=global;else if(typeof process<"u")i=process;else if(typeof self<"u")i=self;else throw new Error("Could not find a global object");globalNameSpace=i}return globalNameSpace}function getGlobalMap(){const i=getGlobalNamespace();return i._tfGlobals==null&&(i._tfGlobals=new Map),i._tfGlobals}function getGlobal(i,s){const o=getGlobalMap();if(o.has(i))return o.get(i);{const a=s();return o.set(i,a),o.get(i)}}const Abs="Abs",Acos="Acos",Acosh="Acosh",Add$1="Add",AddN="AddN",All="All",Any="Any",ArgMax="ArgMax",ArgMin="ArgMin",Asin="Asin",Asinh="Asinh",Atan="Atan",Atanh="Atanh",Atan2="Atan2",AvgPool="AvgPool",AvgPoolGrad="AvgPoolGrad",AvgPool3D="AvgPool3D",AvgPool3DGrad="AvgPool3DGrad",BatchMatMul="BatchMatMul",BatchToSpaceND="BatchToSpaceND",Bincount="Bincount",BitwiseAnd="BitwiseAnd",BroadcastTo="BroadcastTo",BroadcastArgs="BroadcastArgs",Cast="Cast",Ceil="Ceil",ClipByValue="ClipByValue",Complex="Complex",ComplexAbs="ComplexAbs",Concat="Concat",Conv2D$1="Conv2D",Conv2DBackpropFilter="Conv2DBackpropFilter",Conv2DBackpropInput="Conv2DBackpropInput",Conv3D$1="Conv3D",Conv3DBackpropFilterV2="Conv3DBackpropFilterV2",Conv3DBackpropInputV2="Conv3DBackpropInputV2",Cos="Cos",Cosh="Cosh",Cumprod="Cumprod",Cumsum="Cumsum",CropAndResize="CropAndResize",DenseBincount="DenseBincount",DepthToSpace="DepthToSpace",DepthwiseConv2dNative="DepthwiseConv2dNative",DepthwiseConv2dNativeBackpropFilter="DepthwiseConv2dNativeBackpropFilter",DepthwiseConv2dNativeBackpropInput="DepthwiseConv2dNativeBackpropInput",Diag="Diag",Dilation2D="Dilation2D",Dilation2DBackpropInput="Dilation2DBackpropInput",Dilation2DBackpropFilter="Dilation2DBackpropFilter",Draw="Draw",RealDiv="RealDiv",Einsum="Einsum",Elu$1="Elu",EluGrad="EluGrad",Erf="Erf",Equal="Equal",Exp="Exp",ExpandDims="ExpandDims",Expm1="Expm1",FFT="FFT",Fill="Fill",FlipLeftRight="FlipLeftRight",Floor="Floor",FloorDiv="FloorDiv",FusedBatchNorm="FusedBatchNorm",GatherV2="GatherV2",GatherNd="GatherNd",Greater="Greater",GreaterEqual="GreaterEqual",Identity$1="Identity",IFFT="IFFT",Imag="Imag",IsFinite="IsFinite",IsInf="IsInf",IsNan="IsNan",LeakyRelu="LeakyRelu",Less="Less",LessEqual="LessEqual",LinSpace="LinSpace",Log="Log",Log1p="Log1p",LogicalAnd="LogicalAnd",LogicalNot="LogicalNot",LogicalOr="LogicalOr",LogSoftmax$1="LogSoftmax",LRN="LRN",LRNGrad="LRNGrad",Max="Max",Maximum$1="Maximum",MaxPool="MaxPool",MaxPoolGrad="MaxPoolGrad",MaxPool3D="MaxPool3D",MaxPool3DGrad="MaxPool3DGrad",MaxPoolWithArgmax="MaxPoolWithArgmax",Mean="Mean",Min="Min",Minimum$1="Minimum",MirrorPad="MirrorPad",Mod="Mod",Multinomial="Multinomial",Multiply$1="Multiply",Neg="Neg",NotEqual="NotEqual",NonMaxSuppressionV3="NonMaxSuppressionV3",NonMaxSuppressionV4="NonMaxSuppressionV4",NonMaxSuppressionV5="NonMaxSuppressionV5",OnesLike="OnesLike",OneHot="OneHot",Pack="Pack",PadV2="PadV2",Pow="Pow",Prelu="Prelu",Prod="Prod",RaggedGather="RaggedGather",RaggedRange="RaggedRange",RaggedTensorToTensor="RaggedTensorToTensor",Range="Range",Real="Real",Reciprocal="Reciprocal",Relu$1="Relu",Reshape$1="Reshape",ResizeNearestNeighbor="ResizeNearestNeighbor",ResizeNearestNeighborGrad="ResizeNearestNeighborGrad",ResizeBilinear="ResizeBilinear",ResizeBilinearGrad="ResizeBilinearGrad",Relu6$1="Relu6",Reverse="Reverse",Round="Round",Rsqrt="Rsqrt",ScatterNd="ScatterNd",TensorScatterUpdate="TensorScatterUpdate",SearchSorted="SearchSorted",Select="Select",Selu$1="Selu",Slice="Slice",Sin="Sin",Sinh="Sinh",Sign="Sign",Sigmoid$1="Sigmoid",Softplus$1="Softplus",Sqrt="Sqrt",Sum="Sum",SpaceToBatchND="SpaceToBatchND",SplitV="SplitV",Softmax$2="Softmax",SparseFillEmptyRows="SparseFillEmptyRows",SparseReshape="SparseReshape",SparseSegmentMean="SparseSegmentMean",SparseSegmentSum="SparseSegmentSum",SparseToDense="SparseToDense",SquaredDifference="SquaredDifference",Square="Square",StaticRegexReplace="StaticRegexReplace",StridedSlice="StridedSlice",StringNGrams="StringNGrams",StringSplit="StringSplit",StringToHashBucketFast="StringToHashBucketFast",Sub="Sub",Tan="Tan",Tanh$1="Tanh",Tile="Tile",TopK="TopK",Transform="Transform",Transpose="Transpose",Unique="Unique",Unpack="Unpack",UnsortedSegmentSum="UnsortedSegmentSum",ZerosLike="ZerosLike",Step="Step",FromPixels="FromPixels",RotateWithOffset="RotateWithOffset",_FusedMatMul="_FusedMatMul",FusedConv2D="FusedConv2D",FusedDepthwiseConv2D="FusedDepthwiseConv2D";/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function warn(...i){env().getBool("IS_TEST")||env().getBool("PROD")||console.warn(...i)}function log$3(...i){env().getBool("IS_TEST")||env().getBool("PROD")||console.log(...i)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kernelRegistry=getGlobal("kernelRegistry",()=>new Map),gradRegistry=getGlobal("gradRegistry",()=>new Map);function getKernel(i,s){const o=makeKey(i,s);return kernelRegistry.get(o)}function getGradient(i){return gradRegistry.get(i)}function getKernelsForBackend(i){const s=kernelRegistry.entries(),o=[];for(;;){const{done:a,value:c}=s.next();if(a)break;const[d,g]=c,[$]=d.split("_");$===i&&o.push(g)}return o}function registerKernel(i){const{kernelName:s,backendName:o}=i,a=makeKey(s,o);kernelRegistry.has(a)&&warn(`The kernel '${s}' for backend '${o}' is already registered`),kernelRegistry.set(a,i)}function registerGradient(i){const{kernelName:s}=i;gradRegistry.has(s)&&env().getBool("DEBUG")&&warn(`Overriding the gradient for '${s}'`),gradRegistry.set(s,i)}function makeKey(i,s){return`${s}_${i}`}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function isTypedArrayBrowser(i){return i instanceof Float32Array||i instanceof Int32Array||i instanceof Uint8Array||i instanceof Uint8ClampedArray}var long=Long$1,wasm=null;try{wasm=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch(i){}function Long$1(i,s,o){this.low=i|0,this.high=s|0,this.unsigned=!!o}Long$1.prototype.__isLong__;Object.defineProperty(Long$1.prototype,"__isLong__",{value:!0});function isLong(i){return(i&&i.__isLong__)===!0}Long$1.isLong=isLong;var INT_CACHE={},UINT_CACHE={};function fromInt(i,s){var o,a,c;return s?(i>>>=0,(c=0<=i&&i<256)&&(a=UINT_CACHE[i],a)?a:(o=fromBits(i,(i|0)<0?-1:0,!0),c&&(UINT_CACHE[i]=o),o)):(i|=0,(c=-128<=i&&i<128)&&(a=INT_CACHE[i],a)?a:(o=fromBits(i,i<0?-1:0,!1),c&&(INT_CACHE[i]=o),o))}Long$1.fromInt=fromInt;function fromNumber(i,s){if(isNaN(i))return s?UZERO:ZERO;if(s){if(i<0)return UZERO;if(i>=TWO_PWR_64_DBL)return MAX_UNSIGNED_VALUE}else{if(i<=-TWO_PWR_63_DBL)return MIN_VALUE;if(i+1>=TWO_PWR_63_DBL)return MAX_VALUE}return i<0?fromNumber(-i,s).neg():fromBits(i%TWO_PWR_32_DBL|0,i/TWO_PWR_32_DBL|0,s)}Long$1.fromNumber=fromNumber;function fromBits(i,s,o){return new Long$1(i,s,o)}Long$1.fromBits=fromBits;var pow_dbl=Math.pow;function fromString(i,s,o){if(i.length===0)throw Error("empty string");if(i==="NaN"||i==="Infinity"||i==="+Infinity"||i==="-Infinity")return ZERO;if(typeof s=="number"?(o=s,s=!1):s=!!s,o=o||10,o<2||36<o)throw RangeError("radix");var a;if((a=i.indexOf("-"))>0)throw Error("interior hyphen");if(a===0)return fromString(i.substring(1),s,o).neg();for(var c=fromNumber(pow_dbl(o,8)),d=ZERO,g=0;g<i.length;g+=8){var $=Math.min(8,i.length-g),j=parseInt(i.substring(g,g+$),o);if($<8){var _e=fromNumber(pow_dbl(o,$));d=d.mul(_e).add(fromNumber(j))}else d=d.mul(c),d=d.add(fromNumber(j))}return d.unsigned=s,d}Long$1.fromString=fromString;function fromValue(i,s){return typeof i=="number"?fromNumber(i,s):typeof i=="string"?fromString(i,s):fromBits(i.low,i.high,typeof s=="boolean"?s:i.unsigned)}Long$1.fromValue=fromValue;var TWO_PWR_16_DBL=65536,TWO_PWR_24_DBL=1<<24,TWO_PWR_32_DBL=TWO_PWR_16_DBL*TWO_PWR_16_DBL,TWO_PWR_64_DBL=TWO_PWR_32_DBL*TWO_PWR_32_DBL,TWO_PWR_63_DBL=TWO_PWR_64_DBL/2,TWO_PWR_24=fromInt(TWO_PWR_24_DBL),ZERO=fromInt(0);Long$1.ZERO=ZERO;var UZERO=fromInt(0,!0);Long$1.UZERO=UZERO;var ONE=fromInt(1);Long$1.ONE=ONE;var UONE=fromInt(1,!0);Long$1.UONE=UONE;var NEG_ONE=fromInt(-1);Long$1.NEG_ONE=NEG_ONE;var MAX_VALUE=fromBits(-1,2147483647,!1);Long$1.MAX_VALUE=MAX_VALUE;var MAX_UNSIGNED_VALUE=fromBits(-1,-1,!0);Long$1.MAX_UNSIGNED_VALUE=MAX_UNSIGNED_VALUE;var MIN_VALUE=fromBits(0,-2147483648,!1);Long$1.MIN_VALUE=MIN_VALUE;var LongPrototype=Long$1.prototype;LongPrototype.toInt=function i(){return this.unsigned?this.low>>>0:this.low};LongPrototype.toNumber=function i(){return this.unsigned?(this.high>>>0)*TWO_PWR_32_DBL+(this.low>>>0):this.high*TWO_PWR_32_DBL+(this.low>>>0)};LongPrototype.toString=function i(s){if(s=s||10,s<2||36<s)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative())if(this.eq(MIN_VALUE)){var o=fromNumber(s),a=this.div(o),c=a.mul(o).sub(this);return a.toString(s)+c.toInt().toString(s)}else return"-"+this.neg().toString(s);for(var d=fromNumber(pow_dbl(s,6),this.unsigned),g=this,$="";;){var j=g.div(d),_e=g.sub(j.mul(d)).toInt()>>>0,et=_e.toString(s);if(g=j,g.isZero())return et+$;for(;et.length<6;)et="0"+et;$=""+et+$}};LongPrototype.getHighBits=function i(){return this.high};LongPrototype.getHighBitsUnsigned=function i(){return this.high>>>0};LongPrototype.getLowBits=function i(){return this.low};LongPrototype.getLowBitsUnsigned=function i(){return this.low>>>0};LongPrototype.getNumBitsAbs=function i(){if(this.isNegative())return this.eq(MIN_VALUE)?64:this.neg().getNumBitsAbs();for(var s=this.high!=0?this.high:this.low,o=31;o>0&&!(s&1<<o);o--);return this.high!=0?o+33:o+1};LongPrototype.isZero=function i(){return this.high===0&&this.low===0};LongPrototype.eqz=LongPrototype.isZero;LongPrototype.isNegative=function i(){return!this.unsigned&&this.high<0};LongPrototype.isPositive=function i(){return this.unsigned||this.high>=0};LongPrototype.isOdd=function i(){return(this.low&1)===1};LongPrototype.isEven=function i(){return(this.low&1)===0};LongPrototype.equals=function i(s){return isLong(s)||(s=fromValue(s)),this.unsigned!==s.unsigned&&this.high>>>31===1&&s.high>>>31===1?!1:this.high===s.high&&this.low===s.low};LongPrototype.eq=LongPrototype.equals;LongPrototype.notEquals=function i(s){return!this.eq(s)};LongPrototype.neq=LongPrototype.notEquals;LongPrototype.ne=LongPrototype.notEquals;LongPrototype.lessThan=function i(s){return this.comp(s)<0};LongPrototype.lt=LongPrototype.lessThan;LongPrototype.lessThanOrEqual=function i(s){return this.comp(s)<=0};LongPrototype.lte=LongPrototype.lessThanOrEqual;LongPrototype.le=LongPrototype.lessThanOrEqual;LongPrototype.greaterThan=function i(s){return this.comp(s)>0};LongPrototype.gt=LongPrototype.greaterThan;LongPrototype.greaterThanOrEqual=function i(s){return this.comp(s)>=0};LongPrototype.gte=LongPrototype.greaterThanOrEqual;LongPrototype.ge=LongPrototype.greaterThanOrEqual;LongPrototype.compare=function i(s){if(isLong(s)||(s=fromValue(s)),this.eq(s))return 0;var o=this.isNegative(),a=s.isNegative();return o&&!a?-1:!o&&a?1:this.unsigned?s.high>>>0>this.high>>>0||s.high===this.high&&s.low>>>0>this.low>>>0?-1:1:this.sub(s).isNegative()?-1:1};LongPrototype.comp=LongPrototype.compare;LongPrototype.negate=function i(){return!this.unsigned&&this.eq(MIN_VALUE)?MIN_VALUE:this.not().add(ONE)};LongPrototype.neg=LongPrototype.negate;LongPrototype.add=function i(s){isLong(s)||(s=fromValue(s));var o=this.high>>>16,a=this.high&65535,c=this.low>>>16,d=this.low&65535,g=s.high>>>16,$=s.high&65535,j=s.low>>>16,_e=s.low&65535,et=0,_=0,b=0,tt=0;return tt+=d+_e,b+=tt>>>16,tt&=65535,b+=c+j,_+=b>>>16,b&=65535,_+=a+$,et+=_>>>16,_&=65535,et+=o+g,et&=65535,fromBits(b<<16|tt,et<<16|_,this.unsigned)};LongPrototype.subtract=function i(s){return isLong(s)||(s=fromValue(s)),this.add(s.neg())};LongPrototype.sub=LongPrototype.subtract;LongPrototype.multiply=function i(s){if(this.isZero())return ZERO;if(isLong(s)||(s=fromValue(s)),wasm){var o=wasm.mul(this.low,this.high,s.low,s.high);return fromBits(o,wasm.get_high(),this.unsigned)}if(s.isZero())return ZERO;if(this.eq(MIN_VALUE))return s.isOdd()?MIN_VALUE:ZERO;if(s.eq(MIN_VALUE))return this.isOdd()?MIN_VALUE:ZERO;if(this.isNegative())return s.isNegative()?this.neg().mul(s.neg()):this.neg().mul(s).neg();if(s.isNegative())return this.mul(s.neg()).neg();if(this.lt(TWO_PWR_24)&&s.lt(TWO_PWR_24))return fromNumber(this.toNumber()*s.toNumber(),this.unsigned);var a=this.high>>>16,c=this.high&65535,d=this.low>>>16,g=this.low&65535,$=s.high>>>16,j=s.high&65535,_e=s.low>>>16,et=s.low&65535,_=0,b=0,tt=0,nt=0;return nt+=g*et,tt+=nt>>>16,nt&=65535,tt+=d*et,b+=tt>>>16,tt&=65535,tt+=g*_e,b+=tt>>>16,tt&=65535,b+=c*et,_+=b>>>16,b&=65535,b+=d*_e,_+=b>>>16,b&=65535,b+=g*j,_+=b>>>16,b&=65535,_+=a*et+c*_e+d*j+g*$,_&=65535,fromBits(tt<<16|nt,_<<16|b,this.unsigned)};LongPrototype.mul=LongPrototype.multiply;LongPrototype.divide=function i(s){if(isLong(s)||(s=fromValue(s)),s.isZero())throw Error("division by zero");if(wasm){if(!this.unsigned&&this.high===-2147483648&&s.low===-1&&s.high===-1)return this;var o=(this.unsigned?wasm.div_u:wasm.div_s)(this.low,this.high,s.low,s.high);return fromBits(o,wasm.get_high(),this.unsigned)}if(this.isZero())return this.unsigned?UZERO:ZERO;var a,c,d;if(this.unsigned){if(s.unsigned||(s=s.toUnsigned()),s.gt(this))return UZERO;if(s.gt(this.shru(1)))return UONE;d=UZERO}else{if(this.eq(MIN_VALUE)){if(s.eq(ONE)||s.eq(NEG_ONE))return MIN_VALUE;if(s.eq(MIN_VALUE))return ONE;var g=this.shr(1);return a=g.div(s).shl(1),a.eq(ZERO)?s.isNegative()?ONE:NEG_ONE:(c=this.sub(s.mul(a)),d=a.add(c.div(s)),d)}else if(s.eq(MIN_VALUE))return this.unsigned?UZERO:ZERO;if(this.isNegative())return s.isNegative()?this.neg().div(s.neg()):this.neg().div(s).neg();if(s.isNegative())return this.div(s.neg()).neg();d=ZERO}for(c=this;c.gte(s);){a=Math.max(1,Math.floor(c.toNumber()/s.toNumber()));for(var $=Math.ceil(Math.log(a)/Math.LN2),j=$<=48?1:pow_dbl(2,$-48),_e=fromNumber(a),et=_e.mul(s);et.isNegative()||et.gt(c);)a-=j,_e=fromNumber(a,this.unsigned),et=_e.mul(s);_e.isZero()&&(_e=ONE),d=d.add(_e),c=c.sub(et)}return d};LongPrototype.div=LongPrototype.divide;LongPrototype.modulo=function i(s){if(isLong(s)||(s=fromValue(s)),wasm){var o=(this.unsigned?wasm.rem_u:wasm.rem_s)(this.low,this.high,s.low,s.high);return fromBits(o,wasm.get_high(),this.unsigned)}return this.sub(this.div(s).mul(s))};LongPrototype.mod=LongPrototype.modulo;LongPrototype.rem=LongPrototype.modulo;LongPrototype.not=function i(){return fromBits(~this.low,~this.high,this.unsigned)};LongPrototype.and=function i(s){return isLong(s)||(s=fromValue(s)),fromBits(this.low&s.low,this.high&s.high,this.unsigned)};LongPrototype.or=function i(s){return isLong(s)||(s=fromValue(s)),fromBits(this.low|s.low,this.high|s.high,this.unsigned)};LongPrototype.xor=function i(s){return isLong(s)||(s=fromValue(s)),fromBits(this.low^s.low,this.high^s.high,this.unsigned)};LongPrototype.shiftLeft=function i(s){return isLong(s)&&(s=s.toInt()),(s&=63)===0?this:s<32?fromBits(this.low<<s,this.high<<s|this.low>>>32-s,this.unsigned):fromBits(0,this.low<<s-32,this.unsigned)};LongPrototype.shl=LongPrototype.shiftLeft;LongPrototype.shiftRight=function i(s){return isLong(s)&&(s=s.toInt()),(s&=63)===0?this:s<32?fromBits(this.low>>>s|this.high<<32-s,this.high>>s,this.unsigned):fromBits(this.high>>s-32,this.high>=0?0:-1,this.unsigned)};LongPrototype.shr=LongPrototype.shiftRight;LongPrototype.shiftRightUnsigned=function i(s){if(isLong(s)&&(s=s.toInt()),s&=63,s===0)return this;var o=this.high;if(s<32){var a=this.low;return fromBits(a>>>s|o<<32-s,o>>>s,this.unsigned)}else return s===32?fromBits(o,0,this.unsigned):fromBits(o>>>s-32,0,this.unsigned)};LongPrototype.shru=LongPrototype.shiftRightUnsigned;LongPrototype.shr_u=LongPrototype.shiftRightUnsigned;LongPrototype.toSigned=function i(){return this.unsigned?fromBits(this.low,this.high,!1):this};LongPrototype.toUnsigned=function i(){return this.unsigned?this:fromBits(this.low,this.high,!0)};LongPrototype.toBytes=function i(s){return s?this.toBytesLE():this.toBytesBE()};LongPrototype.toBytesLE=function i(){var s=this.high,o=this.low;return[o&255,o>>>8&255,o>>>16&255,o>>>24,s&255,s>>>8&255,s>>>16&255,s>>>24]};LongPrototype.toBytesBE=function i(){var s=this.high,o=this.low;return[s>>>24,s>>>16&255,s>>>8&255,s&255,o>>>24,o>>>16&255,o>>>8&255,o&255]};Long$1.fromBytes=function i(s,o,a){return a?Long$1.fromBytesLE(s,o):Long$1.fromBytesBE(s,o)};Long$1.fromBytesLE=function i(s,o){return new Long$1(s[0]|s[1]<<8|s[2]<<16|s[3]<<24,s[4]|s[5]<<8|s[6]<<16|s[7]<<24,o)};Long$1.fromBytesBE=function i(s,o){return new Long$1(s[4]<<24|s[5]<<16|s[6]<<8|s[7],s[0]<<24|s[1]<<16|s[2]<<8|s[3],o)};const long$1=getDefaultExportFromCjs(long),LongExports=_mergeNamespaces({__proto__:null,default:long$1},[long]);/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Long=long$1||LongExports;function hexToLong(i){return Long.fromString(i,!0,16)}const k0=hexToLong("c3a5c85c97cb3127"),k1=hexToLong("b492b66fbe98f273"),k2=hexToLong("9ae16a3b2f90404f");function shiftMix(i){return i.xor(i.shru(47))}function fetch$1(i,s,o){const a=i.slice(s,s+o);return Long.fromBytes(Array.from(a),!0,!0)}function fetch64(i,s){return fetch$1(i,s,8)}function fetch32(i,s){return fetch$1(i,s,4)}function rotate64(i,s){return s===0?i:i.shru(s).or(i.shl(64-s))}function hashLen16(i,s,o=hexToLong("9ddfea08eb382d69")){let a=i.xor(s).mul(o);a=a.xor(a.shru(47));let c=s.xor(a).mul(o);return c=c.xor(c.shru(47)),c=c.mul(o),c}function weakHashLen32WithSeeds(i,s,o,a,c,d){c=c.add(i),d=rotate64(d.add(c).add(a),21);const g=c;return c=c.add(s),c=c.add(o),d=d.add(rotate64(c,44)),[c.add(a),d.add(g)]}function weakHashLen32WithSeedsStr(i,s,o,a){return weakHashLen32WithSeeds(fetch64(i,s),fetch64(i,s+8),fetch64(i,s+16),fetch64(i,s+24),o,a)}function hashLen0to16(i,s=i.length){if(s>=8){const o=k2.add(s*2),a=fetch64(i,0).add(k2),c=fetch64(i,s-8),d=rotate64(c,37).mul(o).add(a),g=rotate64(a,25).add(c).mul(o);return hashLen16(d,g,o)}if(s>=4){const o=k2.add(s*2),a=fetch32(i,0);return hashLen16(a.shl(3).add(s),fetch32(i,s-4),o)}if(s>0){const o=i[0],a=i[s>>1],c=i[s-1],d=o+(a<<8),g=s+(c<<2);return shiftMix(k2.mul(d).xor(k0.mul(g))).mul(k2)}return k2}function hashLen17to32(i,s=i.length){const o=k2.add(s*2),a=fetch64(i,0).mul(k1),c=fetch64(i,8),d=fetch64(i,s-8).mul(o),g=fetch64(i,s-16).mul(k2);return hashLen16(rotate64(a.add(c),43).add(rotate64(d,30)).add(g),a.add(rotate64(c.add(k2),18)).add(d),o)}function hashLen33to64(i,s=i.length){const o=k2.add(s*2),a=fetch64(i,0).mul(k2),c=fetch64(i,8),d=fetch64(i,s-8).mul(o),g=fetch64(i,s-16).mul(k2),$=rotate64(a.add(c),43).add(rotate64(d,30)).add(g),j=hashLen16($,a.add(rotate64(c.add(k2),18)).add(d),o),_e=fetch64(i,16).mul(o),et=fetch64(i,24),_=$.add(fetch64(i,s-32)).mul(o),b=j.add(fetch64(i,s-24)).mul(o);return hashLen16(rotate64(_e.add(et),43).add(rotate64(_,30)).add(b),_e.add(rotate64(et.add(a),18)).add(_),o)}function fingerPrint64(i,s=i.length){const o=Long.fromNumber(81,!0);if(s<=32)return s<=16?hashLen0to16(i,s):hashLen17to32(i,s);if(s<=64)return hashLen33to64(i,s);let a=o,c=o.mul(k1).add(113),d=shiftMix(c.mul(k2).add(113)).mul(k2),g=[Long.UZERO,Long.UZERO],$=[Long.UZERO,Long.UZERO];a=a.mul(k2).add(fetch64(i,0));let j=0;const _e=(s-1>>6)*64,et=_e+(s-1&63)-63;do a=rotate64(a.add(c).add(g[0]).add(fetch64(i,j+8)),37).mul(k1),c=rotate64(c.add(g[1]).add(fetch64(i,j+48)),42).mul(k1),a=a.xor($[1]),c=c.add(g[0]).add(fetch64(i,j+40)),d=rotate64(d.add($[0]),33).mul(k1),g=weakHashLen32WithSeedsStr(i,j,g[1].mul(k1),a.add($[0])),$=weakHashLen32WithSeedsStr(i,j+32,d.add($[1]),c.add(fetch64(i,j+16))),[d,a]=[a,d],j+=64;while(j!==_e);const _=k1.add(d.and(255).shl(1));return j=et,$[0]=$[0].add(s-1&63),g[0]=g[0].add($[0]),$[0]=$[0].add(g[0]),a=rotate64(a.add(c).add(g[0]).add(fetch64(i,j+8)),37).mul(_),c=rotate64(c.add(g[1]).add(fetch64(i,j+48)),42).mul(_),a=a.xor($[1].mul(9)),c=c.add(g[0].mul(9).add(fetch64(i,j+40))),d=rotate64(d.add($[0]),33).mul(_),g=weakHashLen32WithSeedsStr(i,j,g[1].mul(_),a.add($[0])),$=weakHashLen32WithSeedsStr(i,j+32,d.add($[1]),c.add(fetch64(i,j+16))),[d,a]=[a,d],hashLen16(hashLen16(g[0],$[0],_).add(shiftMix(c).mul(k0)).add(d),hashLen16(g[1],$[1],_).add(a),_)}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function createScalarValue(i,s){return s==="string"?encodeString(i):toTypedArray([i],s)}function noConversionNeeded(i,s){return i instanceof Float32Array&&s==="float32"||i instanceof Int32Array&&s==="int32"||i instanceof Uint8Array&&s==="bool"}function toTypedArray(i,s){if(s==="string")throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(i)&&(i=flatten$1(i)),env().getBool("DEBUG")&&checkConversionForErrors(i,s),noConversionNeeded(i,s))return i;if(s==null||s==="float32"||s==="complex64")return new Float32Array(i);if(s==="int32")return new Int32Array(i);if(s==="bool"){const o=new Uint8Array(i.length);for(let a=0;a<o.length;++a)Math.round(i[a])!==0&&(o[a]=1);return o}else throw new Error(`Unknown data type ${s}`)}function now(){return env().platform.now()}function encodeString(i,s="utf-8"){return s=s||"utf-8",env().platform.encode(i,s)}function decodeString(i,s="utf-8"){return s=s||"utf-8",env().platform.decode(i,s)}function isTypedArray(i){return env().platform.isTypedArray!=null?env().platform.isTypedArray(i):isTypedArrayBrowser(i)}function flatten$1(i,s=[],o=!1){if(s==null&&(s=[]),typeof i=="boolean"||typeof i=="number"||typeof i=="string"||isPromise(i)||i==null||isTypedArray(i)&&o)s.push(i);else if(Array.isArray(i)||isTypedArray(i))for(let a=0;a<i.length;++a)flatten$1(i[a],s,o);else{let a=-1;for(const c of Object.keys(i))/^([1-9]+[0-9]*|0)$/.test(c)&&(a=Math.max(a,Number(c)));for(let c=0;c<=a;c++)flatten$1(i[c],s,o)}return s}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Profiler{constructor(s,o){this.backendTimer=s,this.logger=o,o==null&&(this.logger=new Logger)}profileKernel(s,o,a){let c;const d=()=>{c=a()};let g;const $=now();if(this.backendTimer.timerAvailable())g=this.backendTimer.time(d);else{d();for(const _e of c)_e.dataSync();g=Promise.resolve({kernelMs:now()-$})}if(env().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let _e=0;_e<c.length;_e++){const et=c[_e];et.data().then(_=>{checkComputationForErrors(_,et.dtype,s)})}return{kernelName:s,outputs:c,inputs:o,timeMs:g.then(_e=>_e.kernelMs),extraInfo:g.then(_e=>_e.getExtraProfileInfo!=null?_e.getExtraProfileInfo():"")}}logKernelProfile(s){const{kernelName:o,outputs:a,timeMs:c,inputs:d,extraInfo:g}=s;a.forEach($=>{Promise.all([$.data(),c,g]).then(j=>{this.logger.logKernelProfile(o,$,j[0],j[1],d,j[2])})})}}function checkComputationForErrors(i,s,o){if(s!=="float32")return!1;for(let a=0;a<i.length;a++){const c=i[a];if(isNaN(c)||!isFinite(c))return console.warn(`Found ${c} in the result of '${o}'`),!0}return!1}class Logger{logKernelProfile(s,o,a,c,d,g){const $=typeof c=="number"?rightPad(`${c}ms`,9):c.error,j=rightPad(s,25),_e=o.rank,et=o.size,_=rightPad(o.shape.toString(),14);let b="";for(const tt in d){const nt=d[tt];if(nt!=null){const rt=nt.shape||o.shape,st=rt.length;b+=`${tt}: ${st}D ${st>0?rt:""} `}}console.log(`%c${j}	%c${$}	%c${_e}D ${_}	%c${et}	%c${b}	%c${g}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function getFilteredNodesXToY(i,s,o){const a={},c={};for(let j=0;j<s.length;j++)a[s[j].id]=!0;for(let j=0;j<i.length;j++){const _e=i[j],et=_e.inputs;for(const _ in et){const b=et[_];let tt=!1;for(let nt=0;nt<s.length;nt++)if(a[b.id]){_e.outputs.forEach(rt=>a[rt.id]=!0),tt=!0,c[_e.id]=!0;break}if(tt)break}}const d={};d[o.id]=!0;const g={};for(let j=i.length-1;j>=0;j--){const _e=i[j],et=_e.inputs;for(let _=0;_<_e.outputs.length;_++)if(d[_e.outputs[_].id]){for(const b in et)d[et[b].id]=!0,g[_e.id]=!0;break}}const $=[];for(let j=0;j<i.length;j++){const _e=i[j];if(c[_e.id]&&g[_e.id]){const et={};for(const b in _e.inputs){const tt=_e.inputs[b];a[tt.id]&&(et[b]=tt)}const _=Object.assign({},_e);_.inputs=et,_.outputs=_e.outputs,$.push(_)}}return $}function backpropagateGradients(i,s,o,a){for(let c=s.length-1;c>=0;c--){const d=s[c],g=[];if(d.outputs.forEach(j=>{const _e=i[j.id];_e!=null?g.push(_e):g.push(null)}),d.gradient==null)throw new Error(`Cannot compute gradient: gradient function not found for ${d.kernelName}.`);const $=d.gradient(g);for(const j in d.inputs){if(!(j in $))throw new Error(`Cannot backprop through input ${j}. Available gradients found: ${Object.keys($)}.`);const _e=o(()=>$[j]());if(_e.dtype!=="float32")throw new Error(`Error in gradient for op ${d.kernelName}. The gradient of input ${j} must have 'float32' dtype, but has '${_e.dtype}'`);const et=d.inputs[j];if(!arraysEqual(_e.shape,et.shape))throw new Error(`Error in gradient for op ${d.kernelName}. The gradient of input '${j}' has shape '${_e.shape}', which does not match the shape of the input '${et.shape}'`);if(i[et.id]==null)i[et.id]=_e;else{const _=i[et.id];i[et.id]=a(_,_e),_.dispose()}}}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const FORMAT_LIMIT_NUM_VALS=20,FORMAT_NUM_FIRST_LAST_VALS=3,FORMAT_NUM_SIG_DIGITS=7;function tensorToString(i,s,o,a){const c=computeStrides(s),d=computeMaxSizePerColumn(i,s,o,c),g=s.length,$=subTensorToString(i,s,o,c,d),j=["Tensor"];return a&&(j.push(`  dtype: ${o}`),j.push(`  rank: ${g}`),j.push(`  shape: [${s}]`),j.push("  values:")),j.push($.map(_e=>"    "+_e).join(`
`)),j.join(`
`)}function computeMaxSizePerColumn(i,s,o,a){const c=sizeFromShape(s),d=a[a.length-1],g=new Array(d).fill(0),$=s.length,j=o==="complex64"?createComplexTuples(i):i;if($>1)for(let _e=0;_e<c/d;_e++){const et=_e*d;for(let _=0;_<d;_++)g[_]=Math.max(g[_],valToString(j[et+_],0,o).length)}return g}function valToString(i,s,o){let a;return Array.isArray(i)?a=`${parseFloat(i[0].toFixed(FORMAT_NUM_SIG_DIGITS))} + ${parseFloat(i[1].toFixed(FORMAT_NUM_SIG_DIGITS))}j`:isString(i)?a=`'${i}'`:o==="bool"?a=boolNumToString(i):a=parseFloat(i.toFixed(FORMAT_NUM_SIG_DIGITS)).toString(),rightPad(a,s)}function boolNumToString(i){return i===0?"false":"true"}function subTensorToString(i,s,o,a,c,d=!0){const g=o==="complex64"?2:1,$=s[0],j=s.length;if(j===0){if(o==="complex64"){const rt=createComplexTuples(i);return[valToString(rt[0],0,o)]}return o==="bool"?[boolNumToString(i[0])]:[i[0].toString()]}if(j===1){if($>FORMAT_LIMIT_NUM_VALS){const st=FORMAT_NUM_FIRST_LAST_VALS*g;let ot=Array.from(i.slice(0,st)),it=Array.from(i.slice(($-FORMAT_NUM_FIRST_LAST_VALS)*g,$*g));return o==="complex64"&&(ot=createComplexTuples(ot),it=createComplexTuples(it)),["["+ot.map((at,lt)=>valToString(at,c[lt],o)).join(", ")+", ..., "+it.map((at,lt)=>valToString(at,c[$-FORMAT_NUM_FIRST_LAST_VALS+lt],o)).join(", ")+"]"]}return["["+(o==="complex64"?createComplexTuples(i):Array.from(i)).map((st,ot)=>valToString(st,c[ot],o)).join(", ")+"]"]}const _e=s.slice(1),et=a.slice(1),_=a[0]*g,b=[];if($>FORMAT_LIMIT_NUM_VALS){for(let rt=0;rt<FORMAT_NUM_FIRST_LAST_VALS;rt++){const st=rt*_,ot=st+_;b.push(...subTensorToString(i.slice(st,ot),_e,o,et,c,!1))}b.push("...");for(let rt=$-FORMAT_NUM_FIRST_LAST_VALS;rt<$;rt++){const st=rt*_,ot=st+_;b.push(...subTensorToString(i.slice(st,ot),_e,o,et,c,rt===$-1))}}else for(let rt=0;rt<$;rt++){const st=rt*_,ot=st+_;b.push(...subTensorToString(i.slice(st,ot),_e,o,et,c,rt===$-1))}const tt=j===2?",":"";b[0]="["+($>0?b[0]+tt:"");for(let rt=1;rt<b.length-1;rt++)b[rt]=" "+b[rt]+tt;let nt=`,
`;for(let rt=2;rt<j;rt++)nt+=`
`;return b[b.length-1]=" "+b[b.length-1]+"]"+(d?"":nt),b}function createComplexTuples(i){const s=[];for(let o=0;o<i.length;o+=2)s.push([i[o],i[o+1]]);return s}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class TensorBuffer{constructor(s,o,a){if(this.dtype=o,this.shape=s.slice(),this.size=sizeFromShape(s),a!=null){const c=a.length;assert$1(c===this.size,()=>`Length of values '${c}' does not match the size inferred by the shape '${this.size}'.`)}if(o==="complex64")throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=a||getArrayFromDType(o,this.size),this.strides=computeStrides(s)}set(s,...o){o.length===0&&(o=[0]),assert$1(o.length===this.rank,()=>`The number of provided coordinates (${o.length}) must match the rank (${this.rank})`);const a=this.locToIndex(o);this.values[a]=s}get(...s){s.length===0&&(s=[0]);let o=0;for(const c of s){if(c<0||c>=this.shape[o]){const d=`Requested out of range element at ${s}.   Buffer shape=${this.shape}`;throw new Error(d)}o++}let a=s[s.length-1];for(let c=0;c<s.length-1;++c)a+=this.strides[c]*s[c];return this.values[a]}locToIndex(s){if(this.rank===0)return 0;if(this.rank===1)return s[0];let o=s[s.length-1];for(let a=0;a<s.length-1;++a)o+=this.strides[a]*s[a];return o}indexToLoc(s){if(this.rank===0)return[];if(this.rank===1)return[s];const o=new Array(this.shape.length);for(let a=0;a<o.length-1;++a)o[a]=Math.floor(s/this.strides[a]),s-=o[a]*this.strides[a];return o[o.length-1]=s,o}get rank(){return this.shape.length}toTensor(){return trackerFn().makeTensor(this.values,this.shape,this.dtype)}}let trackerFn=null,opHandler$1=null;function setTensorTracker(i){trackerFn=i}function setOpHandler(i){opHandler$1=i}class Tensor{constructor(s,o,a,c){this.kept=!1,this.isDisposedInternal=!1,this.shape=s.slice(),this.dtype=o||"float32",this.size=sizeFromShape(s),this.strides=computeStrides(s),this.dataId=a,this.id=c,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const s=await this.data();return opHandler$1.buffer(this.shape,this.dtype,s)}bufferSync(){return opHandler$1.buffer(this.shape,this.dtype,this.dataSync())}async array(){const s=await this.data();return toNestedArray(this.shape,s,this.dtype==="complex64")}arraySync(){return toNestedArray(this.shape,this.dataSync(),this.dtype==="complex64")}async data(){this.throwIfDisposed();const s=trackerFn().read(this.dataId);if(this.dtype==="string"){const o=await s;try{return o.map(a=>decodeString(a))}catch{throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return s}dataToGPU(s){return this.throwIfDisposed(),trackerFn().readToGPU(this.dataId,s)}dataSync(){this.throwIfDisposed();const s=trackerFn().readSync(this.dataId);if(this.dtype==="string")try{return s.map(o=>decodeString(o))}catch{throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return s}async bytes(){this.throwIfDisposed();const s=await trackerFn().read(this.dataId);return this.dtype==="string"?s:new Uint8Array(s.buffer)}dispose(){this.isDisposed||(this.kerasMask&&this.kerasMask.dispose(),trackerFn().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(s=!1){return opHandler$1.print(this,s)}clone(){return this.throwIfDisposed(),opHandler$1.clone(this)}toString(s=!1){const o=this.dataSync();return tensorToString(o,this.shape,this.dtype,s)}cast(s){return this.throwIfDisposed(),opHandler$1.cast(this,s)}variable(s=!0,o,a){return this.throwIfDisposed(),trackerFn().makeVariable(this,s,o,a)}}Object.defineProperty(Tensor,Symbol.hasInstance,{value:i=>!!i&&i.data!=null&&i.dataSync!=null&&i.throwIfDisposed!=null});function getGlobalTensorClass(){return getGlobal("Tensor",()=>Tensor)}getGlobalTensorClass();class Variable extends Tensor{constructor(s,o,a,c){super(s.shape,s.dtype,s.dataId,c),this.trainable=o,this.name=a}assign(s){if(s.dtype!==this.dtype)throw new Error(`dtype of the new value (${s.dtype}) and previous value (${this.dtype}) must match`);if(!arraysEqual(s.shape,this.shape))throw new Error(`shape of the new value (${s.shape}) and previous value (${this.shape}) must match`);trackerFn().disposeTensor(this),this.dataId=s.dataId,trackerFn().incRef(this,null)}dispose(){trackerFn().disposeVariable(this),this.isDisposedInternal=!0}}Object.defineProperty(Variable,Symbol.hasInstance,{value:i=>i instanceof Tensor&&i.assign!=null&&i.assign instanceof Function});/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var Rank;(function(i){i.R0="R0",i.R1="R1",i.R2="R2",i.R3="R3",i.R4="R4",i.R5="R5",i.R6="R6"})(Rank||(Rank={}));var UpcastInt32AndMap;(function(i){i.float32="float32",i.int32="int32",i.bool="int32",i.complex64="complex64"})(UpcastInt32AndMap||(UpcastInt32AndMap={}));var UpcastBoolAndMap;(function(i){i.float32="float32",i.int32="int32",i.bool="bool",i.complex64="complex64"})(UpcastBoolAndMap||(UpcastBoolAndMap={}));var UpcastFloat32AndMap;(function(i){i.float32="float32",i.int32="float32",i.bool="float32",i.complex64="complex64"})(UpcastFloat32AndMap||(UpcastFloat32AndMap={}));var UpcastComplex64AndMap;(function(i){i.float32="complex64",i.int32="complex64",i.bool="complex64",i.complex64="complex64"})(UpcastComplex64AndMap||(UpcastComplex64AndMap={}));const upcastTypeMap={float32:UpcastFloat32AndMap,int32:UpcastInt32AndMap,bool:UpcastBoolAndMap,complex64:UpcastComplex64AndMap};function upcastType(i,s){if(i==="string"||s==="string"){if(i==="string"&&s==="string")return"string";throw new Error(`Can not upcast ${i} with ${s}`)}return upcastTypeMap[i][s]}function sumOutType(i){return upcastType(i,"int32")}function isWebGLData(i){return i!=null&&typeof i=="object"&&"texture"in i&&i.texture instanceof WebGLTexture}function isWebGPUData(i){return typeof GPUBuffer<"u"&&i!=null&&typeof i=="object"&&"buffer"in i&&i.buffer instanceof GPUBuffer}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function makeTypesMatch(i,s){if(i.dtype===s.dtype)return[i,s];const o=upcastType(i.dtype,s.dtype);return[i.cast(o),s.cast(o)]}function getTensorsInContainer(i){const s=[];return walkTensorContainer(i,s,new Set),s}function walkTensorContainer(i,s,o){if(i==null)return;if(i instanceof Tensor){s.push(i);return}if(!isIterable(i))return;const a=i;for(const c in a){const d=a[c];o.has(d)||(o.add(d),walkTensorContainer(d,s,o))}}function isIterable(i){return Array.isArray(i)||typeof i=="object"}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function isRegisteredKernelInvocation(i){return i.kernelName!=null}class EngineState{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map(s=>s.name)))}}}dispose(){for(const s in this.registeredVariables)this.registeredVariables[s].dispose()}}class Engine{constructor(s){this.ENV=s,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new EngineState}async ready(){if(this.pendingBackendInit!=null)return this.pendingBackendInit.then(()=>{});if(this.backendInstance!=null)return;const s=this.getSortedBackends();for(let o=0;o<s.length;o++){const a=s[o];if(await this.initializeBackend(a).success){await this.setBackend(a);return}}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(this.pendingBackendInit!=null)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(this.backendInstance==null){const{name:s,asyncInit:o}=this.initializeBackendsAndReturnBest();if(o)throw new Error(`The highest priority backend '${s}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(s)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(s){if(!(s in this.registry))if(s in this.registryFactory){const{asyncInit:o}=this.initializeBackend(s);if(o)return null}else return null;return this.registry[s]}findBackendFactory(s){return s in this.registryFactory?this.registryFactory[s].factory:null}registerBackend(s,o,a=1){return s in this.registryFactory?(warn(`${s} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[s]={factory:o,priority:a},!0)}async setBackend(s){if(this.registryFactory[s]==null)throw new Error(`Backend name '${s}' not found in registry`);if(this.backendName=s,this.registry[s]==null){this.backendInstance=null;const{success:o,asyncInit:a}=this.initializeBackend(s);if(!(a?await o:o))return!1}return this.backendInstance=this.registry[s],this.setupRegisteredKernels(),this.profiler=new Profiler(this.backendInstance),!0}setupRegisteredKernels(){getKernelsForBackend(this.backendName).forEach(o=>{o.setupFunc!=null&&o.setupFunc(this.backendInstance)})}disposeRegisteredKernels(s){getKernelsForBackend(s).forEach(a=>{a.disposeFunc!=null&&a.disposeFunc(this.registry[s])})}initializeBackend(s){const o=this.registryFactory[s];if(o==null)throw new Error(`Cannot initialize backend ${s}, no registration found.`);try{const a=o.factory();if(a&&!(a instanceof KernelBackend)&&typeof a.then=="function"){const c=++this.pendingBackendInitId,d=a.then(g=>c<this.pendingBackendInitId?!1:(this.registry[s]=g,this.pendingBackendInit=null,!0)).catch(g=>(c<this.pendingBackendInitId||(this.pendingBackendInit=null,warn(`Initialization of backend ${s} failed`),warn(g.stack||g.message)),!1));return this.pendingBackendInit=d,{success:d,asyncInit:!0}}else return this.registry[s]=a,{success:!0,asyncInit:!1}}catch(a){return warn(`Initialization of backend ${s} failed`),warn(a.stack||a.message),{success:!1,asyncInit:!1}}}removeBackend(s){if(!(s in this.registryFactory))throw new Error(`${s} backend not found in registry`);this.backendName===s&&this.pendingBackendInit!=null&&this.pendingBackendInitId++,s in this.registry&&(this.disposeRegisteredKernels(s),this.registry[s].dispose(),delete this.registry[s]),delete this.registryFactory[s],this.backendName===s&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(Object.keys(this.registryFactory).length===0)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort((s,o)=>this.registryFactory[o].priority-this.registryFactory[s].priority)}initializeBackendsAndReturnBest(){const s=this.getSortedBackends();for(let o=0;o<s.length;o++){const a=s[o],{success:c,asyncInit:d}=this.initializeBackend(a);if(d||c)return{name:a,asyncInit:d}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(s,o){const a=this.state.tensorInfo.get(o),c=a.backend,d=this.readSync(o),g=c.refCount(o);c.disposeData(o,!0),a.backend=s,s.move(o,d,a.shape,a.dtype,g),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(s,o){let a=null;if(o==null){if(typeof s!="function")throw new Error("Please provide a function to tidy()");o=s}else{if(typeof s!="string"&&!(s instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if(typeof o!="function")throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");a=s}let c;return this.scopedRun(()=>this.startScope(a),()=>this.endScope(c),()=>(c=o(),c instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),c))}scopedRun(s,o,a){s();try{const c=a();return o(),c}catch(c){throw o(),c}}nextTensorId(){return Engine.nextTensorId++}nextVariableId(){return Engine.nextVariableId++}clone(s){const o=ENGINE.runKernel(Identity$1,{x:s}),a={x:s},c=g=>({x:()=>{const $="float32",j={x:g},_e={dtype:$};return ENGINE.runKernel(Cast,j,_e)}}),d=[];return this.addTapeNode(this.state.activeScope.name,a,[o],c,d,{}),o}runKernel(s,o,a){if(this.backendName==null&&this.backend,!(getKernel(s,this.backendName)!=null))throw new Error(`Kernel '${s}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:s,inputs:o,attrs:a})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(s,o,a){const c=this.backend.numDataIds();let d=0;a.forEach(j=>{d+=j.dtype==="complex64"?3:1});const g=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],$=c-o-d-g;if($>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${$} data ids) after running '${s}'`)}runKernelFunc(s){let o,a=[];const c=this.isTapeOn(),d=this.state.numBytes,g=this.state.numTensors;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0);let $;this.backendName==null&&this.backend;let j;const _e=isRegisteredKernelInvocation(s)?s.kernelName:this.state.activeScope!=null?this.state.activeScope.name:"";if(isRegisteredKernelInvocation(s)){const{kernelName:nt,inputs:rt,attrs:st}=s;this.backendName==null&&this.backend;const ot=getKernel(nt,this.backendName);assert$1(ot!=null,()=>`Cannot find registered kernel '${nt}' for backend '${this.backendName}'`),$=()=>{const it=this.backend.numDataIds();j=ot.kernelFunc({inputs:rt,attrs:st,backend:this.backend});const at=Array.isArray(j)?j:[j];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(nt,it,at);const lt=at.map(ut=>ut.rank!=null?ut:this.makeTensorFromTensorInfo(ut));if(c){const ut=this.getTensorsForGradient(nt,rt,lt);a=this.saveTensorsForBackwardMode(ut)}return lt}}else{const{forwardFunc:nt}=s,rt=st=>{c&&(a=st.map(ot=>this.keep(this.clone(ot))))};$=()=>{const st=this.backend.numDataIds();j=this.tidy(()=>nt(this.backend,rt));const ot=Array.isArray(j)?j:[j];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(_e,st,ot),ot}}const{inputs:et,attrs:_}=s,b=isRegisteredKernelInvocation(s)?null:s.backwardsFunc;let tt;return this.scopedRun(()=>this.state.kernelDepth++,()=>this.state.kernelDepth--,()=>{!this.ENV.getBool("DEBUG")&&!this.state.profiling?o=$():(tt=this.profiler.profileKernel(_e,et,()=>$()),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(tt),o=tt.outputs)}),c&&this.addTapeNode(_e,et,o,b,a,_),this.state.profiling&&this.state.activeProfile.kernels.push({name:_e,bytesAdded:this.state.numBytes-d,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-g,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(et).map(nt=>et[nt]!=null?et[nt].shape:null),outputShapes:o.map(nt=>nt.shape),kernelTimeMs:tt.timeMs,extraInfo:tt.extraInfo}),Array.isArray(j)?o:o[0]}saveTensorsForBackwardMode(s){return s.map(a=>this.keep(this.clone(a)))}getTensorsForGradient(s,o,a){const c=getGradient(s);if(c!=null){const d=c.inputsToSave||[],g=c.outputsToSave||[];let $;c.saveAllInputs?(assert$1(Array.isArray(o),()=>"saveAllInputs is true, expected inputs to be an array."),$=Object.keys(o).map(_e=>o[_e])):$=d.map(_e=>o[_e]);const j=a.filter((_e,et)=>g[et]);return $.concat(j)}return[]}makeTensor(s,o,a,c){if(s==null)throw new Error("Values passed to engine.makeTensor() are null");a=a||"float32",c=c||this.backend;let d=s;a==="string"&&isString(s[0])&&(d=s.map(j=>encodeString(j)));const g=c.write(d,o,a),$=new Tensor(o,a,g,this.nextTensorId());if(this.trackTensor($,c),a==="string"){const j=this.state.tensorInfo.get(g),_e=bytesFromStringArray(d);this.state.numBytes+=_e-j.bytes,j.bytes=_e}return $}makeTensorFromDataId(s,o,a,c){a=a||"float32";const d={dataId:s,shape:o,dtype:a};return this.makeTensorFromTensorInfo(d,c)}makeTensorFromTensorInfo(s,o){const{dataId:a,shape:c,dtype:d}=s,g=new Tensor(c,d,a,this.nextTensorId());return this.trackTensor(g,o),g}makeVariable(s,o=!0,a,c){a=a||this.nextVariableId().toString(),c!=null&&c!==s.dtype&&(s=s.cast(c));const d=new Variable(s,o,a,this.nextTensorId());if(this.state.registeredVariables[d.name]!=null)throw new Error(`Variable with name ${d.name} was already registered`);return this.state.registeredVariables[d.name]=d,this.incRef(d,this.backend),d}trackTensor(s,o){this.state.numTensors++,s.dtype==="string"&&this.state.numStringTensors++;let a=0;s.dtype!=="complex64"&&s.dtype!=="string"&&(a=s.size*bytesPerElement(s.dtype)),this.state.numBytes+=a,this.state.tensorInfo.has(s.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(s.dataId,{backend:o||this.backend,dtype:s.dtype,shape:s.shape,bytes:a})),s instanceof Variable||this.track(s)}incRef(s,o){this.trackTensor(s,o),this.backend.incRef(s.dataId)}removeDataId(s,o){this.state.tensorInfo.has(s)&&this.state.tensorInfo.get(s).backend===o&&(this.state.tensorInfo.delete(s),this.state.numDataBuffers--)}disposeTensor(s){if(!this.state.tensorInfo.has(s.dataId))return;const o=this.state.tensorInfo.get(s.dataId);if(this.state.numTensors--,s.dtype==="string"&&(this.state.numStringTensors--,this.state.numBytes-=o.bytes),s.dtype!=="complex64"&&s.dtype!=="string"){const a=s.size*bytesPerElement(s.dtype);this.state.numBytes-=a}o.backend.disposeData(s.dataId)&&this.removeDataId(s.dataId,o.backend)}disposeVariables(){for(const s in this.state.registeredVariables){const o=this.state.registeredVariables[s];this.disposeVariable(o)}}disposeVariable(s){this.disposeTensor(s),this.state.registeredVariables[s.name]!=null&&delete this.state.registeredVariables[s.name]}memory(){const s=this.backend.memory();return s.numTensors=this.state.numTensors,s.numDataBuffers=this.state.numDataBuffers,s.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(s.unreliable=!0,s.reasons==null&&(s.reasons=[]),s.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),s}async profile(s){this.state.profiling=!0;const o=this.state.numBytes,a=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await s(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map(c=>c.totalBytesSnapshot)),this.state.activeProfile.newBytes=this.state.numBytes-o,this.state.activeProfile.newTensors=this.state.numTensors-a;for(const c of this.state.activeProfile.kernels)c.kernelTimeMs=await c.kernelTimeMs,c.extraInfo=await c.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&this.state.kernelDepth===0}addTapeNode(s,o,a,c,d,g){const $={id:this.state.nextTapeNodeId++,kernelName:s,inputs:o,outputs:a,saved:d},j=getGradient(s);j!=null&&(c=j.gradFunc),c!=null&&($.gradient=_e=>(_e=_e.map((et,_)=>{if(et==null){const b=a[_],tt=makeZerosTypedArray(b.size,b.dtype);return this.makeTensor(tt,b.shape,b.dtype)}return et}),c(_e.length>1?_e:_e[0],d,g))),this.state.activeTape.push($)}keep(s){return s.kept=!0,s}startTape(){this.state.gradientDepth===0&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(s){const o={track:[],name:"unnamed scope",id:this.state.nextScopeId++};s&&(o.name=s),this.state.scopeStack.push(o),this.state.activeScope=o}endScope(s){const o=getTensorsInContainer(s),a=new Set(o.map(d=>d.id));for(let d=0;d<this.state.activeScope.track.length;d++){const g=this.state.activeScope.track[d];!g.kept&&!a.has(g.id)&&g.dispose()}const c=this.state.scopeStack.pop();this.state.activeScope=this.state.scopeStack.length===0?null:this.state.scopeStack[this.state.scopeStack.length-1],o.forEach(d=>{!d.kept&&d.scopeId===c.id&&this.track(d)})}gradients(s,o,a,c=!1){if(assert$1(o.length>0,()=>"gradients() received an empty list of xs."),a!=null&&a.dtype!=="float32")throw new Error(`dy must have 'float32' dtype, but has '${a.dtype}'`);const d=this.scopedRun(()=>this.startTape(),()=>this.endTape(),()=>this.tidy("forward",s));assert$1(d instanceof Tensor,()=>"The result y returned by f() must be a tensor.");const g=getFilteredNodesXToY(this.state.activeTape,o,d);if(!c&&g.length===0&&o.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",()=>{const $={};$[d.id]=a??ones$1(d.shape),backpropagateGradients($,g,_e=>this.tidy(_e),add$2);const j=o.map(_e=>$[_e.id]);return this.state.gradientDepth===0&&(this.state.activeTape.forEach(_e=>{for(const et of _e.saved)et.dispose()}),this.state.activeTape=null),{value:d,grads:j}})}customGrad(s){return assert$1(isFunction(s),()=>"The f passed in customGrad(f) must be a function."),(...o)=>{assert$1(o.every($=>$ instanceof Tensor),()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors");let a;const c={};o.forEach(($,j)=>{c[j]=$});const d=($,j)=>(a=s(...o,j),assert$1(a.value instanceof Tensor,()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor"),assert$1(isFunction(a.gradFunc),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function."),a.value),g=($,j)=>{const _e=a.gradFunc($,j),et=Array.isArray(_e)?_e:[_e];assert$1(et.length===o.length,()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...)."),assert$1(et.every(b=>b instanceof Tensor),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors.");const _={};return et.forEach((b,tt)=>{_[tt]=()=>b}),_};return this.runKernelFunc({forwardFunc:d,backwardsFunc:g,inputs:c})}}readSync(s){return this.state.tensorInfo.get(s).backend.readSync(s)}read(s){return this.state.tensorInfo.get(s).backend.read(s)}readToGPU(s,o){return this.state.tensorInfo.get(s).backend.readToGPU(s,o)}async time(s){const o=now(),a=await this.backend.time(s);return a.wallMs=now()-o,a}track(s){return this.state.activeScope!=null&&(s.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(s)),s}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new EngineState;for(const s in this.registry)this.disposeRegisteredKernels(s),this.registry[s].dispose(),delete this.registry[s];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}Engine.nextTensorId=0;Engine.nextVariableId=0;function ones$1(i){const s=makeOnesTypedArray(sizeFromShape(i),"float32");return ENGINE.makeTensor(s,i,"float32")}function getOrMakeEngine(){const i=getGlobalNamespace();if(i._tfengine==null){const s=new Environment(i);i._tfengine=new Engine(s)}return setEnvironmentGlobal(i._tfengine.ENV),setTensorTracker(()=>i._tfengine),i._tfengine}const ENGINE=getOrMakeEngine();function add$2(i,s){const o={a:i,b:s};return ENGINE.runKernel(Add$1,o)}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _isNavigatorDefined(){return typeof navigator<"u"&&navigator!=null}function isMobile(i){if(i||_isNavigatorDefined()){if(i||(i=navigator),i.product==="ReactNative")return!0;const s=i.userAgent||i.vendor||(typeof window<"u"?window.opera:"");if(!s){const o=i;return o.userAgentData&&o.userAgentData.mobile}return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(s)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(s.substr(0,4))}return!1}function isBrowser(){return typeof window<"u"&&window.document!=null||typeof WorkerGlobalScope<"u"}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ENV$3=env();ENV$3.registerFlag("DEBUG",()=>!1,i=>{i&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")});ENV$3.registerFlag("IS_BROWSER",()=>isBrowser());ENV$3.registerFlag("IS_NODE",()=>typeof process<"u"&&typeof process.versions<"u"&&typeof process.versions.node<"u");ENV$3.registerFlag("IS_CHROME",()=>typeof navigator<"u"&&navigator!=null&&navigator.userAgent!=null&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor));ENV$3.registerFlag("IS_SAFARI",()=>typeof navigator<"u"&&navigator!=null&&navigator.userAgent!=null&&/Safari/.test(navigator.userAgent)&&/Apple/.test(navigator.vendor));ENV$3.registerFlag("PROD",()=>!1);ENV$3.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",()=>ENV$3.getBool("DEBUG"));ENV$3.registerFlag("DEPRECATION_WARNINGS_ENABLED",()=>!0);ENV$3.registerFlag("IS_TEST",()=>!1);ENV$3.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",()=>ENV$3.getBool("DEBUG"));ENV$3.registerFlag("WRAP_TO_IMAGEBITMAP",()=>!1);ENV$3.registerFlag("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU",()=>!1);ENV$3.registerFlag("USE_SETTIMEOUTCUSTOM",()=>!1);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function inferShape(i,s){let o=i;if(isTypedArray(i))return s==="string"?[]:[i.length];if(isWebGLData(i)){const c=i.channels||"RGBA";return[i.height,i.width*c.length]}else if(isWebGPUData(i))return[i.buffer.size/(s==null?4:bytesPerElement(s))];if(!Array.isArray(i))return[];const a=[];for(;Array.isArray(o)||isTypedArray(o)&&s!=="string";)a.push(o.length),o=o[0];return Array.isArray(i)&&env().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&deepAssertShapeConsistency(i,a,[]),a}function deepAssertShapeConsistency(i,s,o){if(o=o||[],!Array.isArray(i)&&!isTypedArray(i)){assert$1(s.length===0,()=>`Element arr[${o.join("][")}] is a primitive, but should be an array/TypedArray of ${s[0]} elements`);return}assert$1(s.length>0,()=>`Element arr[${o.join("][")}] should be a primitive, but is an array of ${i.length} elements`),assert$1(i.length===s[0],()=>`Element arr[${o.join("][")}] should have ${s[0]} elements, but has ${i.length} elements`);const a=s.slice(1);for(let c=0;c<i.length;++c)deepAssertShapeConsistency(i[c],a,o.concat(c))}function assertDtype(i,s,o,a){if(i!=="string_or_numeric"){if(i==null)throw new Error("Expected dtype cannot be null.");if(i!=="numeric"&&i!==s||i==="numeric"&&s==="string")throw new Error(`Argument '${o}' passed to '${a}' must be ${i} tensor, but got ${s} tensor`)}}function convertToTensor(i,s,o,a="numeric"){if(i instanceof getGlobalTensorClass())return assertDtype(a,i.dtype,s,o),i;let c=inferDtype(i);if(c!=="string"&&["bool","int32","float32"].indexOf(a)>=0&&(c=a),assertDtype(a,c,s,o),i==null||!isTypedArray(i)&&!Array.isArray(i)&&typeof i!="number"&&typeof i!="boolean"&&typeof i!="string"){const j=i==null?"null":i.constructor.name;throw new Error(`Argument '${s}' passed to '${o}' must be a Tensor or TensorLike, but got '${j}'`)}const d=inferShape(i,c);!isTypedArray(i)&&!Array.isArray(i)&&(i=[i]);const $=c!=="string"?toTypedArray(i,c):flatten$1(i,[],!0);return ENGINE.makeTensor($,d,c)}function convertToTensorArray(i,s,o,a="numeric"){if(!Array.isArray(i))throw new Error(`Argument ${s} passed to ${o} must be a \`Tensor[]\` or \`TensorLike[]\``);return i.map((d,g)=>convertToTensor(d,`${s}[${g}]`,o,a))}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const OP_SCOPE_SUFFIX="__op";function op(i){const s=Object.keys(i);if(s.length!==1)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${s.length} keys.`);let o=s[0];const a=i[o];o.endsWith("_")&&(o=o.substring(0,o.length-1)),o=o+OP_SCOPE_SUFFIX;const c=(...d)=>{ENGINE.startScope(o);try{const g=a(...d);return isPromise(g)&&console.error("Cannot return a Promise inside of tidy."),ENGINE.endScope(g),g}catch(g){throw ENGINE.endScope(null),g}};return Object.defineProperty(c,"name",{value:o,configurable:!0}),c}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function complex_(i,s){const o=convertToTensor(i,"real","complex"),a=convertToTensor(s,"imag","complex");assertShapesMatch(o.shape,a.shape,`real and imag shapes, ${o.shape} and ${a.shape}, must match in call to tf.complex().`);const c={real:o,imag:a};return ENGINE.runKernel(Complex,c)}const complex$2=op({complex_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function makeTensor(i,s,o,a){if(a==null)a=inferDtype(i);else if(a==="complex64")throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(isWebGPUData(i)||isWebGLData(i)){if(a!=="float32"&&a!=="int32")throw new Error(`Creating tensor from GPU data only supports 'float32'|'int32' dtype, while the dtype is ${a}.`);return ENGINE.backend.createTensorFromGPUData(i,s||o,a)}if(!isTypedArray(i)&&!Array.isArray(i)&&typeof i!="number"&&typeof i!="boolean"&&typeof i!="string")throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(s!=null){assertNonNegativeIntegerDimensions(s);const c=sizeFromShape(s),d=sizeFromShape(o);assert$1(c===d,()=>`Based on the provided shape, [${s}], the tensor should have ${c} values but has ${d}`);for(let g=0;g<o.length;++g){const $=o[g],j=g===o.length-1?$!==sizeFromShape(s.slice(g)):!0;assert$1(o[g]===s[g]||!j,()=>`Error creating a new Tensor. Inferred shape (${o}) does not match the provided shape (${s}). `)}}return!isTypedArray(i)&&!Array.isArray(i)&&(i=[i]),s=s||o,i=a!=="string"?toTypedArray(i,a):flatten$1(i,[],!0),ENGINE.makeTensor(i,s,a)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tensor(i,s,o){const a=inferShape(i,o);return makeTensor(i,s,a,o)}class CompositeArrayBuffer{static join(s){return new CompositeArrayBuffer(s).slice()}constructor(s){if(this.shards=[],this.previousShardIndex=0,s==null||(s instanceof Array||(s=[s]),s=s.map(a=>isTypedArray(a)?a.buffer:a),s.length===0))return;this.bufferUniformSize=s[0].byteLength;let o=0;for(let a=0;a<s.length;a++){const c=s[a];a!==s.length-1&&c.byteLength!==this.bufferUniformSize&&(this.bufferUniformSize=void 0);const d=o+c.byteLength;this.shards.push({buffer:c,start:o,end:d}),o=d}this.shards.length===0&&(this.byteLength=0),this.byteLength=this.shards[this.shards.length-1].end}slice(s=0,o=this.byteLength){if(this.shards.length===0)return new ArrayBuffer(0);if(s=isNaN(Number(s))?0:s,o=isNaN(Number(o))?0:o,s=Math.max(0,s),o=Math.min(this.byteLength,o),o<=s)return new ArrayBuffer(0);const a=this.findShardForByte(s);if(a===-1)throw new Error(`Could not find start shard for byte ${s}`);const c=o-s,d=new ArrayBuffer(c),g=new Uint8Array(d);let $=0;for(let j=a;j<this.shards.length;j++){const _e=this.shards[j],_=s+$-_e.start,b=$,nt=Math.min(o,_e.end)-_e.start,rt=new Uint8Array(_e.buffer,_,nt-_);if(g.set(rt,b),$+=rt.length,o<_e.end)break}return d}findShardForByte(s){if(this.shards.length===0||s<0||s>=this.byteLength)return-1;if(this.bufferUniformSize!=null)return this.previousShardIndex=Math.floor(s/this.bufferUniformSize),this.previousShardIndex;function o(c){return s<c.start?-1:s>=c.end?1:0}if(o(this.shards[this.previousShardIndex])===0)return this.previousShardIndex;const a=search(this.shards,o);return a===-1?-1:(this.previousShardIndex=a,this.previousShardIndex)}}function search(i,s){let o=0,a=i.length;for(;o<=a;){const c=Math.floor((a-o)/2)+o,d=s(i[c]);if(d===0)return c;d<0?a=c:o=c+1}return-1}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function engine(){return ENGINE}function memory(){return ENGINE.memory()}function tidy(i,s){return ENGINE.tidy(i,s)}function dispose(i){getTensorsInContainer(i).forEach(o=>o.dispose())}function keep(i){return ENGINE.keep(i)}function registerBackend(i,s,o=1){return ENGINE.registerBackend(i,s,o)}function backend(){return ENGINE.backend}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const NUM_BYTES_STRING_LENGTH=4;async function encodeWeights(i,s){const o=[],a=[],c=Array.isArray(i)?i.map(g=>g.name):Object.keys(i);for(let g=0;g<c.length;++g){const $=c[g],j=Array.isArray(i)?i[g].tensor:i[$];if(j.dtype!=="float32"&&j.dtype!=="int32"&&j.dtype!=="bool"&&j.dtype!=="string"&&j.dtype!=="complex64")throw new Error(`Unsupported dtype in weight '${$}': ${j.dtype}`);const _e={name:$,shape:j.shape,dtype:j.dtype};if(j.dtype==="string"){const et=new Promise(async _=>{const b=await j.bytes(),tt=b.reduce((st,ot)=>st+ot.length,0)+NUM_BYTES_STRING_LENGTH*b.length,nt=new Uint8Array(tt);let rt=0;for(let st=0;st<b.length;st++){const ot=b[st],it=new Uint8Array(new Uint32Array([ot.length]).buffer);nt.set(it,rt),rt+=NUM_BYTES_STRING_LENGTH,nt.set(ot,rt),rt+=ot.length}_(nt)});a.push(et)}else a.push(j.data());s!=null&&(_e.group=s),o.push(_e)}const d=await Promise.all(a);return{data:concatenateTypedArrays(d),specs:o}}function concatenateTypedArrays(i){if(i===null)throw new Error(`Invalid input value: ${JSON.stringify(i)}`);let s=0;const o=[];i.forEach(d=>{if(s+=d.byteLength,o.push(d.byteLength===d.buffer.byteLength?d:new d.constructor(d)),!(d instanceof Float32Array||d instanceof Int32Array||d instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${d.constructor.name}`)});const a=new Uint8Array(s);let c=0;return o.forEach(d=>{a.set(new Uint8Array(d.buffer),c),c+=d.byteLength}),a.buffer}const useNodeBuffer=typeof Buffer<"u"&&(typeof Blob>"u"||typeof atob>"u"||typeof btoa>"u");function stringByteLength(i){return useNodeBuffer?Buffer.byteLength(i,"utf8"):new Blob([i]).size}function arrayBufferToBase64String(i){if(useNodeBuffer)return Buffer.from(i).toString("base64");const s=new Uint8Array(i);let o="";for(let a=0,c=s.length;a<c;a++)o+=String.fromCharCode(s[a]);return btoa(o)}function base64StringToArrayBuffer(i){if(useNodeBuffer){const a=Buffer.from(i,"base64");return a.buffer.slice(a.byteOffset,a.byteOffset+a.byteLength)}const s=atob(i),o=new Uint8Array(s.length);for(let a=0;a<s.length;++a)o.set([s.charCodeAt(a)],a);return o.buffer}function concatenateArrayBuffers(i){return CompositeArrayBuffer.join(i)}function getModelArtifactsInfoForJSON(i){if(i.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:i.modelTopology==null?0:stringByteLength(JSON.stringify(i.modelTopology)),weightSpecsBytes:i.weightSpecs==null?0:stringByteLength(JSON.stringify(i.weightSpecs)),weightDataBytes:i.weightData==null?0:new CompositeArrayBuffer(i.weightData).byteLength}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class IORouterRegistry{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return IORouterRegistry.instance==null&&(IORouterRegistry.instance=new IORouterRegistry),IORouterRegistry.instance}static registerSaveRouter(s){IORouterRegistry.getInstance().saveRouters.push(s)}static registerLoadRouter(s){IORouterRegistry.getInstance().loadRouters.push(s)}static getSaveHandlers(s){return IORouterRegistry.getHandlers(s,"save")}static getLoadHandlers(s,o){return IORouterRegistry.getHandlers(s,"load",o)}static getHandlers(s,o,a){const c=[];return(o==="load"?IORouterRegistry.getInstance().loadRouters:IORouterRegistry.getInstance().saveRouters).forEach(g=>{const $=g(s,a);$!==null&&c.push($)}),c}}const getSaveHandlers=i=>IORouterRegistry.getSaveHandlers(i);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const DATABASE_NAME="tensorflowjs",DATABASE_VERSION=1,MODEL_STORE_NAME="models_store",INFO_STORE_NAME="model_info_store";function getIndexedDBFactory(){if(!env().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const i=typeof window>"u"?self:window,s=i.indexedDB||i.mozIndexedDB||i.webkitIndexedDB||i.msIndexedDB||i.shimIndexedDB;if(s==null)throw new Error("The current browser does not appear to support IndexedDB.");return s}function setUpDatabase(i){const s=i.result;s.createObjectStore(MODEL_STORE_NAME,{keyPath:"modelPath"}),s.createObjectStore(INFO_STORE_NAME,{keyPath:"modelPath"})}class BrowserIndexedDB{constructor(s){if(this.indexedDB=getIndexedDBFactory(),s==null||!s)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=s}async save(s){if(s.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,s)}async load(){return this.databaseAction(this.modelPath)}databaseAction(s,o){return new Promise((a,c)=>{const d=this.indexedDB.open(DATABASE_NAME,DATABASE_VERSION);d.onupgradeneeded=()=>setUpDatabase(d),d.onsuccess=()=>{const g=d.result;if(o==null){const $=g.transaction(MODEL_STORE_NAME,"readonly"),_e=$.objectStore(MODEL_STORE_NAME).get(this.modelPath);_e.onsuccess=()=>{if(_e.result==null)return g.close(),c(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));a(_e.result.modelArtifacts)},_e.onerror=et=>(g.close(),c(_e.error)),$.oncomplete=()=>g.close()}else{o.weightData=CompositeArrayBuffer.join(o.weightData);const $=getModelArtifactsInfoForJSON(o),j=g.transaction(INFO_STORE_NAME,"readwrite");let _e=j.objectStore(INFO_STORE_NAME),et;try{et=_e.put({modelPath:this.modelPath,modelArtifactsInfo:$})}catch(b){return c(b)}let _;et.onsuccess=()=>{_=g.transaction(MODEL_STORE_NAME,"readwrite");const b=_.objectStore(MODEL_STORE_NAME);let tt;try{tt=b.put({modelPath:this.modelPath,modelArtifacts:o,modelArtifactsInfo:$})}catch(nt){return c(nt)}tt.onsuccess=()=>a({modelArtifactsInfo:$}),tt.onerror=nt=>{_e=j.objectStore(INFO_STORE_NAME);const rt=_e.delete(this.modelPath);rt.onsuccess=()=>(g.close(),c(tt.error)),rt.onerror=st=>(g.close(),c(tt.error))}},et.onerror=b=>(g.close(),c(et.error)),j.oncomplete=()=>{_==null?g.close():_.oncomplete=()=>g.close()}}},d.onerror=g=>c(d.error)})}}BrowserIndexedDB.URL_SCHEME="indexeddb://";const indexedDBRouter=i=>env().getBool("IS_BROWSER")&&!Array.isArray(i)&&i.startsWith(BrowserIndexedDB.URL_SCHEME)?browserIndexedDB(i.slice(BrowserIndexedDB.URL_SCHEME.length)):null;IORouterRegistry.registerSaveRouter(indexedDBRouter);IORouterRegistry.registerLoadRouter(indexedDBRouter);function browserIndexedDB(i){return new BrowserIndexedDB(i)}function maybeStripScheme$1(i){return i.startsWith(BrowserIndexedDB.URL_SCHEME)?i.slice(BrowserIndexedDB.URL_SCHEME.length):i}class BrowserIndexedDBManager{constructor(){this.indexedDB=getIndexedDBFactory()}async listModels(){return new Promise((s,o)=>{const a=this.indexedDB.open(DATABASE_NAME,DATABASE_VERSION);a.onupgradeneeded=()=>setUpDatabase(a),a.onsuccess=()=>{const c=a.result,d=c.transaction(INFO_STORE_NAME,"readonly"),$=d.objectStore(INFO_STORE_NAME).getAll();$.onsuccess=()=>{const j={};for(const _e of $.result)j[_e.modelPath]=_e.modelArtifactsInfo;s(j)},$.onerror=j=>(c.close(),o($.error)),d.oncomplete=()=>c.close()},a.onerror=c=>o(a.error)})}async removeModel(s){return s=maybeStripScheme$1(s),new Promise((o,a)=>{const c=this.indexedDB.open(DATABASE_NAME,DATABASE_VERSION);c.onupgradeneeded=()=>setUpDatabase(c),c.onsuccess=()=>{const d=c.result,g=d.transaction(INFO_STORE_NAME,"readwrite"),$=g.objectStore(INFO_STORE_NAME),j=$.get(s);let _e;j.onsuccess=()=>{if(j.result==null)return d.close(),a(new Error(`Cannot find model with path '${s}' in IndexedDB.`));{const et=$.delete(s),_=()=>{_e=d.transaction(MODEL_STORE_NAME,"readwrite");const tt=_e.objectStore(MODEL_STORE_NAME).delete(s);tt.onsuccess=()=>o(j.result.modelArtifactsInfo),tt.onerror=nt=>a(j.error)};et.onsuccess=_,et.onerror=b=>(_(),d.close(),a(j.error))}},j.onerror=et=>(d.close(),a(j.error)),g.oncomplete=()=>{_e==null?d.close():_e.oncomplete=()=>d.close()}},c.onerror=d=>a(c.error)})}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const PATH_SEPARATOR="/",PATH_PREFIX="tensorflowjs_models",INFO_SUFFIX="info",MODEL_TOPOLOGY_SUFFIX="model_topology",WEIGHT_SPECS_SUFFIX="weight_specs",WEIGHT_DATA_SUFFIX="weight_data",MODEL_METADATA_SUFFIX="model_metadata";function getModelKeys(i){return{info:[PATH_PREFIX,i,INFO_SUFFIX].join(PATH_SEPARATOR),topology:[PATH_PREFIX,i,MODEL_TOPOLOGY_SUFFIX].join(PATH_SEPARATOR),weightSpecs:[PATH_PREFIX,i,WEIGHT_SPECS_SUFFIX].join(PATH_SEPARATOR),weightData:[PATH_PREFIX,i,WEIGHT_DATA_SUFFIX].join(PATH_SEPARATOR),modelMetadata:[PATH_PREFIX,i,MODEL_METADATA_SUFFIX].join(PATH_SEPARATOR)}}function removeItems(i){for(const s of Object.values(i))window.localStorage.removeItem(s)}function getModelPathFromKey(i){const s=i.split(PATH_SEPARATOR);if(s.length<3)throw new Error(`Invalid key format: ${i}`);return s.slice(1,s.length-1).join(PATH_SEPARATOR)}function maybeStripScheme(i){return i.startsWith(BrowserLocalStorage.URL_SCHEME)?i.slice(BrowserLocalStorage.URL_SCHEME.length):i}class BrowserLocalStorage{constructor(s){if(!env().getBool("IS_BROWSER")||typeof window>"u"||typeof window.localStorage>"u")throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,s==null||!s)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=s,this.keys=getModelKeys(this.modelPath)}async save(s){if(s.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const o=JSON.stringify(s.modelTopology),a=JSON.stringify(s.weightSpecs),c=getModelArtifactsInfoForJSON(s),d=CompositeArrayBuffer.join(s.weightData);try{this.LS.setItem(this.keys.info,JSON.stringify(c)),this.LS.setItem(this.keys.topology,o),this.LS.setItem(this.keys.weightSpecs,a),this.LS.setItem(this.keys.weightData,arrayBufferToBase64String(d));const g={format:s.format,generatedBy:s.generatedBy,convertedBy:s.convertedBy,signature:s.signature!=null?s.signature:void 0,userDefinedMetadata:s.userDefinedMetadata!=null?s.userDefinedMetadata:void 0,modelInitializer:s.modelInitializer!=null?s.modelInitializer:void 0,initializerSignature:s.initializerSignature!=null?s.initializerSignature:void 0,trainingConfig:s.trainingConfig!=null?s.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(g)),{modelArtifactsInfo:c}}catch{throw removeItems(this.keys),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${c.modelTopologyBytes}, weightSpecsBytes=${c.weightSpecsBytes}, weightDataBytes=${c.weightDataBytes}.`)}}}async load(){const s=JSON.parse(this.LS.getItem(this.keys.info));if(s==null)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if(s.modelTopologyType!=="JSON")throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const o={},a=JSON.parse(this.LS.getItem(this.keys.topology));if(a==null)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);o.modelTopology=a;const c=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(c==null)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);o.weightSpecs=c;const d=this.LS.getItem(this.keys.modelMetadata);if(d!=null){const $=JSON.parse(d);o.format=$.format,o.generatedBy=$.generatedBy,o.convertedBy=$.convertedBy,$.signature!=null&&(o.signature=$.signature),$.userDefinedMetadata!=null&&(o.userDefinedMetadata=$.userDefinedMetadata),$.modelInitializer!=null&&(o.modelInitializer=$.modelInitializer),$.initializerSignature!=null&&(o.initializerSignature=$.initializerSignature),$.trainingConfig!=null&&(o.trainingConfig=$.trainingConfig)}const g=this.LS.getItem(this.keys.weightData);if(g==null)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return o.weightData=base64StringToArrayBuffer(g),o}}BrowserLocalStorage.URL_SCHEME="localstorage://";const localStorageRouter=i=>env().getBool("IS_BROWSER")&&!Array.isArray(i)&&i.startsWith(BrowserLocalStorage.URL_SCHEME)?browserLocalStorage(i.slice(BrowserLocalStorage.URL_SCHEME.length)):null;IORouterRegistry.registerSaveRouter(localStorageRouter);IORouterRegistry.registerLoadRouter(localStorageRouter);function browserLocalStorage(i){return new BrowserLocalStorage(i)}class BrowserLocalStorageManager{constructor(){assert$1(env().getBool("IS_BROWSER"),()=>"Current environment is not a web browser"),assert$1(typeof window>"u"||typeof window.localStorage<"u",()=>"Current browser does not appear to support localStorage"),this.LS=window.localStorage}async listModels(){const s={},o=PATH_PREFIX+PATH_SEPARATOR,a=PATH_SEPARATOR+INFO_SUFFIX;for(let c=0;c<this.LS.length;++c){const d=this.LS.key(c);if(d.startsWith(o)&&d.endsWith(a)){const g=getModelPathFromKey(d);s[g]=JSON.parse(this.LS.getItem(d))}}return s}async removeModel(s){s=maybeStripScheme(s);const o=getModelKeys(s);if(this.LS.getItem(o.info)==null)throw new Error(`Cannot find model at path '${s}'`);const a=JSON.parse(this.LS.getItem(o.info));return removeItems(o),a}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const URL_SCHEME_SUFFIX="://";class ModelStoreManagerRegistry{constructor(){this.managers={}}static getInstance(){return ModelStoreManagerRegistry.instance==null&&(ModelStoreManagerRegistry.instance=new ModelStoreManagerRegistry),ModelStoreManagerRegistry.instance}static registerManager(s,o){assert$1(s!=null,()=>"scheme must not be undefined or null."),s.endsWith(URL_SCHEME_SUFFIX)&&(s=s.slice(0,s.indexOf(URL_SCHEME_SUFFIX))),assert$1(s.length>0,()=>"scheme must not be an empty string.");const a=ModelStoreManagerRegistry.getInstance();assert$1(a.managers[s]==null,()=>`A model store manager is already registered for scheme '${s}'.`),a.managers[s]=o}static getManager(s){const o=ModelStoreManagerRegistry.getInstance().managers[s];if(o==null)throw new Error(`Cannot find model manager for scheme '${s}'`);return o}static getSchemes(){return Object.keys(ModelStoreManagerRegistry.getInstance().managers)}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class PlatformBrowser{constructor(){this.messageName="setTimeoutCustom",this.functionRefs=[],this.handledMessageCount=0,this.hasEventListener=!1}fetch(s,o){return fetch(s,o)}now(){return performance.now()}encode(s,o){if(o!=="utf-8"&&o!=="utf8")throw new Error(`Browser's encoder only supports utf-8, but got ${o}`);return this.textEncoder==null&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(s)}decode(s,o){return new TextDecoder(o).decode(s)}setTimeoutCustom(s,o){if(typeof window>"u"||!env().getBool("USE_SETTIMEOUTCUSTOM")){setTimeout(s,o);return}this.functionRefs.push(s),setTimeout(()=>{window.postMessage({name:this.messageName,index:this.functionRefs.length-1},"*")},o),this.hasEventListener||(this.hasEventListener=!0,window.addEventListener("message",a=>{if(a.source===window&&a.data.name===this.messageName){a.stopPropagation();const c=this.functionRefs[a.data.index];c(),this.handledMessageCount++,this.handledMessageCount===this.functionRefs.length&&(this.functionRefs=[],this.handledMessageCount=0)}},!0))}isTypedArray(s){return isTypedArrayBrowser(s)}}if(env().get("IS_BROWSER")){env().setPlatform("browser",new PlatformBrowser);try{ModelStoreManagerRegistry.registerManager(BrowserLocalStorage.URL_SCHEME,new BrowserLocalStorageManager)}catch{}try{ModelStoreManagerRegistry.registerManager(BrowserIndexedDB.URL_SCHEME,new BrowserIndexedDBManager)}catch{}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const getNodeFetch={importFetch:()=>require("node-fetch")};let systemFetch;class PlatformNode{constructor(){this.util=require("util"),this.textEncoder=new this.util.TextEncoder}fetch(s,o){return env().global.fetch!=null?env().global.fetch(s,o):(systemFetch==null&&(systemFetch=getNodeFetch.importFetch()),systemFetch(s,o))}now(){const s=process.hrtime();return s[0]*1e3+s[1]/1e6}encode(s,o){if(o!=="utf-8"&&o!=="utf8")throw new Error(`Node built-in encoder only supports utf-8, but got ${o}`);return this.textEncoder.encode(s)}decode(s,o){return s.length===0?"":new this.util.TextDecoder(o).decode(s)}isTypedArray(s){return this.util.types.isFloat32Array(s)||this.util.types.isInt32Array(s)||this.util.types.isUint8Array(s)||this.util.types.isUint8ClampedArray(s)}}env().get("IS_NODE")&&!env().get("IS_BROWSER")&&env().setPlatform("node",new PlatformNode);/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function buffer(i,s="float32",o){return s=s||"float32",assertNonNegativeIntegerDimensions(i),new TensorBuffer(i,s,o)}/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cast_(i,s){const o=convertToTensor(i,"x","cast");if(!isValidDtype(s))throw new Error(`Failed to cast to unknown dtype ${s}`);if(s==="string"&&o.dtype!=="string"||s!=="string"&&o.dtype==="string")throw new Error("Only strings can be casted to strings");const a={x:o},c={dtype:s};return ENGINE.runKernel(Cast,a,c)}const cast$3=op({cast_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function clone_(i){const o={x:convertToTensor(i,"x","clone","string_or_numeric")};return ENGINE.runKernel(Identity$1,o)}const clone=op({clone_});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function print(i,s=!1){console.log(i.toString(s))}/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */getOrMakeEngine();const opHandler={buffer,cast:cast$3,clone,print};setOpHandler(opHandler);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function add_(i,s){let o=convertToTensor(i,"a","add"),a=convertToTensor(s,"b","add");[o,a]=makeTypesMatch(o,a);const c={a:o,b:a};return ENGINE.runKernel(Add$1,c)}const add$1=op({add_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function floorDiv_(i,s){let o=convertToTensor(i,"a","floorDiv"),a=convertToTensor(s,"b","floorDiv");[o,a]=makeTypesMatch(o,a);const c={a:o,b:a};return ENGINE.runKernel(FloorDiv,c)}const floorDiv$2=op({floorDiv_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function div_(i,s){let o=convertToTensor(i,"a","div"),a=convertToTensor(s,"b","div");if([o,a]=makeTypesMatch(o,a),o.dtype==="int32"&&a.dtype==="int32")return floorDiv$2(o,a);const c={a:o,b:a},d={};return ENGINE.runKernel(RealDiv,c,d)}const div$1=op({div_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mul_(i,s){let o=convertToTensor(i,"a","mul"),a=convertToTensor(s,"b","mul");[o,a]=makeTypesMatch(o,a);const c={a:o,b:a};return ENGINE.runKernel(Multiply$1,c)}const mul=op({mul_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function abs_(i){const s=convertToTensor(i,"x","abs");if(s.dtype==="complex64"){const o={x:s};return ENGINE.runKernel(ComplexAbs,o)}else{const o={x:s};return ENGINE.runKernel(Abs,o)}}const abs$2=op({abs_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function acos_(i){const o={x:convertToTensor(i,"x","acos")};return ENGINE.runKernel(Acos,o)}const acos$2=op({acos_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function acosh_(i){const o={x:convertToTensor(i,"x","acosh")};return ENGINE.runKernel(Acosh,o)}const acosh$2=op({acosh_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function all_(i,s=null,o=!1){const c={x:convertToTensor(i,"x","all","bool")},d={axis:s,keepDims:o};return ENGINE.runKernel(All,c,d)}const all$2=op({all_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function any_(i,s=null,o=!1){const c={x:convertToTensor(i,"x","any","bool")},d={axis:s,keepDims:o};return ENGINE.runKernel(Any,c,d)}const any$2=op({any_});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function argMax_(i,s=0){const a={x:convertToTensor(i,"x","argMax")},c={axis:s};return ENGINE.runKernel(ArgMax,a,c)}const argMax$2=op({argMax_});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function argMin_(i,s=0){const a={x:convertToTensor(i,"x","argMin")},c={axis:s};return ENGINE.runKernel(ArgMin,a,c)}const argMin$2=op({argMin_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function asin_(i){const o={x:convertToTensor(i,"x","asin")};return ENGINE.runKernel(Asin,o)}const asin$2=op({asin_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function asinh_(i){const o={x:convertToTensor(i,"x","asinh")};return ENGINE.runKernel(Asinh,o)}const asinh$2=op({asinh_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function atan_(i){const o={x:convertToTensor(i,"x","atan")};return ENGINE.runKernel(Atan,o)}const atan$2=op({atan_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function atan2_(i,s){let o=convertToTensor(i,"a","atan2"),a=convertToTensor(s,"b","atan2");[o,a]=makeTypesMatch(o,a);const c={a:o,b:a};return ENGINE.runKernel(Atan2,c)}const atan2$2=op({atan2_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function atanh_(i){const o={x:convertToTensor(i,"x","atanh")};return ENGINE.runKernel(Atanh,o)}const atanh$2=op({atanh_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function computeDilation2DInfo(i,s,o,a,c="NHWC",d){const g=i[3],$=[...s,g],j=convertConv2DDataFormat(c);return computeConv2DInfo(i,$,o,d,a,null,null,j)}function computePool2DInfo(i,s,o,a,c,d,g="channelsLast"){const[$,j]=parseTupleParam(s);let _e;if(g==="channelsLast")_e=[$,j,i[3],i[3]];else if(g==="channelsFirst")_e=[$,j,i[1],i[1]];else throw new Error(`Unknown dataFormat ${g}`);return computeConv2DInfo(i,_e,o,a,c,d,!1,g)}function computePool3DInfo(i,s,o,a,c,d,g="NDHWC"){const[$,j,_e]=parse3TupleParam(s);let et,_;if(g==="NDHWC")_="channelsLast",et=[$,j,_e,i[4],i[4]];else if(g==="NCDHW")_="channelsFirst",et=[$,j,_e,i[1],i[1]];else throw new Error(`Unknown dataFormat ${g}`);return computeConv3DInfo(i,et,o,a,c,!1,_,d)}function computeConv2DInfo(i,s,o,a,c,d,g=!1,$="channelsLast"){let[j,_e,et,_]=[-1,-1,-1,-1];if($==="channelsLast")[j,_e,et,_]=i;else if($==="channelsFirst")[j,_,_e,et]=i;else throw new Error(`Unknown dataFormat ${$}`);const[b,tt,,nt]=s,[rt,st]=parseTupleParam(o),[ot,it]=parseTupleParam(a),at=getEffectiveFilterSize(b,ot),lt=getEffectiveFilterSize(tt,it),{padInfo:ut,outHeight:ct,outWidth:dt}=getPadAndOutInfo(c,_e,et,rt,st,at,lt,d,$),pt=g?nt*_:nt;let ht;return $==="channelsFirst"?ht=[j,pt,ct,dt]:$==="channelsLast"&&(ht=[j,ct,dt,pt]),{batchSize:j,dataFormat:$,inHeight:_e,inWidth:et,inChannels:_,outHeight:ct,outWidth:dt,outChannels:pt,padInfo:ut,strideHeight:rt,strideWidth:st,filterHeight:b,filterWidth:tt,effectiveFilterHeight:at,effectiveFilterWidth:lt,dilationHeight:ot,dilationWidth:it,inShape:i,outShape:ht,filterShape:s}}function computeConv3DInfo(i,s,o,a,c,d=!1,g="channelsLast",$){let[j,_e,et,_,b]=[-1,-1,-1,-1,-1];if(g==="channelsLast")[j,_e,et,_,b]=i;else if(g==="channelsFirst")[j,b,_e,et,_]=i;else throw new Error(`Unknown dataFormat ${g}`);const[tt,nt,rt,,st]=s,[ot,it,at]=parse3TupleParam(o),[lt,ut,ct]=parse3TupleParam(a),dt=getEffectiveFilterSize(tt,lt),pt=getEffectiveFilterSize(nt,ut),ht=getEffectiveFilterSize(rt,ct),{padInfo:ft,outDepth:yt,outHeight:wt,outWidth:_t}=get3DPadAndOutInfo(c,_e,et,_,ot,it,at,dt,pt,ht,$),bt=d?st*b:st;let xt;return g==="channelsFirst"?xt=[j,bt,yt,wt,_t]:g==="channelsLast"&&(xt=[j,yt,wt,_t,bt]),{batchSize:j,dataFormat:g,inDepth:_e,inHeight:et,inWidth:_,inChannels:b,outDepth:yt,outHeight:wt,outWidth:_t,outChannels:bt,padInfo:ft,strideDepth:ot,strideHeight:it,strideWidth:at,filterDepth:tt,filterHeight:nt,filterWidth:rt,effectiveFilterDepth:dt,effectiveFilterHeight:pt,effectiveFilterWidth:ht,dilationDepth:lt,dilationHeight:ut,dilationWidth:ct,inShape:i,outShape:xt,filterShape:s}}function computeOutputShape2D(i,s,o,a,c){a==null&&(a=computeDefaultPad(i,s,o));const d=i[0],g=i[1],$=round$3((d-s+2*a)/o+1,c),j=round$3((g-s+2*a)/o+1,c);return[$,j]}function computeOutputShape4D(i,s,o,a,c,d){c==null&&(c=computeDefaultPad(i,s[0],a[0]));const g=[0,0,0,o];for(let $=0;$<3;$++)i[$]+2*c>=s[$]&&(g[$]=round$3((i[$]-s[$]+2*c)/a[$]+1,d));return g}function computeDefaultPad(i,s,o,a=1){const c=getEffectiveFilterSize(s,a);return Math.floor((i[0]*(o-1)-o+c)/2)}function parseTupleParam(i){return typeof i=="number"?[i,i,i]:i.length===2?[i[0],i[1],1]:i}function parse3TupleParam(i){return typeof i=="number"?[i,i,i]:i}function getEffectiveFilterSize(i,s){return s<=1?i:i+(i-1)*(s-1)}function getPadAndOutInfo(i,s,o,a,c,d,g,$,j){let _e,et,_;if(typeof i=="number"){_e={top:i,bottom:i,left:i,right:i,type:i===0?"VALID":"NUMBER"};const tt=computeOutputShape2D([s,o],d,a,i,$);et=tt[0],_=tt[1]}else if(i==="same"){et=Math.ceil(s/a),_=Math.ceil(o/c);const b=Math.max(0,(et-1)*a+d-s),tt=Math.max(0,(_-1)*c+g-o),nt=Math.floor(b/2),rt=b-nt,st=Math.floor(tt/2),ot=tt-st;_e={top:nt,bottom:rt,left:st,right:ot,type:"SAME"}}else if(i==="valid")_e={top:0,bottom:0,left:0,right:0,type:"VALID"},et=Math.ceil((s-d+1)/a),_=Math.ceil((o-g+1)/c);else if(typeof i=="object"){const b=j==="channelsLast"?i[1][0]:i[2][0],tt=j==="channelsLast"?i[1][1]:i[2][1],nt=j==="channelsLast"?i[2][0]:i[3][0],rt=j==="channelsLast"?i[2][1]:i[3][1];_e={top:b,bottom:tt,left:nt,right:rt,type:b===0&&tt===0&&nt===0&&rt===0?"VALID":"EXPLICIT"},et=round$3((s-d+b+tt)/a+1,$),_=round$3((o-g+nt+rt)/c+1,$)}else throw Error(`Unknown padding parameter: ${i}`);return{padInfo:_e,outHeight:et,outWidth:_}}function get3DPadAndOutInfo(i,s,o,a,c,d,g,$,j,_e,et){let _,b,tt,nt;if(i==="valid"&&(i=0),typeof i=="number"){_={top:i,bottom:i,left:i,right:i,front:i,back:i,type:i===0?"VALID":"NUMBER"};const st=computeOutputShape4D([s,o,a,1],[$,j,_e],1,[c,d,g],i,et);b=st[0],tt=st[1],nt=st[2]}else if(i==="same"){b=Math.ceil(s/c),tt=Math.ceil(o/d),nt=Math.ceil(a/g);const rt=(b-1)*c+$-s,st=(tt-1)*d+j-o,ot=(nt-1)*g+_e-a,it=Math.floor(rt/2),at=rt-it,lt=Math.floor(st/2),ut=st-lt,ct=Math.floor(ot/2),dt=ot-ct;_={top:lt,bottom:ut,left:ct,right:dt,front:it,back:at,type:"SAME"}}else throw Error(`Unknown padding parameter: ${i}`);return{padInfo:_,outDepth:b,outHeight:tt,outWidth:nt}}function round$3(i,s){if(!s)return Math.trunc(i);switch(s){case"round":return Math.round(i);case"ceil":return Math.ceil(i);case"floor":return Math.floor(i);default:throw new Error(`Unknown roundingMode ${s}`)}}function tupleValuesAreOne(i){const[s,o,a]=parseTupleParam(i);return s===1&&o===1&&a===1}function eitherStridesOrDilationsAreOne(i,s){return tupleValuesAreOne(i)||tupleValuesAreOne(s)}function stridesOrDilationsArePositive(i){return parseTupleParam(i).every(s=>s>0)}function convertConv2DDataFormat(i){if(i==="NHWC")return"channelsLast";if(i==="NCHW")return"channelsFirst";throw new Error(`Unknown dataFormat ${i}`)}function checkPadOnDimRoundingMode(i,s,o){if(o!=null){if(typeof s=="string")throw Error(`Error in ${i}: pad must be an integer when using dimRoundingMode ${o} but got pad ${s}.`);if(typeof s=="number")assert$1(isInt(s),()=>`Error in ${i}: pad must be an integer when using dimRoundingMode ${o} but got pad ${s}.`);else if(typeof s=="object")s.forEach(a=>{a.forEach(c=>{assert$1(isInt(c),()=>`Error in ${i}: pad must be an integer when using dimRoundingMode ${o} but got pad ${c}.`)})});else throw Error(`Error in ${i}: Unknown padding parameter: ${s}`)}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function reshape_(i,s){const a={x:convertToTensor(i,"x","reshape","string_or_numeric")},c={shape:s};return ENGINE.runKernel(Reshape$1,a,c)}const reshape$2=op({reshape_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function avgPool_(i,s,o,a,c){const d=convertToTensor(i,"x","avgPool","float32"),g=1;assert$1(eitherStridesOrDilationsAreOne(o,g),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${o} and dilations '${g}'`);let $=d,j=!1;d.rank===3&&(j=!0,$=reshape$2(d,[1,d.shape[0],d.shape[1],d.shape[2]])),assert$1($.rank===4,()=>`Error in avgPool: x must be rank 4 but got rank ${$.rank}.`),checkPadOnDimRoundingMode("avgPool",a,c);const _e={x:$},et={filterSize:s,strides:o,pad:a,dimRoundingMode:c};let _=ENGINE.runKernel(AvgPool,_e,et);return _=cast$3(_,d.dtype),j?reshape$2(_,[_.shape[1],_.shape[2],_.shape[3]]):_}const avgPool$2=op({avgPool_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function avgPool3d_(i,s,o,a,c,d="NDHWC"){const g=convertToTensor(i,"x","avgPool3d","float32");let $=g,j=!1;g.rank===4&&(j=!0,$=reshape$2(g,[1,g.shape[0],g.shape[1],g.shape[2],g.shape[3]])),assert$1($.rank===5,()=>`Error in avgPool3d: x must be rank 5 but got rank ${$.rank}.`),assert$1(d==="NDHWC",()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${d}`),assert$1(typeof o=="number"&&o>0||Array.isArray(o)&&o[0]>0&&o[1]>0&&o[2]>0,()=>`Error in avgPool3d: Stride must be > 0, but got '${o}'`),checkPadOnDimRoundingMode("avgPool3d",a,c);const _e={x:$},et={filterSize:s,strides:o,pad:a,dimRoundingMode:c,dataFormat:d};let _=ENGINE.runKernel(AvgPool3D,_e,et);return _=cast$3(_,$.dtype),j?reshape$2(_,[_.shape[1],_.shape[2],_.shape[3],_.shape[4]]):_}const avgPool3d=op({avgPool3d_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function concat_(i,s=0){assert$1(i.length>=1,()=>"Pass at least one tensor to concat");const o=convertToTensorArray(i,"tensors","concat","string_or_numeric");if(o[0].dtype==="complex64"&&o.forEach(d=>{if(d.dtype!=="complex64")throw new Error(`Cannot concatenate complex64 tensors with a tensor
          with dtype ${d.dtype}. `)}),o.length===1)return clone(o[0]);const a=o,c={axis:s};return ENGINE.runKernel(Concat,a,c)}const concat$2=op({concat_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function matMul_(i,s,o=!1,a=!1){let c=convertToTensor(i,"a","matMul"),d=convertToTensor(s,"b","matMul");[c,d]=makeTypesMatch(c,d);const g={a:c,b:d},$={transposeA:o,transposeB:a};return ENGINE.runKernel(BatchMatMul,g,$)}const matMul$1=op({matMul_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sigmoid_(i){const o={x:convertToTensor(i,"x","sigmoid","float32")};return ENGINE.runKernel(Sigmoid$1,o)}const sigmoid$2=op({sigmoid_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function slice_(i,s,o){const a=convertToTensor(i,"x","slice","string_or_numeric");if(a.rank===0)throw new Error("Slicing scalar is not possible");const c={x:a},d={begin:s,size:o};return ENGINE.runKernel(Slice,c,d)}const slice$2=op({slice_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tanh_(i){const o={x:convertToTensor(i,"x","tanh","float32")};return ENGINE.runKernel(Tanh$1,o)}const tanh$2=op({tanh_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function batchToSpaceND_(i,s,o){const a=convertToTensor(i,"x","batchToSpaceND"),c=s.reduce(($,j)=>$*j);assert$1(a.rank>=1+s.length,()=>`input rank is ${a.rank} but should be > than blockShape.length ${s.length}`),assert$1(o.length===s.length,()=>`crops.length is ${o.length} but should be equal to blockShape.length  ${s.length}`),assert$1(a.shape[0]%c===0,()=>`input tensor batch is ${a.shape[0]} but is not divisible by the product of the elements of blockShape ${s.join(" * ")} === ${c}`);const d={x:a},g={blockShape:s,crops:o};return ENGINE.runKernel(BatchToSpaceND,d,g)}const batchToSpaceND$2=op({batchToSpaceND_});function xAs4D(i){let s;return i.rank===0||i.rank===1?s=reshape$2(i,[1,1,1,i.size]):i.rank===2?s=reshape$2(i,[1,1,i.shape[0],i.shape[1]]):i.rank===3?s=reshape$2(i,[1,i.shape[0],i.shape[1],i.shape[2]]):s=i,s}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function batchNorm_(i,s,o,a,c,d){d==null&&(d=.001);const g=convertToTensor(i,"x","batchNorm"),$=convertToTensor(s,"mean","batchNorm"),j=convertToTensor(o,"variance","batchNorm");let _e;c!=null&&(_e=convertToTensor(c,"scale","batchNorm"));let et;a!=null&&(et=convertToTensor(a,"offset","batchNorm")),assert$1($.rank===j.rank,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),assert$1(et==null||$.rank===et.rank,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),assert$1(_e==null||$.rank===_e.rank,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");const b={x:xAs4D(g),scale:_e,offset:et,mean:$,variance:j},tt={varianceEpsilon:d},nt=ENGINE.runKernel(FusedBatchNorm,b,tt);return reshape$2(nt,g.shape)}const batchNorm$2=op({batchNorm_});function batchNorm2d_(i,s,o,a,c,d){const g=convertToTensor(i,"x","batchNorm"),$=convertToTensor(s,"mean","batchNorm"),j=convertToTensor(o,"variance","batchNorm");let _e;c!=null&&(_e=convertToTensor(c,"scale","batchNorm"));let et;return a!=null&&(et=convertToTensor(a,"offset","batchNorm")),assert$1(g.rank===2,()=>`Error in batchNorm2D: x must be rank 2 but got rank ${g.rank}.`),assert$1($.rank===2||$.rank===1,()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${$.rank}.`),assert$1(j.rank===2||j.rank===1,()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${j.rank}.`),_e!=null&&assert$1(_e.rank===2||_e.rank===1,()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${_e.rank}.`),et!=null&&assert$1(et.rank===2||et.rank===1,()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${et.rank}.`),batchNorm$2(g,$,j,et,_e,d)}const batchNorm2d=op({batchNorm2d_});function batchNorm3d_(i,s,o,a,c,d){const g=convertToTensor(i,"x","batchNorm"),$=convertToTensor(s,"mean","batchNorm"),j=convertToTensor(o,"variance","batchNorm");let _e;c!=null&&(_e=convertToTensor(c,"scale","batchNorm"));let et;return a!=null&&(et=convertToTensor(a,"offset","batchNorm")),assert$1(g.rank===3,()=>`Error in batchNorm3D: x must be rank 3 but got rank ${g.rank}.`),assert$1($.rank===3||$.rank===1,()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${$.rank}.`),assert$1(j.rank===3||j.rank===1,()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${j.rank}.`),_e!=null&&assert$1(_e.rank===3||_e.rank===1,()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${_e.rank}.`),et!=null&&assert$1(et.rank===3||et.rank===1,()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${et.rank}.`),batchNorm$2(g,$,j,et,_e,d)}const batchNorm3d=op({batchNorm3d_});function batchNorm4d_(i,s,o,a,c,d){const g=convertToTensor(i,"x","batchNorm"),$=convertToTensor(s,"mean","batchNorm"),j=convertToTensor(o,"variance","batchNorm");let _e;c!=null&&(_e=convertToTensor(c,"scale","batchNorm"));let et;return a!=null&&(et=convertToTensor(a,"offset","batchNorm")),assert$1(g.rank===4,()=>`Error in batchNorm4D: x must be rank 4 but got rank ${g.rank}.`),assert$1($.rank===4||$.rank===1,()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${$.rank}.`),assert$1(j.rank===4||j.rank===1,()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${j.rank}.`),_e!=null&&assert$1(_e.rank===4||_e.rank===1,()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${_e.rank}.`),et!=null&&assert$1(et.rank===4||et.rank===1,()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${et.rank}.`),batchNorm$2(g,$,j,et,_e,d)}const batchNorm4d=op({batchNorm4d_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bincount_(i,s,o){const a=convertToTensor(i,"x","bincount"),c=convertToTensor(s,"weights","bincount");assert$1(a.dtype==="int32",()=>`Error in bincount: input dtype must be int32, but got ${a.dtype}`),assert$1(o>=0,()=>`size must be non-negative, but got ${o}.`),assert$1(c.size===a.size||c.size===0,()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${a.shape}, weights shape: ${c.shape}.`);const d={x:a,weights:c},g={size:o};return ENGINE.runKernel(Bincount,d,g)}const bincount$2=op({bincount_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function broadcastTo_(i,s){let o=convertToTensor(i,"broadcastTo","x");const a=o.shape;if(assertNonNegativeIntegerDimensions(s),s.length<o.rank)throw new Error(`broadcastTo(): shape.length=${s.length} < input.rank=${o.rank}.`);if(s.length>o.rank){const _e=o.shape.slice();for(;_e.length<s.length;)_e.unshift(1);o=reshape$2(o,_e)}const c=o.shape,d=Array.from(s);for(let _e=s.length-1;_e>=0;_e--)if(c[_e]===s[_e])d[_e]=1;else if(o.shape[_e]!==1)throw new Error(`broadcastTo(): [${a}] cannot be broadcast to [${s}].`);if(d.map((_e,et)=>_e>1?et:-1).filter(_e=>_e>=0).length===0)return clone(o);const $={x:o},j={reps:d};return ENGINE.runKernel(Tile,$,j)}const broadcastTo=op({broadcastTo_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ceil_(i){const o={x:convertToTensor(i,"x","ceil","float32")};return ENGINE.runKernel(Ceil,o)}const ceil$2=op({ceil_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fill$2(i,s,o){assertNonNegativeIntegerDimensions(i),o=o||inferDtype(s);const a={shape:i,value:s,dtype:o};return ENGINE.runKernel(Fill,{},a)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function clipByValue_(i,s,o){const a=convertToTensor(i,"x","clipByValue");if(assert$1(s<=o,()=>`Error in clip: min (${s}) must be less than or equal to max (${o}).`),s===o)return fill$2(a.shape,s,a.dtype);const c={x:a},d={clipValueMin:s,clipValueMax:o};return ENGINE.runKernel(ClipByValue,c,d)}const clipByValue$2=op({clipByValue_});function concat1d_(i){return concat$2(i,0)}const concat1d=op({concat1d_});function concat2d_(i,s){return concat$2(i,s)}const concat2d=op({concat2d_});function concat3d_(i,s){return concat$2(i,s)}const concat3d=op({concat3d_});function concat4d_(i,s){return concat$2(i,s)}const concat4d=op({concat4d_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function conv2d_(i,s,o,a,c="NHWC",d=[1,1],g){const $=convertToTensor(i,"x","conv2d","float32"),j=convertToTensor(s,"filter","conv2d","float32");let _e=$,et=!1;$.rank===3&&(et=!0,_e=reshape$2($,[1,$.shape[0],$.shape[1],$.shape[2]])),assert$1(_e.rank===4,()=>`Error in conv2d: input must be rank 4, but got rank ${_e.rank}.`),assert$1(j.rank===4,()=>`Error in conv2d: filter must be rank 4, but got rank ${j.rank}.`),checkPadOnDimRoundingMode("conv2d",a,g);const _=c==="NHWC"?_e.shape[3]:_e.shape[1];assert$1(_===j.shape[2],()=>`Error in conv2d: depth of input (${_}) must match input depth for filter ${j.shape[2]}.`),assert$1(eitherStridesOrDilationsAreOne(o,d),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${o} and dilations '${d}'`),assert$1(stridesOrDilationsArePositive(d),()=>"Error in conv2D: Dilated rates should be larger than 0."),assert$1(stridesOrDilationsArePositive(o),()=>"Error in conv2D: Strides should be larger than 0.");const b={x:_e,filter:j},tt={strides:o,pad:a,dataFormat:c,dilations:d,dimRoundingMode:g},nt=ENGINE.runKernel(Conv2D$1,b,tt);return et?reshape$2(nt,[nt.shape[1],nt.shape[2],nt.shape[3]]):nt}const conv2d$2=op({conv2d_});function conv1d_(i,s,o,a,c="NWC",d=1,g){const $=convertToTensor(i,"x","conv1d"),j=convertToTensor(s,"filter","conv1d");let _e=$,et=!1;$.rank===2&&(et=!0,_e=reshape$2($,[1,$.shape[0],$.shape[1]])),assert$1(_e.rank===3,()=>`Error in conv1d: input must be rank 3, but got rank ${_e.rank}.`),assert$1(j.rank===3,()=>`Error in conv1d: filter must be rank 3, but got rank ${j.rank}.`),checkPadOnDimRoundingMode("conv1d",a,g),assert$1(_e.shape[2]===j.shape[1],()=>`Error in conv1d: depth of input (${_e.shape[2]}) must match input depth for filter ${j.shape[1]}.`),assert$1(eitherStridesOrDilationsAreOne(o,d),()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${o} and dilation '${d}'`),assert$1(stridesOrDilationsArePositive(d),()=>"Error in conv1D: Dilated rates should be larger than 0."),assert$1(stridesOrDilationsArePositive(o),()=>"Error in conv1D: Stride should be larger than 0."),assert$1(c==="NWC",()=>`Error in conv1d: got dataFormat of ${c} but only NWC is currently supported.`);const _=reshape$2(j,[1,j.shape[0],j.shape[1],j.shape[2]]),b=reshape$2(_e,[_e.shape[0],1,_e.shape[1],_e.shape[2]]),st=conv2d$2(b,_,[1,o],a,"NHWC",[1,d],g);return et?reshape$2(st,[st.shape[2],st.shape[3]]):reshape$2(st,[st.shape[0],st.shape[2],st.shape[3]])}const conv1d=op({conv1d_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function conv2DBackpropInput_(i,s,o,a,c,d="NHWC",g){assert$1(i.length===s.rank,()=>`Length of inShape (${i.length}) and rank of dy (${s.rank}) must match`);let $=i,j=s,_e=!1;s.rank===3&&(_e=!0,j=reshape$2(s,[1,s.shape[0],s.shape[1],s.shape[2]]),$=[1,i[0],i[1],i[2]]),assert$1($.length===4,()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${$.length}.`),assert$1(j.rank===4,()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${j.rank}`),assert$1(o.rank===4,()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${o.rank}`);const et=d==="NHWC"?$[3]:$[1],_=d==="NHWC"?j.shape[3]:j.shape[1];assert$1(et===o.shape[2],()=>`Error in conv2dDerInput: depth of input (${et}) must match input depth for filter ${o.shape[2]}.`),assert$1(_===o.shape[3],()=>`Error in conv2dDerInput: depth of output (${_}) must match output depth for filter ${o.shape[3]}.`),checkPadOnDimRoundingMode("conv2dDerInput",c,g);const b={dy:j,filter:o},tt={strides:a,pad:c,dataFormat:d,dimRoundingMode:g,inputShape:$},nt=ENGINE.runKernel(Conv2DBackpropInput,b,tt);return _e?reshape$2(nt,[nt.shape[1],nt.shape[2],nt.shape[3]]):nt}const conv2DBackpropInput$2=op({conv2DBackpropInput_});function conv2dTranspose_(i,s,o,a,c,d){const g=convertToTensor(i,"x","conv2dTranspose"),$=convertToTensor(s,"filter","conv2dTranspose");return conv2DBackpropInput$2(o,g,$,a,c,"NHWC",d)}const conv2dTranspose=op({conv2dTranspose_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function conv3d_(i,s,o,a,c="NDHWC",d=[1,1,1]){const g=convertToTensor(i,"x","conv3d"),$=convertToTensor(s,"filter","conv3d");let j=g,_e=!1;g.rank===4&&(_e=!0,j=reshape$2(g,[1,g.shape[0],g.shape[1],g.shape[2],g.shape[3]])),assert$1(j.rank===5,()=>`Error in conv3d: input must be rank 5, but got rank ${j.rank}.`),assert$1($.rank===5,()=>`Error in conv3d: filter must be rank 5, but got rank ${$.rank}.`),assert$1(j.shape[4]===$.shape[3],()=>`Error in conv3d: depth of input (${j.shape[4]}) must match input depth for filter ${$.shape[3]}.`),assert$1(eitherStridesOrDilationsAreOne(o,d),()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${o} and dilations '${d}'`),assert$1(c==="NDHWC",()=>`Error in conv3d: got dataFormat of ${c} but only NDHWC is currently supported.`),assert$1(stridesOrDilationsArePositive(d),()=>"Error in conv3D: Dilated rates should be larger than 0."),assert$1(stridesOrDilationsArePositive(o),()=>"Error in conv3D: Strides should be larger than 0.");const et={x:j,filter:$},_={strides:o,pad:a,dataFormat:c,dilations:d},b=ENGINE.runKernel(Conv3D$1,et,_);return _e?reshape$2(b,[b.shape[1],b.shape[2],b.shape[3],b.shape[4]]):b}const conv3d=op({conv3d_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function conv3DBackpropInput_(i,s,o,a,c){assert$1(i.length===s.rank,()=>`Length of inShape (${i.length}) and rank of dy (${s.rank}) must match`);let d=i,g=s,$=!1;s.rank===4&&($=!0,g=reshape$2(s,[1,s.shape[0],s.shape[1],s.shape[2],s.shape[3]]),d=[1,i[0],i[1],i[2],i[3]]);const j=d[4],_e=g.shape[4];assert$1(d.length===5,()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${d.length}.`),assert$1(g.rank===5,()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${g.rank}`),assert$1(o.rank===5,()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${o.rank}`),assert$1(j===o.shape[3],()=>`Error in conv3dDerInput: depth of input (${j}) must match input depth for filter ${o.shape[3]}.`),assert$1(_e===o.shape[4],()=>`Error in conv3dDerInput: depth of output (${_e}) must match output depth for filter ${o.shape[4]}.`);const et={dy:g,filter:o},_={pad:c,strides:a,inputShape:d},b=ENGINE.runKernel(Conv3DBackpropInputV2,et,_);return $?reshape$2(b,[b.shape[1],b.shape[2],b.shape[3],b.shape[4]]):b}const conv3DBackpropInput$1=op({conv3DBackpropInput_});function conv3dTranspose_(i,s,o,a,c){const d=convertToTensor(i,"x","conv3dTranspose"),g=convertToTensor(s,"filter","conv3dTranspose");return conv3DBackpropInput$1(o,d,g,a,c)}const conv3dTranspose=op({conv3dTranspose_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cos_(i){const o={x:convertToTensor(i,"x","cos","float32")};return ENGINE.runKernel(Cos,o)}const cos$2=op({cos_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cosh_(i){const o={x:convertToTensor(i,"x","cosh","float32")};return ENGINE.runKernel(Cosh,o)}const cosh$2=op({cosh_});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the 'License');
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an 'AS IS' BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cumprod_(i,s=0,o=!1,a=!1){const d={x:convertToTensor(i,"x","cumprod")},g={axis:s,exclusive:o,reverse:a};return ENGINE.runKernel(Cumprod,d,g)}const cumprod$2=op({cumprod_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cumsum_(i,s=0,o=!1,a=!1){const d={x:convertToTensor(i,"x","cumsum")},g={axis:s,exclusive:o,reverse:a};return ENGINE.runKernel(Cumsum,d,g)}const cumsum$2=op({cumsum_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function denseBincount_(i,s,o,a=!1){const c=convertToTensor(i,"x","denseBincount"),d=convertToTensor(s,"weights","denseBincount");assert$1(c.dtype==="int32",()=>`Error in denseBincount: input dtype must be int32, but got ${c.dtype}`),assert$1(c.rank<=2,()=>`Error in denseBincount: input must be at most rank 2, but got rank ${c.rank}.`),assert$1(o>=0,()=>`size must be non-negative, but got ${o}.`),assert$1(d.size===c.size||d.size===0,()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${c.shape}, weights shape: ${d.shape}.`);const g={x:c,weights:d},$={size:o,binaryOutput:a};return ENGINE.runKernel(DenseBincount,g,$)}const denseBincount$2=op({denseBincount_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function depthToSpace_(i,s,o="NHWC"){const a=convertToTensor(i,"x","depthToSpace","float32"),c=o==="NHWC"?a.shape[1]:a.shape[2],d=o==="NHWC"?a.shape[2]:a.shape[3],g=o==="NHWC"?a.shape[3]:a.shape[1];assert$1(s>1,()=>`blockSize should be > 1 for depthToSpace, but was: ${s}`),assert$1(c*s>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${c} and ${s}  for depthToSpace with input shape
    ${a.shape}`),assert$1(d*s>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${d} and ${s} for depthToSpace with input shape
        ${a.shape}`),assert$1(g%(s*s)===0,()=>`Dimension size must be evenly divisible by ${s*s} but is ${g} for depthToSpace with input shape ${a.shape}`);const $={x:a},j={blockSize:s,dataFormat:o};return ENGINE.runKernel(DepthToSpace,$,j)}const depthToSpace$2=op({depthToSpace_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function depthwiseConv2d_(i,s,o,a,c="NHWC",d=[1,1],g){const $=convertToTensor(i,"x","depthwiseConv2d","float32"),j=convertToTensor(s,"filter","depthwiseConv2d","float32");let _e=$,et=!1;$.rank===3&&(et=!0,_e=reshape$2($,[1,$.shape[0],$.shape[1],$.shape[2]])),assert$1(_e.rank===4,()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${_e.rank}.`),assert$1(j.rank===4,()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${j.rank}.`);const _=c==="NHWC"?_e.shape[3]:_e.shape[1];assert$1(_===j.shape[2],()=>`Error in depthwiseConv2d: number of input channels (${_}) must match the inChannels dimension in filter ${j.shape[2]}.`),checkPadOnDimRoundingMode("depthwiseConv2d",a,g);const b={x:_e,filter:j},tt={strides:o,pad:a,dataFormat:c,dilations:d,dimRoundingMode:g},nt=ENGINE.runKernel(DepthwiseConv2dNative,b,tt);return et?reshape$2(nt,[nt.shape[1],nt.shape[2],nt.shape[3]]):nt}const depthwiseConv2d$1=op({depthwiseConv2d_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dilation2d_(i,s,o,a,c=[1,1],d="NHWC"){const g=convertToTensor(i,"x","dilation2d"),$=convertToTensor(s,"filter","dilation2d");assert$1(g.rank===3||g.rank===4,()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${g.rank}.`),assert$1($.rank===3,()=>`Error in dilation2d: filter must be rank 3, but got rank ${$.rank}.`),assert$1(d==="NHWC",()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${d}`);let j=g,_e=!1;g.rank===3&&(j=reshape$2(g,[1,g.shape[0],g.shape[1],g.shape[2]]),_e=!0),assert$1(j.shape[3]===$.shape[2],()=>`Error in dilation2d:  input and filter must have the same depth: ${j.shape[3]} vs ${$.shape[2]}`);const et={x:j,filter:$},_={strides:o,pad:a,dilations:c},b=ENGINE.runKernel(Dilation2D,et,_);return _e?reshape$2(b,[b.shape[1],b.shape[2],b.shape[3]]):b}const dilation2d=op({dilation2d_});/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function getBroadcastDims$1(i,s){const o=i.length,a=[];for(let c=0;c<o;c++){const d=o-1-c,g=i[d]||1;(s[s.length-1-c]||1)>1&&g===1&&a.unshift(d)}return a}function getReductionAxes(i,s){const o=[];for(let a=0;a<s.length;a++){const c=i[i.length-a-1],d=s.length-a-1,g=s[d];(c==null||c===1&&g>1)&&o.unshift(d)}return o}function assertAndGetBroadcastShape(i,s){const o=Math.max(i.length,s.length),a=new Array(o);for(let c=0;c<o;c++){let d=i[i.length-c-1];d==null&&(d=1);let g=s[s.length-c-1];if(g==null&&(g=1),d===1)a[o-c-1]=g;else if(g===1)a[o-c-1]=d;else if(d!==g){const $=`Operands could not be broadcast together with shapes ${i} and ${s}.`;throw Error($)}else a[o-c-1]=d}return a}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function equal_(i,s){let o=convertToTensor(i,"a","equal","string_or_numeric"),a=convertToTensor(s,"b","equal","string_or_numeric");[o,a]=makeTypesMatch(o,a),assertAndGetBroadcastShape(o.shape,a.shape);const c={a:o,b:a};return ENGINE.runKernel(Equal,c)}const equal$2=op({equal_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function where_(i,s,o){const a=convertToTensor(s,"a","where"),c=convertToTensor(o,"b","where"),d=convertToTensor(i,"condition","where","bool"),g=assertAndGetBroadcastShape(assertAndGetBroadcastShape(d.shape,a.shape),c.shape),$=broadcastTo(d,g),j=broadcastTo(a,g),_e=broadcastTo(c,g),et={condition:$,t:j,e:_e};return ENGINE.runKernel(Select,et)}const where=op({where_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zerosLike_(i){const o={x:convertToTensor(i,"x","zerosLike")};return ENGINE.runKernel(ZerosLike,o)}const zerosLike$2=op({zerosLike_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function divNoNan_(i,s){let o=convertToTensor(i,"a","div"),a=convertToTensor(s,"b","div");[o,a]=makeTypesMatch(o,a);const c=div$1(o,a),d=zerosLike$2(c),g=equal$2(a,d);return where(g,d,c)}const divNoNan=op({divNoNan_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dot_(i,s){const o=convertToTensor(i,"t1","dot"),a=convertToTensor(s,"t2","dot");assert$1((o.rank===1||o.rank===2)&&(a.rank===1||a.rank===2),()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${o.rank} and ${a.rank}.`);const c=o.rank===1?o.size:o.shape[1],d=a.rank===1?a.size:a.shape[0];if(assert$1(c===d,()=>`Error in dot: inner dimensions of inputs must match, but got ${c} and ${d}.`),o.rank===1&&a.rank===1){const g=reshape$2(o,[1,-1]),$=reshape$2(a,[-1,1]),j=matMul$1(g,$);return reshape$2(j,[])}else if(o.rank===1&&a.rank===2){const g=reshape$2(o,[1,-1]),$=reshape$2(a,[a.shape[0],a.shape[1]]),j=matMul$1(g,$);return reshape$2(j,[j.size])}else if(o.rank===2&&a.rank===1){const g=reshape$2(a,[-1,1]),$=matMul$1(o,g);return reshape$2($,[$.size])}else{const g=reshape$2(a,[a.shape[0],a.shape[1]]);return matMul$1(o,g)}}const dot$1=op({dot_});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function einsum_(i,...s){const o=s.map((c,d)=>convertToTensor(c,`tensors${d}`,"einsum")),a={equation:i};return ENGINE.runKernel(Einsum,o,a)}const einsum$2=op({einsum_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function elu_(i){const o={x:convertToTensor(i,"x","elu","float32")};return ENGINE.runKernel(Elu$1,o)}const elu$3=op({elu_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function erf_(i){let s=convertToTensor(i,"x","erf");assert$1(s.dtype==="int32"||s.dtype==="float32",()=>"Input dtype must be `int32` or `float32`."),s.dtype==="int32"&&(s=cast$3(s,"float32"));const o={x:s};return ENGINE.runKernel(Erf,o)}const erf$2=op({erf_});/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function axesAreInnerMostDims(i,s){for(let o=0;o<i.length;++o)if(i[i.length-o-1]!==s-1-o)return!1;return!0}function combineLocations(i,s,o){const a=i.length+s.length,c=[];let d=0,g=0;for(let $=0;$<a;$++)o.indexOf($)===-1?c.push(i[d++]):c.push(s[g++]);return c}function computeOutAndReduceShapes(i,s){const o=[],a=i.length;for(let d=0;d<a;d++)s.indexOf(d)===-1&&o.push(i[d]);const c=s.map(d=>i[d]);return[o,c]}function expandShapeToKeepDim(i,s){const o=s.map(a=>1);return combineLocations(i,o,s)}function assertAxesAreInnerMostDims(i,s,o){assert$1(axesAreInnerMostDims(s,o),()=>`${i} supports only inner-most axes for now. Got axes ${s} and rank-${o} input.`)}function getAxesPermutation(i,s){if(axesAreInnerMostDims(i,s))return null;const o=[];for(let a=0;a<s;++a)i.indexOf(a)===-1&&o.push(a);return i.forEach(a=>o.push(a)),o}function getUndoAxesPermutation(i){return i.map((s,o)=>[o,s]).sort((s,o)=>s[1]-o[1]).map(s=>s[0])}function getInnerMostAxes(i,s){const o=[];for(let a=s-i;a<s;++a)o.push(a);return o}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function max_(i,s=null,o=!1){const c={x:convertToTensor(i,"x","max")},d={reductionIndices:s,keepDims:o};return ENGINE.runKernel(Max,c,d)}const max$3=op({max_});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function min_(i,s=null,o=!1){const c={x:convertToTensor(i,"x","min")},d={axis:s,keepDims:o};return ENGINE.runKernel(Min,c,d)}const min$3=op({min_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pow_(i,s){let o=convertToTensor(i,"base","pow"),a=convertToTensor(s,"exp","pow");[o,a]=makeTypesMatch(o,a);const c={a:o,b:a};return ENGINE.runKernel(Pow,c)}const pow$2=op({pow_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function scalar(i,s){if((isTypedArray(i)&&s!=="string"||Array.isArray(i))&&s!=="complex64")throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if(s==="string"&&isTypedArray(i)&&!(i instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return makeTensor(i,[],[],s)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sqrt_(i){const o={x:convertToTensor(i,"x","sqrt","float32")};return ENGINE.runKernel(Sqrt,o)}const sqrt$2=op({sqrt_});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function square_(i){const s=convertToTensor(i,"x","square"),o={};return ENGINE.runKernel("Square",{x:s},o)}const square$2=op({square_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sum_(i,s=null,o=!1){let a=convertToTensor(i,"x","sum");a.dtype==="bool"&&(a=cast$3(a,"int32"));const c={x:a},d={axis:s,keepDims:o};return ENGINE.runKernel(Sum,c,d)}const sum$2=op({sum_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function norm_(i,s="euclidean",o=null,a=!1){i=convertToTensor(i,"x","norm");const c=normImpl(i,s,o);let d=c.shape;if(a){const g=parseAxisParam(o,i.shape);d=expandShapeToKeepDim(c.shape,g)}return reshape$2(c,d)}function normImpl(i,s,o=null){if(i.rank===0)return abs$2(i);if(i.rank!==1&&o===null)return normImpl(reshape$2(i,[-1]),s,o);if(i.rank===1||typeof o=="number"||Array.isArray(o)&&o.length===1){if(s===1)return sum$2(abs$2(i),o);if(s===1/0)return max$3(abs$2(i),o);if(s===-1/0)return min$3(abs$2(i),o);if(s==="euclidean"||s===2)return sqrt$2(sum$2(pow$2(abs$2(i),scalar(2,"int32")),o));throw new Error(`Error in norm: invalid ord value: ${s}`)}if(Array.isArray(o)&&o.length===2){if(s===1)return max$3(sum$2(abs$2(i),o[0]),o[1]-1);if(s===1/0)return max$3(sum$2(abs$2(i),o[1]),o[0]);if(s===-1/0)return min$3(sum$2(abs$2(i),o[1]),o[0]);if(s==="fro"||s==="euclidean")return sqrt$2(sum$2(square$2(i),o));throw new Error(`Error in norm: invalid ord value: ${s}`)}throw new Error(`Error in norm: invalid axis: ${o}`)}const norm=op({norm_});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function euclideanNorm_(i,s=null,o=!1){return norm(i,"euclidean",s,o)}const euclideanNorm=op({euclideanNorm_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function exp_(i){const o={x:convertToTensor(i,"x","exp")};return ENGINE.runKernel(Exp,o)}const exp$2=op({exp_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function expandDims_(i,s=0){const o=convertToTensor(i,"x","expandDims","string_or_numeric");assert$1(s<=o.rank,()=>"Axis must be <= rank of the tensor");const a={input:o},c={dim:s};return ENGINE.runKernel(ExpandDims,a,c)}const expandDims$3=op({expandDims_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function expm1_(i){const o={x:convertToTensor(i,"x","expm1")};return ENGINE.runKernel(Expm1,o)}const expm1$2=op({expm1_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tile_(i,s){const o=convertToTensor(i,"x","tile","string_or_numeric");assert$1(o.rank===s.length,()=>`Error in transpose: rank of input ${o.rank} must match length of reps ${s}.`);const a={x:o},c={reps:s};return ENGINE.runKernel(Tile,a,c)}const tile$3=op({tile_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eye_(i,s,o,a="float32"){s==null&&(s=i);const c=buffer([i,s],a),d=i<=s?i:s;for(let $=0;$<d;++$)c.set(1,$,$);const g=reshape$2(c.toTensor(),[i,s]);if(o==null)return g;if(o.length===1)return tile$3(expandDims$3(g,0),[o[0],1,1]);if(o.length===2)return tile$3(expandDims$3(expandDims$3(g,0),0),[o[0],o[1],1,1]);if(o.length===3)return tile$3(expandDims$3(expandDims$3(expandDims$3(g,0),0),0),[o[0],o[1],o[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${o.length}D.`)}const eye=op({eye_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function floor_(i){const o={x:convertToTensor(i,"x","floor","float32")};return ENGINE.runKernel(Floor,o)}const floor$2=op({floor_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gather_(i,s,o=0,a=0){const c=convertToTensor(i,"x","gather"),d=convertToTensor(s,"indices","gather","int32"),g={x:c,indices:d},$={axis:o,batchDims:a};return ENGINE.runKernel(GatherV2,g,$)}const gather$1=op({gather_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function greater_(i,s){let o=convertToTensor(i,"a","greater","string_or_numeric"),a=convertToTensor(s,"b","greater","string_or_numeric");[o,a]=makeTypesMatch(o,a),assertAndGetBroadcastShape(o.shape,a.shape);const c={a:o,b:a};return ENGINE.runKernel(Greater,c)}const greater$2=op({greater_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function greaterEqual_(i,s){let o=convertToTensor(i,"a","greaterEqual","string_or_numeric"),a=convertToTensor(s,"b","greaterEqual","string_or_numeric");[o,a]=makeTypesMatch(o,a),assertAndGetBroadcastShape(o.shape,a.shape);const c={a:o,b:a};return ENGINE.runKernel(GreaterEqual,c)}const greaterEqual$2=op({greaterEqual_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function imag_(i){const o={input:convertToTensor(i,"input","imag")};return ENGINE.runKernel(Imag,o)}const imag$2=op({imag_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function isFinite_(i){const o={x:convertToTensor(i,"x","isFinite")};return ENGINE.runKernel(IsFinite,o)}const isFinite$3=op({isFinite_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function isInf_(i){const o={x:convertToTensor(i,"x","isInf")};return ENGINE.runKernel(IsInf,o)}const isInf$2=op({isInf_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function isNaN_(i){const o={x:convertToTensor(i,"x","isNaN")};return ENGINE.runKernel(IsNan,o)}const isNaN$3=op({isNaN_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function leakyRelu_(i,s=.2){const a={x:convertToTensor(i,"x","leakyRelu")},c={alpha:s};return ENGINE.runKernel(LeakyRelu,a,c)}const leakyRelu$2=op({leakyRelu_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function less_(i,s){let o=convertToTensor(i,"a","less","string_or_numeric"),a=convertToTensor(s,"b","less","string_or_numeric");[o,a]=makeTypesMatch(o,a),assertAndGetBroadcastShape(o.shape,a.shape);const c={a:o,b:a};return ENGINE.runKernel(Less,c)}const less$2=op({less_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lessEqual_(i,s){let o=convertToTensor(i,"a","lessEqual","string_or_numeric"),a=convertToTensor(s,"b","lessEqual","string_or_numeric");[o,a]=makeTypesMatch(o,a),assertAndGetBroadcastShape(o.shape,a.shape);const c={a:o,b:a};return ENGINE.runKernel(LessEqual,c)}const lessEqual$2=op({lessEqual_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function localResponseNormalization_(i,s=5,o=1,a=1,c=.5){const d=convertToTensor(i,"x","localResponseNormalization");assert$1(d.rank===4||d.rank===3,()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got
               rank ${d.rank}.`),assert$1(isInt(s),()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${s}.`);let g=d,$=!1;d.rank===3&&($=!0,g=reshape$2(d,[1,d.shape[0],d.shape[1],d.shape[2]]));const j={x:g},_e={depthRadius:s,bias:o,alpha:a,beta:c},et=ENGINE.runKernel(LRN,j,_e);return $?reshape$2(et,[et.shape[1],et.shape[2],et.shape[3]]):et}const localResponseNormalization=op({localResponseNormalization_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function log_(i){const o={x:convertToTensor(i,"x","log","float32")};return ENGINE.runKernel(Log,o)}const log$2=op({log_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function log1p_(i){const o={x:convertToTensor(i,"x","log1p")};return ENGINE.runKernel(Log1p,o)}const log1p$2=op({log1p_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function variableGrads(i,s){assert$1(isFunction(i),()=>"The f passed in variableGrads(f) must be a function"),assert$1(s==null||Array.isArray(s)&&s.every(_e=>_e instanceof Variable),()=>"The varList passed in variableGrads(f, varList) must be an array of variables");const o=s!=null;if(!o){s=[];for(const _e in ENGINE.registeredVariables)s.push(ENGINE.registeredVariables[_e])}const a=o?s.filter(_e=>!_e.trainable):null,c=s.length;s=s.filter(_e=>_e.trainable),assert$1(s.length>0,()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${c} variables is trainable.`);const d=!0,{value:g,grads:$}=ENGINE.gradients(i,s,null,d);assert$1($.some(_e=>_e!=null),()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize()."),assert$1(g.rank===0,()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${g.rank} tensor`);const j={};return s.forEach((_e,et)=>{$[et]!=null&&(j[_e.name]=$[et])}),a!=null&&a.forEach(_e=>j[_e.name]=null),{value:g,grads:j}}function customGrad(i){return ENGINE.customGrad(i)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function neg_(i){const o={x:convertToTensor(i,"x","neg")};return ENGINE.runKernel(Neg,o)}const neg$2=op({neg_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function softplus_(i){const o={x:convertToTensor(i,"x","softplus")};return ENGINE.runKernel(Softplus$1,o)}const softplus$2=op({softplus_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function logSigmoid_(i){const s=convertToTensor(i,"x","logSigmoid");return customGrad(a=>({value:neg$2(softplus$2(neg$2(a))),gradFunc:g=>mul(g,sigmoid$2(neg$2(a)))}))(s)}const logSigmoid=op({logSigmoid_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sub_(i,s){let o=convertToTensor(i,"a","sub"),a=convertToTensor(s,"b","sub");[o,a]=makeTypesMatch(o,a);const c={a:o,b:a};return ENGINE.runKernel(Sub,c)}const sub$2=op({sub_});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function logSoftmax_(i,s=-1){const o=convertToTensor(i,"logits","logSoftmax");if(s===-1&&(s=o.rank-1),s!==o.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${o.rank} and axis was ${s}`);return customGrad((c,d)=>{const $=max$3(c,s,!0),j=sub$2(c,$),_e=sub$2(cast$3(j,"float32"),log$2(sum$2(exp$2(j),s,!0)));return d([_e]),{value:_e,gradFunc:(_,b)=>{const[tt]=b,nt=!0,rt=exp$2(tt);return sub$2(_,mul(sum$2(_,s,nt),rt))}}})(o)}const logSoftmax=op({logSoftmax_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function logSumExp_(i,s=null,o=!1){const a=convertToTensor(i,"x","logSumExp"),c=parseAxisParam(s,a.shape),d=max$3(a,c,!0),g=sub$2(a,d),$=exp$2(g),j=sum$2($,c),_e=log$2(j),et=add$1(reshape$2(d,_e.shape),_e);if(o){const _=expandShapeToKeepDim(et.shape,c);return reshape$2(et,_)}return et}const logSumExp=op({logSumExp_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function logicalAnd_(i,s){const o=convertToTensor(i,"a","logicalAnd","bool"),a=convertToTensor(s,"b","logicalAnd","bool");assertAndGetBroadcastShape(o.shape,a.shape);const c={a:o,b:a};return ENGINE.runKernel(LogicalAnd,c)}const logicalAnd$2=op({logicalAnd_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function logicalNot_(i){const o={x:convertToTensor(i,"x","logicalNot","bool")};return ENGINE.runKernel(LogicalNot,o)}const logicalNot$2=op({logicalNot_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function logicalOr_(i,s){const o=convertToTensor(i,"a","logicalOr","bool"),a=convertToTensor(s,"b","logicalOr","bool");assertAndGetBroadcastShape(o.shape,a.shape);const c={a:o,b:a};return ENGINE.runKernel(LogicalOr,c)}const logicalOr$2=op({logicalOr_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function logicalXor_(i,s){const o=convertToTensor(i,"a","logicalXor","bool"),a=convertToTensor(s,"b","logicalXor","bool");return assertAndGetBroadcastShape(o.shape,a.shape),logicalAnd$2(logicalOr$2(i,s),logicalNot$2(logicalAnd$2(i,s)))}const logicalXor=op({logicalXor_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function maxPool_(i,s,o,a,c){const d=convertToTensor(i,"x","maxPool"),g=1;let $=d,j=!1;d.rank===3&&(j=!0,$=reshape$2(d,[1,d.shape[0],d.shape[1],d.shape[2]])),assert$1($.rank===4,()=>`Error in maxPool: input must be rank 4 but got rank ${$.rank}.`),assert$1(eitherStridesOrDilationsAreOne(o,g),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${o} and dilations '${g}'`),checkPadOnDimRoundingMode("maxPool",a,c);const _e={x:$},et={filterSize:s,strides:o,pad:a,dimRoundingMode:c},_=ENGINE.runKernel(MaxPool,_e,et);return j?reshape$2(_,[_.shape[1],_.shape[2],_.shape[3]]):_}const maxPool$2=op({maxPool_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function maxPool3d_(i,s=[1,1,1],o,a,c,d="NDHWC"){const g=convertToTensor(i,"x","maxPool3d");let $=g,j=!1;g.rank===4&&(j=!0,$=reshape$2(g,[1,g.shape[0],g.shape[1],g.shape[2],g.shape[3]])),assert$1($.rank===5,()=>`Error in maxPool3d: x must be rank 5 but got rank ${$.rank}.`),assert$1(d==="NDHWC",()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${d}`),checkPadOnDimRoundingMode("maxPool3d",a,c);const _e={x:$},et={filterSize:s,strides:o,pad:a,dimRoundingMode:c,dataFormat:d},_=ENGINE.runKernel(MaxPool3D,_e,et);return j?reshape$2(_,[_.shape[1],_.shape[2],_.shape[3],_.shape[4]]):_}const maxPool3d$1=op({maxPool3d_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function maximum_(i,s){let o=convertToTensor(i,"a","maximum"),a=convertToTensor(s,"b","maximum");[o,a]=makeTypesMatch(o,a),o.dtype==="bool"&&(o=cast$3(o,"int32"),a=cast$3(a,"int32")),assertAndGetBroadcastShape(o.shape,a.shape);const c={a:o,b:a};return ENGINE.runKernel(Maximum$1,c)}const maximum$2=op({maximum_});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mean_(i,s=null,o=!1){const c={x:convertToTensor(i,"x","mean")},d={axis:s,keepDims:o};return ENGINE.runKernel(Mean,c,d)}const mean$1=op({mean_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zeros$1(i,s="float32"){if(assertNonNegativeIntegerDimensions(i),s==="complex64"){const a=zeros$1(i,"float32"),c=zeros$1(i,"float32");return complex$2(a,c)}const o=makeZerosTypedArray(sizeFromShape(i),s);return ENGINE.makeTensor(o,i,s)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ones(i,s="float32"){if(assertNonNegativeIntegerDimensions(i),s==="complex64"){const a=ones(i,"float32"),c=zeros$1(i,"float32");return complex$2(a,c)}const o=makeOnesTypedArray(sizeFromShape(i),s);return ENGINE.makeTensor(o,i,s)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function minimum_(i,s){let o=convertToTensor(i,"a","minimum"),a=convertToTensor(s,"b","minimum");[o,a]=makeTypesMatch(o,a),o.dtype==="bool"&&(o=cast$3(o,"int32"),a=cast$3(a,"int32")),assertAndGetBroadcastShape(o.shape,a.shape);const c={a:o,b:a};return ENGINE.runKernel(Minimum$1,c)}const minimum$2=op({minimum_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mirrorPad_(i,s,o){assert$1(o==="reflect"||o==="symmetric",()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${o}.`);const a=convertToTensor(i,"x","mirrorPad");if(a.rank===0)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");assert$1(s.length===a.rank,()=>`Padding doesn't match input. Must be ${a.rank}. Got ${s.length}.`);const c=o==="reflect"?1:0;for(let $=0;$<a.rank;$++)assert$1(s[$].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),assert$1(s[$][0]>=0&&s[$][0]<=a.shape[$]-c&&s[$][1]>=0&&s[$][1]<=a.shape[$]-c,()=>`Padding in dimension ${$} cannot be greater than or equal to ${a.shape[$]-c} or less than 0 for input of shape ${a.shape}`);const d={paddings:s,mode:o},g={x:a};return ENGINE.runKernel(MirrorPad,g,d)}const mirrorPad$1=op({mirrorPad_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mod_(i,s){let o=convertToTensor(i,"a","mod"),a=convertToTensor(s,"b","mod");[o,a]=makeTypesMatch(o,a);const c={a:o,b:a};return ENGINE.runKernel(Mod,c)}const mod$2=op({mod_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function moments_(i,s=null,o=!1){i=convertToTensor(i,"x","moments");const a=parseAxisParam(s,i.shape),c=mean$1(i,a,o);let d=c.shape;o||(d=expandShapeToKeepDim(c.shape,a));const g=square$2(sub$2(cast$3(i,"float32"),reshape$2(c,d))),$=mean$1(g,a,o);return{mean:c,variance:$}}const moments=op({moments_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function notEqual_(i,s){let o=convertToTensor(i,"a","notEqual","string_or_numeric"),a=convertToTensor(s,"b","notEqual","string_or_numeric");[o,a]=makeTypesMatch(o,a),assertAndGetBroadcastShape(o.shape,a.shape);const c={a:o,b:a};return ENGINE.runKernel(NotEqual,c)}const notEqual$2=op({notEqual_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oneHot_(i,s,o=1,a=0,c="int32"){if(s<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${s}`);const g={indices:convertToTensor(i,"indices","oneHot","int32")},$={dtype:c,depth:s,onValue:o,offValue:a};return ENGINE.runKernel(OneHot,g,$)}const oneHot$2=op({oneHot_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function onesLike_(i){const o={x:convertToTensor(i,"x","onesLike")};return ENGINE.runKernel(OnesLike,o)}const onesLike$2=op({onesLike_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pad_(i,s,o=0){const a=convertToTensor(i,"x","pad");if(a.rank===0)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");const c={paddings:s,constantValue:o},d={x:a};return ENGINE.runKernel(PadV2,d,c)}const pad=op({pad_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function spaceToBatchND_(i,s,o){const a=convertToTensor(i,"x","spaceToBatchND");assert$1(a.rank>=1+s.length,()=>`input rank ${a.rank} should be > than [blockShape] ${s.length}`),assert$1(o.length===s.length,()=>`paddings.shape[0] ${o.length} must be equal to [blockShape] ${s.length}`),assert$1(a.shape.reduce((g,$,j)=>j>0&&j<=s.length?g&&($+o[j-1][0]+o[j-1][1])%s[j-1]===0:g,!0),()=>`input spatial dimensions ${a.shape.slice(1)} with paddings ${o.toString()} must be divisible by blockShapes ${s.toString()}`);const c={x:a},d={blockShape:s,paddings:o};return ENGINE.runKernel(SpaceToBatchND,c,d)}const spaceToBatchND$2=op({spaceToBatchND_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pool_(i,s,o,a,c,d,g){c==null&&(c=[1,1]),d==null&&(d=1),a===0&&(a="valid");const $=convertToTensor(i,"x","maxPool");let j=$,_e=!1;$.rank===3&&(_e=!0,j=reshape$2($,[1,$.shape[0],$.shape[1],$.shape[2]])),assert$1(eitherStridesOrDilationsAreOne(d,c),()=>`Error in pool: Either strides or dilations must be 1. Got strides ${d} and dilations '${c}'`);const et=computePool2DInfo(j.shape,s,d,c,a),_=[et.dilationHeight,et.dilationWidth];let b;a==="same"?b=withSpaceToBatchBasePaddings([et.filterHeight,et.filterWidth],_):b=[[0,0],[0,0]];const tt=_[0]===1&&_[1]===1,[nt,rt]=requiredSpaceToBatchPaddings([et.inHeight,et.inWidth],_,b),st=tt?a:"valid",ot=tt?j:spaceToBatchND$2(j,_,nt),at=(o==="avg"?()=>avgPool$2(ot,s,d,st,g):()=>maxPool$2(ot,s,d,st,g))(),lt=tt?at:batchToSpaceND$2(at,_,rt);return _e?reshape$2(lt,[lt.shape[1],lt.shape[2],lt.shape[3]]):lt}function requiredSpaceToBatchPaddings(i,s,o){const a=o.map(et=>et[0]),c=o.map(et=>et[1]),d=i.concat(a,c),g=s.map((et,_)=>(et-d[_]%et)%et),$=c.map((et,_)=>et+g[_]),j=s.map((et,_)=>[a[_],$[_]]),_e=s.map((et,_)=>[0,g[_]]);return[j,_e]}function withSpaceToBatchBasePaddings(i,s){const a=i.map((g,$)=>g+(g-1)*(s[$]-1)).map(g=>g-1),c=a.map(g=>Math.floor(g/2)),d=a.map((g,$)=>g-c[$]);return a.map((g,$)=>[c[$],d[$]])}const pool$1=op({pool_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function prelu_(i,s){const o=convertToTensor(i,"x","prelu"),a=convertToTensor(s,"alpha","prelu"),c={x:o,alpha:a};return ENGINE.runKernel(Prelu,c)}const prelu$2=op({prelu_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function prod_(i,s=null,o=!1){let a=convertToTensor(i,"x","prod");a.dtype==="bool"&&(a=cast$3(a,"int32"));const c={x:a},d={axis:s,keepDims:o};return ENGINE.runKernel(Prod,c,d)}const prod$2=op({prod_});var alea$1={exports:{}};alea$1.exports;(function(i){(function(s,o,a){function c(j){var _e=this,et=$();_e.next=function(){var _=2091639*_e.s0+_e.c*23283064365386963e-26;return _e.s0=_e.s1,_e.s1=_e.s2,_e.s2=_-(_e.c=_|0)},_e.c=1,_e.s0=et(" "),_e.s1=et(" "),_e.s2=et(" "),_e.s0-=et(j),_e.s0<0&&(_e.s0+=1),_e.s1-=et(j),_e.s1<0&&(_e.s1+=1),_e.s2-=et(j),_e.s2<0&&(_e.s2+=1),et=null}function d(j,_e){return _e.c=j.c,_e.s0=j.s0,_e.s1=j.s1,_e.s2=j.s2,_e}function g(j,_e){var et=new c(j),_=_e&&_e.state,b=et.next;return b.int32=function(){return et.next()*4294967296|0},b.double=function(){return b()+(b()*2097152|0)*11102230246251565e-32},b.quick=b,_&&(typeof _=="object"&&d(_,et),b.state=function(){return d(et,{})}),b}function $(){var j=4022871197,_e=function(et){et=String(et);for(var _=0;_<et.length;_++){j+=et.charCodeAt(_);var b=.02519603282416938*j;j=b>>>0,b-=j,b*=j,j=b>>>0,b-=j,j+=b*4294967296}return(j>>>0)*23283064365386963e-26};return _e}o&&o.exports?o.exports=g:this.alea=g})(commonjsGlobal,i)})(alea$1);var aleaExports=alea$1.exports,xor128$1={exports:{}};xor128$1.exports;(function(i){(function(s,o,a){function c($){var j=this,_e="";j.x=0,j.y=0,j.z=0,j.w=0,j.next=function(){var _=j.x^j.x<<11;return j.x=j.y,j.y=j.z,j.z=j.w,j.w^=j.w>>>19^_^_>>>8},$===($|0)?j.x=$:_e+=$;for(var et=0;et<_e.length+64;et++)j.x^=_e.charCodeAt(et)|0,j.next()}function d($,j){return j.x=$.x,j.y=$.y,j.z=$.z,j.w=$.w,j}function g($,j){var _e=new c($),et=j&&j.state,_=function(){return(_e.next()>>>0)/4294967296};return _.double=function(){do var b=_e.next()>>>11,tt=(_e.next()>>>0)/4294967296,nt=(b+tt)/(1<<21);while(nt===0);return nt},_.int32=_e.next,_.quick=_,et&&(typeof et=="object"&&d(et,_e),_.state=function(){return d(_e,{})}),_}o&&o.exports?o.exports=g:this.xor128=g})(commonjsGlobal,i)})(xor128$1);var xor128Exports=xor128$1.exports,xorwow$1={exports:{}};xorwow$1.exports;(function(i){(function(s,o,a){function c($){var j=this,_e="";j.next=function(){var _=j.x^j.x>>>2;return j.x=j.y,j.y=j.z,j.z=j.w,j.w=j.v,(j.d=j.d+362437|0)+(j.v=j.v^j.v<<4^(_^_<<1))|0},j.x=0,j.y=0,j.z=0,j.w=0,j.v=0,$===($|0)?j.x=$:_e+=$;for(var et=0;et<_e.length+64;et++)j.x^=_e.charCodeAt(et)|0,et==_e.length&&(j.d=j.x<<10^j.x>>>4),j.next()}function d($,j){return j.x=$.x,j.y=$.y,j.z=$.z,j.w=$.w,j.v=$.v,j.d=$.d,j}function g($,j){var _e=new c($),et=j&&j.state,_=function(){return(_e.next()>>>0)/4294967296};return _.double=function(){do var b=_e.next()>>>11,tt=(_e.next()>>>0)/4294967296,nt=(b+tt)/(1<<21);while(nt===0);return nt},_.int32=_e.next,_.quick=_,et&&(typeof et=="object"&&d(et,_e),_.state=function(){return d(_e,{})}),_}o&&o.exports?o.exports=g:this.xorwow=g})(commonjsGlobal,i)})(xorwow$1);var xorwowExports=xorwow$1.exports,xorshift7$1={exports:{}};xorshift7$1.exports;(function(i){(function(s,o,a){function c($){var j=this;j.next=function(){var et=j.x,_=j.i,b,tt;return b=et[_],b^=b>>>7,tt=b^b<<24,b=et[_+1&7],tt^=b^b>>>10,b=et[_+3&7],tt^=b^b>>>3,b=et[_+4&7],tt^=b^b<<7,b=et[_+7&7],b=b^b<<13,tt^=b^b<<9,et[_]=tt,j.i=_+1&7,tt};function _e(et,_){var b,tt=[];if(_===(_|0))tt[0]=_;else for(_=""+_,b=0;b<_.length;++b)tt[b&7]=tt[b&7]<<15^_.charCodeAt(b)+tt[b+1&7]<<13;for(;tt.length<8;)tt.push(0);for(b=0;b<8&&tt[b]===0;++b);for(b==8?tt[7]=-1:tt[b],et.x=tt,et.i=0,b=256;b>0;--b)et.next()}_e(j,$)}function d($,j){return j.x=$.x.slice(),j.i=$.i,j}function g($,j){$==null&&($=+new Date);var _e=new c($),et=j&&j.state,_=function(){return(_e.next()>>>0)/4294967296};return _.double=function(){do var b=_e.next()>>>11,tt=(_e.next()>>>0)/4294967296,nt=(b+tt)/(1<<21);while(nt===0);return nt},_.int32=_e.next,_.quick=_,et&&(et.x&&d(et,_e),_.state=function(){return d(_e,{})}),_}o&&o.exports?o.exports=g:this.xorshift7=g})(commonjsGlobal,i)})(xorshift7$1);var xorshift7Exports=xorshift7$1.exports,xor4096$1={exports:{}};xor4096$1.exports;(function(i){(function(s,o,a){function c($){var j=this;j.next=function(){var et=j.w,_=j.X,b=j.i,tt,nt;return j.w=et=et+1640531527|0,nt=_[b+34&127],tt=_[b=b+1&127],nt^=nt<<13,tt^=tt<<17,nt^=nt>>>15,tt^=tt>>>12,nt=_[b]=nt^tt,j.i=b,nt+(et^et>>>16)|0};function _e(et,_){var b,tt,nt,rt,st,ot=[],it=128;for(_===(_|0)?(tt=_,_=null):(_=_+"\0",tt=0,it=Math.max(it,_.length)),nt=0,rt=-32;rt<it;++rt)_&&(tt^=_.charCodeAt((rt+32)%_.length)),rt===0&&(st=tt),tt^=tt<<10,tt^=tt>>>15,tt^=tt<<4,tt^=tt>>>13,rt>=0&&(st=st+1640531527|0,b=ot[rt&127]^=tt+st,nt=b==0?nt+1:0);for(nt>=128&&(ot[(_&&_.length||0)&127]=-1),nt=127,rt=4*128;rt>0;--rt)tt=ot[nt+34&127],b=ot[nt=nt+1&127],tt^=tt<<13,b^=b<<17,tt^=tt>>>15,b^=b>>>12,ot[nt]=tt^b;et.w=st,et.X=ot,et.i=nt}_e(j,$)}function d($,j){return j.i=$.i,j.w=$.w,j.X=$.X.slice(),j}function g($,j){$==null&&($=+new Date);var _e=new c($),et=j&&j.state,_=function(){return(_e.next()>>>0)/4294967296};return _.double=function(){do var b=_e.next()>>>11,tt=(_e.next()>>>0)/4294967296,nt=(b+tt)/(1<<21);while(nt===0);return nt},_.int32=_e.next,_.quick=_,et&&(et.X&&d(et,_e),_.state=function(){return d(_e,{})}),_}o&&o.exports?o.exports=g:this.xor4096=g})(commonjsGlobal,i)})(xor4096$1);var xor4096Exports=xor4096$1.exports,tychei$1={exports:{}};tychei$1.exports;(function(i){(function(s,o,a){function c($){var j=this,_e="";j.next=function(){var _=j.b,b=j.c,tt=j.d,nt=j.a;return _=_<<25^_>>>7^b,b=b-tt|0,tt=tt<<24^tt>>>8^nt,nt=nt-_|0,j.b=_=_<<20^_>>>12^b,j.c=b=b-tt|0,j.d=tt<<16^b>>>16^nt,j.a=nt-_|0},j.a=0,j.b=0,j.c=-1640531527,j.d=1367130551,$===Math.floor($)?(j.a=$/4294967296|0,j.b=$|0):_e+=$;for(var et=0;et<_e.length+20;et++)j.b^=_e.charCodeAt(et)|0,j.next()}function d($,j){return j.a=$.a,j.b=$.b,j.c=$.c,j.d=$.d,j}function g($,j){var _e=new c($),et=j&&j.state,_=function(){return(_e.next()>>>0)/4294967296};return _.double=function(){do var b=_e.next()>>>11,tt=(_e.next()>>>0)/4294967296,nt=(b+tt)/(1<<21);while(nt===0);return nt},_.int32=_e.next,_.quick=_,et&&(typeof et=="object"&&d(et,_e),_.state=function(){return d(_e,{})}),_}o&&o.exports?o.exports=g:this.tychei=g})(commonjsGlobal,i)})(tychei$1);var tycheiExports=tychei$1.exports,seedrandom$1={exports:{}};const require$$0=getAugmentedNamespace(__viteBrowserExternal);(function(i){(function(s,o,a){var c=256,d=6,g=52,$="random",j=a.pow(c,d),_e=a.pow(2,g),et=_e*2,_=c-1,b;function tt(lt,ut,ct){var dt=[];ut=ut==!0?{entropy:!0}:ut||{};var pt=ot(st(ut.entropy?[lt,at(o)]:lt??it(),3),dt),ht=new nt(dt),ft=function(){for(var yt=ht.g(d),wt=j,_t=0;yt<_e;)yt=(yt+_t)*c,wt*=c,_t=ht.g(1);for(;yt>=et;)yt/=2,wt/=2,_t>>>=1;return(yt+_t)/wt};return ft.int32=function(){return ht.g(4)|0},ft.quick=function(){return ht.g(4)/4294967296},ft.double=ft,ot(at(ht.S),o),(ut.pass||ct||function(yt,wt,_t,bt){return bt&&(bt.S&&rt(bt,ht),yt.state=function(){return rt(ht,{})}),_t?(a[$]=yt,wt):yt})(ft,pt,"global"in ut?ut.global:this==a,ut.state)}function nt(lt){var ut,ct=lt.length,dt=this,pt=0,ht=dt.i=dt.j=0,ft=dt.S=[];for(ct||(lt=[ct++]);pt<c;)ft[pt]=pt++;for(pt=0;pt<c;pt++)ft[pt]=ft[ht=_&ht+lt[pt%ct]+(ut=ft[pt])],ft[ht]=ut;(dt.g=function(yt){for(var wt,_t=0,bt=dt.i,xt=dt.j,mt=dt.S;yt--;)wt=mt[bt=_&bt+1],_t=_t*c+mt[_&(mt[bt]=mt[xt=_&xt+wt])+(mt[xt]=wt)];return dt.i=bt,dt.j=xt,_t})(c)}function rt(lt,ut){return ut.i=lt.i,ut.j=lt.j,ut.S=lt.S.slice(),ut}function st(lt,ut){var ct=[],dt=typeof lt,pt;if(ut&&dt=="object")for(pt in lt)try{ct.push(st(lt[pt],ut-1))}catch{}return ct.length?ct:dt=="string"?lt:lt+"\0"}function ot(lt,ut){for(var ct=lt+"",dt,pt=0;pt<ct.length;)ut[_&pt]=_&(dt^=ut[_&pt]*19)+ct.charCodeAt(pt++);return at(ut)}function it(){try{var lt;return b&&(lt=b.randomBytes)?lt=lt(c):(lt=new Uint8Array(c),(s.crypto||s.msCrypto).getRandomValues(lt)),at(lt)}catch{var ut=s.navigator,ct=ut&&ut.plugins;return[+new Date,s,ct,s.screen,at(o)]}}function at(lt){return String.fromCharCode.apply(0,lt)}if(ot(a.random(),o),i.exports){i.exports=tt;try{b=require$$0}catch{}}else a["seed"+$]=tt})(typeof self<"u"?self:commonjsGlobal,[],Math)})(seedrandom$1);var seedrandomExports=seedrandom$1.exports,alea=aleaExports,xor128=xor128Exports,xorwow=xorwowExports,xorshift7=xorshift7Exports,xor4096=xor4096Exports,tychei=tycheiExports,sr=seedrandomExports;sr.alea=alea;sr.xor128=xor128;sr.xorwow=xorwow;sr.xorshift7=xorshift7;sr.xor4096=xor4096;sr.tychei=tychei;var seedrandom=sr;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class MPRandGauss{constructor(s,o,a,c,d){this.mean=s,this.stdDev=o,this.dtype=a,this.nextVal=NaN,this.truncated=c,this.truncated&&(this.upper=this.mean+this.stdDev*2,this.lower=this.mean-this.stdDev*2);const g=d||Math.random();this.random=seedrandom.alea(g.toString())}nextValue(){if(!isNaN(this.nextVal)){const c=this.nextVal;return this.nextVal=NaN,c}let s,o,a=!1;for(;!a;){let c,d,g;do c=2*this.random()-1,d=2*this.random()-1,g=c*c+d*d;while(g>=1||g===0);const $=Math.sqrt(-2*Math.log(g)/g);s=this.mean+this.stdDev*c*$,o=this.mean+this.stdDev*d*$,(!this.truncated||this.isValidTruncated(s))&&(a=!0)}return(!this.truncated||this.isValidTruncated(o))&&(this.nextVal=this.convertValue(o)),this.convertValue(s)}convertValue(s){return this.dtype==null||this.dtype==="float32"?s:Math.round(s)}isValidTruncated(s){return s<=this.upper&&s>=this.lower}}class UniformRandom{constructor(s=0,o=1,a,c){if(this.canReturnFloat=()=>this.dtype==null||this.dtype==="float32",this.min=s,this.range=o-s,this.dtype=a,c==null&&(c=Math.random()),typeof c=="number"&&(c=c.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${s} - ${o} <= 1 and dtype is not float`);this.random=seedrandom.alea(c)}convertValue(s){return this.canReturnFloat()?s:Math.round(s)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function randomNormal_(i,s=0,o=1,a,c){if(assertNonNegativeIntegerDimensions(i),a!=null&&a==="bool")throw new Error(`Unsupported data type ${a}`);const d=new MPRandGauss(s,o,a,!1,c),g=buffer(i,a);for(let $=0;$<g.values.length;$++)g.values[$]=d.nextValue();return g.toTensor()}const randomNormal$1=op({randomNormal_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function randomUniform_(i,s=0,o=1,a="float32",c){assertNonNegativeIntegerDimensions(i);const d=buffer(i,a),g=new UniformRandom(s,o,null,c);for(let $=0;$<d.values.length;$++)d.values[$]=g.nextValue();return d.toTensor()}const randomUniform=op({randomUniform_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function range$3(i,s,o=1,a="float32"){if(o===0)throw new Error("Cannot have a step of zero");const c={start:i,stop:s,step:o,dtype:a};return ENGINE.runKernel(Range,{},c)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function real_(i){const o={input:convertToTensor(i,"input","real")};return ENGINE.runKernel(Real,o)}const real$2=op({real_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function reciprocal_(i){const o={x:convertToTensor(i,"x","reciprocal")};return ENGINE.runKernel(Reciprocal,o)}const reciprocal$2=op({reciprocal_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function relu_(i){const o={x:convertToTensor(i,"x","relu")};return ENGINE.runKernel(Relu$1,o)}const relu$2=op({relu_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function relu6_(i){const o={x:convertToTensor(i,"x","relu6")};return ENGINE.runKernel(Relu6$1,o)}const relu6$2=op({relu6_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function reverse_(i,s){const a={x:convertToTensor(i,"x","reverse")},c={dims:s};return ENGINE.runKernel(Reverse,a,c)}const reverse$2=op({reverse_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function round_(i){const o={x:convertToTensor(i,"x","round")};return ENGINE.runKernel(Round,o)}const round$2=op({round_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rsqrt_(i){const o={x:convertToTensor(i,"x","rsqrt","float32")};return ENGINE.runKernel(Rsqrt,o)}const rsqrt$2=op({rsqrt_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function selu_(i){const o={x:convertToTensor(i,"x","selu")};return ENGINE.runKernel(Selu$1,o)}const selu$2=op({selu_});function separableConv2d_(i,s,o,a,c,d=[1,1],g="NHWC"){const $=convertToTensor(i,"x","separableConv2d"),j=convertToTensor(s,"depthwiseFilter","separableConv2d"),_e=convertToTensor(o,"pointwiseFilter","separableConv2d");let et=$,_=!1;if($.rank===3&&(_=!0,et=reshape$2($,[1,$.shape[0],$.shape[1],$.shape[2]])),g==="NCHW")throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");assert$1(et.rank===4,()=>`Error in separableConv2d: input must be rank 4, but got rank ${et.rank}.`),assert$1(j.rank===4,()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${j.rank}.`),assert$1(_e.rank===4,()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${j.rank}.`),assert$1(_e.shape[0]===1,()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${_e.shape[0]}.`),assert$1(_e.shape[1]===1,()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${_e.shape[1]}.`);const b=j.shape[2],tt=j.shape[3];assert$1(_e.shape[2]===b*tt,()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${b*tt}, but got ${_e.shape[2]}.`);const nt=depthwiseConv2d$1(et,j,a,c,g,d),st=conv2d$2(nt,_e,1,"valid",g);return _?reshape$2(st,[st.shape[1],st.shape[2],st.shape[3]]):st}const separableConv2d=op({separableConv2d_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sign_(i){const o={x:convertToTensor(i,"x","sign")};return ENGINE.runKernel(Sign,o)}const sign$2=op({sign_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sin_(i){const o={x:convertToTensor(i,"x","sin","float32")};return ENGINE.runKernel(Sin,o)}const sin$2=op({sin_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sinh_(i){const o={x:convertToTensor(i,"x","sinh")};return ENGINE.runKernel(Sinh,o)}const sinh$2=op({sinh_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function slice1d_(i,s,o){const a=convertToTensor(i,"x","slice1d");return assert$1(a.rank===1,()=>`slice1d expects a rank-1 tensor, but got a rank-${a.rank} tensor`),slice$2(a,[s],[o])}const slice1d=op({slice1d_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function slice2d_(i,s,o){const a=convertToTensor(i,"x","slice2d");return assert$1(a.rank===2,()=>`slice2d expects a rank-2 tensor, but got a rank-${a.rank} tensor`),slice$2(a,s,o)}const slice2d=op({slice2d_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function slice3d_(i,s,o){const a=convertToTensor(i,"x","slice3d");return assert$1(a.rank===3,()=>`slice3d expects a rank-3 tensor, but got a rank-${a.rank} tensor`),slice$2(a,s,o)}const slice3d=op({slice3d_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function slice4d_(i,s,o){const a=convertToTensor(i,"x","slice4d");return assert$1(a.rank===4,()=>`slice4d expects a rank-4 tensor, but got a rank-${a.rank} tensor`),slice$2(a,s,o)}const slice4d=op({slice4d_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function softmax_(i,s=-1){const o=convertToTensor(i,"logits","softmax","float32");if(s===-1&&(s=o.rank-1),s!==o.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${o.rank} and dim was ${s}`);const a={logits:o},c={dim:s};return ENGINE.runKernel(Softmax$2,a,c)}const softmax$2=op({softmax_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fft_(i){assert$1(i.dtype==="complex64",()=>`The dtype for tf.spectral.fft() must be complex64 but got ${i.dtype}.`);const s={input:i};return ENGINE.runKernel(FFT,s)}const fft$2=op({fft_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ifft_(i){assert$1(i.dtype==="complex64",()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${i.dtype}.`);const s={input:i};return ENGINE.runKernel(IFFT,s)}const ifft$2=op({ifft_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function irfft_(i){const s=i.shape[i.shape.length-1],o=i.size/s;let a;if(s<=2){const c=reshape$2(i,[o,s]);a=ifft$2(c)}else{const c=[o,2*(s-1)],d=reshape$2(real$2(i),[o,s]),g=reshape$2(imag$2(i),[o,s]),$=reverse$2(slice$2(d,[0,1],[o,s-2]),1),j=mul(reverse$2(slice$2(g,[0,1],[o,s-2]),1),scalar(-1)),_e=concat$2([d,$],1),et=concat$2([g,j],1),_=reshape$2(complex$2(_e,et),[c[0],c[1]]);a=ifft$2(_)}if(a=real$2(a),i.rank===3&&i.shape[0]!==0){const c=a,d=i.shape[0];a=reshape$2(a,[d,a.shape[0]/d,a.shape[1]]),c.dispose()}return a}const irfft=op({irfft_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function split_(i,s,o=0){const c={x:convertToTensor(i,"x","split")},d={numOrSizeSplits:s,axis:o};return ENGINE.runKernel(SplitV,c,d)}const split$1=op({split_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rfft_(i,s){assert$1(i.dtype==="float32",()=>`The dtype for rfft() must be real value but got ${i.dtype}`);let o=i.shape[i.shape.length-1];const a=i.size/o;let c;if(s!=null&&s<o){const nt=i.shape.map(st=>0),rt=i.shape.map(st=>st);rt[i.shape.length-1]=s,c=slice$2(i,nt,rt),o=s}else if(s!=null&&s>o){const nt=i.shape.map(rt=>rt);nt[i.shape.length-1]=s-o,c=concat$2([i,zeros$1(nt)],i.shape.length-1),o=s}else c=i;const d=zerosLike$2(c),g=reshape$2(complex$2(c,d),[a,o]),$=fft$2(g),j=Math.floor(o/2)+1,_e=real$2($),et=imag$2($),_=split$1(_e,[j,o-j],_e.shape.length-1),b=split$1(et,[j,o-j],et.shape.length-1),tt=c.shape.slice();return tt[c.shape.length-1]=j,reshape$2(complex$2(_[0],b[0]),tt)}const rfft=op({rfft_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function squaredDifference_(i,s){let o=convertToTensor(i,"a","squaredDifference"),a=convertToTensor(s,"b","squaredDifference");[o,a]=makeTypesMatch(o,a),assertAndGetBroadcastShape(o.shape,a.shape);const c={a:o,b:a},d={};return ENGINE.runKernel(SquaredDifference,c,d)}const squaredDifference$2=op({squaredDifference_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function squeeze_(i,s){const o=convertToTensor(i,"x","squeeze","string_or_numeric");return reshape$2(o,squeezeShape(o.shape,s).newShape)}const squeeze=op({squeeze_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function stack_(i,s=0){const o=convertToTensorArray(i,"tensors","stack","string_or_numeric");assert$1(o.length>=1,()=>"Pass at least one tensor to tf.stack"),o.length>0&&assert$1(s<=o[0].rank,()=>"Axis must be <= rank of the tensor");const a=o,c={axis:s};return ENGINE.runKernel(Pack,a,c)}const stack=op({stack_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function step_(i,s=0){const a={x:convertToTensor(i,"x","step")},c={alpha:s};return ENGINE.runKernel(Step,a,c)}const step$2=op({step_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function stridedSlice_(i,s,o,a,c=0,d=0,g=0,$=0,j=0){const et={x:convertToTensor(i,"x","stridedSlice","string_or_numeric")},_={begin:s,end:o,strides:a,beginMask:c,endMask:d,ellipsisMask:g,newAxisMask:$,shrinkAxisMask:j};return ENGINE.runKernel(StridedSlice,et,_)}const stridedSlice$2=op({stridedSlice_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tan_(i){const o={x:convertToTensor(i,"x","tan","float32")};return ENGINE.runKernel(Tan,o)}const tan$2=op({tan_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tensor1d(i,s){assertNonNull(i);const o=inferShape(i,s);if(o.length!==1)throw new Error("tensor1d() requires values to be a flat/TypedArray");return makeTensor(i,null,o,s)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tensor2d(i,s,o){if(assertNonNull(i),s!=null&&s.length!==2)throw new Error("tensor2d() requires shape to have two numbers");const a=inferShape(i,o);if(a.length!==2&&a.length!==1)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(a.length===1&&s==null)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return makeTensor(i,s,a,o)}function validateUpdateShape(i,s,o){const a=s.rank>1?s.shape[s.rank-1]:1,c=s.rank>1?s.rank-1:1,d=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${o.shape}, indices.shape: ${s.shape}, shape: ${i}, sliceDim: ${a}, and batchDim: ${c}.`;if(o.rank<c)throw new Error(d+` update.rank < ${c}. `);if(i.length<a+(o.rank-c))throw new Error(d+` Output shape length < ${a+(o.rank-c)}`);if(o.rank!==c+i.length-a)throw new Error(d+` update.rank != ${c+i.length-a}`);for(let g=0;g<c;++g)if(o.shape[g]!==s.shape[g])throw new Error(d+` updates.shape[${g}] (${o.shape[g]}) != indices.shape[${g}] (${s.shape[g]}).`);for(let g=0;g<o.rank-c;++g)if(o.shape[g+c]!==i[g+a])throw new Error(d+` updates.shape[${g+c}] (${o.shape[g+c]}) != shape[${g+c}] (${i[g+c]})`)}function validateInput(i,s,o){if(s.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${s.rank}.`);if(i.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${i.rank}.`);if(s.dtype!=="int32")throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${s.dtype}`);if(o.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${o}`);if(o.length===0){if(s.size===0)throw new Error(`Indices specified for empty output. indices shape: ${s.shape}`);if(i.size===0)throw new Error(`Updates specified for empty output. updates shape: ${i.shape}`)}validateUpdateShape(o,s,i)}function calculateShapes(i,s,o){const a=s.shape.length,c=a>1?s.shape[a-1]:1,d=o.length;let g=1;for(let _=c;_<d;++_)g*=o[_];const $=c<1?1:c,j=sizeFromShape(s.shape)/$,_e=[...computeStrides(o.slice(0,c)),1],et=sizeFromShape(o);return{sliceRank:c,numUpdates:j,sliceSize:g,strides:_e,outputSize:et}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function topk_(i,s=1,o=!0){const a=convertToTensor(i,"x","topk");if(a.rank===0)throw new Error("topk() expects the input to be of rank 1 or higher");const c=a.shape[a.shape.length-1];if(s<0)throw new Error(`'k' passed to topk() must be >= 0 but got ${s}`);if(s>c)throw new Error(`'k' passed to topk() must be <= the last dimension (${c}) but got ${s}`);const d={x:a},g={k:s,sorted:o},[$,j]=ENGINE.runKernel(TopK,d,g);return{values:$,indices:j}}const topk=op({topk_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function truncatedNormal_(i,s=0,o=1,a,c){if(assertNonNegativeIntegerDimensions(i),a!=null&&a==="bool")throw new Error("Unsupported data type $ { dtype }");const d=new MPRandGauss(s,o,a,!0,c),g=buffer(i,a);for(let $=0;$<g.values.length;$++)g.values[$]=d.nextValue();return g.toTensor()}const truncatedNormal=op({truncatedNormal_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function unique_(i,s=0){const o=convertToTensor(i,"x","unique","string_or_numeric");assert$1(o.rank>0,()=>"The input tensor must be at least 1D");const a={x:o},c={axis:s},[d,g]=ENGINE.runKernel(Unique,a,c);return{values:d,indices:g}}const unique$3=op({unique_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function unsortedSegmentSum_(i,s,o){const a=convertToTensor(i,"x","unsortedSegmentSum"),c=convertToTensor(s,"segmentIds","unsortedSegmentSum","int32");assert$1(isInt(o),()=>"numSegments must be of dtype int");const d={x:a,segmentIds:c},g={numSegments:o};return ENGINE.runKernel(UnsortedSegmentSum,d,g)}const unsortedSegmentSum$2=op({unsortedSegmentSum_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function unstack_(i,s=0){const o=convertToTensor(i,"x","unstack","string_or_numeric");assert$1(s>=-o.shape.length&&s<o.shape.length,()=>`Axis = ${s} is not in [-${o.shape.length}, ${o.shape.length})`);const a={value:o},c={axis:s};return ENGINE.runKernel(Unpack,a,c)}const unstack=op({unstack_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function variable(i,s=!0,o,a){return ENGINE.makeVariable(i,s,o,a)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function whereImpl$2(i,s){const o=[];for(let d=0;d<s.length;d++)s[d]&&o.push(d);const a=buffer(i,"int32"),c=buffer([o.length,i.length],"int32");for(let d=0;d<o.length;d++){const g=a.indexToLoc(o[d]),$=d*i.length;c.values.set(g,$)}return c.toTensor()}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function transpose_(i,s,o){const a=convertToTensor(i,"x","transpose");if(s==null&&(s=a.shape.map((g,$)=>$).reverse()),assert$1(a.rank===s.length,()=>`Error in transpose: rank of input ${a.rank} must match length of perm ${s}.`),s.forEach(g=>{assert$1(g>=0&&g<a.rank,()=>`All entries in 'perm' must be between 0 and ${a.rank-1} but got ${s}`)}),a.rank<=1)return a.clone();const c={x:a},d={perm:s};return a.dtype==="complex64"?tidy(()=>{let g=real$2(a),$=imag$2(a);return g=ENGINE.runKernel(Transpose,{x:g},d),$=ENGINE.runKernel(Transpose,{x:$},d),o&&($=neg$2($)),complex$2(g,$)}):ENGINE.runKernel(Transpose,c,d)}const transpose$2=op({transpose_});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function getNoiseShape(i,s){if(s==null)return i.shape.slice();if(arraysEqual(i.shape,s))return s;if(i.shape.length===s.length){const o=[];for(let a=0;a<i.shape.length;a++)s[a]==null&&i.shape[a]!=null?o.push(i.shape[a]):o.push(s[a]);return o}return s}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dropout_(i,s,o,a){const c=convertToTensor(i,"x","dropout");if(assert$1(c.dtype==="float32",()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${c.dtype} tensor instead.`),assert$1(s>=0&&s<1,()=>`rate must be a float in the range [0, 1), but got ${s}.`),s===0)return i instanceof Tensor?c.clone():c;const d=getNoiseShape(c,o),g=1-s,$=div$1(floor$2(add$1(randomUniform(d,0,1,"float32",a),g)),g);return mul(c,$)}const dropout$1=op({dropout_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function conv2DBackpropFilter_(i,s,o,a,c,d="NHWC",g){let $=i;i.rank===3&&($=reshape$2(i,[1,i.shape[0],i.shape[1],i.shape[2]]));let j=s;j.rank===3&&(j=reshape$2(s,[1,s.shape[0],s.shape[1],s.shape[2]])),assert$1($.rank===4,()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${$.shape}.`),assert$1(j.rank===4,()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${j.shape}.`),assert$1(o.length===4,()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${o}.`);const _e=d==="NHWC"?$.shape[3]:$.shape[1],et=d==="NHWC"?j.shape[3]:j.shape[1];assert$1(_e===o[2],()=>`Error in conv2dDerFilter: depth of input ${_e}) must match input depth in filter (${o[2]}.`),assert$1(et===o[3],()=>`Error in conv2dDerFilter: depth of dy (${et}) must match output depth for filter (${o[3]}).`),checkPadOnDimRoundingMode("conv2dDerFilter",c,g);const _={x:$,dy:j},b={strides:a,pad:c,dataFormat:d,dimRoundingMode:g,filterShape:o};return ENGINE.runKernel(Conv2DBackpropFilter,_,b)}const conv2DBackpropFilter$2=op({conv2DBackpropFilter_});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function getFusedDyActivation(i,s,o){if(o==null||o==="linear")return i;if(o==="relu")return mul(i,step$2(s));throw new Error(`Cannot compute gradient for fused activation ${o}.`)}function getFusedBiasGradient(i,s){let o=s;const a=getReductionAxes(i.shape,s.shape);return a.length>0&&(o=sum$2(o,a)),reshape$2(o,i.shape)}function applyActivation$1(i,s,o,a){if(s==="linear")return i;if(s==="relu")return relu$2(i);if(s==="elu")return elu$3(i);if(s==="relu6")return relu6$2(i);if(s==="prelu")return prelu$2(i,o);if(s==="leakyrelu")return leakyRelu$2(i,a);if(s==="sigmoid")return sigmoid$2(i);throw new Error(`Unknown fused activation ${s}.`)}const shouldFuse=(i,s)=>!(i>0)||s==="linear";/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fusedConv2d_({x:i,filter:s,strides:o,pad:a,dataFormat:c="NHWC",dilations:d=[1,1],dimRoundingMode:g,bias:$,activation:j="linear",preluActivationWeights:_e,leakyreluAlpha:et}){if(j=j||"linear",shouldFuse(ENGINE.state.gradientDepth,j)===!1){assert$1(c==="NHWC",()=>`Error in fused conv2d: got dataFormat of ${c} but only NHWC is currently supported for the case of gradient depth is 0 and the activation is not linear.`);let ct=conv2d$2(i,s,o,a,c,d,g);return $!=null&&(ct=add$1(ct,$)),applyActivation$1(ct,j,_e,et)}const _=convertToTensor(i,"x","conv2d","float32"),b=convertToTensor(s,"filter","conv2d","float32");let tt=_,nt=!1;_.rank===3&&(nt=!0,tt=reshape$2(_,[1,_.shape[0],_.shape[1],_.shape[2]])),assert$1(tt.rank===4,()=>`Error in fused conv2d: input must be rank 4, but got rank ${tt.rank}.`),assert$1(b.rank===4,()=>`Error in fused conv2d: filter must be rank 4, but got rank ${b.rank}.`),checkPadOnDimRoundingMode("fused conv2d",a,g);const rt=c==="NHWC"?tt.shape[3]:tt.shape[1];assert$1(b.shape[2]===rt,()=>`Error in conv2d: depth of input (${rt}) must match input depth for filter ${b.shape[2]}.`),assert$1(eitherStridesOrDilationsAreOne(o,d),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${o} and dilations '${d}'`);const st=computeConv2DInfo(tt.shape,b.shape,o,d,a,g);let ot;$!=null&&(ot=convertToTensor($,"bias","fused conv2d"),[ot]=makeTypesMatch(ot,_),c==="NHWC"?assertAndGetBroadcastShape(st.outShape,ot.shape):(assert$1(ot.shape.length<=1,()=>`Error in fused conv2d: only supports scalar or 1-D Tensor bias for NCHW format but got the bias of rank-${ot.shape.length}.`),assert$1(ot.shape.length===0||ot.shape[0]===st.outChannels||ot.shape[0]===1,()=>`Error in fused conv2d: bias shape (${ot.shape}) is not compatible with the number of output channels (${st.outChannels})`)));let it;if(_e!=null){const ct=_e.shape;if(assert$1(ct.length<=1||ct.length===3,()=>`Error in fused conv2d: only supports scalar, 1-D Tensor or 3-D Tensor PReLU activation weights but got a tensor of rank-${ct.length}.`),ct.length===1)assert$1(ct[0]===1||ct[0]===st.outChannels,()=>`Error in fused conv2d: PReLU activation weights (${ct}) is not compatible with the number of output channels (${st.outChannels}).`);else if(ct.length===3)try{assertAndGetBroadcastShape(ct,st.outShape)}catch{const pt=`Error in fused conv2d: PReLU activation weights (${ct}) is not compatible with the output shape of the conv2d (${st.outShape}).`;throw Error(pt)}it=convertToTensor(_e,"prelu weights","fused conv2d")}const at=(ct,dt)=>{assert$1(c==="NHWC",()=>`Error in gradient of fused conv2D: got dataFormat of ${c} but only NHWC is currently supported.`);const[pt,ht,ft,yt]=dt,wt=getFusedDyActivation(ct,ft,j);assert$1(tupleValuesAreOne(d),()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${d}'`);const _t=conv2DBackpropInput$2(ht.shape,wt,pt,o,a),bt=conv2DBackpropFilter$2(ht,wt,pt.shape,o,a),xt=[_t,bt];if(yt!=null){const mt=getFusedBiasGradient(yt,wt);xt.push(mt)}return xt},lt={x:tt,filter:b,bias:ot,preluActivationWeights:it},ut={strides:o,pad:a,dataFormat:c,dilations:d,dimRoundingMode:g,activation:j,leakyreluAlpha:et};return $==null?customGrad((dt,pt,ht)=>{let ft=ENGINE.runKernel(FusedConv2D,lt,ut);return ht([pt,dt,ft]),nt&&(ft=reshape$2(ft,[ft.shape[1],ft.shape[2],ft.shape[3]])),{value:ft,gradFunc:at}})(tt,b):customGrad((dt,pt,ht,ft)=>{let yt=ENGINE.runKernel(FusedConv2D,lt,ut);return ft([pt,dt,yt,ht]),nt&&(yt=reshape$2(yt,[yt.shape[1],yt.shape[2],yt.shape[3]])),{value:yt,gradFunc:at}})(tt,b,ot)}const conv2d$1=op({fusedConv2d_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function depthwiseConv2dNativeBackpropFilter_(i,s,o,a,c,d=[1,1],g){let $=i;i.rank===3&&($=reshape$2(i,[1,i.shape[0],i.shape[1],i.shape[2]]));let j=s;j.rank===3&&(j=reshape$2(s,[1,s.shape[0],s.shape[1],s.shape[2]]));const _e={x:$,dy:j},et={strides:a,pad:c,dimRoundingMode:g,dilations:d,filterShape:o};return ENGINE.runKernel(DepthwiseConv2dNativeBackpropFilter,_e,et)}const depthwiseConv2dNativeBackpropFilter$2=op({depthwiseConv2dNativeBackpropFilter_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function depthwiseConv2dNativeBackpropInput_(i,s,o,a,c,d=[1,1],g){let $=s,j=!1;s.rank===3&&(j=!0,$=reshape$2(s,[1,s.shape[0],s.shape[1],s.shape[2]]));const _e={dy:$,filter:o},et={strides:a,pad:c,dimRoundingMode:g,dilations:d,inputShape:i},_=ENGINE.runKernel(DepthwiseConv2dNativeBackpropInput,_e,et);return j?reshape$2(_,[_.shape[1],_.shape[2],_.shape[3]]):_}const depthwiseConv2dNativeBackpropInput$2=op({depthwiseConv2dNativeBackpropInput_});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fusedMatMul_({a:i,b:s,transposeA:o=!1,transposeB:a=!1,bias:c,activation:d="linear",preluActivationWeights:g,leakyreluAlpha:$=.2}){if(shouldFuse(ENGINE.state.gradientDepth,d)===!1){let yt=matMul$1(i,s,o,a);return c!=null&&(yt=add$1(yt,c)),applyActivation$1(yt,d,g,$)}let j=convertToTensor(i,"a","fused matMul"),_e=convertToTensor(s,"b","fused matMul");[j,_e]=makeTypesMatch(j,_e);const et=o?j.shape[j.rank-2]:j.shape[j.rank-1],_=a?_e.shape[_e.rank-1]:_e.shape[_e.rank-2],b=o?j.shape[j.rank-1]:j.shape[j.rank-2],tt=a?_e.shape[_e.rank-2]:_e.shape[_e.rank-1],nt=j.shape.slice(0,-2),rt=_e.shape.slice(0,-2),st=sizeFromShape(nt),ot=sizeFromShape(rt);assert$1(et===_,()=>`Error in fused matMul: inner shapes (${et}) and (${_}) of Tensors with shapes ${j.shape} and ${_e.shape} and transposeA=${o} and transposeB=${a} must match.`);const at=assertAndGetBroadcastShape(j.shape.slice(0,-2),_e.shape.slice(0,-2)).concat([b,tt]),lt=o?reshape$2(j,[st,et,b]):reshape$2(j,[st,b,et]),ut=a?reshape$2(_e,[ot,tt,_]):reshape$2(_e,[ot,_,tt]);let ct;c!=null&&(ct=convertToTensor(c,"bias","fused matMul"),[ct]=makeTypesMatch(ct,j),assertAndGetBroadcastShape(at,ct.shape));let dt;g!=null&&(dt=convertToTensor(g,"prelu weights","fused matMul"));const pt=(yt,wt)=>{const[_t,bt,xt,mt]=wt,vt=getFusedDyActivation(reshape$2(yt,xt.shape),xt,d);let Et,Ct;if(!o&&!a?(Et=matMul$1(vt,bt,!1,!0),Ct=matMul$1(_t,vt,!0,!1)):!o&&a?(Et=matMul$1(vt,bt,!1,!1),Ct=matMul$1(vt,_t,!0,!1)):o&&!a?(Et=matMul$1(bt,vt,!1,!0),Ct=matMul$1(_t,vt,!1,!1)):(Et=matMul$1(bt,vt,!0,!0),Ct=matMul$1(vt,_t,!0,!0)),c!=null){const kt=getFusedBiasGradient(mt,vt);return[Et,Ct,kt]}else return[Et,Ct]},ht={a:lt,b:ut,bias:ct,preluActivationWeights:dt},ft={transposeA:o,transposeB:a,activation:d,leakyreluAlpha:$};return c==null?customGrad((wt,_t,bt)=>{const xt=ENGINE.runKernel(_FusedMatMul,ht,ft);return bt([wt,_t,xt]),{value:reshape$2(xt,at),gradFunc:pt}})(lt,ut):customGrad((wt,_t,bt,xt)=>{const mt=ENGINE.runKernel(_FusedMatMul,ht,ft);return xt([wt,_t,mt,bt]),{value:reshape$2(mt,at),gradFunc:pt}})(lt,ut,ct)}const matMul=op({fusedMatMul_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cropAndResize_(i,s,o,a,c="bilinear",d=0){const g=convertToTensor(i,"image","cropAndResize"),$=convertToTensor(s,"boxes","cropAndResize","float32"),j=convertToTensor(o,"boxInd","cropAndResize","int32"),_e=$.shape[0];assert$1(g.rank===4,()=>`Error in cropAndResize: image must be rank 4,but got rank ${g.rank}.`),assert$1($.rank===2&&$.shape[1]===4,()=>`Error in cropAndResize: boxes must be have size [${_e},4] but had shape ${$.shape}.`),assert$1(j.rank===1&&j.shape[0]===_e,()=>`Error in cropAndResize: boxInd must be have size [${_e}] but had shape ${$.shape}.`),assert$1(a.length===2,()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${a.length}.`),assert$1(a[0]>=1&&a[1]>=1,()=>`cropSize must be atleast [1,1], but was ${a}`),assert$1(c==="bilinear"||c==="nearest",()=>`method must be bilinear or nearest, but was ${c}`);const et={image:g,boxes:$,boxInd:j},_={method:c,extrapolationValue:d,cropSize:a};return ENGINE.runKernel(CropAndResize,et,_)}const cropAndResize$3=op({cropAndResize_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function flipLeftRight_(i){const s=convertToTensor(i,"image","flipLeftRight","float32");assert$1(s.rank===4,()=>`Error in flipLeftRight: image must be rank 4,but got rank ${s.rank}.`);const o={image:s};return ENGINE.runKernel(FlipLeftRight,o,{})}const flipLeftRight=op({flipLeftRight_});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function grayscaleToRGB_(i){const s=convertToTensor(i,"image","grayscaleToRGB"),o=s.rank-1,a=s.shape[o];assert$1(s.rank>=2,()=>`Error in grayscaleToRGB: images must be at least rank 2, but got rank ${s.rank}.`),assert$1(a===1,()=>`Error in grayscaleToRGB: last dimension of a grayscale image should be size 1, but got size ${a}.`);const c=new Array(s.rank);return c.fill(1,0,o),c[o]=3,tile$3(s,c)}const grayscaleToRGB=op({grayscaleToRGB_});/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rgbToGrayscale_(i){const s=convertToTensor(i,"image","RGBToGrayscale"),o=s.rank-1,a=s.shape[o];assert$1(s.rank>=2,()=>`Error in RGBToGrayscale: images must be at least rank 2, but got rank ${s.rank}.`),assert$1(a===3,()=>`Error in RGBToGrayscale: last dimension of an RGB image should be size 3, but got size ${a}.`);const c=s.dtype,d=cast$3(s,"float32"),g=tensor1d([.2989,.587,.114]);let $;switch(s.rank){case 2:$=einsum$2("ij,j->i",d,g);break;case 3:$=einsum$2("ijk,k->ij",d,g);break;case 4:$=einsum$2("ijkl,l->ijk",d,g);break;case 5:$=einsum$2("ijklm,m->ijkl",d,g);break;case 6:$=einsum$2("ijklmn,n->ijklm",d,g);break;default:throw new Error("Not a valid tensor rank.")}return $=expandDims$3($,-1),cast$3($,c)}const rgbToGrayscale=op({rgbToGrayscale_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rotateWithOffset_(i,s,o=0,a=.5){const c=convertToTensor(i,"image","rotateWithOffset","float32");assert$1(c.rank===4,()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${c.rank}.`);const d={image:c},g={radians:s,fillValue:o,center:a};return ENGINE.runKernel(RotateWithOffset,d,g)}const rotateWithOffset=op({rotateWithOffset_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nonMaxSuppSanityCheck(i,s,o,a,c,d){a==null&&(a=.5),c==null&&(c=Number.NEGATIVE_INFINITY),d==null&&(d=0);const g=i.shape[0];return o=Math.min(o,g),assert$1(0<=a&&a<=1,()=>`iouThreshold must be in [0, 1], but was '${a}'`),assert$1(i.rank===2,()=>`boxes must be a 2D tensor, but was of rank '${i.rank}'`),assert$1(i.shape[1]===4,()=>`boxes must have 4 columns, but 2nd dimension was ${i.shape[1]}`),assert$1(s.rank===1,()=>"scores must be a 1D tensor"),assert$1(s.shape[0]===g,()=>`scores has incompatible shape with boxes. Expected ${g}, but was ${s.shape[0]}`),assert$1(0<=d&&d<=1,()=>`softNmsSigma must be in [0, 1], but was '${d}'`),{maxOutputSize:o,iouThreshold:a,scoreThreshold:c,softNmsSigma:d}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nonMaxSuppression_(i,s,o,a=.5,c=Number.NEGATIVE_INFINITY){const d=convertToTensor(i,"boxes","nonMaxSuppression","float32"),g=convertToTensor(s,"scores","nonMaxSuppression","float32"),$=nonMaxSuppSanityCheck(d,g,o,a,c);o=$.maxOutputSize,a=$.iouThreshold,c=$.scoreThreshold;const j={maxOutputSize:o,iouThreshold:a,scoreThreshold:c};return ENGINE.runKernel(NonMaxSuppressionV3,{boxes:d,scores:g},j)}const nonMaxSuppression=op({nonMaxSuppression_});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function binaryInsert(i,s,o){const a=binarySearch(i,s,o),c=a<0?-(a+1):a;i.splice(c,0,s)}function binarySearch(i,s,o){return binarySearch_(i,s,o||defaultComparator)}function defaultComparator(i,s){return i>s?1:i<s?-1:0}function binarySearch_(i,s,o){let a=0,c=i.length,d=0,g=!1;for(;a<c;){d=a+(c-a>>>1);const $=o(s,i[d]);$>0?a=d+1:(c=d,g=!$)}return g?a:-a-1}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nonMaxSuppressionV3Impl$2(i,s,o,a,c){return nonMaxSuppressionImpl_(i,s,o,a,c,0)}function nonMaxSuppressionV4Impl$2(i,s,o,a,c,d){return nonMaxSuppressionImpl_(i,s,o,a,c,0,!1,d,!0)}function nonMaxSuppressionV5Impl$2(i,s,o,a,c,d){return nonMaxSuppressionImpl_(i,s,o,a,c,d,!0)}function nonMaxSuppressionImpl_(i,s,o,a,c,d,g=!1,$=!1,j=!1){const _e=[];for(let st=0;st<s.length;st++)s[st]>c&&_e.push({score:s[st],boxIndex:st,suppressBeginIndex:0});_e.sort(ascendingComparator);const et=d>0?-.5/d:0,_=[],b=[];for(;_.length<o&&_e.length>0;){const st=_e.pop(),{score:ot,boxIndex:it,suppressBeginIndex:at}=st;if(ot<c)break;let lt=!1;for(let ut=_.length-1;ut>=at;--ut){const ct=intersectionOverUnion(i,it,_[ut]);if(ct>=a){lt=!0;break}if(st.score=st.score*suppressWeight(a,et,ct),st.score<=c)break}st.suppressBeginIndex=_.length,lt||(st.score===ot?(_.push(it),b.push(st.score)):st.score>c&&binaryInsert(_e,st,ascendingComparator))}const tt=_.length,nt=o-tt;$&&nt>0&&(_.push(...new Array(nt).fill(0)),b.push(...new Array(nt).fill(0)));const rt={selectedIndices:_};return g&&(rt.selectedScores=b),j&&(rt.validOutputs=tt),rt}function intersectionOverUnion(i,s,o){const a=i.subarray(s*4,s*4+4),c=i.subarray(o*4,o*4+4),d=Math.min(a[0],a[2]),g=Math.min(a[1],a[3]),$=Math.max(a[0],a[2]),j=Math.max(a[1],a[3]),_e=Math.min(c[0],c[2]),et=Math.min(c[1],c[3]),_=Math.max(c[0],c[2]),b=Math.max(c[1],c[3]),tt=($-d)*(j-g),nt=(_-_e)*(b-et);if(tt<=0||nt<=0)return 0;const rt=Math.max(d,_e),st=Math.max(g,et),ot=Math.min($,_),it=Math.min(j,b),at=Math.max(ot-rt,0)*Math.max(it-st,0);return at/(tt+nt-at)}function suppressWeight(i,s,o){const a=Math.exp(s*o*o);return o<=i?a:0}function ascendingComparator(i,s){return i.score-s.score||i.score===s.score&&s.boxIndex-i.boxIndex}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function nonMaxSuppressionAsync_(i,s,o,a=.5,c=Number.NEGATIVE_INFINITY){const d=convertToTensor(i,"boxes","nonMaxSuppressionAsync"),g=convertToTensor(s,"scores","nonMaxSuppressionAsync"),$=nonMaxSuppSanityCheck(d,g,o,a,c);o=$.maxOutputSize,a=$.iouThreshold,c=$.scoreThreshold;const j=await Promise.all([d.data(),g.data()]),_e=j[0],et=j[1],{selectedIndices:_}=nonMaxSuppressionV3Impl$2(_e,et,o,a,c);return d!==i&&d.dispose(),g!==s&&g.dispose(),tensor1d(_,"int32")}const nonMaxSuppressionAsync=nonMaxSuppressionAsync_;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nonMaxSuppressionWithScore_(i,s,o,a=.5,c=Number.NEGATIVE_INFINITY,d=0){const g=convertToTensor(i,"boxes","nonMaxSuppression"),$=convertToTensor(s,"scores","nonMaxSuppression"),j=nonMaxSuppSanityCheck(g,$,o,a,c,d);o=j.maxOutputSize,a=j.iouThreshold,c=j.scoreThreshold,d=j.softNmsSigma;const _e={boxes:g,scores:$},et={maxOutputSize:o,iouThreshold:a,scoreThreshold:c,softNmsSigma:d},_=ENGINE.runKernel(NonMaxSuppressionV5,_e,et);return{selectedIndices:_[0],selectedScores:_[1]}}const nonMaxSuppressionWithScore=op({nonMaxSuppressionWithScore_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function nonMaxSuppressionWithScoreAsync_(i,s,o,a=.5,c=Number.NEGATIVE_INFINITY,d=0){const g=convertToTensor(i,"boxes","nonMaxSuppressionAsync"),$=convertToTensor(s,"scores","nonMaxSuppressionAsync"),j=nonMaxSuppSanityCheck(g,$,o,a,c,d);o=j.maxOutputSize,a=j.iouThreshold,c=j.scoreThreshold,d=j.softNmsSigma;const _e=await Promise.all([g.data(),$.data()]),et=_e[0],_=_e[1],{selectedIndices:b,selectedScores:tt}=nonMaxSuppressionV5Impl$2(et,_,o,a,c,d);return g!==i&&g.dispose(),$!==s&&$.dispose(),{selectedIndices:tensor1d(b,"int32"),selectedScores:tensor1d(tt)}}const nonMaxSuppressionWithScoreAsync=nonMaxSuppressionWithScoreAsync_;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nonMaxSuppressionPadded_(i,s,o,a=.5,c=Number.NEGATIVE_INFINITY,d=!1){const g=convertToTensor(i,"boxes","nonMaxSuppression"),$=convertToTensor(s,"scores","nonMaxSuppression"),j=nonMaxSuppSanityCheck(g,$,o,a,c,null),_e=j.maxOutputSize,et=j.iouThreshold,_=j.scoreThreshold,b={boxes:g,scores:$},tt={maxOutputSize:_e,iouThreshold:et,scoreThreshold:_,padToMaxOutputSize:d},nt=ENGINE.runKernel(NonMaxSuppressionV4,b,tt);return{selectedIndices:nt[0],validOutputs:nt[1]}}const nonMaxSuppressionPadded=op({nonMaxSuppressionPadded_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function nonMaxSuppressionPaddedAsync_(i,s,o,a=.5,c=Number.NEGATIVE_INFINITY,d=!1){const g=convertToTensor(i,"boxes","nonMaxSuppressionAsync"),$=convertToTensor(s,"scores","nonMaxSuppressionAsync"),j=nonMaxSuppSanityCheck(g,$,o,a,c,null),_e=j.maxOutputSize,et=j.iouThreshold,_=j.scoreThreshold,[b,tt]=await Promise.all([g.data(),$.data()]),{selectedIndices:nt,validOutputs:rt}=nonMaxSuppressionV4Impl$2(b,tt,_e,et,_,d);return g!==i&&g.dispose(),$!==s&&$.dispose(),{selectedIndices:tensor1d(nt,"int32"),validOutputs:scalar(rt,"int32")}}const nonMaxSuppressionPaddedAsync=nonMaxSuppressionPaddedAsync_;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function resizeBilinear_(i,s,o=!1,a=!1){const c=convertToTensor(i,"images","resizeBilinear");assert$1(c.rank===3||c.rank===4,()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${c.rank}.`),assert$1(s.length===2,()=>`Error in resizeBilinear: new shape must 2D, but got shape ${s}.`),assert$1(a===!1||o===!1,()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false.");let d=c,g=!1;c.rank===3&&(g=!0,d=reshape$2(c,[1,c.shape[0],c.shape[1],c.shape[2]]));const $={images:d},j={alignCorners:o,halfPixelCenters:a,size:s},_e=ENGINE.runKernel(ResizeBilinear,$,j);return g?reshape$2(_e,[_e.shape[1],_e.shape[2],_e.shape[3]]):_e}const resizeBilinear$3=op({resizeBilinear_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function resizeNearestNeighbor_(i,s,o=!1,a=!1){const c=convertToTensor(i,"images","resizeNearestNeighbor");assert$1(c.rank===3||c.rank===4,()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${c.rank}.`),assert$1(s.length===2,()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${s}.`),assert$1(c.dtype==="float32"||c.dtype==="int32",()=>"`images` must have `int32` or `float32` as dtype"),assert$1(a===!1||o===!1,()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false.");let d=c,g=!1;c.rank===3&&(g=!0,d=reshape$2(c,[1,c.shape[0],c.shape[1],c.shape[2]]));const $={images:d},j={alignCorners:o,halfPixelCenters:a,size:s},_e=ENGINE.runKernel(ResizeNearestNeighbor,$,j);return g?reshape$2(_e,[_e.shape[1],_e.shape[2],_e.shape[3]]):_e}const resizeNearestNeighbor$2=op({resizeNearestNeighbor_});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function threshold_(i,s="binary",o=!1,a=.5){const c=convertToTensor(i,"image","threshold"),d=.2989,g=.587,$=.114,j=c.shape[0]*c.shape[1];let _e=mul(tensor1d([a]),255),et,_,b,tt;if(assert$1(c.rank===3,()=>`Error in threshold: image must be rank 3,but got rank ${c.rank}.`),assert$1(c.shape[2]===3||c.shape[2]===1,()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${c.shape[2]}.`),assert$1(c.dtype==="int32"||c.dtype==="float32",()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${c.dtype}.`),assert$1(s==="otsu"||s==="binary",()=>`Method must be binary or otsu, but was ${s}`),c.shape[2]===3){[et,_,b]=split$1(c,[1,1,1],-1);const st=mul(et,d),ot=mul(_,g),it=mul(b,$);tt=add$1(add$1(st,ot),it)}else tt=i;if(s==="otsu"){const st=bincount$2(cast$3(round$2(tt),"int32"),tensor([]),256);_e=otsu(st,j)}const nt=o?lessEqual$2(tt,_e):greater$2(tt,_e);return cast$3(mul(nt,255),"int32")}function otsu(i,s){let o=tensor1d([-1]),a=tensor1d([0]),c=tensor1d([0]),d,g,$,j,_e,et;for(let _=0;_<i.size-1;_++){d=slice$2(i,0,_+1),g=slice$2(i,_+1),_e=div$1(sum$2(d),s),et=div$1(sum$2(g),s);const b=sum$2(mul(d,range$3(0,d.size)));$=div$1(b,sum$2(d));const tt=fill$2(g.shape,d.size),nt=add$1(range$3(0,g.size),tt),rt=mul(g,nt);j=div$1(sum$2(rt),sum$2(g));const st=sub$2($,j),ot=sub$2($,j),it=mul(_e,et);c=mul(mul(it,st),ot);const at=greater$2(c,a);a=where(at,c,a),o=where(at,tensor1d([_]),o)}return o}const threshold$1=op({threshold_});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function transform_(i,s,o="nearest",a="constant",c=0,d){const g=convertToTensor(i,"image","transform","float32"),$=convertToTensor(s,"transforms","transform","float32");assert$1(g.rank===4,()=>`Error in transform: image must be rank 4,but got rank ${g.rank}.`),assert$1($.rank===2&&($.shape[0]===g.shape[0]||$.shape[0]===1)&&$.shape[1]===8,()=>"Error in transform: Input transform should be batch x 8 or 1 x 8"),assert$1(d==null||d.length===2,()=>`Error in transform: outputShape must be [height, width] or null, but got ${d}.`);const j={image:g,transforms:$},_e={interpolation:o,fillMode:a,fillValue:c,outputShape:d};return ENGINE.runKernel(Transform,j,_e)}const transform$2=op({transform_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bandPart_(i,s,o){const a=convertToTensor(i,"a","bandPart");assert$1(a.rank>=2,()=>`bandPart(): Rank must be at least 2, got ${a.rank}.`);const c=a.shape,[d,g]=a.shape.slice(-2);let $,j;typeof s=="number"?(assert$1(s%1===0,()=>`bandPart(): numLower must be an integer, got ${s}.`),assert$1(s<=d,()=>`bandPart(): numLower (${s}) must not be greater than the number of rows (${d}).`),$=convertToTensor(s<0?d:s,"numLower","bandPart")):(assert$1(s.dtype==="int32",()=>"bandPart(): numLower's dtype must be an int32."),$=where(less$2(s,0),d,minimum$2(s,d))),typeof o=="number"?(assert$1(o%1===0,()=>`bandPart(): numUpper must be an integer, got ${o}.`),assert$1(o<=g,()=>`bandPart(): numUpper (${o}) must not be greater than the number of columns (${g}).`),j=convertToTensor(o<0?g:o,"numUpper","bandPart")):(assert$1(o.dtype==="int32",()=>"bandPart(): numUpper's dtype must be an int32."),j=where(less$2(o,0),g,minimum$2(o,g)));const _e=reshape$2(range$3(0,d,1,"int32"),[-1,1]),et=range$3(0,g,1,"int32"),_=sub$2(_e,et),b=logicalAnd$2(lessEqual$2(_,$),greaterEqual$2(_,neg$2(j))),tt=zeros$1([d,g],a.dtype);return reshape$2(stack(unstack(reshape$2(a,[-1,d,g])).map(nt=>where(b,nt,tt))),c)}const bandPart=op({bandPart_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gramSchmidt_(i){let s;if(Array.isArray(i)){s=!1,assert$1(i!=null&&i.length>0,()=>"Gram-Schmidt process: input must not be null, undefined, or empty");const c=i[0].shape[0];for(let d=1;d<i.length;++d)assert$1(i[d].shape[0]===c,()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${i[d].shape[0]} vs. ${c})`)}else s=!0,i=split$1(i,i.shape[0],0).map(c=>squeeze(c,[0]));assert$1(i.length<=i[0].shape[0],()=>`Gram-Schmidt: Number of vectors (${i.length}) exceeds number of dimensions (${i[0].shape[0]}).`);const o=[],a=i;for(let c=0;c<i.length;++c)o.push(ENGINE.tidy(()=>{let d=a[c];if(c>0)for(let g=0;g<c;++g){const $=mul(sum$2(mul(o[g],d)),o[g]);d=sub$2(d,$)}return div$1(d,norm(d,"euclidean"))}));return s?stack(o,0):o}const gramSchmidt=op({gramSchmidt_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qr_(i,s=!1){if(assert$1(i.rank>=2,()=>`qr() requires input tensor to have a rank >= 2, but got rank ${i.rank}`),i.rank===2)return qr2d(i,s);{const o=i.shape.slice(0,i.shape.length-2).reduce((j,_e)=>j*_e),a=unstack(reshape$2(i,[o,i.shape[i.shape.length-2],i.shape[i.shape.length-1]]),0),c=[],d=[];a.forEach(j=>{const[_e,et]=qr2d(j,s);c.push(_e),d.push(et)});const g=reshape$2(stack(c,0),i.shape),$=reshape$2(stack(d,0),i.shape);return[g,$]}}function qr2d(i,s=!1){return ENGINE.tidy(()=>{assert$1(i.shape.length===2,()=>`qr2d() requires a 2D Tensor, but got a ${i.shape.length}D Tensor.`);const o=i.shape[0],a=i.shape[1];let c=eye(o),d=clone(i);const g=tensor2d([[1]],[1,1]);let $=clone(g);const j=o>=a?a:o;for(let _e=0;_e<j;++_e){const et=d,_=$,b=c;[$,d,c]=ENGINE.tidy(()=>{const tt=slice$2(d,[_e,_e],[o-_e,1]),nt=norm(tt),rt=slice$2(d,[_e,_e],[1,1]),st=where(greater$2(rt,0),tensor2d([[-1]]),tensor2d([[1]])),ot=sub$2(rt,mul(st,nt)),it=div$1(tt,ot);it.shape[0]===1?$=clone(g):$=concat$2([g,slice$2(it,[1,0],[it.shape[0]-1,it.shape[1]])],0);const at=neg$2(div$1(matMul$1(st,ot),nt)),lt=slice$2(d,[_e,0],[o-_e,a]),ut=mul(at,$),ct=transpose$2($);if(_e===0)d=sub$2(lt,matMul$1(ut,matMul$1(ct,lt)));else{const ht=sub$2(lt,matMul$1(ut,matMul$1(ct,lt)));d=concat$2([slice$2(d,[0,0],[_e,a]),ht],0)}const dt=transpose$2(ut),pt=slice$2(c,[0,_e],[o,c.shape[1]-_e]);if(_e===0)c=sub$2(pt,matMul$1(matMul$1(pt,$),dt));else{const ht=sub$2(pt,matMul$1(matMul$1(pt,$),dt));c=concat$2([slice$2(c,[0,0],[o,_e]),ht],1)}return[$,d,c]}),dispose([et,_,b])}return!s&&o>a&&(c=slice$2(c,[0,0],[o,a]),d=slice$2(d,[0,0],[a,a])),[c,d]})}const qr=op({qr_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const image={flipLeftRight,grayscaleToRGB,resizeNearestNeighbor:resizeNearestNeighbor$2,resizeBilinear:resizeBilinear$3,rgbToGrayscale,rotateWithOffset,cropAndResize:cropAndResize$3,nonMaxSuppression,nonMaxSuppressionAsync,nonMaxSuppressionWithScore,nonMaxSuppressionWithScoreAsync,nonMaxSuppressionPadded,nonMaxSuppressionPaddedAsync,threshold:threshold$1,transform:transform$2},linalg={bandPart,gramSchmidt,qr};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const GLOBAL_CUSTOM_OBJECT=new Map,GLOBAL_CUSTOM_NAMES=new Map;class Serializable{getClassName(){return this.constructor.className}static fromConfig(s,o){return new s(o)}}class SerializationMap{constructor(){this.classNameMap={}}static getMap(){return SerializationMap.instance==null&&(SerializationMap.instance=new SerializationMap),SerializationMap.instance}static register(s){SerializationMap.getMap().classNameMap[s.className]=[s,s.fromConfig]}}function registerClass(i,s,o){assert$1(i.className!=null,()=>"Class being registered does not have the static className property defined."),assert$1(typeof i.className=="string",()=>"className is required to be a string, but got type "+typeof i.className),assert$1(i.className.length>0,()=>"Class being registered has an empty-string as its className, which is disallowed."),typeof s>"u"&&(s="Custom"),typeof o>"u"&&(o=i.className);const a=o,c=s+">"+a;return SerializationMap.register(i),GLOBAL_CUSTOM_OBJECT.set(c,i),GLOBAL_CUSTOM_NAMES.set(i,c),i}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Optimizer extends Serializable{minimize(s,o=!1,a){const{value:c,grads:d}=this.computeGradients(s,a);if(a!=null){const g=a.map($=>({name:$.name,tensor:d[$.name]}));this.applyGradients(g)}else this.applyGradients(d);return dispose(d),o?c:(c.dispose(),null)}get iterations(){return this.iterations_==null&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(s,o){return variableGrads(s,o)}dispose(){this.iterations_!=null&&dispose(this.iterations_)}async saveIterations(){return this.iterations_==null&&(this.iterations_=0),{name:"iter",tensor:scalar(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(s){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(s){return this.iterations_=(await s[0].tensor.data())[0],s.slice(1)}}Object.defineProperty(Optimizer,Symbol.hasInstance,{value:i=>i.minimize!=null&&i.computeGradients!=null&&i.applyGradients!=null});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class AdadeltaOptimizer extends Optimizer{static get className(){return"Adadelta"}constructor(s,o,a=null){super(),this.learningRate=s,this.rho=o,this.epsilon=a,this.accumulatedGrads=[],this.accumulatedUpdates=[],a==null&&(this.epsilon=ENGINE.backend.epsilon())}applyGradients(s){(Array.isArray(s)?s.map(a=>a.name):Object.keys(s)).forEach((a,c)=>{const d=ENGINE.registeredVariables[a],g=!1;this.accumulatedGrads[c]==null&&(this.accumulatedGrads[c]={originalName:`${a}/accum_grad`,variable:tidy(()=>zerosLike$2(d).variable(g))}),this.accumulatedUpdates[c]==null&&(this.accumulatedUpdates[c]={originalName:`${a}/accum_var`,variable:tidy(()=>zerosLike$2(d).variable(g))});const $=Array.isArray(s)?s[c].tensor:s[a];if($==null)return;const j=this.accumulatedGrads[c].variable,_e=this.accumulatedUpdates[c].variable;tidy(()=>{const et=add$1(mul(j,this.rho),mul(square$2($),1-this.rho)),_=mul(div$1(sqrt$2(add$1(_e,this.epsilon)),sqrt$2(add$1(j,this.epsilon))),$),b=add$1(mul(_e,this.rho),mul(square$2(_),1-this.rho));j.assign(et),_e.assign(b);const tt=add$1(mul(_,-this.learningRate),d);d.assign(tt)})}),this.incrementIterations()}dispose(){this.accumulatedUpdates!=null&&(dispose(this.accumulatedGrads.map(s=>s.variable)),dispose(this.accumulatedUpdates.map(s=>s.variable)))}async getWeights(){const s=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(s.map(o=>({name:o.originalName,tensor:o.variable})))}async setWeights(s){s=await this.extractIterations(s);const o=s.length/2,a=!1;this.accumulatedGrads=s.slice(0,o).map(c=>({originalName:c.name,variable:c.tensor.variable(a)})),this.accumulatedUpdates=s.slice(o,o*2).map(c=>({originalName:c.name,variable:c.tensor.variable(a)}))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(s,o){return new s(o.learningRate,o.rho,o.epsilon)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class AdagradOptimizer extends Optimizer{static get className(){return"Adagrad"}constructor(s,o=.1){super(),this.learningRate=s,this.initialAccumulatorValue=o,this.accumulatedGrads=[]}applyGradients(s){(Array.isArray(s)?s.map(a=>a.name):Object.keys(s)).forEach((a,c)=>{const d=ENGINE.registeredVariables[a];this.accumulatedGrads[c]==null&&(this.accumulatedGrads[c]={originalName:`${a}/accumulator`,variable:tidy(()=>fill$2(d.shape,this.initialAccumulatorValue).variable(!1))});const g=Array.isArray(s)?s[c].tensor:s[a];if(g==null)return;const $=this.accumulatedGrads[c].variable;tidy(()=>{const j=add$1($,square$2(g));$.assign(j);const _e=add$1(mul(div$1(g,sqrt$2(add$1(j,ENGINE.backend.epsilon()))),-this.learningRate),d);d.assign(_e)})}),this.incrementIterations()}dispose(){this.accumulatedGrads!=null&&dispose(this.accumulatedGrads.map(s=>s.variable))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map(s=>({name:s.originalName,tensor:s.variable})))}async setWeights(s){s=await this.extractIterations(s);const o=!1;this.accumulatedGrads=s.map(a=>({originalName:a.name,variable:a.tensor.variable(o)}))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(s,o){return new s(o.learningRate,o.initialAccumulatorValue)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class AdamOptimizer extends Optimizer{static get className(){return"Adam"}constructor(s,o,a,c=null){super(),this.learningRate=s,this.beta1=o,this.beta2=a,this.epsilon=c,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],tidy(()=>{this.accBeta1=scalar(o).variable(),this.accBeta2=scalar(a).variable()}),c==null&&(this.epsilon=ENGINE.backend.epsilon())}applyGradients(s){const o=Array.isArray(s)?s.map(a=>a.name):Object.keys(s);tidy(()=>{const a=sub$2(1,this.accBeta1),c=sub$2(1,this.accBeta2);o.forEach((d,g)=>{const $=ENGINE.registeredVariables[d],j=!1;this.accumulatedFirstMoment[g]==null&&(this.accumulatedFirstMoment[g]={originalName:`${d}/m`,variable:tidy(()=>zerosLike$2($).variable(j))}),this.accumulatedSecondMoment[g]==null&&(this.accumulatedSecondMoment[g]={originalName:`${d}/v`,variable:tidy(()=>zerosLike$2($).variable(j))});const _e=Array.isArray(s)?s[g].tensor:s[d];if(_e==null)return;const et=this.accumulatedFirstMoment[g].variable,_=this.accumulatedSecondMoment[g].variable,b=add$1(mul(et,this.beta1),mul(_e,1-this.beta1)),tt=add$1(mul(_,this.beta2),mul(square$2(_e),1-this.beta2)),nt=div$1(b,a),rt=div$1(tt,c);et.assign(b),_.assign(tt);const st=add$1(mul(div$1(nt,add$1(sqrt$2(rt),this.epsilon)),-this.learningRate),$);$.assign(st)}),this.accBeta1.assign(mul(this.accBeta1,this.beta1)),this.accBeta2.assign(mul(this.accBeta2,this.beta2))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),this.accumulatedFirstMoment!=null&&dispose(this.accumulatedFirstMoment.map(s=>s.variable)),this.accumulatedSecondMoment!=null&&dispose(this.accumulatedSecondMoment.map(s=>s.variable))}async getWeights(){const s=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(s.map(o=>({name:o.originalName,tensor:o.variable})))}async setWeights(s){s=await this.extractIterations(s),tidy(()=>{this.accBeta1.assign(pow$2(this.beta1,this.iterations_+1)),this.accBeta2.assign(pow$2(this.beta2,this.iterations_+1))});const o=s.length/2,a=!1;this.accumulatedFirstMoment=s.slice(0,o).map(c=>({originalName:c.name,variable:c.tensor.variable(a)})),this.accumulatedSecondMoment=s.slice(o,o*2).map(c=>({originalName:c.name,variable:c.tensor.variable(a)}))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(s,o){return new s(o.learningRate,o.beta1,o.beta2,o.epsilon)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class AdamaxOptimizer extends Optimizer{static get className(){return"Adamax"}constructor(s,o,a,c=null,d=0){super(),this.learningRate=s,this.beta1=o,this.beta2=a,this.epsilon=c,this.decay=d,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],tidy(()=>{this.iteration=scalar(0).variable(),this.accBeta1=scalar(o).variable()}),c==null&&(this.epsilon=ENGINE.backend.epsilon())}applyGradients(s){const o=Array.isArray(s)?s.map(a=>a.name):Object.keys(s);tidy(()=>{const a=sub$2(1,this.accBeta1),c=div$1(-this.learningRate,add$1(mul(this.iteration,this.decay),1));o.forEach((d,g)=>{const $=ENGINE.registeredVariables[d],j=!1;this.accumulatedFirstMoment[g]==null&&(this.accumulatedFirstMoment[g]={originalName:`${d}/m`,variable:zerosLike$2($).variable(j)}),this.accumulatedWeightedInfNorm[g]==null&&(this.accumulatedWeightedInfNorm[g]={originalName:`${d}/v`,variable:zerosLike$2($).variable(j)});const _e=Array.isArray(s)?s[g].tensor:s[d];if(_e==null)return;const et=this.accumulatedFirstMoment[g].variable,_=this.accumulatedWeightedInfNorm[g].variable,b=add$1(mul(et,this.beta1),mul(_e,1-this.beta1)),tt=mul(_,this.beta2),nt=abs$2(_e),rt=maximum$2(tt,nt);et.assign(b),_.assign(rt);const st=add$1(mul(div$1(c,a),div$1(b,add$1(rt,this.epsilon))),$);$.assign(st)}),this.iteration.assign(add$1(this.iteration,1)),this.accBeta1.assign(mul(this.accBeta1,this.beta1))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),this.accumulatedFirstMoment!=null&&dispose(this.accumulatedFirstMoment.map(s=>s.variable)),this.accumulatedWeightedInfNorm!=null&&dispose(this.accumulatedWeightedInfNorm.map(s=>s.variable))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(s){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(s,o){return new s(o.learningRate,o.beta1,o.beta2,o.epsilon,o.decay)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class SGDOptimizer extends Optimizer{static get className(){return"SGD"}constructor(s){super(),this.learningRate=s,this.setLearningRate(s)}applyGradients(s){(Array.isArray(s)?s.map(a=>a.name):Object.keys(s)).forEach((a,c)=>{const d=Array.isArray(s)?s[c].tensor:s[a];if(d==null)return;const g=ENGINE.registeredVariables[a];tidy(()=>{const $=add$1(mul(this.c,d),g);g.assign($)})}),this.incrementIterations()}setLearningRate(s){this.learningRate=s,this.c!=null&&this.c.dispose(),this.c=keep(scalar(-s))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(s){if(s=await this.extractIterations(s),s.length!==0)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(s,o){return new s(o.learningRate)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class MomentumOptimizer extends SGDOptimizer{static get className(){return"Momentum"}constructor(s,o,a=!1){super(s),this.learningRate=s,this.momentum=o,this.useNesterov=a,this.accumulations=[],this.m=scalar(this.momentum)}applyGradients(s){(Array.isArray(s)?s.map(a=>a.name):Object.keys(s)).forEach((a,c)=>{const d=ENGINE.registeredVariables[a];this.accumulations[c]==null&&(this.accumulations[c]={originalName:`${a}/momentum`,variable:tidy(()=>zerosLike$2(d).variable(!1))});const g=this.accumulations[c].variable,$=Array.isArray(s)?s[c].tensor:s[a];$!=null&&tidy(()=>{let j;const _e=add$1(mul(this.m,g),$);this.useNesterov?j=add$1(mul(this.c,add$1($,mul(_e,this.m))),d):j=add$1(mul(this.c,_e),d),g.assign(_e),d.assign(j)})}),this.incrementIterations()}dispose(){this.m.dispose(),this.accumulations!=null&&dispose(this.accumulations.map(s=>s.variable))}setMomentum(s){this.momentum=s}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map(s=>({name:s.originalName,tensor:s.variable})))}async setWeights(s){s=await this.extractIterations(s);const o=!1;this.accumulations=s.map(a=>({originalName:a.name,variable:a.tensor.variable(o)}))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(s,o){return new s(o.learningRate,o.momentum,o.useNesterov)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class RMSPropOptimizer extends Optimizer{static get className(){return"RMSProp"}constructor(s,o=.9,a=0,c=null,d=!1){if(super(),this.learningRate=s,this.decay=o,this.momentum=a,this.epsilon=c,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=d,c==null&&(this.epsilon=ENGINE.backend.epsilon()),s==null)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(s){(Array.isArray(s)?s.map(a=>a.name):Object.keys(s)).forEach((a,c)=>{const d=ENGINE.registeredVariables[a],g=!1;this.accumulatedMeanSquares[c]==null&&(this.accumulatedMeanSquares[c]={originalName:`${a}/rms`,variable:tidy(()=>zerosLike$2(d).variable(g))}),this.accumulatedMoments[c]==null&&(this.accumulatedMoments[c]={originalName:`${a}/momentum`,variable:tidy(()=>zerosLike$2(d).variable(g))}),this.accumulatedMeanGrads[c]==null&&this.centered&&(this.accumulatedMeanGrads[c]={originalName:`${a}/mg`,variable:tidy(()=>zerosLike$2(d).variable(g))});const $=Array.isArray(s)?s[c].tensor:s[a];if($==null)return;const j=this.accumulatedMeanSquares[c].variable,_e=this.accumulatedMoments[c].variable;tidy(()=>{const et=add$1(mul(j,this.decay),mul(square$2($),1-this.decay));if(this.centered){const _=this.accumulatedMeanGrads[c].variable,b=add$1(mul(_,this.decay),mul($,1-this.decay)),tt=div$1(mul($,this.learningRate),sqrt$2(sub$2(et,add$1(square$2(b),this.epsilon)))),nt=add$1(mul(_e,this.momentum),tt);j.assign(et),_.assign(b),_e.assign(nt);const rt=sub$2(d,nt);d.assign(rt)}else{const _=add$1(mul(j,this.decay),mul(square$2($),1-this.decay)),b=add$1(mul(_e,this.momentum),div$1(mul($,this.learningRate),sqrt$2(add$1(_,this.epsilon))));j.assign(_),_e.assign(b);const tt=sub$2(d,b);d.assign(tt)}})}),this.incrementIterations()}dispose(){this.accumulatedMeanSquares!=null&&dispose(this.accumulatedMeanSquares.map(s=>s.variable)),this.accumulatedMeanGrads!=null&&this.centered&&dispose(this.accumulatedMeanGrads.map(s=>s.variable)),this.accumulatedMoments!=null&&dispose(this.accumulatedMoments.map(s=>s.variable))}async getWeights(){const s=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&s.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(s.map(o=>({name:o.originalName,tensor:o.variable})))}async setWeights(s){s=await this.extractIterations(s);const o=this.centered?s.length/3:s.length/2,a=!1;this.accumulatedMeanSquares=s.slice(0,o).map(c=>({originalName:c.name,variable:c.tensor.variable(a)})),this.accumulatedMoments=s.slice(o,o*2).map(c=>({originalName:c.name,variable:c.tensor.variable(a)})),this.centered&&(this.accumulatedMeanGrads=s.slice(o*2,o*3).map(c=>({originalName:c.name,variable:c.tensor.variable(a)})))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(s,o){return new s(o.learningRate,o.decay,o.momentum,o.epsilon,o.centered)}}/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const OPTIMIZERS=[AdadeltaOptimizer,AdagradOptimizer,AdamOptimizer,AdamaxOptimizer,MomentumOptimizer,RMSPropOptimizer,SGDOptimizer];function registerOptimizers(){for(const i of OPTIMIZERS)registerClass(i)}function prepareAndValidate(i,s){const o=i.shape.length,a=s.shape.length;if(o<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${o}.`);if(a<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${a}.`);if(s.dtype!=="int32")throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${s.dtype}.`);if(s.shape[a-1]>o)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${s.shape[a-1]} vs. ${o}`);if(sizeFromShape(i.shape)===0)throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${i.shape}.`);const c=s.shape,d=c[c.length-1];let g=1;for(let _=0;_<c.length-1;++_)g*=c[_];const $=i.shape,j=c.slice();j.pop();let _e=1;for(let _=d;_<o;++_)_e*=$[_],j.push($[_]);const et=[...computeStrides(i.shape).map(_=>_/_e),1].slice(0,d);return[j,g,_e,et]}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const NEW_AXIS=-2,SHRINK_AXIS=-1;function assertParamsValid(i,s,o){const a=i.shape.length;assert$1(a===s.length,()=>`Error in slice${a}D: Length of begin ${s} must match the rank of the array (${a}).`),assert$1(a===o.length,()=>`Error in slice${a}D: Length of size ${o} must match the rank of the array (${a}).`);for(let c=0;c<a;++c)assert$1(s[c]+o[c]<=i.shape[c],()=>`Error in slice${a}D: begin[${c}] + size[${c}] (${s[c]+o[c]}) would overflow input.shape[${c}] (${i.shape[c]})`)}function maskToAxes(i){const s=[];let o=0;for(;i>0;)i&1&&s.push(o),i/=2,o++;return s}function computeOutShape$2(i,s,o){const a=[];for(let c=0;c<i.length;c++)a[c]=Math.ceil((s[c]-i[c])/o[c]);return a}function stridesWithElidedDims(i,s,o,a){const c=[...i];for(let d=c.length;d<a.length;d++)c.push(1);for(let d=0;d<o;d++)d===0?c[s]=1:(c.splice(s,0,1),c.pop());return c}function unnormalizeAxis(i,s,o){return o<=i?o:o-(s-1)}function getElidedAxes(i,s){const o=[];for(let a=0;a<i;a++)o.push(s+a);return o}function getNormalizedAxes(i,s,o,a,c,d,g,$,j){const _e=i.length;let et=new Array(_e),_=new Array(_e),b=new Array(_e);if(s.length&&o>0){const tt=s[0],nt=o+1;et=startIndicesWithElidedDims(g,tt,nt,a,i),_=stopIndicesWithElidedDims($,tt,nt,c,i),b=stridesWithElidedDims(d,tt,nt,i)}else for(let tt=0;tt<_e;tt++)et[tt]=startForAxis(g,a,d,i,tt,j),_[tt]=stopForAxis($,c,d,i,tt,j),b[tt]=stridesForAxis(d,tt,j);return{begin:et,end:_,strides:b}}function startIndicesWithElidedDims(i,s,o,a,c){const d=[...c],g=getElidedAxes(o,s);for(let $=0;$<d.length;$++)if(g.indexOf($)>-1)d[$]=0;else{const j=unnormalizeAxis(s,o,$);let _e=a[j];i&1<<j&&(_e=0),d[$]=_e}return d}function stopIndicesWithElidedDims(i,s,o,a,c){const d=[...c],g=getElidedAxes(o,s);for(let $=0;$<d.length;$++)if(g.indexOf($)>-1)d[$]=Number.MAX_SAFE_INTEGER;else{const j=unnormalizeAxis(s,o,$);let _e=a[j];i&1<<j&&(_e=Number.MAX_SAFE_INTEGER),d[$]=_e}for(let $=0;$<d.length;$++){const j=c[$];d[$]<0&&(d[$]+=j),d[$]=clamp(0,d[$],c[$])}return d}function stridesForAxis(i,s,o){let a=i[s];return(o&1<<s||a==null)&&(a=1),a}function startForAxis(i,s,o,a,c,d){let g=s[c];const $=o[c]||1;(i&1<<c||d&1<<c||g==null)&&($>0?g=Number.MIN_SAFE_INTEGER:g=Number.MAX_SAFE_INTEGER);const j=a[c];return g<0&&(g+=j),g=clamp(0,g,j-1),g}function stopForAxis(i,s,o,a,c,d){let g=s[c];const $=o[c]||1;(i&1<<c||d&1<<c||g==null)&&($>0?g=Number.MAX_SAFE_INTEGER:g=Number.MIN_SAFE_INTEGER);const j=a[c];return g<0&&(g+=j),$>0?g=clamp(0,g,j):g=clamp(-1,g,j-1),g}function isSliceContinous(i,s,o){let a=o.length;for(let c=0;c<o.length;c++)if(o[c]>1){a=c;break}for(let c=a+1;c<o.length;c++)if(s[c]>0||o[c]!==i[c])return!1;return!0}function computeFlatOffset(i,s){let o=i.length>0?i[i.length-1]:1;for(let a=0;a<i.length-1;a++)o+=i[a]*s[a];return o}function parseSliceParams(i,s,o){let a;const c=i.shape.length;typeof s=="number"?a=[s,...new Array(c-1).fill(0)]:s.length<c?a=s.concat(new Array(c-s.length).fill(0)):a=s.slice(),a.forEach(g=>{assert$1(g!==-1,()=>"slice() does not support negative begin indexing.")});let d;return o==null?d=new Array(c).fill(-1):typeof o=="number"?d=[o,...new Array(c-1).fill(-1)]:o.length<c?d=o.concat(new Array(c-o.length).fill(-1)):d=o,d=d.map((g,$)=>g>=0?g:(assert$1(g===-1,()=>`Negative size values should be exactly -1 but got ${g} for the slice() size at index ${$}.`),i.shape[$]-a[$])),[a,d]}function sliceInfo(i,s,o,a,c,d,g,$,j){let _e;if(a==null?(_e=new Array(s.length),_e.fill(1)):_e=a,g!=null&&g&g-1)throw new Error("Multiple ellipses in slice is not allowed.");let et=!1;const _={dims:_e.length,numAddAxisAfterEllipsis:0,begin:s.slice(),end:o.slice(),strides:_e.slice(),beginMask:c,endMask:d,ellipsisMask:g,newAxisMask:$,shrinkAxisMask:j};for(let at=0;at<_.dims;at++)et&&1<<at&$&&_.numAddAxisAfterEllipsis++,1<<at&g&&(et=!0);et||(_.ellipsisMask|=1<<_.dims,_.dims++);const b={dims:i.length,beginMask:0,endMask:0,beginValid:!1,endValid:!1};buildDenseSpec(_,b);let tt=!0,nt=!0,rt=!0;const st=[],ot=[];for(let at=0;at<i.length;++at){if(b.strides[at]===0)throw Error(`strides[${at}] must be non-zero`);const lt=!!(b.shrinkAxisMask&1<<at),ut=i[at];if(ut===-1){st.push(lt?1:-1);continue}const ct=[b.beginMask&1<<at,b.endMask&1<<at],dt=[b.strides[at]>0?0:-1,b.strides[at]>0?ut:ut-1];if(lt&&b.strides[at]<=0)throw Error("only stride 1 allowed on non-range indexing.");rt=rt&&b.strides[at]===1;const pt=!!(b.beginMask&1<<at&&b.endMask&1<<at);if(b.beginValid&&b.endValid){if(lt){const wt=b.begin[at]<0?ut+b.begin[at]:b.begin[at];if(b.begin[at]=wt,b.end[at]=b.begin[at]+1,wt<0||wt>=ut)throw Error(`slice index ${b.begin[at]} of dimension ${at} out of bounds.`)}else b.begin[at]=canonical(b.begin[at],0,b.strides[at],ut,ct,dt),b.end[at]=canonical(b.end[at],1,b.strides[at],ut,ct,dt);const yt=b.strides[at]===1&&b.begin[at]===0&&b.end[at]===ut;tt=tt&&yt,nt=nt&&(at===0&&b.strides[at]===1||yt)}else tt=tt&&b.strides[at]===1&&pt,nt=nt&&(at===0&&b.strides[at]===1||pt);let ht,ft=!1;if(b.beginValid&&b.endValid?(ht=b.end[at]-b.begin[at],ft=!0):lt?(ht=1,ft=!0):pt&&ut>=0&&(b.strides[at]<0?ht=-ut:ht=ut,ft=!0),ft){let yt;ht===0||ht<0!=b.strides[at]<0?yt=0:yt=Math.trunc(ht/b.strides[at])+(ht%b.strides[at]!==0?1:0),st.push(yt)}else st.push(-1)}for(let at=0;at<b.finalShapeGatherIndices.length;++at){const lt=b.finalShapeGatherIndices[at];lt>=0?ot.push(st[lt]):lt===NEW_AXIS&&ot.push(1)}return{finalShapeSparse:ot.filter((at,lt)=>b.finalShapeGatherIndices[lt]!==NEW_AXIS),finalShape:ot,isIdentity:tt,sliceDim0:nt,isSimpleSlice:rt,begin:b.begin,end:b.end,strides:b.strides}}function buildDenseSpec(i,s){s.beginMask=0,s.endMask=0,s.shrinkAxisMask=0;let o=0;s.beginValid=i.begin!=null,s.endValid=i.end!=null,s.begin=new Array(s.dims),s.end=new Array(s.dims),s.strides=new Array(s.dims),s.finalShapeGatherIndices=[],s.finalShapeGatherIndicesSparse=[],s.inputShapeGatherIndicesSparse=new Array(s.dims);for(let a=0;a<i.dims;a++)if(1<<a&i.ellipsisMask){const c=Math.min(s.dims-(i.dims-a)+1+i.numAddAxisAfterEllipsis,s.dims);for(;o<c;o++)s.begin[o]=0,s.end[o]=0,s.strides[o]=1,s.beginMask|=1<<o,s.endMask|=1<<o,s.finalShapeGatherIndices.push(o),s.finalShapeGatherIndicesSparse.push(-1),s.inputShapeGatherIndicesSparse[o]=a}else if(1<<a&i.newAxisMask)s.finalShapeGatherIndices.push(NEW_AXIS),s.finalShapeGatherIndicesSparse.push(-1);else{if(o===s.begin.length)throw Error(`Index out of range using input dim ${o}; input has only ${s.dims} dims, ${s.begin.length}.`);i.begin!=null&&(s.begin[o]=i.begin[a]),i.end!=null&&(s.end[o]=i.end[a]),s.strides[o]=i.strides[a],i.beginMask&1<<a&&(s.beginMask|=1<<o),i.endMask&1<<a&&(s.endMask|=1<<o),i.shrinkAxisMask&1<<a?(s.finalShapeGatherIndices.push(SHRINK_AXIS),s.finalShapeGatherIndicesSparse.push(-1),s.shrinkAxisMask|=1<<o):(s.finalShapeGatherIndices.push(o),s.finalShapeGatherIndicesSparse.push(a)),s.inputShapeGatherIndicesSparse[o]=a,o++}}function canonical(i,s,o,a,c,d){if(c[s])return o>0?d[s]:d[s+1&1];{const g=i<0?a+i:i;return g<d[0]?d[0]:g>d[1]?d[1]:g}}const slice_util=Object.freeze(Object.defineProperty({__proto__:null,assertParamsValid,computeFlatOffset,computeOutShape:computeOutShape$2,getNormalizedAxes,isSliceContinous,maskToAxes,parseSliceParams,sliceInfo,startForAxis,startIndicesWithElidedDims,stopForAxis,stopIndicesWithElidedDims,stridesForAxis,stridesWithElidedDims},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class OptimizerConstructors{static sgd(s){return new SGDOptimizer(s)}static momentum(s,o,a=!1){return new MomentumOptimizer(s,o,a)}static rmsprop(s,o=.9,a=0,c=null,d=!1){return new RMSPropOptimizer(s,o,a,c,d)}static adam(s=.001,o=.9,a=.999,c=null){return new AdamOptimizer(s,o,a,c)}static adadelta(s=.001,o=.95,a=null){return new AdadeltaOptimizer(s,o,a)}static adamax(s=.002,o=.9,a=.999,c=null,d=0){return new AdamaxOptimizer(s,o,a,c,d)}static adagrad(s,o=.1){return new AdagradOptimizer(s,o)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const train=OptimizerConstructors;/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const delayCallback=typeof requestAnimationFrame<"u"?requestAnimationFrame:typeof setImmediate<"u"?setImmediate:i=>i();function nextFrame(){return new Promise(i=>delayCallback(()=>i()))}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function assertParamsConsistent(i,s){const o=i[0].length;i.forEach((c,d)=>{assert$1(c.length===o,()=>`Error in concat${o}D: rank of tensors[${d}] must be the same as the rank of the rest (${o})`)}),assert$1(s>=0&&s<o,()=>`Error in concat${o}D: axis must be between 0 and ${o-1}.`);const a=i[0];i.forEach((c,d)=>{for(let g=0;g<o;g++)assert$1(g===s||c[g]===a[g],()=>`Error in concat${o}D: Shape of tensors[${d}] (${c}) does not match the shape of the rest (${a}) along the non-concatenated axis ${d}.`)})}function computeOutShape$1(i,s){const o=i[0].slice();for(let a=1;a<i.length;a++)o[s]+=i[a][s];return o}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var RowPartitionType$1;(function(i){i[i.FIRST_DIM_SIZE=0]="FIRST_DIM_SIZE",i[i.VALUE_ROWIDS=1]="VALUE_ROWIDS",i[i.ROW_LENGTHS=2]="ROW_LENGTHS",i[i.ROW_SPLITS=3]="ROW_SPLITS",i[i.ROW_LIMITS=4]="ROW_LIMITS",i[i.ROW_STARTS=5]="ROW_STARTS"})(RowPartitionType$1||(RowPartitionType$1={}));function combineRaggedTensorToTensorShapes(i,s,o){let a=new Array;if(o==null&&s==null)return a;if(s==null)for(;a.length<i+o.length;)a.push(-1);else a=s.slice();if(o==null)return a;if(i+o.length!==a.length)throw new Error(`rt input.shape and shape=${s} are incompatible: rt input.rank = ${i+o.length}, but shape.rank = ${a.length}`);for(let c=1;c<o.length;++c){const d=o[c],g=a[a.length-o.length+c],$=a[g];if(d>=0)if($>=0){if($!==d)throw new Error(`rt input.shape and shape=${s} are incompatible: rt input.shape[${c+i}] = ${d} but shape[${c+i}] = ${$}`)}else a[g]=d}return a}function getRowPartitionTypesHelper(i){const s={FIRST_DIM_SIZE:RowPartitionType$1.FIRST_DIM_SIZE,VALUE_ROWIDS:RowPartitionType$1.VALUE_ROWIDS,ROW_LENGTHS:RowPartitionType$1.ROW_LENGTHS,ROW_SPLITS:RowPartitionType$1.ROW_SPLITS,ROW_LIMITS:RowPartitionType$1.ROW_LIMITS,ROW_STARTS:RowPartitionType$1.ROW_STARTS},o=[];for(const a of i)if(a in s)o.push(s[a]);else break;return o}function getRaggedRank(i){return i.length===0?0:i[0]===RowPartitionType$1.FIRST_DIM_SIZE?i.length-1:i.length}function validateDefaultValueShape(i,s){if(i==null||s==null)return;const o=i.length,a=s.length;if(o>=a)throw new Error(`defaultValue.shape=${i} and ragged tensor flatValues.shape=${s}, are incompatible: defaultValue.rank = ${o} must be less than ragged tensor input flatValues.rank = ${a})`);for(let c=0;c<Math.min(o,a-1);++c){const d=i[c],g=s[c+1];if(d>=0&&g>=0&&d!==1&&d!==g)throw new Error(`defaultValue.shape=${i}, and ragged tensor input flatValues.shape=${s} are incompatible: defaultValue.shape[${c-i.length}] = ${d} but ragged tensor input.flatValues.shape[${c-i.length}] = ${g}`)}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const PARALLELIZE_THRESHOLD=30;function computeOptimalWindowSize(i){return i<=PARALLELIZE_THRESHOLD?i:nearestDivisor(i,Math.floor(Math.sqrt(i)))}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function getImageCenter(i,s,o){const a=o*(typeof i=="number"?i:i[0]),c=s*(typeof i=="number"?i:i[1]);return[a,c]}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function getReshaped(i,s,o,a=!0){let c=[];if(a)c=c.concat(s.slice(0)),c.push(i[0]/o),c=c.concat(i.slice(1));else{c=c.concat(i[0]);const d=s.length;for(let g=0;g<d;++g)c=c.concat([i[g+1]/s[g],s[g]]);c=c.concat(i.slice(d+1))}return c}function getPermuted(i,s,o=!0){const a=[];if(o){a.push(s);for(let c=s+1;c<i;++c)c<=2*s?(a.push(c),a.push(c-(s+1))):a.push(c)}else{const c=[],d=[];for(let g=1;g<i;++g)g>=s*2+1||g%2===1?d.push(g):c.push(g);a.push(...c),a.push(0),a.push(...d)}return a}function getReshapedPermuted(i,s,o,a=!0){const c=[];a?c.push(i[0]/o):c.push(i[0]*o);for(let d=1;d<i.length;++d)d<=s.length?a?c.push(s[d-1]*i[d]):c.push(i[d]/s[d-1]):c.push(i[d]);return c}function getSliceBeginCoords(i,s){const o=[0];for(let a=0;a<s;++a)o.push(i[a][0]);return o}function getSliceSize(i,s,o){const a=i.slice(0,1);for(let c=0;c<o;++c)a.push(i[c+1]-s[c][0]-s[c][1]);return a}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const SELU_SCALEALPHA=1.7580993408473768,SELU_SCALE=1.0507009873554805;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ERF_P=.3275911,ERF_A1=.254829592,ERF_A2=-.284496736,ERF_A3=1.421413741,ERF_A4=-1.453152027,ERF_A5=1.061405429;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mergeRealAndImagArrays(i,s){if(i.length!==s.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${i.length}, imag: ${s.length}.`);const o=new Float32Array(i.length*2);for(let a=0;a<o.length;a+=2)o[a]=i[a/2],o[a+1]=s[a/2];return o}function splitRealAndImagArrays(i){const s=new Float32Array(i.length/2),o=new Float32Array(i.length/2);for(let a=0;a<i.length;a+=2)s[a/2]=i[a],o[a/2]=i[a+1];return{real:s,imag:o}}function complexWithEvenIndex(i){const s=Math.ceil(i.length/4),o=new Float32Array(s),a=new Float32Array(s);for(let c=0;c<i.length;c+=4)o[Math.floor(c/4)]=i[c],a[Math.floor(c/4)]=i[c+1];return{real:o,imag:a}}function complexWithOddIndex(i){const s=Math.floor(i.length/4),o=new Float32Array(s),a=new Float32Array(s);for(let c=2;c<i.length;c+=4)o[Math.floor(c/4)]=i[c],a[Math.floor(c/4)]=i[c+1];return{real:o,imag:a}}function getComplexWithIndex(i,s){const o=i[s*2],a=i[s*2+1];return{real:o,imag:a}}function assignToTypedArray(i,s,o,a){i[a*2]=s,i[a*2+1]=o}function exponents(i,s){const o=new Float32Array(i/2),a=new Float32Array(i/2);for(let c=0;c<Math.ceil(i/2);c++){const d=(s?2:-2)*Math.PI*(c/i);o[c]=Math.cos(d),a[c]=Math.sin(d)}return{real:o,imag:a}}function exponent(i,s,o){const a=(o?2:-2)*Math.PI*(i/s),c=Math.cos(a),d=Math.sin(a);return{real:c,imag:d}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ARROW="->",ARROW_REGEX=/->/g,COMMA=",",ELLIPSIS="...";function decodeEinsumEquation(i,s){i=i.replace(/\s/g,"");const o=(i.length-i.replace(ARROW_REGEX,"").length)/ARROW.length;if(o<1)throw new Error("Equations without an arrow are not supported.");if(o>1)throw new Error(`Equation must contain exactly one arrow ("${ARROW}").`);const[a,c]=i.split(ARROW);assert$1(a.indexOf(ELLIPSIS)===-1,()=>`The ellipsis notation ("${ELLIPSIS}") is not supported yet.`);const d=a.split(COMMA),g=d.length;if(s!==g)throw new Error(`Expected ${g} input tensors, received ${s}`);if(g>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");const $=[];for(let b=0;b<c.length;++b){const tt=c[b];if(!d.some(nt=>nt.indexOf(tt)!==-1))throw new Error(`Output subscripts contain the label ${tt} not present in the input subscripts.`);$.indexOf(tt)===-1&&$.push(tt)}for(let b=0;b<a.length;++b){const tt=a[b];$.indexOf(tt)===-1&&tt!==COMMA&&$.push(tt)}const j=new Array(d.length);for(let b=0;b<g;++b){if(new Set(d[b].split("")).size!==d[b].length)throw new Error(`Found duplicate axes in input component ${d[b]}. Support for duplicate axes in input is not implemented yet.`);j[b]=[];for(let tt=0;tt<d[b].length;++tt)j[b].push($.indexOf(d[b][tt]))}const _e=$.length,et=c.length,_=[];for(let b=et;b<_e;++b)_.push(b);return{allDims:$,summedDims:_,idDims:j}}function getEinsumPermutation(i,s){let o=new Array(i);o.fill(-1);for(let c=0;c<s.length;++c)o[s[c]]=c;const a=[];for(let c=0;c<i;++c)o[c]===-1&&a.push(c);return o=o.filter(c=>c!==-1),{permutationIndices:o,expandDims:a}}function checkEinsumDimSizes(i,s,o){const a=new Array(i);for(let c=0;c<o.length;++c){const d=o[c].shape;for(let g=0;g<s[c].length;++g)a[s[c][g]]===void 0?a[s[c][g]]=d[g]:assert$1(a[s[c][g]]===d[g],()=>`Expected dimension ${a[s[c][g]]} at axis ${g} of input shaped ${JSON.stringify(d)}, but got dimension ${d[g]}`)}}function getEinsumComputePath(i,s){const o=i,a=[];let c=0;i.length===0&&o.push(-1),c=i.length+1;for(let g=0;g<c;++g)a.push([]);const d=[];for(let g=0;g<o.length;++g){const $=o[g],j=findTermsWithDim(s,$);for(const _e of j)d.indexOf(_e)===-1&&(a[g].push(_e),d.push(_e))}return{path:o,steps:a}}function isIdentityPermutation(i){return i.every((s,o)=>s===o)}function findTermsWithDim(i,s){const o=[];for(let a=0;a<i.length;++a)(i[a].length===0||i[a].indexOf(s)!==-1||s===-1)&&o.push(a);return o}function prepareSplitSize(i,s,o=0){let a=[];if(typeof s=="number")assert$1(i.shape[o]%s===0,()=>"Number of splits must evenly divide the axis."),a=new Array(s).fill(i.shape[o]/s);else{const c=s.reduce((g,$)=>($===-1&&(g+=1),g),0);assert$1(c<=1,()=>"There should be only one negative value in split array.");const d=s.indexOf(-1);if(d!==-1){const g=s.reduce(($,j)=>j>0?$+j:$);s[d]=i.shape[o]-g}assert$1(i.shape[o]===s.reduce((g,$)=>g+$),()=>"The sum of sizes must match the size of the axis dimension."),a=s}return a}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function getSparseFillEmptyRowsIndicesDenseShapeMismatch(i){return`Received SparseTensor with denseShape[0] = 0 but
  indices.shape[0] = ${i}`}function getSparseFillEmptyRowsNegativeIndexErrorMessage(i,s){return`indices(${i}, 0) is invalid: ${s} < 0`}function getSparseFillEmptyRowsOutOfRangeIndexErrorMessage(i,s,o){return`indices(${i}, 0) is invalid: ${s} >= ${o}`}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function getSparseReshapeMultipleNegativeOneOutputDimErrorMessage(i,s){return`only one output dimension may be -1, not both ${i} and ${s}`}function getSparseReshapeNegativeOutputDimErrorMessage(i,s){return`size ${i} must be non-negative, not ${s}`}function getSparseReshapeEmptyTensorZeroOutputDimErrorMessage(){return"reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero"}function getSparseReshapeInputOutputMultipleErrorMessage(i,s){const o=sizeFromShape(i),a=sizeFromShape(s);return`Input to reshape is a SparseTensor with ${o}
  dense values, but the requested shape requires a multiple of ${a}. inputShape=${i} outputShape= ${s}`}function getSparseReshapeInputOutputMismatchErrorMessage(i,s){const o=sizeFromShape(i),a=sizeFromShape(s);return`Input to reshape is a tensor with ${o} dense values, but the requested shape has ${a}. inputShape=${i} outputShape=${s}`}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function getSparseSegmentReductionNegativeSegmentIdsErrorMessage(){return"segment ids must be >= 0"}function getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage(){return"segment ids are not increasing"}function getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage(i,s){return`Segment id ${i} out of range [0, ${s}), possibly because segmentIds input is not sorted.`}function getSparseSegmentReductionIndicesOutOfRangeErrorMessage(i,s,o){return`Bad: indices[${i}] == ${s} out of range [0, ${o})`}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function segOpComputeOptimalWindowSize(i,s){let o=!1,a;for(i<=PARALLELIZE_THRESHOLD?(a=i,o=!0):a=nearestDivisor(i,Math.floor(Math.sqrt(i)));!o;)a>s||a===i?o=!0:a=nearestDivisor(i,a+1);return a}function computeOutShape(i,s,o){const a=[],c=i.length;for(let d=0;d<c;d++)d!==s?a.push(i[d]):a.push(o);return a}function collectGatherOpShapeInfo(i,s,o,a){const c=s.shape.length,d=i.shape.length;if(a!==0&&(a<-c||a>c))throw new Error(`Expect batchDims in the range of [-${c}, ${c}], but got ${a}`);if(a<0&&(a+=c),a>d)throw new Error(`batchDims (${a}) must be less than rank(x) (
    ${d}).`);if(o<a)throw new Error(`batchDims (${a}) must be less than or equal to axis (${o}).`);for(let _=0;_<a;++_)if(i.shape[_]!==s.shape[_])throw new Error(`x.shape[${_}]: ${i.shape[_]} should be equal to indices.shape[${_}]: ${s.shape[_]}.`);const g=i.shape[o],$=[];let j=1,_e=1,et=1;for(let _=0;_<a;++_)$.push(i.shape[_]),j*=i.shape[_];for(let _=a;_<o;_++)$.push(i.shape[_]),_e*=i.shape[_];for(let _=a;_<c;_++)$.push(s.shape[_]);for(let _=o+1;_<d;_++)$.push(i.shape[_]),et*=i.shape[_];return{batchSize:j,sliceSize:et,outerSize:_e,dimSize:g,outputShape:$}}const segment_util=Object.freeze(Object.defineProperty({__proto__:null,collectGatherOpShapeInfo,computeOutShape,segOpComputeOptimalWindowSize},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fromUint8ToStringArray(i){try{return i.map(s=>decodeString(s))}catch(s){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${s}`)}}function fromStringArrayToUint8(i){return i.map(s=>encodeString(s))}const backend_util=Object.freeze(Object.defineProperty({__proto__:null,ERF_A1,ERF_A2,ERF_A3,ERF_A4,ERF_A5,ERF_P,PARALLELIZE_THRESHOLD,get RowPartitionType(){return RowPartitionType$1},SELU_SCALE,SELU_SCALEALPHA,applyActivation:applyActivation$1,assertAndGetBroadcastShape,assertAxesAreInnerMostDims,assertParamsConsistent,assignToTypedArray,axesAreInnerMostDims,calculateShapes,checkEinsumDimSizes,checkPadOnDimRoundingMode,combineLocations,combineRaggedTensorToTensorShapes,complexWithEvenIndex,complexWithOddIndex,computeConv2DInfo,computeConv3DInfo,computeDefaultPad,computeDilation2DInfo,computeOptimalWindowSize,computeOutAndReduceShapes,computeOutShape:computeOutShape$1,computePool2DInfo,computePool3DInfo,convertConv2DDataFormat,decodeEinsumEquation,eitherStridesOrDilationsAreOne,expandShapeToKeepDim,exponent,exponents,fromStringArrayToUint8,fromUint8ToStringArray,getAxesPermutation,getBroadcastDims:getBroadcastDims$1,getComplexWithIndex,getEinsumComputePath,getEinsumPermutation,getFusedBiasGradient,getFusedDyActivation,getImageCenter,getInnerMostAxes,getPermuted,getRaggedRank,getReductionAxes,getReshaped,getReshapedPermuted,getRowPartitionTypesHelper,getSliceBeginCoords,getSliceSize,getSparseFillEmptyRowsIndicesDenseShapeMismatch,getSparseFillEmptyRowsNegativeIndexErrorMessage,getSparseFillEmptyRowsOutOfRangeIndexErrorMessage,getSparseReshapeEmptyTensorZeroOutputDimErrorMessage,getSparseReshapeInputOutputMismatchErrorMessage,getSparseReshapeInputOutputMultipleErrorMessage,getSparseReshapeMultipleNegativeOneOutputDimErrorMessage,getSparseReshapeNegativeOutputDimErrorMessage,getSparseSegmentReductionIndicesOutOfRangeErrorMessage,getSparseSegmentReductionNegativeSegmentIdsErrorMessage,getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage,getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage,getUndoAxesPermutation,isIdentityPermutation,log:log$3,mergeRealAndImagArrays,prepareAndValidate,prepareSplitSize,segment_util,shouldFuse,slice_util,splitRealAndImagArrays,stridesOrDilationsArePositive,tupleValuesAreOne,upcastType,validateDefaultValueShape,validateInput,validateUpdateShape,warn},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */registerOptimizers();/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const absGradConfig={kernelName:Abs,inputsToSave:["x"],gradFunc:(i,s)=>{const[o]=s;return{x:()=>mul(i,step$2(cast$3(o,"float32"),-1))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const acosGradConfig={kernelName:Acos,inputsToSave:["x"],gradFunc:(i,s)=>{const[o]=s;return{x:()=>{const a=square$2(cast$3(o,"float32")),c=sqrt$2(sub$2(scalar(1),a));return neg$2(div$1(i,c))}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const acoshGradConfig={kernelName:Acosh,inputsToSave:["x"],gradFunc:(i,s)=>{const[o]=s;return{x:()=>{const a=sqrt$2(sub$2(square$2(cast$3(o,"float32")),1));return div$1(i,a)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const addGradConfig={kernelName:Add$1,inputsToSave:["a","b"],gradFunc:(i,s)=>{const[o,a]=s,c=assertAndGetBroadcastShape(o.shape,a.shape);return{a:()=>{let $=i;const j=getReductionAxes(o.shape,c);return j.length>0&&($=sum$2($,j)),reshape$2($,o.shape)},b:()=>{let $=i;const j=getReductionAxes(a.shape,c);return j.length>0&&($=sum$2($,j)),reshape$2($,a.shape)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const addNGradConfig={kernelName:AddN,saveAllInputs:!0,gradFunc:(i,s)=>{const o={};return s.forEach((a,c)=>{o[c]=()=>i.clone()}),o}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const argMaxGradConfig={kernelName:ArgMax,inputsToSave:["x"],gradFunc:(i,s)=>{const[o]=s;return{x:()=>zerosLike$2(o)}}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const argMinGradConfig={kernelName:ArgMin,inputsToSave:["x"],gradFunc:(i,s)=>{const[o]=s;return{x:()=>zerosLike$2(o)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const asinGradConfig={kernelName:Asin,inputsToSave:["x"],gradFunc:(i,s)=>{const[o]=s;return{x:()=>div$1(i,sqrt$2(sub$2(scalar(1),square$2(cast$3(o,"float32")))))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const asinhGradConfig={kernelName:Asinh,inputsToSave:["x"],gradFunc:(i,s)=>{const[o]=s;return{x:()=>{const a=sqrt$2(add$1(scalar(1),square$2(cast$3(o,"float32"))));return div$1(i,a)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const atan2GradConfig={kernelName:Atan2,inputsToSave:["a","b"],gradFunc:(i,s)=>{const[o,a]=s,c=assertAndGetBroadcastShape(o.shape,a.shape);return{a:()=>{const $=add$1(square$2(o),square$2(a));let j=mul(i,div$1(a,$));const _e=getReductionAxes(o.shape,c);return _e.length>0&&(j=sum$2(j,_e)),reshape$2(j,o.shape)},b:()=>{const $=add$1(square$2(o),square$2(a));let j=neg$2(mul(i,div$1(o,$)));const _e=getReductionAxes(a.shape,c);return _e.length>0&&(j=sum$2(j,_e)),reshape$2(j,a.shape)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const atanGradConfig={kernelName:Atan,inputsToSave:["x"],gradFunc:(i,s)=>{const[o]=s;return{x:()=>div$1(i,add$1(square$2(cast$3(o,"float32")),1))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const atanhGradConfig={kernelName:Atanh,inputsToSave:["x"],gradFunc:(i,s)=>{const[o]=s;return{x:()=>div$1(i,sub$2(scalar(1),square$2(cast$3(o,"float32"))))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function avgPool3dGrad_(i,s,o,a,c,d){const g=convertToTensor(i,"dy","avgPool3dGrad"),$=convertToTensor(s,"input","avgPool3dGrad");let j=g,_e=$,et=!1;$.rank===4&&(et=!0,j=reshape$2(g,[1,g.shape[0],g.shape[1],g.shape[2],g.shape[3]]),_e=reshape$2($,[1,$.shape[0],$.shape[1],$.shape[2],$.shape[3]])),assert$1(j.rank===5,()=>`Error in avgPool3dGrad: dy must be rank 5 but got rank ${j.rank}.`),assert$1(_e.rank===5,()=>`Error in avgPool3dGrad: input must be rank 5 but got rank ${_e.rank}.`),checkPadOnDimRoundingMode("avgPool3dGrad",c,d);const _={dy:j,input:_e},b={filterSize:o,strides:a,pad:c,dimRoundingMode:d},tt=ENGINE.runKernel(AvgPool3DGrad,_,b);return et?reshape$2(tt,[tt.shape[1],tt.shape[2],tt.shape[3],tt.shape[4]]):tt}const avgPool3dGrad=op({avgPool3dGrad_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const avgPool3DGradConfig$2={kernelName:AvgPool3D,inputsToSave:["x"],gradFunc:(i,s,o)=>{const[a]=s,{filterSize:c,strides:d,pad:g,dimRoundingMode:$}=o;return{x:()=>avgPool3dGrad(i,a,c,d,g,$)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function avgPoolGrad_(i,s,o,a,c){const d=convertToTensor(i,"dy","avgPoolGrad"),g=convertToTensor(s,"input","avgPoolGrad");assert$1(g.rank===d.rank,()=>`Rank of input (${g.rank}) does not match rank of dy (${d.rank})`);let $=g,j=d,_e=!1;g.rank===3&&(_e=!0,$=reshape$2(g,[1,g.shape[0],g.shape[1],g.shape[2]]),j=reshape$2(d,[1,d.shape[0],d.shape[1],d.shape[2]])),assert$1(j.rank===4,()=>`Error in avgPoolGrad: dy must be rank 4 but got rank ${j.rank}.`),assert$1($.rank===4,()=>`Error in avgPoolGrad: input must be rank 4 but got rank ${$.rank}.`);const et={dy:j,input:$},_={filterSize:o,strides:a,pad:c},b=ENGINE.runKernel(AvgPoolGrad,et,_);return _e?reshape$2(b,[b.shape[1],b.shape[2],b.shape[3]]):b}const avgPoolGrad$2=op({avgPoolGrad_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const avgPoolGradConfig$2={kernelName:AvgPool,inputsToSave:["x"],gradFunc:(i,s,o)=>{const[a]=s,{filterSize:c,strides:d,pad:g}=o;return{x:()=>avgPoolGrad$2(i,a,c,d,g)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const batchMatMulGradConfig={kernelName:BatchMatMul,inputsToSave:["a","b"],gradFunc:(i,s,o)=>{const[a,c]=s,{transposeA:d,transposeB:g}=o;return!d&&!g?{a:()=>matMul$1(i,c,!1,!0),b:()=>matMul$1(a,i,!0,!1)}:!d&&g?{a:()=>matMul$1(i,c,!1,!1),b:()=>matMul$1(i,a,!0,!1)}:d&&!g?{a:()=>matMul$1(c,i,!1,!0),b:()=>matMul$1(a,i,!1,!1)}:{a:()=>matMul$1(c,i,!0,!0),b:()=>matMul$1(i,a,!0,!0)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const batchToSpaceNDGradConfig={kernelName:BatchToSpaceND,gradFunc:(i,s,o)=>{const{blockShape:a,crops:c}=o;return{x:()=>spaceToBatchND$2(i,a,c)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const broadcastToGradConfig={kernelName:BroadcastTo,gradFunc:(i,s,o)=>{const a=o,c=a.inputShape,d=a.shape,g=Array.from(d);for(let j=c.length-1;j>=0;j--)if(c[j]===d[j])g[j]=1;else if(c[j]!==1)throw new Error(`broadcastTo(): [${c}] cannot be broadcast to [${d}].`);const $=[];for(let j=0;j<g.length;j++)g[j]>1&&$.push(j);return{x:()=>sum$2(i,$,!0)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const castGradConfig={kernelName:Cast,gradFunc:i=>({x:()=>i.clone()})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ceilGradConfig={kernelName:Ceil,gradFunc:i=>({x:()=>zerosLike$2(i)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const clipByValueGradConfig={kernelName:ClipByValue,inputsToSave:["x"],gradFunc:(i,s,o)=>{const[a]=s,{clipValueMin:c,clipValueMax:d}=o;return{x:()=>where(logicalAnd$2(greaterEqual$2(a,c),lessEqual$2(a,d)),i,zerosLike$2(i))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const complexAbsGradConfig={kernelName:ComplexAbs,inputsToSave:["x"],gradFunc:absGradConfig.gradFunc};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const concatGradConfig={kernelName:Concat,saveAllInputs:!0,gradFunc:(i,s,o)=>{const a=s.map(j=>j.shape),{axis:c}=o,d=parseAxisParam(c,s[0].shape)[0],g=a.map(j=>j[d]);return split$1(i,g,d).map(j=>()=>j)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const conv2DGradConfig={kernelName:Conv2D$1,inputsToSave:["x","filter"],gradFunc:(i,s,o)=>{const[a,c]=s,{dilations:d,strides:g,pad:$,dataFormat:j}=o;return assert$1(tupleValuesAreOne(d),()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${d}'`),{x:()=>conv2DBackpropInput$2(a.shape,i,c,g,$,j),filter:()=>conv2DBackpropFilter$2(a,i,c.shape,g,$,j)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const conv2DBackpropInputGradConfig={kernelName:Conv2DBackpropInput,inputsToSave:["dy","filter"],gradFunc:(i,s,o)=>{const[a,c]=s,{strides:d,pad:g,dataFormat:$,dimRoundingMode:j}=o;return{dy:()=>conv2d$2(i,c,d,g,$,1,j),filter:()=>conv2DBackpropFilter$2(i,a,c.shape,d,g,$,j)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function conv3DBackpropFilter_(i,s,o,a,c){let d=i;i.rank===4&&(d=reshape$2(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]]));let g=s;g.rank===4&&(g=reshape$2(s,[1,s.shape[0],s.shape[1],s.shape[2],s.shape[3]])),assert$1(d.rank===5,()=>`Error in conv3dDerFilter: input must be rank 5, but got shape ${d.shape}.`),assert$1(g.rank===5,()=>`Error in conv3dDerFilter: dy must be rank 5, but got shape ${g.shape}.`),assert$1(o.length===5,()=>`Error in conv3dDerFilter: filterShape must be length 5, but got ${o}.`),assert$1(d.shape[4]===o[3],()=>`Error in conv3dDerFilter: depth of input ${d.shape[4]}) must match input depth in filter (${o[3]}.`),assert$1(g.shape[4]===o[4],()=>`Error in conv3dDerFilter: depth of dy (${g.shape[4]}) must match output depth for filter (${o[4]}).`);const $={x:d,dy:g},j={strides:a,pad:c,filterShape:o};return ENGINE.runKernel(Conv3DBackpropFilterV2,$,j)}const conv3DBackpropFilter=op({conv3DBackpropFilter_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const conv3DGradConfig={kernelName:Conv3D$1,inputsToSave:["x","filter"],gradFunc:(i,s,o)=>{const{dilations:a,strides:c,pad:d}=o;assert$1(tupleValuesAreOne(a),()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${a}'`);const[g,$]=s;return{x:()=>conv3DBackpropInput$1(g.shape,i,$,c,d),filter:()=>conv3DBackpropFilter(g,i,$.shape,c,d)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cosGradConfig={kernelName:Cos,inputsToSave:["x"],gradFunc:(i,s)=>{const[o]=s;return{x:()=>mul(neg$2(sin$2(cast$3(o,"float32"))),i)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const coshGradConfig={kernelName:Cosh,inputsToSave:["x"],gradFunc:(i,s)=>{const[o]=s;return{x:()=>mul(sinh$2(cast$3(o,"float32")),i)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cumsumGradConfig={kernelName:Cumsum,inputsToSave:["x"],gradFunc:(i,s,o)=>{const[a]=s,{axis:c,exclusive:d,reverse:g}=o;return{x:()=>{const $=getAxesPermutation([c],a.rank);let j=cumsum$2(i,c,d,!g);return $!=null&&(j=transpose$2(j,$)),j}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const depthwiseConv2dNativeGradConfig={kernelName:DepthwiseConv2dNative,inputsToSave:["x","filter"],gradFunc:(i,s,o)=>{const{dilations:a,strides:c,pad:d,dimRoundingMode:g}=o,$=a??[1,1];assert$1(tupleValuesAreOne($),()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${$}'`);const[j,_e]=s;return assert$1(j.rank===4,()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${j.rank}.`),assert$1(_e.rank===4,()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${_e.rank}.`),assert$1(j.shape[3]===_e.shape[2],()=>`Error in gradient of depthwiseConv2d: number of input channels (${j.shape[3]}) must match the inChannels dimension in filter ${_e.shape[2]}.`),assert$1(eitherStridesOrDilationsAreOne(c,$),()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${c} and dilations '${$}'.`),checkPadOnDimRoundingMode("depthwiseConv2d",d,g),{x:()=>depthwiseConv2dNativeBackpropInput$2(j.shape,i,_e,c,d,$,g),filter:()=>depthwiseConv2dNativeBackpropFilter$2(j,i,_e.shape,c,d,$,g)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dilation2dGradConfig={kernelName:Dilation2D,inputsToSave:["x","filter"],gradFunc:(i,s,o)=>{const[a,c]=s,d={x:a,filter:c,dy:i},g={x:a,filter:c,dy:i};return{x:()=>ENGINE.runKernel(Dilation2DBackpropInput,d,o),filter:()=>ENGINE.runKernel(Dilation2DBackpropFilter,g,o)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const eluGradConfig$2={kernelName:Elu$1,outputsToSave:[!0],gradFunc:(i,s)=>{const[o]=s,a={dy:i,y:o};return{x:()=>ENGINE.runKernel(EluGrad,a)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const erfGradConfig={kernelName:Erf,inputsToSave:["x"],gradFunc:(i,s)=>{const[o]=s,a=mul(exp$2(neg$2(square$2(o))),2/Math.sqrt(Math.PI));return{x:()=>mul(i,a)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const expGradConfig={kernelName:Exp,outputsToSave:[!0],gradFunc:(i,s)=>{const[o]=s;return{x:()=>mul(i,o)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const expandDimsGradConfig={kernelName:ExpandDims,inputsToSave:["input"],gradFunc:(i,s)=>{const[o]=s;return{input:()=>reshape$2(i,o.shape)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const expm1GradConfig={kernelName:Expm1,inputsToSave:["x"],gradFunc:(i,s)=>{const[o]=s;return{x:()=>mul(i,exp$2(o))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const floorGradConfig={kernelName:Floor,gradFunc:i=>({x:()=>zerosLike$2(i)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const floorDivGradConfig={kernelName:FloorDiv,inputsToSave:["a","b"],gradFunc:(i,s)=>{const[o,a]=s,c=assertAndGetBroadcastShape(o.shape,a.shape);return{a:()=>{const $=div$1(i,cast$3(a,"float32")),j=getReductionAxes(o.shape,c);return j.length>0?reshape$2(sum$2($,j),o.shape):$},b:()=>{let $=mul(i,cast$3(o,"float32"));const j=getReductionAxes(a.shape,c);j.length>0&&($=reshape$2(sum$2($,j),a.shape));const _e=square$2(a);return neg$2(div$1($,cast$3(_e,"float32")))}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fusedBatchNormGradConfig={kernelName:FusedBatchNorm,inputsToSave:["x","mean","variance","scale"],gradFunc:(i,s,o)=>{const{varianceEpsilon:a}=o,[c,d,g,$]=s,j=$??scalar(1),_e=getReductionAxes(d.shape,c.shape),et=[];if(d.rank===1){for(let lt=0;lt<c.shape.length-1;++lt)et.push(c.shape[lt]);et.push(1)}const _=sub$2(c,d),b=mul(i,j),tt=rsqrt$2(add$1(g,scalar(a))),nt=mul(mul(mul(tt,tt),tt),scalar(-.5));return{x:()=>d.rank===1?reshape$2(mul(mul(i,tile$3(reshape$2(tt,[1,1,1,d.shape[0]]),et)),j),c.shape):reshape$2(mul(mul(i,tt),j),c.shape),mean:()=>{let lt=mul(mul(tt,scalar(-1)),b);return d.rank===1&&(lt=sum$2(lt,_e)),reshape$2(lt,d.shape)},variance:()=>{let lt=mul(mul(nt,_),b);return d.rank===1&&(lt=sum$2(lt,_e)),reshape$2(lt,d.shape)},scale:()=>{const lt=mul(_,tt);let ut=mul(i,lt);return d.rank===1&&(ut=sum$2(ut,_e)),reshape$2(ut,d.shape)},offset:()=>{let lt=i;return d.rank===1&&(lt=sum$2(lt,_e)),reshape$2(lt,d.shape)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gatherGradConfig={kernelName:GatherV2,inputsToSave:["x","indices"],gradFunc:(i,s,o)=>{const[a,c]=s,{axis:d,batchDims:g}=o,$=parseAxisParam(d,a.shape)[0],j=(_e,et,_)=>()=>{const b=_e.shape,tt=et.size,nt=b.slice(0,$),rt=nt.length,st=b.slice(d,b.length).slice(1),ot=st.length,it=arrayRange(0,rt),at=arrayRange(rt+1,rt+1+ot),lt=arrayConcat([nt,[tt],st]),ut=reshape$2(_,lt),ct=reshape$2(et,[tt]),dt=arrayConcat([[rt],it,at]),pt=transpose$2(ut,dt);let ht=unsortedSegmentSum$2(pt,ct,_e.shape[$]);const ft=getUndoAxesPermutation(dt);return ht=transpose$2(ht,ft),ht};if(g===1){const _e=a.shape[0],et=a.split(_e,0);return{x:()=>stack(et.map((tt,nt)=>j(tt,c.slice(nt,1),i.slice(nt,1))())).reshape(a.shape),indices:()=>c}}else return{x:j(a,c,i),indices:()=>c}}};function arrayRange(i,s){const o=[];for(let a=i;a<s;++a)o.push(a);return o}function arrayConcat(i){const s=[];for(let o=0;o<i.length;++o)for(let a=0;a<i[o].length;++a)s.push(i[o][a]);return s}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const greaterEqualGradConfig={kernelName:GreaterEqual,inputsToSave:["a","b"],gradFunc:(i,s)=>{const[o,a]=s;return{a:()=>zerosLike$2(o),b:()=>zerosLike$2(a)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const identityGradConfig={kernelName:Identity$1,gradFunc:i=>({x:()=>cast$3(i,"float32")})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const isFiniteGradConfig={kernelName:IsFinite,gradFunc:i=>({x:()=>zerosLike$2(i)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const isInfGradConfig={kernelName:IsInf,gradFunc:i=>({x:()=>zerosLike$2(i)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const isNanGradConfig={kernelName:IsNan,gradFunc:i=>({x:()=>zerosLike$2(i)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const leakyReluGradConfig={kernelName:LeakyRelu,inputsToSave:["x"],gradFunc:(i,s,o)=>{const[a]=s,{alpha:c}=o,d=greater$2(a,0);return{x:()=>where(d,i,mul(i,c))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const log1pGradConfig={kernelName:Log1p,inputsToSave:["x"],gradFunc:(i,s)=>{const[o]=s;return{x:()=>div$1(i,add$1(o,1))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const logGradConfig={kernelName:Log,inputsToSave:["x"],gradFunc:(i,s)=>{const[o]=s;return{x:()=>div$1(i,cast$3(o,"float32"))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const logSoftmaxGradConfig={kernelName:LogSoftmax$1,inputsToSave:[],outputsToSave:[!0],gradFunc:(i,s,o)=>{const[a]=s,{axis:c}=o;return{logits:()=>{const g=exp$2(a);return sub$2(i,mul(sum$2(i,c,!0),g))}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function localResponseNormalizationBackprop_(i,s,o,a=5,c=1,d=1,g=.5){const $={x:i,y:s,dy:o},j={depthRadius:a,bias:c,alpha:d,beta:g};return ENGINE.runKernel(LRNGrad,$,j)}const localResponseNormalizationBackprop=op({localResponseNormalizationBackprop_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lrnGradConfig={kernelName:LRN,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(i,s,o)=>{const[a,c]=s,{depthRadius:d,bias:g,alpha:$,beta:j}=o;return{x:()=>localResponseNormalizationBackprop(a,c,i,d,g,$,j)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gradForMinAndMax(i,s,o,a){return s.rank<o.rank&&(s=reshape$2(s,expandShapeToKeepDim(s.shape,a))),i.rank<o.rank&&(i=reshape$2(i,expandShapeToKeepDim(i.shape,a))),{x:()=>mul(i,cast$3(equal$2(o,s),i.dtype))}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const maxGradConfig={kernelName:Max,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(i,s,o)=>{const a=o,{reductionIndices:c}=a,d=s[0],g=s[1],$=parseAxisParam(c,d.shape),j=gradForMinAndMax(i,g,d,$);return{x:()=>j.x()}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const maximumGradConfig={kernelName:Maximum$1,inputsToSave:["a","b"],gradFunc:(i,s)=>{const[o,a]=s;return{a:()=>mul(i,cast$3(greaterEqual$2(o,a),"float32")),b:()=>mul(i,cast$3(less$2(o,a),"float32"))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function maxPool3dGrad_(i,s,o,a,c,d,g){const $=convertToTensor(i,"dy","maxPool3dGrad"),j=convertToTensor(s,"input","maxPool3dGrad"),_e=convertToTensor(o,"output","maxPool3dGrad");let et=$,_=j,b=_e,tt=!1;j.rank===4&&(tt=!0,et=reshape$2($,[1,$.shape[0],$.shape[1],$.shape[2],$.shape[3]]),_=reshape$2(j,[1,j.shape[0],j.shape[1],j.shape[2],j.shape[3]]),b=reshape$2(_e,[1,_e.shape[0],_e.shape[1],_e.shape[2],_e.shape[3]])),assert$1(et.rank===5,()=>`Error in maxPool3dGrad: dy must be rank 5 but got rank ${et.rank}.`),assert$1(_.rank===5,()=>`Error in maxPool3dGrad: input must be rank 5 but got rank ${_.rank}.`),assert$1(b.rank===5,()=>`Error in maxPool3dGrad: output must be rank 5 but got rank ${b.rank}.`),checkPadOnDimRoundingMode("maxPool3dGrad",d,g);const nt={dy:et,input:_,output:b},rt={filterSize:a,strides:c,pad:d,dimRoundingMode:g},st=ENGINE.runKernel(MaxPool3DGrad,nt,rt);return tt?reshape$2(st,[st.shape[1],st.shape[2],st.shape[3],st.shape[4]]):st}const maxPool3dGrad=op({maxPool3dGrad_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const maxPool3DGradConfig$2={kernelName:MaxPool3D,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(i,s,o)=>{const[a,c]=s,{filterSize:d,strides:g,pad:$,dimRoundingMode:j}=o;return{x:()=>maxPool3dGrad(i,a,c,d,g,$,j)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function maxPoolGrad_(i,s,o,a,c,d,g){const $=convertToTensor(i,"dy","maxPoolGrad"),j=convertToTensor(s,"input","maxPoolGrad"),_e=convertToTensor(o,"output","maxPoolGrad");assert$1(j.rank===$.rank,()=>`Rank of input (${j.rank}) does not match rank of dy (${$.rank})`),assert$1($.rank===4,()=>`Error in maxPoolGrad: dy must be rank 4 but got rank ${$.rank}.`),assert$1(j.rank===4,()=>`Error in maxPoolGrad: input must be rank 4 but got rank ${j.rank}.`),checkPadOnDimRoundingMode("maxPoolGrad",d,g);const et={dy:$,input:j,output:_e},_={filterSize:a,strides:c,pad:d,dimRoundingMode:g};return ENGINE.runKernel(MaxPoolGrad,et,_)}const maxPoolGrad$2=op({maxPoolGrad_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const maxPoolGradConfig$2={kernelName:MaxPool,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(i,s,o)=>{const[a,c]=s,{filterSize:d,strides:g,pad:$}=o;return{x:()=>maxPoolGrad$2(i,a,c,d,g,$)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const meanGradConfig={kernelName:Mean,inputsToSave:["x"],gradFunc:(i,s,o)=>{const[a]=s,{axis:c}=o,d=parseAxisParam(c,a.shape),$=computeOutAndReduceShapes(a.shape,d)[1],j=sizeFromShape($);return{x:()=>{const et=a.shape.slice();d.forEach(tt=>{et[tt]=1});const _=reshape$2(i,et);return div$1(mul(_,ones(a.shape,"float32")),j)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const minGradConfig={kernelName:Min,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(i,s,o)=>{const a=o,{axis:c}=a,[d,g]=s,$=parseAxisParam(c,d.shape),j=gradForMinAndMax(i,g,d,$);return{x:()=>j.x()}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const minimumGradConfig={kernelName:Minimum$1,inputsToSave:["a","b"],gradFunc:(i,s)=>{const[o,a]=s;return{a:()=>mul(i,cast$3(lessEqual$2(o,a),"float32")),b:()=>mul(i,cast$3(greater$2(o,a),"float32"))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mirrorPadGradConfig={kernelName:MirrorPad,inputsToSave:["x"],gradFunc:(i,s,o)=>{const a=s[0],{paddings:c}=o,d=c.map(g=>g[0]);return{x:()=>slice$2(i,d,a.shape)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const modGradConfig={kernelName:Mod,inputsToSave:["a","b"],gradFunc:(i,s)=>{const[o,a]=s,c=assertAndGetBroadcastShape(o.shape,a.shape);return{a:()=>{const $=getReductionAxes(o.shape,c);return $.length>0?reshape$2(sum$2(i,$),o.shape):i},b:()=>{const $=mul(i,neg$2(floor$2(div$1(o,a)))),j=getReductionAxes(a.shape,c);return j.length>0?reshape$2(sum$2($,j),a.shape):$}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const multiplyGradConfig={kernelName:Multiply$1,inputsToSave:["a","b"],gradFunc:(i,s)=>{const[o,a]=s,c=assertAndGetBroadcastShape(o.shape,a.shape);return{a:()=>{const $=mul(i,cast$3(a,"float32")),j=getReductionAxes(o.shape,c);return j.length>0?reshape$2(sum$2($,j),o.shape):$},b:()=>{const $=mul(i,cast$3(o,"float32")),j=getReductionAxes(a.shape,c);return j.length>0?reshape$2(sum$2($,j),a.shape):$}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const negGradConfig={kernelName:Neg,gradFunc:i=>({x:()=>neg$2(i)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const oneHotGradConfig={kernelName:OneHot,inputsToSave:["indices"],gradFunc:(i,s)=>{const o=s[0];return{indices:()=>zeros$1(o.shape,"float32")}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const onesLikeGradConfig={kernelName:OnesLike,gradFunc:i=>({x:()=>zerosLike$2(i)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const packGradConfig={kernelName:Pack,saveAllInputs:!0,gradFunc:(i,s,o)=>{const{axis:a}=o;return unstack(i,a).map(d=>()=>d)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const padV2GradConfig={kernelName:PadV2,inputsToSave:["x"],gradFunc:(i,s,o)=>{const a=s[0],{paddings:c}=o,d=c.map(g=>g[0]);return{x:()=>slice$2(i,d,a.shape)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const powGradConfig={kernelName:Pow,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(i,s)=>{const[o,a,c]=s,d=o,g=a,$=assertAndGetBroadcastShape(d.shape,g.shape);return{a:()=>{const et=cast$3(g,"float32");let _=mul(i,mul(et,pow$2(d,sub$2(et,scalar(1)))));const b=getReductionAxes(d.shape,$);return b.length>0&&(_=sum$2(_,b)),reshape$2(_,d.shape)},b:()=>{const et=greater$2(d,0),_=where(et,log$2(d),zerosLike$2(d));let b=mul(i,mul(c,_));const tt=getReductionAxes(g.shape,$);return tt.length>0&&(b=sum$2(b,tt)),reshape$2(b,g.shape)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const preluGradConfig={kernelName:Prelu,inputsToSave:["x","alpha"],gradFunc:(i,s)=>{const[o,a]=s,c=greater$2(o,0);return{x:()=>where(c,i,mul(i,a)),alpha:()=>{let d=where(c,zerosLike$2(i),mul(i,o));const g=getReductionAxes(a.shape,i.shape);return g.length>0&&(d=sum$2(d,g)),reshape$2(d,a.shape)}}}};/**
 * @license
 * Copyright 2022 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function prodGradFn_(i,s,o){const a=i.shape.slice();a[o]=1;const c=reshape$2(s,a),d=cumprod$2(i,o,!0,!1),g=cumprod$2(i,o,!0,!0),$=mul(d,g);return mul(c,$)}function prodsGradFn_(i,s,o){const a=i.shape.length,c=a-o.length,d=getAxesPermutation(o,a);let g=i;d!=null&&(g=transpose$2(i,d));const $=g.shape.slice(),_e=$.splice(a-o.length,o.length).reduce((b,tt)=>b*tt,1);$.push(_e);const et=g.reshape($);let _=prodGradFn_(et,s,c);if(_=_.reshape(g.shape),d!=null){const b=getUndoAxesPermutation(d);_=transpose$2(_,b)}return _}const prodGradConfig={kernelName:Prod,inputsToSave:["x"],gradFunc:(i,s,o)=>{const[a]=s,{axis:c}=o;let d=[];return c==null?d=a.shape.map((g,$)=>$):typeof c=="number"?d=[c]:d=c,{x:()=>prodsGradFn_(a,i,d)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const divGradConfig={kernelName:RealDiv,inputsToSave:["a","b"],gradFunc:(i,s)=>{const[o,a]=s,c=assertAndGetBroadcastShape(o.shape,a.shape);return{a:()=>{const $=div$1(i,cast$3(a,"float32")),j=getReductionAxes(o.shape,c);return j.length>0?reshape$2(sum$2($,j),o.shape):$},b:()=>{let $=mul(i,cast$3(o,"float32"));const j=getReductionAxes(a.shape,c);j.length>0&&($=reshape$2(sum$2($,j),a.shape));const _e=square$2(a);return neg$2(div$1($,cast$3(_e,"float32")))}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const reciprocalGradConfig={kernelName:Reciprocal,inputsToSave:["x"],gradFunc:(i,s)=>{const[o]=s;return{x:()=>div$1(i,neg$2(square$2(o)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const relu6GradConfig={kernelName:Relu6$1,inputsToSave:["x"],gradFunc:(i,s)=>{const[o]=s,a=mul(lessEqual$2(o,6),step$2(o));return{x:()=>mul(i,cast$3(a,"float32"))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const reluGradConfig={kernelName:Relu$1,inputsToSave:["x"],gradFunc:(i,s)=>{const[o]=s;return{x:()=>mul(i,cast$3(step$2(o),"float32"))}}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const reshapeGradConfig={kernelName:Reshape$1,inputsToSave:["x"],gradFunc:(i,s)=>{const[o]=s;return{x:()=>reshape$2(i,o.shape)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const resizeBilinearGradConfig$2={kernelName:ResizeBilinear,inputsToSave:["images"],gradFunc:(i,s,o)=>{const[a]=s,c={dy:i,images:a};return{images:()=>ENGINE.runKernel(ResizeBilinearGrad,c,o)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const resizeNearestNeighborGradConfig$2={kernelName:ResizeNearestNeighbor,inputsToSave:["images"],gradFunc:(i,s,o)=>{const[a]=s,c={dy:i,images:a};return{images:()=>ENGINE.runKernel(ResizeNearestNeighborGrad,c,o)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const reverseGradConfig={kernelName:Reverse,gradFunc:(i,s,o)=>{const{dims:a}=o,c=parseAxisParam(a,i.shape);return{x:()=>reverse$2(i,c)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const roundGradConfig={kernelName:Round,gradFunc:i=>({x:()=>zerosLike$2(i)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rsqrtGradConfig={kernelName:Rsqrt,inputsToSave:["x"],gradFunc:(i,s)=>{const[o]=s;return{x:()=>neg$2(div$1(i,mul(pow$2(o,1.5),2)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const selectGradConfig={kernelName:Select,inputsToSave:["condition"],gradFunc:(i,s)=>{const[o]=s;return{condition:()=>cast$3(zerosLike$2(o),"float32"),t:()=>mul(i,cast$3(o,i.dtype)),e:()=>mul(i,cast$3(logicalNot$2(o),i.dtype))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const seluGradConfig={kernelName:Selu$1,inputsToSave:["x"],gradFunc:(i,s)=>{const[o]=s;return{x:()=>{const a=greater$2(o,scalar(0)),c=scalar(SELU_SCALEALPHA),d=scalar(SELU_SCALE),g=mul(i,d),$=mul(mul(i,c),exp$2(cast$3(o,"float32")));return where(a,g,$)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sigmoidGradConfig={kernelName:Sigmoid$1,outputsToSave:[!0],gradFunc:(i,s)=>{const[o]=s;return{x:()=>mul(i,mul(o,sub$2(scalar(1),o)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const signGradConfig={kernelName:Sign,gradFunc:i=>({x:()=>zerosLike$2(i)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sinGradConfig={kernelName:Sin,inputsToSave:["x"],gradFunc:(i,s)=>{const[o]=s;return{x:()=>mul(cos$2(cast$3(o,"float32")),i)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sinhGradConfig={kernelName:Sinh,inputsToSave:["x"],gradFunc:(i,s)=>{const[o]=s;return{x:()=>mul(cosh$2(cast$3(o,"float32")),i)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sliceGradConfig={kernelName:Slice,inputsToSave:["x"],gradFunc:(i,s,o)=>{const[a]=s,{begin:c,size:d}=o,g=a.shape,[$,j]=parseSliceParams(a,c,d),_e=[];for(let et=0;et<i.rank;et++)_e.push([$[et],g[et]-$[et]-j[et]]);return{x:()=>pad(i,_e)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const softmaxGradConfig={kernelName:Softmax$2,outputsToSave:[!0],gradFunc:(i,s,o)=>{const[a]=s,{dim:c}=o,d=!0,g=mul(i,a);return{logits:()=>sub$2(g,mul(sum$2(g,[c],d),a))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const softplusGradConfig={kernelName:Softplus$1,inputsToSave:["x"],gradFunc:(i,s)=>{const[o]=s;return{x:()=>mul(i,sigmoid$2(o))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const spaceToBatchNDGradConfig={kernelName:SpaceToBatchND,gradFunc:(i,s,o)=>{const{blockShape:a,paddings:c}=o;return{x:()=>batchToSpaceND$2(i,a,c)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const splitVGradConfig={kernelName:SplitV,gradFunc:(i,s,o)=>{const{axis:a}=o;return{x:()=>concat$2(i,a)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sqrtGradConfig={kernelName:Sqrt,inputsToSave:["x"],gradFunc:(i,s)=>{const[o]=s;return{x:()=>div$1(i,mul(sqrt$2(cast$3(o,"float32")),2))}}};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const squareGradConfig={kernelName:Square,inputsToSave:["x"],gradFunc:(i,s)=>{const[o]=s;return{x:()=>mul(i,mul(cast$3(o,"float32"),2))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const squaredDifferenceGradConfig={kernelName:SquaredDifference,inputsToSave:["a","b"],gradFunc:(i,s)=>{const[o,a]=s,c=scalar(2);return{a:()=>mul(i,mul(c,sub$2(o,a))),b:()=>mul(i,mul(c,sub$2(a,o)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const stepGradConfig={kernelName:Step,gradFunc:i=>({x:()=>zerosLike$2(i)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const subGradConfig={kernelName:Sub,inputsToSave:["a","b"],gradFunc:(i,s)=>{const[o,a]=s,c=assertAndGetBroadcastShape(o.shape,a.shape);return{a:()=>{let $=i;const j=getReductionAxes(o.shape,c);return j.length>0&&($=sum$2($,j)),reshape$2($,o.shape)},b:()=>{let $=i;const j=getReductionAxes(a.shape,c);return j.length>0&&($=sum$2($,j)),reshape$2(neg$2($),a.shape)}}}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sumGradConfig={kernelName:Sum,inputsToSave:["x"],gradFunc:(i,s,o)=>{const[a]=s,c=a.shape.slice(),{axis:d}=o;parseAxisParam(d,a.shape).forEach(_e=>{c[_e]=1});const $=reshape$2(i,c),j=mul($,ones(a.shape,"float32"));return{x:()=>j}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tanGradConfig={kernelName:Tan,inputsToSave:["x"],gradFunc:(i,s)=>{const[o]=s;return{x:()=>div$1(i,square$2(cos$2(o)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tanhGradConfig={kernelName:Tanh$1,outputsToSave:[!0],gradFunc:(i,s)=>{const[o]=s;return{x:()=>mul(sub$2(scalar(1),square$2(o)),i)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tileGradConfig={kernelName:Tile,inputsToSave:["x"],gradFunc:(i,s,o)=>{const[a]=s,{reps:c}=o;return{x:()=>{let g=zerosLike$2(a);if(a.rank===1)for(let $=0;$<c[0];++$)g=add$1(g,slice$2(i,[$*a.shape[0]],[a.shape[0]]));else if(a.rank===2)for(let $=0;$<c[0];++$)for(let j=0;j<c[1];++j)g=add$1(g,slice$2(i,[$*a.shape[0],j*a.shape[1]],[a.shape[0],a.shape[1]]));else if(a.rank===3)for(let $=0;$<c[0];++$)for(let j=0;j<c[1];++j)for(let _e=0;_e<c[2];++_e)g=add$1(g,slice$2(i,[$*a.shape[0],j*a.shape[1],_e*a.shape[2]],[a.shape[0],a.shape[1],a.shape[2]]));else if(a.rank===4)for(let $=0;$<c[0];++$)for(let j=0;j<c[1];++j)for(let _e=0;_e<c[2];++_e)for(let et=0;et<c[3];++et)g=add$1(g,slice$2(i,[$*a.shape[0],j*a.shape[1],_e*a.shape[2],et*a.shape[3]],[a.shape[0],a.shape[1],a.shape[2],a.shape[3]]));else throw new Error(`Gradient for tile operation is not implemented for rank-${a.rank} tensors yet.`);return g}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const transposeGradConfig={kernelName:Transpose,gradFunc:(i,s,o)=>{const a=o,{perm:c}=a,d=getUndoAxesPermutation(c);return{x:()=>transpose$2(i,d)}}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const unpackGradConfig={kernelName:Unpack,gradFunc:(i,s,o)=>{const a=o,{axis:c}=a;return{value:()=>stack(i,c)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const unsortedSegmentSumGradConfig={kernelName:UnsortedSegmentSum,inputsToSave:["segmentIds"],gradFunc:(i,s)=>{const[o]=s;return{x:()=>gatherDropNegatives(i,o)}}};function gatherDropNegatives(i,s){const o=maximum$2(s,zerosLike$2(s)),a=gather$1(i,o);let c=greaterEqual$2(s,scalar(0,"int32"));const d=a.rank-c.rank;for(let $=0;$<d;++$)c=expandDims$3(c,$+1);c=logicalAnd$2(c,ones(a.shape,"bool"));const g=zerosLike$2(a);return where(c,a,g)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zerosLikeGradConfig={kernelName:ZerosLike,gradFunc:i=>({x:()=>zerosLike$2(i)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gradConfigs=[absGradConfig,acosGradConfig,acoshGradConfig,addGradConfig,addNGradConfig,argMaxGradConfig,argMinGradConfig,asinGradConfig,asinhGradConfig,atan2GradConfig,atanGradConfig,atanhGradConfig,avgPool3DGradConfig$2,avgPoolGradConfig$2,batchMatMulGradConfig,batchToSpaceNDGradConfig,broadcastToGradConfig,castGradConfig,ceilGradConfig,clipByValueGradConfig,complexAbsGradConfig,concatGradConfig,conv2DBackpropInputGradConfig,conv2DGradConfig,conv3DGradConfig,cosGradConfig,coshGradConfig,cumsumGradConfig,depthwiseConv2dNativeGradConfig,dilation2dGradConfig,divGradConfig,eluGradConfig$2,erfGradConfig,expGradConfig,expandDimsGradConfig,expm1GradConfig,floorDivGradConfig,floorGradConfig,fusedBatchNormGradConfig,gatherGradConfig,greaterEqualGradConfig,identityGradConfig,isFiniteGradConfig,isInfGradConfig,isNanGradConfig,leakyReluGradConfig,log1pGradConfig,logGradConfig,logSoftmaxGradConfig,lrnGradConfig,maxGradConfig,maxGradConfig,maximumGradConfig,maxPool3DGradConfig$2,maxPoolGradConfig$2,meanGradConfig,minGradConfig,minimumGradConfig,mirrorPadGradConfig,modGradConfig,multiplyGradConfig,negGradConfig,oneHotGradConfig,onesLikeGradConfig,packGradConfig,padV2GradConfig,padV2GradConfig,powGradConfig,preluGradConfig,prodGradConfig,reciprocalGradConfig,relu6GradConfig,reluGradConfig,reshapeGradConfig,resizeBilinearGradConfig$2,resizeNearestNeighborGradConfig$2,reverseGradConfig,roundGradConfig,rsqrtGradConfig,selectGradConfig,seluGradConfig,sigmoidGradConfig,signGradConfig,sinGradConfig,sinhGradConfig,sliceGradConfig,softmaxGradConfig,softplusGradConfig,spaceToBatchNDGradConfig,spaceToBatchNDGradConfig,splitVGradConfig,splitVGradConfig,sqrtGradConfig,squaredDifferenceGradConfig,squareGradConfig,stepGradConfig,subGradConfig,sumGradConfig,tanGradConfig,tanhGradConfig,tileGradConfig,transposeGradConfig,unpackGradConfig,unsortedSegmentSumGradConfig,zerosLikeGradConfig];for(const i of gradConfigs)registerGradient(i);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */getGlobalTensorClass().prototype.abs=function(){return this.throwIfDisposed(),abs$2(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */getGlobalTensorClass().prototype.acos=function(){return this.throwIfDisposed(),acos$2(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */getGlobalTensorClass().prototype.acosh=function(){return this.throwIfDisposed(),acosh$2(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */getGlobalTensorClass().prototype.add=function(i){return this.throwIfDisposed(),add$1(this,i)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */getGlobalTensorClass().prototype.all=function(i,s){return this.throwIfDisposed(),all$2(this,i,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */getGlobalTensorClass().prototype.any=function(i,s){return this.throwIfDisposed(),any$2(this,i,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */getGlobalTensorClass().prototype.argMax=function(i){return this.throwIfDisposed(),argMax$2(this,i)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */getGlobalTensorClass().prototype.argMin=function(i){return this.throwIfDisposed(),argMin$2(this,i)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */getGlobalTensorClass().prototype.asScalar=function(){return this.throwIfDisposed(),assert$1(this.size===1,()=>"The array must have only 1 element."),reshape$2(this,[])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */getGlobalTensorClass().prototype.asType=function(i){return this.throwIfDisposed(),cast$3(this,i)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */getGlobalTensorClass().prototype.as1D=function(){return this.throwIfDisposed(),reshape$2(this,[this.size])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */getGlobalTensorClass().prototype.as2D=function(i,s){return this.throwIfDisposed(),reshape$2(this,[i,s])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */getGlobalTensorClass().prototype.as3D=function(i,s,o){return this.throwIfDisposed(),reshape$2(this,[i,s,o])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */getGlobalTensorClass().prototype.as4D=function(i,s,o,a){return this.throwIfDisposed(),reshape$2(this,[i,s,o,a])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */getGlobalTensorClass().prototype.as5D=function(i,s,o,a,c){return this.throwIfDisposed(),reshape$2(this,[i,s,o,a,c])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */getGlobalTensorClass().prototype.asin=function(){return this.throwIfDisposed(),asin$2(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */getGlobalTensorClass().prototype.asinh=function(){return this.throwIfDisposed(),asinh$2(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */getGlobalTensorClass().prototype.atan=function(){return this.throwIfDisposed(),atan$2(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */getGlobalTensorClass().prototype.atan2=function(i){return this.throwIfDisposed(),atan2$2(this,i)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */getGlobalTensorClass().prototype.atanh=function(){return this.throwIfDisposed(),atanh$2(this)};getGlobalTensorClass().prototype.avgPool=function(i,s,o,a){return this.throwIfDisposed(),avgPool$2(this,i,s,o,a)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */getGlobalTensorClass().prototype.batchToSpaceND=function(i,s){return this.throwIfDisposed(),batchToSpaceND$2(this,i,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */getGlobalTensorClass().prototype.batchNorm=function(i,s,o,a,c){return this.throwIfDisposed(),batchNorm$2(this,i,s,o,a,c)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */getGlobalTensorClass().prototype.broadcastTo=function(i){return this.throwIfDisposed(),broadcastTo(this,i)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */getGlobalTensorClass().prototype.cast=function(i){return this.throwIfDisposed(),cast$3(this,i)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */getGlobalTensorClass().prototype.ceil=function(){return this.throwIfDisposed(),ceil$2(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */getGlobalTensorClass().prototype.clipByValue=function(i,s){return this.throwIfDisposed(),clipByValue$2(this,i,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */getGlobalTensorClass().prototype.concat=function(i,s){return this.throwIfDisposed(),i instanceof Tensor&&(i=[i]),concat$2([this,...i],s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */getGlobalTensorClass().prototype.conv1d=function(i,s,o,a,c,d){return this.throwIfDisposed(),conv1d(this,i,s,o,a,c,d)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */getGlobalTensorClass().prototype.conv2dTranspose=function(i,s,o,a,c){return this.throwIfDisposed(),conv2dTranspose(this,i,s,o,a,c)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */getGlobalTensorClass().prototype.conv2d=function(i,s,o,a,c,d){return this.throwIfDisposed(),conv2d$2(this,i,s,o,a,c,d)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */getGlobalTensorClass().prototype.cos=function(){return this.throwIfDisposed(),cos$2(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */getGlobalTensorClass().prototype.cosh=function(){return this.throwIfDisposed(),cosh$2(this)};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the 'License');
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an 'AS IS' BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */getGlobalTensorClass().prototype.cumprod=function(i,s,o){return this.throwIfDisposed(),cumprod$2(this,i,s,o)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */getGlobalTensorClass().prototype.cumsum=function(i,s,o){return this.throwIfDisposed(),cumsum$2(this,i,s,o)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */getGlobalTensorClass().prototype.depthToSpace=function(i,s){return this.throwIfDisposed(),depthToSpace$2(this,i,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */getGlobalTensorClass().prototype.depthwiseConv2d=function(i,s,o,a,c,d){return this.throwIfDisposed(),depthwiseConv2d$1(this,i,s,o,a,c,d)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */getGlobalTensorClass().prototype.dilation2d=function(i,s,o,a,c){return this.throwIfDisposed(),dilation2d(this,i,s,o,a,c)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */getGlobalTensorClass().prototype.divNoNan=function(i){return this.throwIfDisposed(),divNoNan(this,i)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */getGlobalTensorClass().prototype.div=function(i){return this.throwIfDisposed(),div$1(this,i)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */getGlobalTensorClass().prototype.dot=function(i){return this.throwIfDisposed(),dot$1(this,i)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */getGlobalTensorClass().prototype.elu=function(){return this.throwIfDisposed(),elu$3(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */getGlobalTensorClass().prototype.equal=function(i){return this.throwIfDisposed(),equal$2(this,i)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */getGlobalTensorClass().prototype.erf=function(){return this.throwIfDisposed(),erf$2(this)};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */getGlobalTensorClass().prototype.euclideanNorm=function(i,s){return this.throwIfDisposed(),euclideanNorm(this,i,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */getGlobalTensorClass().prototype.exp=function(){return this.throwIfDisposed(),exp$2(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */getGlobalTensorClass().prototype.expandDims=function(i){return this.throwIfDisposed(),expandDims$3(this,i)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */getGlobalTensorClass().prototype.expm1=function(){return this.throwIfDisposed(),expm1$2(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */getGlobalTensorClass().prototype.fft=function(){return this.throwIfDisposed(),fft$2(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */getGlobalTensorClass().prototype.flatten=function(){return this.throwIfDisposed(),reshape$2(this,[this.size])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */getGlobalTensorClass().prototype.floor=function(){return this.throwIfDisposed(),floor$2(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */getGlobalTensorClass().prototype.floorDiv=function(i){return this.throwIfDisposed(),floorDiv$2(this,i)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */getGlobalTensorClass().prototype.gather=function(i,s,o){return this.throwIfDisposed(),gather$1(this,i,s,o)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */getGlobalTensorClass().prototype.greaterEqual=function(i){return this.throwIfDisposed(),greaterEqual$2(this,i)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */getGlobalTensorClass().prototype.greater=function(i){return this.throwIfDisposed(),greater$2(this,i)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */getGlobalTensorClass().prototype.ifft=function(){return this.throwIfDisposed(),ifft$2(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */getGlobalTensorClass().prototype.irfft=function(){return this.throwIfDisposed(),irfft(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */getGlobalTensorClass().prototype.isFinite=function(){return this.throwIfDisposed(),isFinite$3(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */getGlobalTensorClass().prototype.isInf=function(){return this.throwIfDisposed(),isInf$2(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */getGlobalTensorClass().prototype.isNaN=function(){return this.throwIfDisposed(),isNaN$3(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */getGlobalTensorClass().prototype.leakyRelu=function(i){return this.throwIfDisposed(),leakyRelu$2(this,i)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */getGlobalTensorClass().prototype.lessEqual=function(i){return this.throwIfDisposed(),lessEqual$2(this,i)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */getGlobalTensorClass().prototype.less=function(i){return this.throwIfDisposed(),less$2(this,i)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */getGlobalTensorClass().prototype.localResponseNormalization=function(i,s,o,a){return this.throwIfDisposed(),localResponseNormalization(this,i,s,o,a)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */getGlobalTensorClass().prototype.logSigmoid=function(){return this.throwIfDisposed(),logSigmoid(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */getGlobalTensorClass().prototype.logSoftmax=function(i){return this.throwIfDisposed(),logSoftmax(this,i)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */getGlobalTensorClass().prototype.logSumExp=function(i,s){return this.throwIfDisposed(),logSumExp(this,i,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */getGlobalTensorClass().prototype.log=function(){return this.throwIfDisposed(),log$2(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */getGlobalTensorClass().prototype.log1p=function(){return this.throwIfDisposed(),log1p$2(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */getGlobalTensorClass().prototype.logicalAnd=function(i){return this.throwIfDisposed(),logicalAnd$2(this,i)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */getGlobalTensorClass().prototype.logicalNot=function(){return this.throwIfDisposed(),logicalNot$2(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */getGlobalTensorClass().prototype.logicalOr=function(i){return this.throwIfDisposed(),logicalOr$2(this,i)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */getGlobalTensorClass().prototype.logicalXor=function(i){return this.throwIfDisposed(),logicalXor(this,i)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */getGlobalTensorClass().prototype.matMul=function(i,s,o){return this.throwIfDisposed(),matMul$1(this,i,s,o)};getGlobalTensorClass().prototype.maxPool=function(i,s,o,a){return this.throwIfDisposed(),maxPool$2(this,i,s,o,a)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */getGlobalTensorClass().prototype.max=function(i,s){return this.throwIfDisposed(),max$3(this,i,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */getGlobalTensorClass().prototype.maximum=function(i){return this.throwIfDisposed(),maximum$2(this,i)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */getGlobalTensorClass().prototype.mean=function(i,s){return this.throwIfDisposed(),mean$1(this,i,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */getGlobalTensorClass().prototype.min=function(i,s){return this.throwIfDisposed(),min$3(this,i,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */getGlobalTensorClass().prototype.minimum=function(i){return this.throwIfDisposed(),minimum$2(this,i)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */getGlobalTensorClass().prototype.mirrorPad=function(i,s){return this.throwIfDisposed(),mirrorPad$1(this,i,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */getGlobalTensorClass().prototype.mod=function(i){return this.throwIfDisposed(),mod$2(this,i)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */getGlobalTensorClass().prototype.mul=function(i){return this.throwIfDisposed(),mul(this,i)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */getGlobalTensorClass().prototype.neg=function(){return this.throwIfDisposed(),neg$2(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */getGlobalTensorClass().prototype.norm=function(i,s,o){return this.throwIfDisposed(),norm(this,i,s,o)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */getGlobalTensorClass().prototype.notEqual=function(i){return this.throwIfDisposed(),notEqual$2(this,i)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */getGlobalTensorClass().prototype.oneHot=function(i,s=1,o=0){return this.throwIfDisposed(),oneHot$2(this,i,s,o)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */getGlobalTensorClass().prototype.onesLike=function(){return this.throwIfDisposed(),onesLike$2(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */getGlobalTensorClass().prototype.pad=function(i,s){return this.throwIfDisposed(),pad(this,i,s)};getGlobalTensorClass().prototype.pool=function(i,s,o,a,c,d){return this.throwIfDisposed(),pool$1(this,i,s,o,a,c,d)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */getGlobalTensorClass().prototype.pow=function(i){return this.throwIfDisposed(),pow$2(this,i)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */getGlobalTensorClass().prototype.prelu=function(i){return this.throwIfDisposed(),prelu$2(this,i)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */getGlobalTensorClass().prototype.prod=function(i,s){return this.throwIfDisposed(),prod$2(this,i,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */getGlobalTensorClass().prototype.reciprocal=function(){return this.throwIfDisposed(),reciprocal$2(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */getGlobalTensorClass().prototype.relu=function(){return this.throwIfDisposed(),relu$2(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */getGlobalTensorClass().prototype.relu6=function(){return this.throwIfDisposed(),relu6$2(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */getGlobalTensorClass().prototype.reshapeAs=function(i){return this.throwIfDisposed(),reshape$2(this,i.shape)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */getGlobalTensorClass().prototype.reshape=function(i){return this.throwIfDisposed(),reshape$2(this,i)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */getGlobalTensorClass().prototype.resizeBilinear=function(i,s,o){return this.throwIfDisposed(),resizeBilinear$3(this,i,s,o)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */getGlobalTensorClass().prototype.resizeNearestNeighbor=function(i,s,o){return this.throwIfDisposed(),resizeNearestNeighbor$2(this,i,s,o)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */getGlobalTensorClass().prototype.reverse=function(i){return this.throwIfDisposed(),reverse$2(this,i)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */getGlobalTensorClass().prototype.rfft=function(){return this.throwIfDisposed(),rfft(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */getGlobalTensorClass().prototype.round=function(){return this.throwIfDisposed(),round$2(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */getGlobalTensorClass().prototype.rsqrt=function(){return this.throwIfDisposed(),rsqrt$2(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */getGlobalTensorClass().prototype.selu=function(){return this.throwIfDisposed(),selu$2(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */getGlobalTensorClass().prototype.separableConv2d=function(i,s,o,a,c,d){return this.throwIfDisposed(),separableConv2d(this,i,s,o,a,c,d)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */getGlobalTensorClass().prototype.sigmoid=function(){return this.throwIfDisposed(),sigmoid$2(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */getGlobalTensorClass().prototype.sign=function(){return this.throwIfDisposed(),sign$2(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */getGlobalTensorClass().prototype.sin=function(){return this.throwIfDisposed(),sin$2(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */getGlobalTensorClass().prototype.sinh=function(){return this.throwIfDisposed(),sinh$2(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */getGlobalTensorClass().prototype.slice=function(i,s){return this.throwIfDisposed(),slice$2(this,i,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */getGlobalTensorClass().prototype.softmax=function(i){return this.throwIfDisposed(),softmax$2(this,i)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */getGlobalTensorClass().prototype.softplus=function(){return this.throwIfDisposed(),softplus$2(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */getGlobalTensorClass().prototype.spaceToBatchND=function(i,s){return this.throwIfDisposed(),spaceToBatchND$2(this,i,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */getGlobalTensorClass().prototype.split=function(i,s){return this.throwIfDisposed(),split$1(this,i,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */getGlobalTensorClass().prototype.sqrt=function(){return this.throwIfDisposed(),sqrt$2(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */getGlobalTensorClass().prototype.square=function(){return this.throwIfDisposed(),square$2(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */getGlobalTensorClass().prototype.squaredDifference=function(i){return this.throwIfDisposed(),squaredDifference$2(this,i)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */getGlobalTensorClass().prototype.squeeze=function(i){return this.throwIfDisposed(),squeeze(this,i)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */getGlobalTensorClass().prototype.stack=function(i,s){this.throwIfDisposed();const o=i instanceof Tensor?[this,i]:[this,...i];return stack(o,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */getGlobalTensorClass().prototype.step=function(i){return this.throwIfDisposed(),step$2(this,i)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */getGlobalTensorClass().prototype.stridedSlice=function(i,s,o,a,c,d,g,$){return this.throwIfDisposed(),stridedSlice$2(this,i,s,o,a,c,d,g,$)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */getGlobalTensorClass().prototype.sub=function(i){return this.throwIfDisposed(),sub$2(this,i)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */getGlobalTensorClass().prototype.sum=function(i,s){return this.throwIfDisposed(),sum$2(this,i,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */getGlobalTensorClass().prototype.tan=function(){return this.throwIfDisposed(),tan$2(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */getGlobalTensorClass().prototype.tanh=function(){return this.throwIfDisposed(),tanh$2(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */getGlobalTensorClass().prototype.tile=function(i){return this.throwIfDisposed(),tile$3(this,i)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */getGlobalTensorClass().prototype.toBool=function(){return this.throwIfDisposed(),cast$3(this,"bool")};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */getGlobalTensorClass().prototype.toFloat=function(){return this.throwIfDisposed(),cast$3(this,"float32")};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */getGlobalTensorClass().prototype.toInt=function(){return this.throwIfDisposed(),cast$3(this,"int32")};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */getGlobalTensorClass().prototype.topk=function(i,s){return this.throwIfDisposed(),topk(this,i,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */getGlobalTensorClass().prototype.transpose=function(i){return this.throwIfDisposed(),transpose$2(this,i)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */getGlobalTensorClass().prototype.unique=function(i){return this.throwIfDisposed(),unique$3(this,i)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */getGlobalTensorClass().prototype.unsortedSegmentSum=function(i,s){return this.throwIfDisposed(),unsortedSegmentSum$2(this,i,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */getGlobalTensorClass().prototype.unstack=function(i){return this.throwIfDisposed(),unstack(this,i)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */getGlobalTensorClass().prototype.where=function(i,s){return this.throwIfDisposed(),where(i,this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */getGlobalTensorClass().prototype.zerosLike=function(){return this.throwIfDisposed(),zerosLike$2(this)};/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class AttributeError extends Error{constructor(s){super(s),Object.setPrototypeOf(this,AttributeError.prototype)}}class RuntimeError extends Error{constructor(s){super(s),Object.setPrototypeOf(this,RuntimeError.prototype)}}class ValueError extends Error{constructor(s){super(s),Object.setPrototypeOf(this,ValueError.prototype)}}class NotImplementedError extends Error{constructor(s){super(s),Object.setPrototypeOf(this,NotImplementedError.prototype)}}class AssertionError extends Error{constructor(s){super(s),Object.setPrototypeOf(this,AssertionError.prototype)}}/**
 * @license
 * Copyright 2022 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class LruCache{constructor(s){this.maxEntries=s||100,this.cache=new Map}get(s){let o;return this.cache.has(s)&&(o=this.cache.get(s),this.cache.delete(s),this.cache.set(s,o)),o}put(s,o){if(this.cache.has(s))this.cache.delete(s);else if(this.cache.size>=this.maxEntries){const a=this.cache.keys().next().value;this.cache.delete(a)}this.cache.set(s,o)}getMaxEntries(){return this.maxEntries}setMaxEntries(s){if(s<0)throw new Error(`The maxEntries of LRU caches must be at least 0, but got ${s}.`);if(this.maxEntries>s)for(let o=0;o<this.maxEntries-s;o++){const a=this.cache.keys().next().value;this.cache.delete(a)}this.maxEntries=s}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function pyListRepeat(i,s){if(Array.isArray(i)){let o=[];for(let a=0;a<s;a++)o=o.concat(i);return o}else{const o=new Array(s);return o.fill(i),o}}function assert(i,s){if(!i)throw new AssertionError(s)}function count(i,s){let o=0;for(const a of i)a===s&&o++;return o}function singletonOrArray(i){return i.length===1?i[0]:i}function toList(i){return Array.isArray(i)?i:[i]}function toSnakeCase(i){const o=i.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return o[0]!=="_"?o:"private"+o}function toCamelCase(i){return i.length<=1||i.indexOf("_")===-1?i:i.replace(/[_]+(\w|$)/g,(s,o)=>o.toUpperCase())}let _GLOBAL_CUSTOM_OBJECTS={};function serializeKerasObject(i){if(i==null)return null;const s={};return s.className=i.getClassName(),s.config=i.getConfig(),s}function convertNDArrayScalarsInConfig(i){if(!(i==null||typeof i!="object"))if(Array.isArray(i))i.forEach(s=>convertNDArrayScalarsInConfig(s));else{const s=Object.keys(i);for(const o of s){const a=i[o];a!=null&&typeof a=="object"&&(!Array.isArray(a)&&a.type==="ndarray"&&typeof a.value=="number"?i[o]=a.value:convertNDArrayScalarsInConfig(a))}}}function deserializeKerasObject(i,s={},o={},a="object",c=!1){if(typeof i=="string"){const d=i;let g;if(d in o)g=o[d];else if(d in _GLOBAL_CUSTOM_OBJECTS)g=_GLOBAL_CUSTOM_OBJECTS[d];else if(g=s[d],g==null)throw new ValueError(`Unknown ${a}: ${i}. This may be due to one of the following reasons:
1. The ${a} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.
2. The custom ${a} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return g}else{const d=i;if(d.className==null||d.config==null)throw new ValueError(`${a}: Improper config format: ${JSON.stringify(d)}.
'className' and 'config' must set.`);const g=d.className;let $,j;if(g in o?[$,j]=o[g]:g in _GLOBAL_CUSTOM_OBJECTS?[$,j]=_GLOBAL_CUSTOM_OBJECTS.className:g in s&&([$,j]=s[g]),$==null)throw new ValueError(`Unknown ${a}: ${g}. This may be due to one of the following reasons:
1. The ${a} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.
2. The custom ${a} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(j!=null){const _e={};for(const tt of Object.keys(_GLOBAL_CUSTOM_OBJECTS))_e[tt]=_GLOBAL_CUSTOM_OBJECTS[tt];for(const tt of Object.keys(o))_e[tt]=o[tt];const et=d.config;et.customObjects=_e;const _=Object.assign({},_GLOBAL_CUSTOM_OBJECTS);for(const tt of Object.keys(o))_GLOBAL_CUSTOM_OBJECTS[tt]=o[tt];convertNDArrayScalarsInConfig(d.config);const b=j($,d.config,o,c);return _GLOBAL_CUSTOM_OBJECTS=Object.assign({},_),b}else{const _e=Object.assign({},_GLOBAL_CUSTOM_OBJECTS);for(const _ of Object.keys(o))_GLOBAL_CUSTOM_OBJECTS[_]=o[_];const et=new $(d.config);return _GLOBAL_CUSTOM_OBJECTS=Object.assign({},_e),et}}}function numberCompare(i,s){return i<s?-1:i>s?1:0}function reverseNumberCompare(i,s){return-1*numberCompare(i,s)}function unique$2(i){if(i==null)return i;const s=[];for(const o of i)s.indexOf(o)===-1&&s.push(o);return s}function isObjectEmpty(i){if(i==null)throw new ValueError(`Invalid value in obj: ${JSON.stringify(i)}`);for(const s in i)if(i.hasOwnProperty(s))return!1;return!0}function checkStringTypeUnionValue(i,s,o){if(o!=null&&i.indexOf(o)<0)throw new ValueError(`${o} is not a valid ${s}.  Valid values are ${i} or null/undefined.`)}function checkArrayTypeAndLength(i,s,o=0,a=1/0){return assert(o>=0),assert(a>=o),Array.isArray(i)&&i.length>=o&&i.length<=a&&i.every(c=>typeof c===s)}function assertPositiveInteger(i,s){Array.isArray(i)?(assert$1(i.length>0,()=>`${s} is unexpectedly an empty array.`),i.forEach((o,a)=>assertPositiveInteger(o,`element ${a+1} of ${s}`))):assert$1(Number.isInteger(i)&&i>0,()=>`Expected ${s} to be a positive integer, but got ${formatAsFriendlyString(i)}.`)}function formatAsFriendlyString(i){return i===null?"null":Array.isArray(i)?"["+i.map(s=>formatAsFriendlyString(s)).join(",")+"]":typeof i=="string"?`"${i}"`:`${i}`}function debounce(i,s,o){let a=o!=null?o():now(),c;return(...g)=>{const $=o!=null?o():now();return $-a<s||(a=$,c=i(...g)),c}}function mapActivationToFusedKernel(i){return i==="relu"?"relu":i==="linear"?"linear":i==="elu"?"elu":null}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */let _nextUniqueTensorId=0;function getNextUniqueTensorId(){return _nextUniqueTensorId++}const _uidPrefixes={};function getUid(i=""){return i in _uidPrefixes||(_uidPrefixes[i]=0),_uidPrefixes[i]+=1,i+_uidPrefixes[i].toString()}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const VALID_DATA_FORMAT_VALUES=["channelsFirst","channelsLast"],VALID_INTERPOLATION_FORMAT_VALUES=["nearest","bilinear"],VALID_PADDING_MODE_VALUES=["valid","same","causal"],VALID_POOL_MODE_VALUES=["max","avg"],VALID_BIDIRECTIONAL_MERGE_MODES=["sum","mul","concat","ave"];/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const nameMap=new Map;function checkDataFormat(i){checkStringTypeUnionValue(VALID_DATA_FORMAT_VALUES,"DataFormat",i)}function checkInterpolationFormat(i){checkStringTypeUnionValue(VALID_INTERPOLATION_FORMAT_VALUES,"InterpolationFormat",i)}function checkPaddingMode(i){checkStringTypeUnionValue(VALID_PADDING_MODE_VALUES,"PaddingMode",i)}function checkPoolMode(i){checkStringTypeUnionValue(VALID_POOL_MODE_VALUES,"PoolMode",i)}const _nameScopeStack=[],_nameScopeDivider="/";function nameScope(i,s){_nameScopeStack.push(i);try{const o=s();return _nameScopeStack.pop(),o}catch(o){throw _nameScopeStack.pop(),o}}function currentNameScopePrefix(){return _nameScopeStack.length===0?"":_nameScopeStack.join(_nameScopeDivider)+_nameScopeDivider}function getScopedTensorName(i){if(!isValidTensorName(i))throw new Error("Not a valid tensor name: '"+i+"'");return currentNameScopePrefix()+i}function getUniqueTensorName(i){if(!isValidTensorName(i))throw new Error("Not a valid tensor name: '"+i+"'");nameMap.has(i)||nameMap.set(i,0);const s=nameMap.get(i);if(nameMap.set(i,nameMap.get(i)+1),s>0){const o=`${i}_${s}`;return nameMap.set(o,1),o}else return i}const tensorNameRegex=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function isValidTensorName(i){return!!i.match(tensorNameRegex)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function isInteger(i){return i===parseInt(i.toString(),10)}function arrayProd(i,s,o){s==null&&(s=0),o==null&&(o=i.length);let a=1;for(let c=s;c<o;++c)a*=i[c];return a}function min$2(i){if(i.length===0)return Number.NaN;let s=Number.POSITIVE_INFINITY;for(let o=0;o<i.length;o++){const a=i[o];a<s&&(s=a)}return s}function max$2(i){if(i.length===0)return Number.NaN;let s=Number.NEGATIVE_INFINITY;for(let o=0;o<i.length;o++){const a=i[o];a>s&&(s=a)}return s}function range$2(i,s){if(s<i)throw new ValueError(`end (${s}) < begin (${i}) is forbidden.`);const o=[];for(let a=i;a<s;++a)o.push(a);return o}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */let _epsilon;function epsilon$1(){return _epsilon==null&&(_epsilon=backend().epsilon()),_epsilon}function imageDataFormat(){return"channelsLast"}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function cast$2(i,s){return cast$3(i,s)}function expandDims$2(i,s=-1){const o=i.shape.slice();return s<0&&(s=o.length+s+1),o.splice(s,0,1),reshape$2(i,o)}function repeat(i,s){return tidy(()=>{if(i.shape.length!==2)throw new ValueError(`repeat() expects a rank-2 tensor, but received a rank-${i.shape.length} tensor.`);const o=expandDims$2(i,1);return tile$2(o,[1,s,1])})}function flatten(i){const s=[arrayProd(i.shape)];return reshape$2(i,s)}function batchFlatten(i){if(i.rank<=1)throw new ValueError(`batchFlatten requires a minimum rank of 2. Got rank: ${i.rank}.`);const s=[i.shape[0],arrayProd(i.shape,1)];return reshape$2(i,s)}function sliceAlongFirstAxis(i,s,o){return tidy(()=>{switch(i.rank){case 1:return slice1d(i,s,o);case 2:return slice2d(i,[s,0],[o,i.shape[1]]);case 3:return slice3d(i,[s,0,0],[o,i.shape[1],i.shape[2]]);case 4:return slice4d(i,[s,0,0,0],[o,i.shape[1],i.shape[2],i.shape[3]]);case 5:return slice$2(i,[s,0,0,0,0],[o,i.shape[1],i.shape[2],i.shape[3],i.shape[4]]);case 6:return slice$2(i,[s,0,0,0,0,0],[o,i.shape[1],i.shape[2],i.shape[3],i.shape[4],i.shape[5]]);default:throw new ValueError(`sliceAlongFirstAxis() received an unsupported tensor rank: ${i.rank}`)}})}function sliceAlongLastAxis(i,s,o){return tidy(()=>{switch(i.rank){case 1:return slice1d(i,s,o);case 2:return slice2d(i,[0,s],[i.shape[0],o]);case 3:return slice3d(i,[0,0,s],[i.shape[0],i.shape[1],o]);case 4:return slice4d(i,[0,0,0,s],[i.shape[0],i.shape[1],i.shape[2],o]);default:throw new ValueError(`sliceAlongLastAxis() received an unsupported tensor rank: ${i.rank}`)}})}function sliceAlongAxis(i,s,o,a){return tidy(()=>{switch(i.rank){case 1:return slice1d(i,s,o);case 2:switch(a){case 1:return sliceAlongFirstAxis(i,s,o);case 2:return sliceAlongLastAxis(i,s,o);default:throw new ValueError(`The axis is not within the rank of the tensor ${a}`)}case 3:switch(a){case 1:return sliceAlongFirstAxis(i,s,o);case 2:return slice3d(i,[0,s,0],[i.shape[0],o,i.shape[2]]);case 3:return sliceAlongLastAxis(i,s,o);default:throw new ValueError(`The axis is not within the rank of the tensor ${a}`)}case 4:switch(a){case 1:return sliceAlongFirstAxis(i,s,o);case 2:return slice4d(i,[0,s,0,0],[i.shape[0],o,i.shape[2],i.shape[3]]);case 3:return slice4d(i,[0,0,s,0],[i.shape[0],i.shape[1],o,i.shape[3]]);case 4:return sliceAlongLastAxis(i,s,o);default:throw new ValueError(`The axis is not within the rank of the tensor ${a}`)}default:throw new ValueError(`sliceAlongLastAxis() received an unsupported tensor rank: ${i.rank}`)}})}function concatenate(i,s=-1){let o;return s<0&&(o=i[0].rank,o!==0?s=o:s=0),s===i[0].rank&&(s=-1),concat$2(i,s)}function concatAlongFirstAxis(i,s){switch(i.rank){case 1:return concat1d([i,s]);case 2:return concat2d([i,s],0);case 3:return concat3d([i,s],0);case 4:return concat4d([i,s],0);default:throw new ValueError(`concatAlongFirstAxis() received an unsupported tensor rank: ${i.rank}`)}}function tile$2(i,s){if(Array.isArray(s)||(s=[s]),i.rank!==s.length)throw new ValueError(`The length of input n (${s.length}) does not match the number of dimensions in input x (${i.rank})`);return tile$3(i,s)}function randomNormal(i,s=0,o=1,a,c){return randomNormal$1(i,s,o,a,c)}function dot(i,s,o,a){if(i.rank<2||s.rank<2)throw new NotImplementedError(`dot requires both inputs to be rank >= 2 but got x shape = ${i.shape} and y shape = ${s.shape}`);if(s.rank>=3){const c=i.shape.slice(-1)[0],d=s.shape.slice(-2)[0];if(c!==d)throw new NotImplementedError(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${i.shape} and  y shape = ${s.shape}`)}if(i.rank===2&&s.rank===2)return matMul({a:i,b:s,transposeA:!1,transposeB:!1,bias:a?reshapeBias(i.rank,a,imageDataFormat()):null,activation:o});{const c=i.shape.slice(),d=c.pop();i=reshape$2(i,[-1,d]);const g=s.shape.slice(),$=g.pop(),j=g.pop(),_e=[...g,$],et=Array.from({length:s.rank},(nt,rt)=>rt===0?s.rank-2:rt<=s.rank-2?rt-1:rt);s=reshape$2(transpose$2(s,et),[j,-1]);const _=[...c,..._e];return reshape$2(matMul({a:i,b:s,transposeA:!1,transposeB:!1,bias:a?reshapeBias(i.rank,a,imageDataFormat()):null,activation:o}),_)}}function gather(i,s,o){return tidy(()=>(Array.isArray(s)?s=tensor1d(s,"int32"):s=cast$3(s,"int32"),gather$1(i,s,o)))}function square$1(i){return mul(i,i)}function reshapeBias(i,s,o){const a=s.shape;if(s.rank!==1&&s.rank!==i)throw new ValueError(`Unexpected bias dimensions: ${s.rank}; expected it to be 1 or ${i}`);if(i===5){if(o==="channelsFirst")return a.length===1?reshape$2(s,[1,a[0],1,1,1]):reshape$2(s,[1,a[3],a[0],a[1],a[2]]);if(o==="channelsLast")return a.length===1?reshape$2(s,[1,1,1,1,a[0]]):reshape$2(s,[1].concat(a))}else if(i===4){if(o==="channelsFirst")return a.length===1?reshape$2(s,[1,a[0],1,1]):reshape$2(s,[1,a[2],a[0],a[1]]);if(o==="channelsLast")return a.length===1?reshape$2(s,[1,1,1,a[0]]):reshape$2(s,[1].concat(a))}else if(i===3){if(o==="channelsFirst")return a.length===1?reshape$2(s,[1,a[0],1]):reshape$2(s,[1,a[1],a[0]]);if(o==="channelsLast")return a.length===1?reshape$2(s,[1,1,a[0]]):reshape$2(s,[1].concat(a))}else if(i<3)return s;throw new ValueError(`Unsupported input rank by biasAdd: ${s.rank}`)}function biasAdd(i,s,o){return tidy(()=>(o==null&&(o=imageDataFormat()),checkDataFormat(o),add$1(i,reshapeBias(i.rank,s,o))))}function elu$2(i,s=1){if(s!==1)throw new NotImplementedError(`Support for alpha values other than 1 (${s}) is not implemented yet.`);return elu$3(i)}function softsign(i){return tidy(()=>div$1(i,add$1(abs$2(i),1)))}function dropout(i,s,o,a){return tidy(()=>dropout$1(i,s,o,a))}function hardSigmoid(i){return tidy(()=>{const s=add$1(.5,mul(.2,i));return clipByValue$2(s,0,1)})}function inTrainPhase(i,s,o=!1){return o?i():s()}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const VALID_FAN_MODE_VALUES=["fanIn","fanOut","fanAvg"],VALID_DISTRIBUTION_VALUES=["normal","uniform","truncatedNormal"];/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function checkFanMode(i){checkStringTypeUnionValue(VALID_FAN_MODE_VALUES,"FanMode",i)}function checkDistribution(i){checkStringTypeUnionValue(VALID_DISTRIBUTION_VALUES,"Distribution",i)}class Initializer extends Serializable{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}}class Zeros extends Initializer{apply(s,o){return zeros$1(s,o)}}Zeros.className="Zeros";registerClass(Zeros);class Ones extends Initializer{apply(s,o){return ones(s,o)}}Ones.className="Ones";registerClass(Ones);class Constant extends Initializer{constructor(s){if(super(),typeof s!="object")throw new ValueError(`Expected argument of type ConstantConfig but got ${s}`);if(s.value===void 0)throw new ValueError(`config must have value set but got ${s}`);this.value=s.value}apply(s,o){return tidy(()=>mul(scalar(this.value),ones(s,o)))}getConfig(){return{value:this.value}}}Constant.className="Constant";registerClass(Constant);class RandomUniform extends Initializer{constructor(s){super(),this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=s.minval||this.DEFAULT_MINVAL,this.maxval=s.maxval||this.DEFAULT_MAXVAL,this.seed=s.seed}apply(s,o){return randomUniform(s,this.minval,this.maxval,o,this.seed)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}}RandomUniform.className="RandomUniform";registerClass(RandomUniform);class RandomNormal extends Initializer{constructor(s){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=s.mean||this.DEFAULT_MEAN,this.stddev=s.stddev||this.DEFAULT_STDDEV,this.seed=s.seed}apply(s,o){if(o=o||"float32",o!=="float32"&&o!=="int32")throw new NotImplementedError(`randomNormal does not support dType ${o}.`);return randomNormal(s,this.mean,this.stddev,o,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}RandomNormal.className="RandomNormal";registerClass(RandomNormal);class TruncatedNormal extends Initializer{constructor(s){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=s.mean||this.DEFAULT_MEAN,this.stddev=s.stddev||this.DEFAULT_STDDEV,this.seed=s.seed}apply(s,o){if(o=o||"float32",o!=="float32"&&o!=="int32")throw new NotImplementedError(`truncatedNormal does not support dType ${o}.`);return truncatedNormal(s,this.mean,this.stddev,o,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}TruncatedNormal.className="TruncatedNormal";registerClass(TruncatedNormal);class Identity extends Initializer{constructor(s){super(),this.gain=s.gain!=null?s.gain:1}apply(s,o){return tidy(()=>{if(s.length!==2||s[0]!==s[1])throw new ValueError("Identity matrix initializer can only be used for 2D square matrices.");return mul(this.gain,eye(s[0]))})}getConfig(){return{gain:this.gain}}}Identity.className="Identity";registerClass(Identity);function computeFans(i,s="channelsLast"){let o,a;if(checkDataFormat(s),i.length===2)o=i[0],a=i[1];else if([3,4,5].indexOf(i.length)!==-1){if(s==="channelsFirst"){const c=arrayProd(i,2);o=i[1]*c,a=i[0]*c}else if(s==="channelsLast"){const c=arrayProd(i,0,i.length-2);o=i[i.length-2]*c,a=i[i.length-1]*c}}else{const c=arrayProd(i);o=Math.sqrt(c),a=Math.sqrt(c)}return[o,a]}class VarianceScaling extends Initializer{constructor(s){if(super(),s.scale<0)throw new ValueError(`scale must be a positive float. Got: ${s.scale}`);this.scale=s.scale==null?1:s.scale,this.mode=s.mode==null?"fanIn":s.mode,checkFanMode(this.mode),this.distribution=s.distribution==null?"normal":s.distribution,checkDistribution(this.distribution),this.seed=s.seed}apply(s,o){const a=computeFans(s),c=a[0],d=a[1];let g=this.scale;if(this.mode==="fanIn"?g/=Math.max(1,c):this.mode==="fanOut"?g/=Math.max(1,d):g/=Math.max(1,(c+d)/2),this.distribution==="normal"){const $=Math.sqrt(g);if(o=o||"float32",o!=="float32"&&o!=="int32")throw new NotImplementedError(`${this.getClassName()} does not support dType ${o}.`);return truncatedNormal(s,0,$,o,this.seed)}else{const $=Math.sqrt(3*g);return randomUniform(s,-$,$,o,this.seed)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}}VarianceScaling.className="VarianceScaling";registerClass(VarianceScaling);class GlorotUniform extends VarianceScaling{constructor(s){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:s==null?null:s.seed})}getClassName(){return VarianceScaling.className}}GlorotUniform.className="GlorotUniform";registerClass(GlorotUniform);class GlorotNormal extends VarianceScaling{constructor(s){super({scale:1,mode:"fanAvg",distribution:"normal",seed:s==null?null:s.seed})}getClassName(){return VarianceScaling.className}}GlorotNormal.className="GlorotNormal";registerClass(GlorotNormal);class HeNormal extends VarianceScaling{constructor(s){super({scale:2,mode:"fanIn",distribution:"normal",seed:s==null?null:s.seed})}getClassName(){return VarianceScaling.className}}HeNormal.className="HeNormal";registerClass(HeNormal);class HeUniform extends VarianceScaling{constructor(s){super({scale:2,mode:"fanIn",distribution:"uniform",seed:s==null?null:s.seed})}getClassName(){return VarianceScaling.className}}HeUniform.className="HeUniform";registerClass(HeUniform);class LeCunNormal extends VarianceScaling{constructor(s){super({scale:1,mode:"fanIn",distribution:"normal",seed:s==null?null:s.seed})}getClassName(){return VarianceScaling.className}}LeCunNormal.className="LeCunNormal";registerClass(LeCunNormal);class LeCunUniform extends VarianceScaling{constructor(s){super({scale:1,mode:"fanIn",distribution:"uniform",seed:s==null?null:s.seed})}getClassName(){return VarianceScaling.className}}LeCunUniform.className="LeCunUniform";registerClass(LeCunUniform);class Orthogonal extends Initializer{constructor(s){super(),this.DEFAULT_GAIN=1,this.ELEMENTS_WARN_SLOW=2e3,this.gain=s.gain==null?this.DEFAULT_GAIN:s.gain,this.seed=s.seed}apply(s,o){return tidy(()=>{if(s.length<2)throw new NotImplementedError("Shape must be at least 2D.");if(o!=="int32"&&o!=="float32"&&o!==void 0)throw new TypeError(`Unsupported data type ${o}.`);o=o;const a=sizeFromShape(s.slice(0,-1)),c=s[s.length-1],d=a*c;d>this.ELEMENTS_WARN_SLOW&&console.warn(`Orthogonal initializer is being called on a matrix with more than ${this.ELEMENTS_WARN_SLOW} (${d}) elements: Slowness may result.`);const g=[Math.max(c,a),Math.min(c,a)],$=randomNormal(g,0,1,o,this.seed),j=linalg.qr($,!1);let _e=j[0];const _=j[1].flatten().stridedSlice([0],[Math.min(c,a)*Math.min(c,a)],[Math.min(c,a)+1]);return _e=mul(_e,_.sign()),a<c&&(_e=_e.transpose()),mul(scalar(this.gain),_e.reshape(s))})}getConfig(){return{gain:this.gain,seed:this.seed}}}Orthogonal.className="Orthogonal";registerClass(Orthogonal);const INITIALIZER_IDENTIFIER_REGISTRY_SYMBOL_MAP={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function deserializeInitializer(i,s={}){return deserializeKerasObject(i,SerializationMap.getMap().classNameMap,s,"initializer")}function serializeInitializer(i){return serializeKerasObject(i)}function getInitializer(i){if(typeof i=="string"){const s=i in INITIALIZER_IDENTIFIER_REGISTRY_SYMBOL_MAP?INITIALIZER_IDENTIFIER_REGISTRY_SYMBOL_MAP[i]:i;if(s==="GlorotNormal")return new GlorotNormal;if(s==="GlorotUniform")return new GlorotUniform;if(s==="HeNormal")return new HeNormal;if(s==="HeUniform")return new HeUniform;if(s==="LeCunNormal")return new LeCunNormal;if(s==="LeCunUniform")return new LeCunUniform;{const o={};return o.className=s,o.config={},deserializeInitializer(o)}}else return i instanceof Initializer?i:deserializeInitializer(i)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function isArrayOfShapes(i){return Array.isArray(i)&&Array.isArray(i[0])}function normalizeShapeList(i){return i.length===0?[]:Array.isArray(i[0])?i:[i]}function getExactlyOneTensor(i){let s;if(Array.isArray(i)){if(i.length!==1)throw new ValueError(`Expected Tensor length to be 1; got ${i.length}`);s=i[0]}else s=i;return s}function getExactlyOneShape(i){if(Array.isArray(i)&&Array.isArray(i[0])){if(i.length===1)return i=i,i[0];throw new ValueError(`Expected exactly 1 Shape; got ${i.length}`)}else return i}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function countParamsInWeights(i){let s=0;for(const o of i)o.shape.length===0?s+=1:s+=o.shape.reduce((a,c)=>a*c);return s}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const DEFAULT_VARIABLE_NAME_PREFIX="Variable";class LayerVariable{constructor(s,o="float32",a=DEFAULT_VARIABLE_NAME_PREFIX,c=!0,d=null){this.dtype=o??"float32",this.shape=s.shape,this.id=getNextUniqueTensorId(),a=a??DEFAULT_VARIABLE_NAME_PREFIX,this.originalName=getScopedTensorName(a),this.name=getUniqueTensorName(this.originalName),this.trainable_=c,this.constraint=d,this.val=variable(s,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(s){return this.assertNotDisposed(),checkShapesMatch(this.val,s),this.val.id!==s.id&&(this.val.assign(s),this.constraint!=null&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(s){this.trainable_=s,this.val.trainable=s}}function checkShapesMatch(i,s){if(i.shape.toString()!==s.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(i.shape)+" vs. "+JSON.stringify(s.shape))}function batchGetValue(i){return i.map(s=>s.read())}function batchSetValue(i){i.forEach(s=>{s[0].write(s[1])})}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class InputSpec{constructor(s){this.dtype=s.dtype,this.shape=s.shape,s.shape!=null?this.ndim=s.shape.length:this.ndim=s.ndim,this.maxNDim=s.maxNDim,this.minNDim=s.minNDim,this.axes=s.axes||{}}}class SymbolicTensor{constructor(s,o,a,c,d,g,$){this.dtype=s,this.shape=o,this.sourceLayer=a,this.inputs=c,this.callArgs=d,this.outputTensorIndex=$,this.id=getNextUniqueTensorId(),g!=null&&(this.originalName=getScopedTensorName(g),this.name=getUniqueTensorName(this.originalName)),this.rank=o.length}}let _nextNodeID=0;class Node{constructor(s,o){this.callArgs=o,this.id=_nextNodeID++,this.outboundLayer=s.outboundLayer,this.inboundLayers=s.inboundLayers,this.nodeIndices=s.nodeIndices,this.tensorIndices=s.tensorIndices,this.inputTensors=s.inputTensors,this.outputTensors=s.outputTensors,this.inputMasks=s.inputMasks,this.outputMasks=s.outputMasks,this.inputShapes=s.inputShapes,this.outputShapes=s.outputShapes;for(const a of s.inboundLayers)a!=null&&a.outboundNodes.push(this);s.outboundLayer.inboundNodes.push(this)}getConfig(){const s=[];for(const o of this.inboundLayers)o!=null?s.push(o.name):s.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:s,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}}let _nextLayerID=0;class Layer extends Serializable{constructor(s={}){super(),this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=_nextLayerID++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let o=s.name;if(!o){const a=this.getClassName();o=toSnakeCase(a)+"_"+getUid(a)}if(this.name=o,this.trainable_=s.trainable==null?!0:s.trainable,s.inputShape!=null||s.batchInputShape!=null){let a;if(s.batchInputShape!=null)a=s.batchInputShape;else if(s.inputShape!=null){let d=null;s.batchSize!=null&&(d=s.batchSize),a=[d].concat(s.inputShape)}this.batchInputShape=a;let c=s.dtype;c==null&&(c=s.inputDType),c==null&&(c="float32"),this.dtype=c}s.weights!=null?this.initialWeights=s.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(s,o){return s.name+"_ib-"+o.toString()}getNodeAtIndex(s,o){if(this.inboundNodes.length===0)throw new RuntimeError(`The layer has never been called and thus has no defined ${o}.`);if(this.inboundNodes.length<=s)throw new ValueError(`Asked to get ${o} at node ${s}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[s]}getInputAt(s){return singletonOrArray(this.getNodeAtIndex(s,"input").inputTensors)}getOutputAt(s){return singletonOrArray(this.getNodeAtIndex(s,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new AttributeError(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use \`getInputAt(nodeIndex)\` instead.`);if(this.inboundNodes.length===0)throw new AttributeError(`Layer ${this.name} is not connected, no input to return.`);return singletonOrArray(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(this.inboundNodes.length===0)throw new AttributeError(`Layer ${this.name} has no inbound nodes.`);if(this.inboundNodes.length>1)throw new AttributeError(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use \`getOutputAt(nodeIndex)\` instead.`);return singletonOrArray(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map(s=>s())}get updates(){return this._updates}get built(){return this._built}set built(s){this._built=s}get trainable(){return this.trainable_}set trainable(s){this._trainableWeights.forEach(o=>o.trainable=s),this.trainable_=s}get trainableWeights(){return this.trainable_?this._trainableWeights.filter(s=>s.trainable):[]}set trainableWeights(s){this._trainableWeights=s}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter(s=>!s.trainable).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(s){this._nonTrainableWeights=s}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(s){const o=toList(s);if(this.inputSpec==null||this.inputSpec.length===0)return;const a=toList(this.inputSpec);if(o.length!==a.length)throw new ValueError(`Layer ${this.name} expects ${a.length} inputs, but it received ${o.length} input tensors. Input received: ${s}`);for(let c=0;c<o.length;c++){const d=o[c],g=a[c];if(g==null)continue;const $=d.rank;if(g.ndim!=null&&$!==g.ndim)throw new ValueError(`Input ${c} is incompatible with layer ${this.name}: expected ndim=${g.ndim}, found ndim=${$}`);if(g.maxNDim!=null&&$>g.maxNDim)throw new ValueError(`Input ${c} is incompatible with layer ${this.name}: expected max_ndim=${g.maxNDim}, found ndim=${$}`);if(g.minNDim!=null&&$<g.minNDim)throw new ValueError(`Input ${c} is incompatible with layer ${this.name}: expected min_ndim=${g.minNDim}, found ndim=${$}.`);if(g.dtype!=null&&d.dtype!==g.dtype)throw new ValueError(`Input ${c} is incompatible with layer ${this.name} : expected dtype=${g.dtype}, found dtype=${d.dtype}.`);if(g.axes){const j=d.shape;for(const _e in g.axes){const et=Number(_e),_=g.axes[_e],b=et>=0?j[et]:j[j.length+et];if(_!=null&&[_,null].indexOf(b)===-1)throw new ValueError(`Input ${c} is incompatible with layer ${this.name}: expected axis ${et} of input shape to have value ${_} but got shape ${j}.`)}}if(g.shape!=null)for(let j=0;j<g.shape.length;++j){const _e=g.shape[j],et=d.shape[j];if(_e!=null&&et!=null&&_e!==et)throw new ValueError(`Input ${c} is incompatible with layer ${this.name}: expected shape=${g.shape}, found shape=${d.shape}.`)}}}call(s,o){return s}invokeCallHook(s,o){this._callHook!=null&&this._callHook(s,o)}setCallHook(s){this._callHook=s}clearCallHook(){this._callHook=null}apply(s,o){o=o||{},this.assertNotDisposed();const a=toList(s),c=checkAllSymbolic(s),d=checkNoneSymbolic(s);if(c===d)throw new ValueError("Arguments to apply() must be all SymbolicTensors or all Tensors");return nameScope(this.name,()=>{if(!this.built){this.assertInputCompatibility(s);const g=[];for(const $ of toList(s))g.push($.shape);this.build(singletonOrArray(g)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),this._refCount===null&&d&&(this._refCount=1)}if(this.assertInputCompatibility(s),d){let g=this.call(s,o);this.supportsMasking&&this.setMaskMetadata(s,g);const $=toList(g),j=[];for(let _e of $)a.indexOf(_e)!==-1&&(_e=_e.clone()),j.push(_e);if(g=singletonOrArray(j),this.activityRegularizer!=null)throw new NotImplementedError("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return g}else{const g=collectInputShape(s),$=this.computeOutputShape(g);let j;const _e=guessOutputDType(s);if(this.warnOnIncompatibleInputShape(Array.isArray(s)?g[0]:g),$!=null&&$.length>0&&Array.isArray($[0])?j=$.map((et,_)=>new SymbolicTensor(_e,et,this,toList(s),o,this.name,_)):j=new SymbolicTensor(_e,$,this,toList(s),o,this.name),this.addInboundNode(s,j,null,null,g,$,o),this._refCount++,this.activityRegularizer!=null)throw new NotImplementedError("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return j}})}warnOnIncompatibleInputShape(s){if(this.batchInputShape!=null)if(s.length!==this.batchInputShape.length)console.warn(`The rank of the input tensor provided (shape: ${JSON.stringify(s)}) does not match that of the batchInputShape (${JSON.stringify(this.batchInputShape)}) of the layer ${this.name}`);else{let o=!1;this.batchInputShape.forEach((a,c)=>{a!=null&&s[c]!=null&&s[c]!==a&&(o=!0)}),o&&console.warn(`The shape of the input tensor (${JSON.stringify(s)}) does not match the expectation of layer ${this.name}: ${JSON.stringify(this.batchInputShape)}`)}}get outputShape(){if(this.inboundNodes==null||this.inboundNodes.length===0)throw new AttributeError(`The layer ${this.name} has never been called and thus has no defined output shape.`);const s=[];for(const o of this.inboundNodes){const a=JSON.stringify(o.outputShapes);s.indexOf(a)===-1&&s.push(a)}if(s.length===1){const o=this.inboundNodes[0].outputShapes;return Array.isArray(o)&&Array.isArray(o[0])&&o.length===1?o[0]:o}else throw new AttributeError(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new RuntimeError(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return countParamsInWeights(this.weights)}build(s){this.built=!0}getWeights(s=!1){return batchGetValue(s?this.trainableWeights:this.weights)}setWeights(s){tidy(()=>{const o=this.weights;if(o.length!==s.length)throw new ValueError(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${s.length}, but the layer was expecting ${o.length} weights. Provided weights: ${s}...`);if(o.length===0)return;const a=[],c=batchGetValue(o);for(let d=0;d<c.length;++d){const g=c[d],$=o[d],j=s[d];if(!arraysEqual(g.shape,j.shape))throw new ValueError(`Layer weight shape ${g.shape} not compatible with provided weight shape ${j.shape}`);a.push([$,j])}batchSetValue(a)})}addWeight(s,o,a,c,d,g,$,j){if(this._addedWeightNames.indexOf(s)!==-1)throw new ValueError(`Duplicate weight name ${s} for layer ${this.name}`);this._addedWeightNames.push(s),a==null&&(a="float32"),this.fastWeightInitDuringBuild&&(c=j!=null?j():getInitializer("zeros"));const _e=c.apply(o,a),et=new LayerVariable(_e,a,s,g,$);return _e.dispose(),d!=null&&this.addLoss(()=>d.apply(et.read())),g==null&&(g=!0),g?this._trainableWeights.push(et):this._nonTrainableWeights.push(et),et}setFastWeightInitDuringBuild(s){this.fastWeightInitDuringBuild=s}addLoss(s){s==null||Array.isArray(s)&&s.length===0||(s=toList(s),this._losses!==void 0&&this._losses!==null&&this.losses.push(...s))}computeOutputShape(s){return s}computeMask(s,o){if(!this.supportsMasking){if(o!=null)if(Array.isArray(o))o.forEach(a=>{if(a!=null)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)});else throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);return null}return o}setMaskMetadata(s,o,a){if(!this.supportsMasking)return;const c=this.computeMask(s,a),d=toList(o),g=toList(c);if(d.length!==g.length)throw new Error(`${this.name} outputs ${d.length} tensors but ${d.length} masks for those tensors`);for(let $=0;$<d.length;$++)d[$].kerasMask=g[$]}addInboundNode(s,o,a,c,d,g,$=null){const j=toList(s);o=toList(o),a=toList(a),c=toList(c),d=normalizeShapeList(d),g=normalizeShapeList(g);const _e=[],et=[],_=[];for(const b of j)_e.push(b.sourceLayer),et.push(b.nodeIndex),_.push(b.tensorIndex);new Node({outboundLayer:this,inboundLayers:_e,nodeIndices:et,tensorIndices:_,inputTensors:j,outputTensors:o,inputMasks:a,outputMasks:c,inputShapes:d,outputShapes:g},$);for(let b=0;b<o.length;b++)o[b].sourceLayer=this,o[b].nodeIndex=this.inboundNodes.length-1,o[b].tensorIndex=b}getConfig(){const s={name:this.name,trainable:this.trainable};return this.batchInputShape!=null&&(s.batchInputShape=this.batchInputShape),this.dtype!=null&&(s.dtype=this.dtype),s}disposeWeights(){return this.weights.forEach(s=>s.dispose()),this.weights.length}assertNotDisposed(){if(this._refCount===0)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(this._refCount===null)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let s=0;return--this._refCount===0&&(s=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:s}}}function collectInputShape(i){i=toList(i);const s=[];for(const o of i)s.push(o.shape);return singletonOrArray(s)}function guessOutputDType(i){return"float32"}function getSourceInputs(i,s,o){if((s==null||o!=null&&o>0)&&(s=i.sourceLayer,o=i.nodeIndex),s.inboundNodes.length===0)return[i];{const a=s.inboundNodes[o];if(a.inboundLayers.length===0)return a.inputTensors;{const c=[];for(let d=0;d<a.inboundLayers.length;d++){const g=a.inputTensors[d],$=a.inboundLayers[d],j=a.nodeIndices[d],_e=getSourceInputs(g,$,j);for(const et of _e)c.indexOf(et)===-1&&c.push(et)}return c}}}function checkAllSymbolic(i){let s=!0;for(const o of toList(i))if(!(o instanceof SymbolicTensor)){s=!1;break}return s}function checkNoneSymbolic(i){let s=!0;for(const o of toList(i))if(o instanceof SymbolicTensor){s=!1;break}return s}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class InputLayer extends Layer{constructor(s){if(super({dtype:s.dtype,name:s.name!=null?s.name:getUid("input").toString()}),s.batchSize==null&&(s.batchSize=null),s.sparse==null&&(s.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=s.sparse,s.inputShape!=null&&s.batchInputShape!=null)throw new ValueError("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let o=s.batchInputShape;if(o==null){if(s.inputShape==null)throw new ValueError("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");o=[s.batchSize].concat(s.inputShape)}else if(s.batchSize!=null)throw new ValueError("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");const a=s.dtype||"float32";this.batchInputShape=o,this.dtype=a,this.inputSpec=[{shape:o}];const c=new SymbolicTensor(this.dtype,this.batchInputShape,this,[],{},this.name);c.nodeIndex=0,c.tensorIndex=0,new Node({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[c],outputTensors:[c],inputMasks:[null],outputMasks:[null],inputShapes:[o],outputShapes:[o]})}apply(s,o){throw new ValueError(`Cannot pass any input to an InputLayer's apply() method. InputLayer name: ${this.name}`)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}}InputLayer.className="InputLayer";registerClass(InputLayer);function Input(i){if(i.batchShape==null&&i.shape==null)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(i.batchShape!=null&&i.shape!=null)throw new ValueError("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let s=i.batchShape;i.shape!=null&&s==null&&(s=[null].concat(i.shape));let o=i.dtype;return o==null&&(o="float32"),new InputLayer({batchInputShape:s,name:i.name,dtype:o,sparse:i.sparse}).inboundNodes[0].outputTensors[0]}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function assertFeedCompatibility(i,s){if(i.dtype==null||i.dtype===s.dtype)return s;try{return cast$3(s,i.dtype)}catch{throw new ValueError(`The dtype of the feed (${s.dtype}) can not be cast to the dtype of the key '${i.name}' (${i.dtype}).`)}}class FeedDict{constructor(s){if(this.id2Value={},this.id2Mask={},this.name2Id={},s instanceof FeedDict)for(const o in s.id2Value)this.id2Value[o]=s.id2Value[o],o in s.id2Mask&&(this.id2Mask[o]=s.id2Mask[o]);else{if(s==null)return;for(const o of s)this.add(o.key,o.value)}}add(s,o,a){if(this.id2Value[s.id]==null)this.id2Value[s.id]=assertFeedCompatibility(s,o),this.name2Id[s.name]=s.id,a!=null&&(this.id2Mask[s.id]=a);else throw new ValueError(`Duplicate key: name=${s.name}, id=${s.id}`);return this}addFeed(s){this.add(s.key,s.value)}hasKey(s){return this.id2Value[s.id]!=null}names(){return Object.keys(this.name2Id)}getValue(s){if(s instanceof SymbolicTensor){if(this.id2Value[s.id]==null)throw new ValueError(`Nonexistent key: ${s.name}`);return this.id2Value[s.id]}else{const o=this.name2Id[s];if(o==null)throw new ValueError(`Feed dict has no SymbolicTensor name: ${s}`);return this.id2Value[o]}}getMask(s){if(s instanceof SymbolicTensor){if(this.id2Value[s.id]==null)throw new ValueError(`Nonexistent key: ${s.name}`);return this.id2Mask[s.id]}else{const o=this.name2Id[s];if(o==null)throw new ValueError(`Feed dict has no SymbolicTensor name: ${s}`);return this.id2Mask[o]}}disposeMasks(){this.id2Mask!=null&&dispose(this.id2Mask)}}const cachedSorted=new LruCache,cachedRecipientCounts=new LruCache;function updateCacheMaxEntries(i){cachedSorted!=null&&cachedSorted.setMaxEntries(i),cachedRecipientCounts!=null&&cachedRecipientCounts.setMaxEntries(i)}function execute(i,s,o,a){const c=o==null?!1:o.training,d=Array.isArray(i),g=d?i:[i],$=g.map(nt=>nt.name),j=[],_e=s.names();for(const nt of $)_e.indexOf(nt)!==-1?j.push(s.getValue(nt)):j.push(null);const et=$.join(",")+"|"+s.names().sort().join(",");let _=cachedSorted.get(et),b;if(_==null){const nt=getTopologicalSortAndRecipientCounts(g,s);_=nt.sorted,b=nt.recipientCounts,cachedSorted.put(et,_),cachedRecipientCounts.put(et,b)}b={},c||Object.assign(b,cachedRecipientCounts.get(et));const tt=new FeedDict(s);for(let nt=0;nt<_.length;++nt){const rt=_[nt],st=rt.sourceLayer;if(st instanceof InputLayer)continue;const ot=[],it=[],at=[];let lt=!1;for(const ht of rt.inputs){const ft=tt.getValue(ht),yt=tt.getMask(ht);ot.push(ft),it.push(yt),yt!=null&&(lt=!0),c||(b[ht.name]--,b[ht.name]===0&&!s.hasKey(ht)&&$.indexOf(ht.name)===-1&&!ft.isDisposed&&ht.sourceLayer.stateful!==!0&&at.push(ft))}lt&&(o=o||{},o.mask=it[0]);const ut=toList(st.apply(ot,o));let ct=null;st.supportsMasking&&(ct=st.computeMask(ot,it));const dt=getNodeOutputs(rt),pt=Array.isArray(dt)?dt:[dt];for(let ht=0;ht<pt.length;++ht){tt.hasKey(pt[ht])||tt.add(pt[ht],ut[ht],Array.isArray(ct)?ct[0]:ct);const ft=$.indexOf(pt[ht].name);ft!==-1&&(j[ft]=ut[ht])}c||dispose(at)}return tt.disposeMasks(),d?j:j[0]}function getTopologicalSortAndRecipientCounts(i,s){assert$1(i!=null&&i.length>0,()=>"Expected at least one fetch, got none");let o=[],a={};if(i.length===1){const c=getTopologicalSortAndRecipientCountsForOneFetch(i[0],s);o=c.sorted,a=c.recipientMap}else{const c=new Set;for(const d of i){const{sorted:g,recipientMap:$}=getTopologicalSortAndRecipientCountsForOneFetch(d,s);for(const j of g)c.has(j.name)||(o.push(j),c.add(j.name));for(const j in $)a[j]==null&&(a[j]=new Set),$[j].forEach(_e=>a[j].add(_e))}}return{sorted:o,recipientCounts:recipientMap2Counts(a)}}function recipientMap2Counts(i){const s={};for(const o in i)s[o]=i[o].size;return s}function getTopologicalSortAndRecipientCountsForOneFetch(i,s){const o=new Set,a=[],c={};for(const $ of s.names())o.add($);const d=[],g=[];for(d.push(i);d.length>0;){const $=d[d.length-1];if(o.has($.name)){d.pop();continue}const j=g[g.length-1]===d.length-1;if($.inputs.length===0||j)d.pop(),a.push($),o.add($.name),j&&g.pop();else{g.push(d.length-1);for(const _e of $.inputs)c[_e.name]==null&&(c[_e.name]=new Set),c[_e.name].add($.name),!o.has(_e.name)&&d.push(_e)}}return{sorted:a,recipientMap:c}}function getNodeOutputs(i){let s;if(i.sourceLayer.inboundNodes.length===1)s=i.sourceLayer.output;else{let o=null;for(let a=0;a<i.sourceLayer.inboundNodes.length;++a)for(const c of i.sourceLayer.inboundNodes[a].outputTensors)if(c.id===i.id){o=a;break}s=i.sourceLayer.getOutputAt(o)}return s}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ENV$2=env();ENV$2.registerFlag("TOPOLOGICAL_SORT_CACHE_MAX_ENTRIES",()=>100,updateCacheMaxEntries);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function calcL2Norms(i,s){return tidy(()=>sqrt$2(sum$2(mul(i,i),s,!0)))}class Constraint extends Serializable{getConfig(){return{}}}class MaxNorm extends Constraint{constructor(s){super(),this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=s.maxValue!=null?s.maxValue:this.defaultMaxValue,this.axis=s.axis!=null?s.axis:this.defaultAxis}apply(s){return tidy(()=>{const o=calcL2Norms(s,this.axis),a=clipByValue$2(o,0,this.maxValue);return mul(s,div$1(a,add$1(epsilon$1(),o)))})}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}}MaxNorm.className="MaxNorm";registerClass(MaxNorm);class UnitNorm extends Constraint{constructor(s){super(),this.defaultAxis=0,this.axis=s.axis!=null?s.axis:this.defaultAxis}apply(s){return tidy(()=>div$1(s,add$1(epsilon$1(),calcL2Norms(s,this.axis))))}getConfig(){return{axis:this.axis}}}UnitNorm.className="UnitNorm";registerClass(UnitNorm);class NonNeg extends Constraint{apply(s){return relu$2(s)}}NonNeg.className="NonNeg";registerClass(NonNeg);class MinMaxNorm extends Constraint{constructor(s){super(),this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=s.minValue!=null?s.minValue:this.defaultMinValue,this.maxValue=s.maxValue!=null?s.maxValue:this.defaultMaxValue,this.rate=s.rate!=null?s.rate:this.defaultRate,this.axis=s.axis!=null?s.axis:this.defaultAxis}apply(s){return tidy(()=>{const o=calcL2Norms(s,this.axis),a=add$1(mul(this.rate,clipByValue$2(o,this.minValue,this.maxValue)),mul(1-this.rate,o));return mul(s,div$1(a,add$1(epsilon$1(),o)))})}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}}MinMaxNorm.className="MinMaxNorm";registerClass(MinMaxNorm);const CONSTRAINT_IDENTIFIER_REGISTRY_SYMBOL_MAP={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function serializeConstraint(i){return serializeKerasObject(i)}function deserializeConstraint(i,s={}){return deserializeKerasObject(i,SerializationMap.getMap().classNameMap,s,"constraint")}function getConstraint(i){if(i==null)return null;if(typeof i=="string"){const o={className:i in CONSTRAINT_IDENTIFIER_REGISTRY_SYMBOL_MAP?CONSTRAINT_IDENTIFIER_REGISTRY_SYMBOL_MAP[i]:i,config:{}};return deserializeConstraint(o)}else return i instanceof Constraint?i:deserializeConstraint(i)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */async function resolveScalarsInLogs(i){if(i==null)return;const s=[],o=[],a=[];for(const c in i){const d=i[c];if(typeof d!="number"){const g=d;s.push(g.data()),o.push(c),a.push(g)}}if(s.length>0){const c=await Promise.all(s);for(let d=0;d<c.length;++d)i[o[d]]=c[d][0];dispose(a)}}function disposeTensorsInLogs(i){if(i!=null)for(const s in i){const o=i[s];typeof o!="number"&&o.dispose()}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */var ModelLoggingVerbosity;(function(i){i[i.SILENT=0]="SILENT",i[i.VERBOSE=1]="VERBOSE"})(ModelLoggingVerbosity||(ModelLoggingVerbosity={}));const DEFAULT_YIELD_EVERY_MS=125;class BaseCallback{constructor(){this.validationData=null}setParams(s){this.params=s}async onEpochBegin(s,o){}async onEpochEnd(s,o){}async onBatchBegin(s,o){}async onBatchEnd(s,o){}async onTrainBegin(s){}async onTrainEnd(s){}setModel(s){}}class CallbackList{constructor(s,o=10){s==null&&(s=[]),this.callbacks=s,this.queueLength=o}append(s){this.callbacks.push(s)}setParams(s){for(const o of this.callbacks)o.setParams(s)}setModel(s){for(const o of this.callbacks)o.setModel(s)}async onEpochBegin(s,o){o==null&&(o={});for(const a of this.callbacks)await a.onEpochBegin(s,o)}async onEpochEnd(s,o){o==null&&(o={});for(const a of this.callbacks)await a.onEpochEnd(s,o)}async onBatchBegin(s,o){o==null&&(o={});for(const a of this.callbacks)await a.onBatchBegin(s,o)}async onBatchEnd(s,o){o==null&&(o={});for(const a of this.callbacks)await a.onBatchEnd(s,o)}async onTrainBegin(s){s==null&&(s={});for(const o of this.callbacks)await o.onTrainBegin(s)}async onTrainEnd(s){s==null&&(s={});for(const o of this.callbacks)await o.onTrainEnd(s)}}class BaseLogger extends BaseCallback{constructor(){super()}async onEpochBegin(s){this.seen=0,this.totals={}}async onBatchEnd(s,o){o==null&&(o={});const a=o.size==null?0:o.size;this.seen+=a;for(const c in o){const d=o[c];if(typeof d=="number")this.totals.hasOwnProperty(c)||(this.totals[c]=0),this.totals[c]=this.totals[c]+d*a;else{let g;c in this.totals?g=this.totals[c]:this.totals[c]=0;const $=tidy(()=>add$1(this.totals[c],mul(d,a)));this.totals[c]=$,g!=null&&g.dispose()}}}async onEpochEnd(s,o){if(o!=null)for(const a of this.params.metrics)this.totals[a]!=null&&(typeof this.totals[a]=="number"?o[a]=this.totals[a]/this.seen:tidy(()=>{const c=mul(div$1(1,this.seen),this.totals[a]);o[a]=c,this.totals[a].dispose(),keep(o[a])}))}}class History extends BaseCallback{async onTrainBegin(s){this.epoch=[],this.history={}}async onEpochEnd(s,o){o==null&&(o={}),this.epoch.push(s);for(const a in o)this.history[a]==null&&(this.history[a]=[]),this.history[a].push(o[a])}async syncData(){const s=[],o=[],a=[];for(const d in this.history){const g=this.history[d];for(let $=0;$<g.length;++$)if(typeof g[$]!="number"){const j=g[$];s.push(j.data()),o.push(d),a.push($)}}const c=await Promise.all(s);for(let d=0;d<c.length;++d)this.history[o[d]][a[d]].dispose(),this.history[o[d]][a[d]]=c[d][0]}}class CustomCallback extends BaseCallback{constructor(s,o){if(super(),this.currentEpoch=0,this.nowFunc=s.nowFunc,this.nextFrameFunc=s.nextFrameFunc||nextFrame,this.yieldEvery=o||"auto",this.yieldEvery==="auto"&&(this.yieldEvery=DEFAULT_YIELD_EVERY_MS),this.yieldEvery==="never"&&s.onYield!=null)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");isNumber(this.yieldEvery)&&(this.maybeWait=debounce(this.maybeWait.bind(this),this.yieldEvery,this.nowFunc)),this.trainBegin=s.onTrainBegin,this.trainEnd=s.onTrainEnd,this.epochBegin=s.onEpochBegin,this.epochEnd=s.onEpochEnd,this.batchBegin=s.onBatchBegin,this.batchEnd=s.onBatchEnd,this.yield=s.onYield}async maybeWait(s,o,a){const c=[];this.yield!=null&&(await resolveScalarsInLogs(a),c.push(this.yield(s,o,a))),c.push(this.nextFrameFunc()),await Promise.all(c)}async onEpochBegin(s,o){this.currentEpoch=s,this.epochBegin!=null&&(await resolveScalarsInLogs(o),await this.epochBegin(s,o))}async onEpochEnd(s,o){const a=[];this.epochEnd!=null&&(await resolveScalarsInLogs(o),a.push(this.epochEnd(s,o))),this.yieldEvery==="epoch"&&a.push(this.nextFrameFunc()),await Promise.all(a)}async onBatchBegin(s,o){this.batchBegin!=null&&(await resolveScalarsInLogs(o),await this.batchBegin(s,o))}async onBatchEnd(s,o){const a=[];this.batchEnd!=null&&(await resolveScalarsInLogs(o),a.push(this.batchEnd(s,o))),this.yieldEvery==="batch"?a.push(this.nextFrameFunc()):isNumber(this.yieldEvery)&&a.push(this.maybeWait(this.currentEpoch,s,o)),await Promise.all(a)}async onTrainBegin(s){this.trainBegin!=null&&(await resolveScalarsInLogs(s),await this.trainBegin(s))}async onTrainEnd(s){this.trainEnd!=null&&(await resolveScalarsInLogs(s),await this.trainEnd(s))}}function standardizeCallbacks(i,s){return i==null&&(i={}),i instanceof BaseCallback?[i]:Array.isArray(i)&&i[0]instanceof BaseCallback?i:toList(i).map(a=>new CustomCallback(a,s))}class CallbackConstructorRegistry{constructor(){}static registerCallbackConstructor(s,o){assert$1(s>=0&&Number.isInteger(s),()=>`Verbosity level is expected to be an integer >= 0, but got ${s}`),CallbackConstructorRegistry.checkForDuplicate(o),CallbackConstructorRegistry.constructors[s]==null&&(CallbackConstructorRegistry.constructors[s]=[]),CallbackConstructorRegistry.constructors[s].push(o)}static checkForDuplicate(s){for(const o in CallbackConstructorRegistry.constructors)CallbackConstructorRegistry.constructors[+o].forEach(c=>{if(c===s)throw new ValueError("Duplicate callback constructor.")})}static clear(){CallbackConstructorRegistry.constructors={}}static createCallbacks(s){const o=[];for(const a in CallbackConstructorRegistry.constructors){const c=+a;s>=c&&o.push(...CallbackConstructorRegistry.constructors[c])}return o.map(a=>new a)}}CallbackConstructorRegistry.constructors={};function configureCallbacks(i,s,o,a,c,d,g,$,j){const _e=new History,et=[new BaseLogger,...CallbackConstructorRegistry.createCallbacks(s)];i!=null&&et.push(...i),et.push(_e);const _=new CallbackList(et);return _.setParams({epochs:o,initialEpoch:a,samples:c,steps:d,batchSize:g,verbose:s,doValidation:$,metrics:j}),{callbackList:_,history:_e}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function deserialize(i,s={},o=!1){return deserializeKerasObject(i,SerializationMap.getMap().classNameMap,s,"layer",o)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function l2Normalize(i,s){return tidy(()=>{i.dtype!=="float32"&&(i=cast$3(i,"float32"));const o=sum$2(square$1(i),s,!0),a=fill$2(o.shape,epsilon$1()),c=sqrt$2(maximum$2(o,a));return div$1(i,c)})}function meanSquaredError(i,s){return tidy(()=>mean$1(square$1(sub$2(s,i)),-1))}function meanAbsoluteError(i,s){return tidy(()=>mean$1(abs$2(sub$2(s,i)),-1))}function meanAbsolutePercentageError(i,s){return tidy(()=>{const o=sub$2(i,s),a=clipByValue$2(abs$2(i),epsilon$1(),Number.MAX_VALUE),c=abs$2(div$1(o,a));return mul(100,mean$1(c,-1))})}function meanSquaredLogarithmicError(i,s){return tidy(()=>{const o=clipByValue$2(s,epsilon$1(),Number.MAX_VALUE),a=log$2(add$1(1,o)),c=clipByValue$2(i,epsilon$1(),Number.MAX_VALUE),d=log$2(add$1(1,c));return mean$1(square$1(sub$2(a,d)),-1)})}function squaredHinge(i,s){return tidy(()=>{const o=maximum$2(0,sub$2(1,mul(i,s)));return mean$1(square$1(o),-1)})}function hinge(i,s){return tidy(()=>{const o=maximum$2(0,sub$2(1,mul(i,s)));return mean$1(o,-1)})}function categoricalHinge(i,s){return tidy(()=>{const o=sum$2(mul(i,s),-1),a=max$3(mul(sub$2(1,i),s),-1);return maximum$2(0,add$1(1,sub$2(a,o)))})}function logcosh(i,s){return tidy(()=>{const o=Math.log(2),a=sub$2(s,i),c=sub$2(add$1(a,softplus$2(mul(-2,a))),o);return mean$1(c,-1)})}function categoricalCrossentropy$1(i,s,o=!1){return tidy(()=>{if(o)s=softmax$2(s);else{const a=sum$2(s,s.shape.length-1,!0);s=div$1(s,a)}return s=clipByValue$2(s,epsilon$1(),1-epsilon$1()),neg$2(sum$2(mul(cast$3(i,"float32"),log$2(s)),s.shape.length-1))})}function sparseCategoricalCrossentropy$1(i,s,o=!1){return tidy(()=>{const a=cast$3(floor$2(flatten(i)),"int32");s=clipByValue$2(s,epsilon$1(),1-epsilon$1());const c=s.shape,d=reshape$2(oneHot$2(a,c[c.length-1]),c);return categoricalCrossentropy$1(d,s,o)})}function sigmoidCrossEntropyWithLogits(i,s){if(!arraysEqual(i.shape,s.shape))throw new ValueError(`logits and labels must have the same shape, but got shapes ${JSON.stringify(i.shape)} and ${JSON.stringify(s.shape)}`);return tidy(()=>{const o=relu$2(s),a=neg$2(abs$2(s));return add$1(sub$2(o,mul(s,i)),log1p$2(exp$2(a)))})}function binaryCrossentropy$1(i,s){return tidy(()=>{let o;return o=clipByValue$2(s,epsilon$1(),1-epsilon$1()),o=log$2(div$1(o,sub$2(1,o))),mean$1(sigmoidCrossEntropyWithLogits(i,o),-1)})}function kullbackLeiblerDivergence(i,s){return tidy(()=>{const o=clipByValue$2(i,epsilon$1(),1),a=clipByValue$2(s,epsilon$1(),1);return sum$2(mul(i,log$2(div$1(o,a))),-1)})}function poisson(i,s){return tidy(()=>{const o=log$2(add$1(epsilon$1(),s));return mean$1(sub$2(s,mul(i,o)),-1)})}function cosineProximity(i,s){return tidy(()=>{const o=l2Normalize(i,-1),a=l2Normalize(s,-1),c=mul(o,a);return neg$2(sum$2(c,-1))})}const lossesMap={meanSquaredError,meanAbsoluteError,meanAbsolutePercentageError,meanSquaredLogarithmicError,squaredHinge,hinge,categoricalHinge,logcosh,categoricalCrossentropy:categoricalCrossentropy$1,sparseCategoricalCrossentropy:sparseCategoricalCrossentropy$1,binaryCrossentropy:binaryCrossentropy$1,kullbackLeiblerDivergence,poisson,cosineProximity};function get$1(i){if(typeof i=="string"){if(i in lossesMap)return lossesMap[i];let s=`Unknown loss ${i}`;throw i.toLowerCase().includes("softmaxcrossentropy")&&(s=`Unknown loss ${i}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new ValueError(s)}else return i}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function binaryAccuracy(i,s){return tidy(()=>{const o=mul(.5,onesLike$2(s)),a=cast$2(greater$2(s,o),i.dtype);return mean$1(equal$2(i,a),-1)})}function categoricalAccuracy(i,s){return tidy(()=>cast$2(equal$2(argMax$2(i,-1),argMax$2(s,-1)),"float32"))}function truePositives(i,s){return tidy(()=>cast$3(sum$2(logicalAnd$2(equal$2(i,1),equal$2(s,1))),"float32"))}function falsePositives(i,s){return tidy(()=>cast$3(sum$2(logicalAnd$2(equal$2(i,0),equal$2(s,1))),"float32"))}function precision(i,s){return tidy(()=>{const o=truePositives(i,s),a=falsePositives(i,s),c=add$1(o,a);return cast$3(where(greater$2(c,0),div$1(o,c),0),"float32")})}function binaryCrossentropy(i,s){return binaryCrossentropy$1(i,s)}function sparseCategoricalAccuracy(i,s){return i.rank===s.rank&&(i=squeeze(i,[i.rank-1])),s=argMax$2(s,-1),s.dtype!==i.dtype&&(s=cast$3(s,i.dtype)),cast$3(equal$2(i,s),"float32")}const mse=meanSquaredError,MSE=meanSquaredError,mae=meanAbsoluteError,MAE=meanAbsoluteError,mape=meanAbsolutePercentageError,MAPE=meanAbsolutePercentageError,categoricalCrossentropy=categoricalCrossentropy$1,cosine=cosineProximity,sparseCategoricalCrossentropy=sparseCategoricalCrossentropy$1,metricsMap={binaryAccuracy,categoricalAccuracy,precision,categoricalCrossentropy,sparseCategoricalCrossentropy,mse,MSE,mae,MAE,mape,MAPE,cosine};function get(i){if(typeof i=="string"&&i in metricsMap)return metricsMap[i];if(typeof i!="string"&&i!=null)return i;throw new ValueError(`Unknown metric ${i}`)}function getLossOrMetricName(i){if(assert(i!==null,`Unknown LossOrMetricFn ${i}`),typeof i=="string")return i;{let s;for(const o of Object.keys(lossesMap))if(lossesMap[o]===i){s=o;break}if(s!==void 0)return s;for(const o of Object.keys(metricsMap))if(metricsMap[o]===i){s=o;break}return s!==void 0?s:i.name}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function getOptimizer(i){const s={Adagrad:()=>train.adagrad(.01),Adadelta:()=>train.adadelta(1,.95,epsilon$1()),Adam:()=>train.adam(.001,.9,.999,epsilon$1()),Adamax:()=>train.adamax(.002,.9,.999,epsilon$1(),0),RMSProp:()=>train.rmsprop(.001,.9,0,epsilon$1()),SGD:()=>train.sgd(.01)};if(s.adagrad=s.Adagrad,s.adadelta=s.Adadelta,s.adam=s.Adam,s.adamax=s.Adamax,s.rmsprop=s.RMSProp,s.sgd=s.SGD,i in s)return s[i]();throw new ValueError(`Unknown Optimizer ${i}`)}/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const MAX_USER_DEFINED_METADATA_SERIALIZED_LENGTH=1*1024*1024;function checkUserDefinedMetadata(i,s,o=!1){if(i==null||typeof i!="object"||Object.getPrototypeOf(i)!==Object.prototype||!plainObjectCheck(i))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(o){const a=JSON.stringify(i);a.length>MAX_USER_DEFINED_METADATA_SERIALIZED_LENGTH&&console.warn(`User-defined metadata of model "${s}" is too large in size (length=${a.length} when serialized). It is not recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= ${MAX_USER_DEFINED_METADATA_SERIALIZED_LENGTH}.`)}}function plainObjectCheck(i){if(i===null)return!0;if(typeof i=="object")if(Object.getPrototypeOf(i)===Object.prototype){const s=Object.keys(i);for(const o of s)if(typeof o!="string"||!plainObjectCheck(i[o]))return!1;return!0}else if(Array.isArray(i)){for(const s of i)if(!plainObjectCheck(s))return!1;return!0}else return!1;else{const s=typeof i;return s==="string"||s==="number"||s==="boolean"}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function printSummary(i,s,o,a=console.log){const c=isModelSequentialLike(i),d=["Layer (type)","Input Shape","Output shape","Param #"];c?(s=s||90,o=o||[.32,.61,.89,1]):(s=s||115,o=o||[.24,.48,.7,.8,1]),o[o.length-1]<=1&&(o=o.map(et=>Math.floor(s*et)));let g;if(!c){d.push("Receives inputs"),g=[];for(const et in i.nodesByDepth)g.push(...i.nodesByDepth[et])}a("_".repeat(s)),printRow(d,o,a),a("=".repeat(s));const $=i.layers;for(let et=0;et<$.length;++et)c?printLayerSummary($[et],o,a):printLayerSummaryWithConnections($[et],o,g,a),a((et===$.length-1?"=":"_").repeat(s));i.checkTrainableWeightsConsistency();const j=countTrainableParams(i),_e=countParamsInWeights(i.nonTrainableWeights);a(`Total params: ${j+_e}`),a(`Trainable params: ${j}`),a(`Non-trainable params: ${_e}`),a("_".repeat(s))}function countTrainableParams(i){let s;return i.collectedTrainableWeights!=null?s=countParamsInWeights(i.collectedTrainableWeights):s=countParamsInWeights(i.trainableWeights),s}function isModelSequentialLike(i){let s=!0;const o=[],a=[];for(const c in i.nodesByDepth)o.push(i.nodesByDepth[c]);for(const c of o){if(c.length>1||c.length===1&&c[0].inboundLayers.length>1){s=!1;break}a.push(...c)}if(s)for(const c of i.layers){let d=!1;for(const g of c.inboundNodes)if(a.indexOf(g)!==-1)if(d){s=!1;break}else d=!0;if(!s)break}return s}function printRow(i,s,o=console.log){let a="";for(let c=0;c<i.length;++c)c>0&&(a=a.slice(0,a.length-1)+" "),a+=i[c],a=a.slice(0,s[c]),a+=" ".repeat(s[c]-a.length);o(a)}function printLayerSummary(i,s,o){let a,c;try{c=i.inboundNodes.map(j=>JSON.stringify(j.inputShapes)).join(",")}catch{c="multiple"}try{a=JSON.stringify(i.outputShape)}catch{a="multiple"}const d=i.name,g=i.getClassName(),$=[`${d} (${g})`,c,a,i.countParams().toString()];printRow($,s,o)}function printLayerSummaryWithConnections(i,s,o,a){let c,d;try{d=i.inboundNodes.map(_=>JSON.stringify(_.inputShapes)).join(",")}catch{d="multiple"}try{c=JSON.stringify(i.outputShape)}catch{c="multiple"}const g=[];for(const _ of i.inboundNodes)if(!(o!=null&&o.length>0&&o.indexOf(_)===-1))for(let b=0;b<_.inboundLayers.length;++b){const tt=_.inboundLayers[b].name,nt=_.nodeIndices[b],rt=_.tensorIndices[b];g.push(`${tt}[${nt}][${rt}]`)}const $=i.name,j=i.getClassName(),_e=g.length===0?"":g[0],et=[`${$} (${j})`,d,c,i.countParams().toString(),_e];printRow(et,s,a);for(let _=1;_<g.length;++_)printRow(["","","","",g[_]],s,a)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function isArrayItemInputOrOutputName(i,s,o){return(i==="inboundNodes"||i==="outputLayers"||i==="inputLayers")&&s===0&&typeof o=="string"}function convertPythonicToTs(i,s){if(i===null)return null;if(typeof i=="string")return toCamelCase(i);if(typeof i=="number"||typeof i=="boolean")return i;if(i instanceof Array){const o=[],a=i.length;for(let c=0;c<a;++c){const d=i[c];isArrayItemInputOrOutputName(s,c,d)?o.push(d):o.push(convertPythonicToTs(d,s))}return o}else{const o={};for(const a of Object.keys(i)){const c=i[a];if(a==="name"&&typeof c=="string")o[a]=c;else{const d=toCamelCase(a);o[d]=convertPythonicToTs(c,d)}}return o}}function convertTsToPythonic(i,s){if(i==null)return null;if(typeof i=="string")return toSnakeCase(i);if(typeof i=="number"||typeof i=="boolean")return i;if(i instanceof Array){const o=[],a=i.length;for(let c=0;c<a;++c){const d=i[c];isArrayItemInputOrOutputName(s,c,d)?o.push(d):o.push(convertTsToPythonic(d,s))}return o}else{const o={};for(const a of Object.keys(i)){const c=i[a],d=toSnakeCase(a);(a==="name"||a==="className")&&typeof c=="string"?o[d]=c:o[d]=convertTsToPythonic(c,a)}return o}}/** @license See the LICENSE file. */const version="4.22.0";/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const isKerasSavedModelFormat=i=>{const s=Object.keys(i);if(s.length===0)return!1;const o=s[0].split("/");return!isNaN(parseInt(o[o.length-1],10))};class Container extends Layer{constructor(s){if(super({}),this.containerNodes=new Set,this.name=s.name,this.name==null){const it=this.getClassName().toLowerCase();this.name=getUid(it)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(s.inputs)?this.inputs=s.inputs.slice():this.inputs=[s.inputs],Array.isArray(s.outputs)?this.outputs=s.outputs.slice():this.outputs=[s.outputs],unique$2(this.inputs).length!==this.inputs.length)throw new ValueError(`The list of inputs passed to the model is redundant. All inputs should only appear once. Found: ${this.inputs.map(it=>it.name)}`);unique$2(this.outputs).length!==this.outputs.length&&console.warn(`The list of outputs passed to the model is redundant. All outputs should only appear once. Found: ${this.outputs.map(it=>it.name)}`),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(const it of this.outputs){const at=it.sourceLayer,lt=it.nodeIndex,ut=it.tensorIndex;this.outputLayers.push(at),this.outputLayersNodeIndices.push(lt),this.outputLayersTensorIndices.push(ut)}for(const it of this.inputs){const at=it.sourceLayer,lt=it.nodeIndex,ut=it.tensorIndex;assert(lt===0,"input layer has >1 nodes"),assert(ut===0,"input layer has >1 tensors"),this.inputLayers.push(at),this.inputLayersNodeIndices.push(lt),this.inputLayersTensorIndices.push(ut)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let it=0;it<this.inputLayers.length;it++){const at=this.inputLayers[it];if(!(at instanceof InputLayer))throw new TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${s.inputs}. Input ${it} (0-based) originates from layer type ${at.getClassName()}.`);this.inputNames.push(at.name),this.feedInputShapes.push(at.batchInputShape),this.feedInputNames.push(at.name)}for(const it of this.outputLayers)this.outputNames.push(it.name);this.internalInputShapes=this.inputs.map(it=>it.shape),this.internalOutputShapes=this.outputs.map(it=>it.shape);const o={},a={},c={},d={},g={},$=[],j=(it,at,lt,ut,ct,dt)=>{(ut==null||ct==null||dt==null)&&(ut=it.sourceLayer,ct=it.nodeIndex,dt=it.tensorIndex);const pt=ut.inboundNodes[ct];if(lt.indexOf(pt)!==-1)throw new RuntimeError(`The tensor ${it.name} at layer "${ut.name}" is part of a cycle.`);if(at.indexOf(pt)!==-1)return;this.containerNodes.add(Container.nodeKey(ut,ct)),ut.id in g||(g[ut.id]=Object.keys(g).length),lt.indexOf(pt)===-1&&lt.push(pt);const ht=pt.inboundLayers.length;for(let ft=0;ft<ht;ft++){const yt=pt.inputTensors[ft],wt=pt.inboundLayers[ft],_t=pt.nodeIndices[ft],bt=pt.tensorIndices[ft];j(yt,at,lt,wt,_t,bt)}for(at.push(pt);lt.indexOf(pt)>=0;)lt.splice(lt.indexOf(pt),1);$.push(pt)},_e=[],et=[];for(const it of this.outputs)j(it,_e,et);const _=$.slice().reverse();for(const it of _){a[it.id]=it,it.id in o||(o[it.id]=0);let at=o[it.id];const lt=c[it.outboundLayer.id]==null?0:c[it.outboundLayer.id];at=Math.max(at,lt),c[it.outboundLayer.id]=at,d[it.outboundLayer.id]=it.outboundLayer,o[it.id]=at;for(let ut=0;ut<it.inboundLayers.length;ut++){const ct=it.inboundLayers[ut],dt=it.nodeIndices[ut],pt=ct.inboundNodes[dt],ht=o[pt.id]==null?0:o[pt.id];o[pt.id]=Math.max(at+1,ht),a[pt.id]=pt}}const b={};for(const it in o){const at=o[it];at in b||(b[at]=[]),b[at].push(a[it])}const tt={};for(const it in c){const at=c[it];at in tt||(tt[at]=[]),tt[at].push(d[it])}let nt=Object.keys(tt).map(it=>parseInt(it,10)).sort(reverseNumberCompare);this.layers=[];for(const it of nt){const at=tt[it];at.sort((lt,ut)=>{const ct=g[lt.id],dt=g[ut.id];return ct<dt?-1:ct>dt?1:0});for(const lt of at)lt instanceof Container&&this.internalContainerRefs.push(lt),this.layers.push(lt)}this.layersByDepth=tt,nt=Object.keys(b).map(it=>parseInt(it,10)).sort(reverseNumberCompare);const rt=this.inputs.slice(),st=[];for(const it of nt)for(const at of b[it]){const lt=at.outboundLayer;if(lt!=null){for(const ut of at.inputTensors)if(rt.indexOf(ut)===-1)throw new RuntimeError(`Graph disconnected: cannot obtain value for tensor ${ut} at layer "${lt.name}". The following previous layers were accessed without issue: ${st}`);for(const ut of at.outputTensors)rt.push(ut);st.push(lt.name)}}this.nodesByDepth=b;const ot=this.layers.map(it=>it.name);for(const it of ot){const at=ot.filter(lt=>lt===it).length;if(at!==1)throw new RuntimeError(`The name "${it}" is used ${at} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(ot))}this.outboundNodes=[],this.inboundNodes=[],new Node({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map(it=>null),outputMasks:this.outputs.map(it=>null),inputShapes:this.inputs.map(it=>it.shape),outputShapes:this.outputs.map(it=>it.shape)}),this.built=!0,this._refCount=1}assertNotDisposed(){if(this._refCount===0)throw new Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();const s={refCountAfterDispose:null,numDisposedVariables:0};if(--this._refCount===0){for(const o of this.layers)s.numDisposedVariables+=o.dispose().numDisposedVariables;for(const o of this.internalContainerRefs)s.numDisposedVariables+=o.dispose().numDisposedVariables}return s.refCountAfterDispose=this._refCount,s}get trainable(){return this.trainable_}set trainable(s){this.layers.forEach(o=>{o._trainableWeights.forEach(a=>a.trainable=s)}),this.trainable_=s}get trainableWeights(){if(this._trainableWeights.length>0)throw new ValueError("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let s=[];for(const o of this.layers)s=s.concat(o.trainableWeights);return s}get nonTrainableWeights(){const s=[];for(const o of this.layers)s.push(...o.nonTrainableWeights);if(!this.trainable){const o=[];for(const a of this.layers)o.push(...a.trainableWeights);return o.concat(s)}return s}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(s,o=!0){const a={};let c=0;const d=isKerasSavedModelFormat(s);d&&this.parseWeights(s);for(const $ of this.layers)for(const[j,_e]of $.weights.entries()){const et=d?`${_e.name.split("/").slice(0,-1).join("/")+"/"}${j}`:_e.originalName;if(a[et]!=null)throw new ValueError(`Duplicate weight name: ${et}`);a[et]=_e,c++}const g=[];for(const $ in s){let j=$;if(a[$]==null){const _e=$.split("/");j=_e.slice(0,-2).concat([_e[_e.length-1]]).join("/")}if(a[j]!=null)g.push([a[j],s[$]]);else if(o)throw new ValueError(`Provided weight data has no target variable: ${$}`);delete a[j]}if(o){const $=[];for(const j in a)$.push(j);if($.length>0)throw new ValueError(`${$.length} of ${c} weights are not set: ${$}`)}batchSetValue(g)}parseWeights(s){for(const o in Object.keys(s)){const a=o.split("/"),c=["vars","layer_checkpoint_dependencies"],d=a.map(g=>g.startsWith("_")?g.slice(1):g).filter(g=>!c.includes(g)).join("/");d!==o&&(s[d]=s[o],delete s[o])}}updatedConfig(){const s=this.getConfig(),o={};return o.className=this.getClassName(),o.config=s,o.kerasVersion=`tfjs-layers ${version}`,o.backend="TensorFlow.js",o}toJSON(s,o=!0){const a=convertTsToPythonic(this.updatedConfig());return o?JSON.stringify(a):a}call(s,o){return tidy(()=>{s=toList(s);const a=new FeedDict;for(let c=0;c<this.inputs.length;++c)a.add(this.inputs[c],s[c]);return execute(this.outputs,a,o)})}computeMask(s,o){return tidy(()=>{s=toList(s);let a;return o==null?a=pyListRepeat(null,s.length):a=toList(o),this.runInternalGraph(s,a)[1]})}computeOutputShape(s){const o=normalizeShapeList(s);if(o.length!==this.inputLayers.length)throw new ValueError(`Invalid inputShape argument ${s}: model has ${this.inputLayers.length} tensor inputs.`);const a={};for(let $=0;$<o.length;$++){const j=this.inputLayers[$],_e=o[$],et=j.name+"_0_0";a[et]=_e}const c=Object.keys(this.nodesByDepth).map($=>parseInt($,10)).sort(reverseNumberCompare);if(c.length>1)for(const $ of c){const j=this.nodesByDepth[$];for(const _e of j){const et=_e.outboundLayer;if(this.inputLayers.map(rt=>rt.id).indexOf(et.id)!==-1)continue;const _=[];for(let rt=0;rt<_e.inboundLayers.length;rt++){const st=_e.inboundLayers[rt],ot=_e.nodeIndices[rt],it=_e.tensorIndices[rt],at=`${st.name}_${ot}_${it}`,lt=a[at];_.push(lt)}const b=et.computeOutputShape(singletonOrArray(_)),tt=normalizeShapeList(b),nt=et.inboundNodes.indexOf(_e);for(let rt=0;rt<tt.length;rt++){const st=`${et.name}_${nt}_${rt}`;a[st]=tt[rt]}}}const d=[],g=[];for(let $=0;$<this.outputLayers.length;$++){const j=this.outputLayers[$],_e=this.outputLayersNodeIndices[$],et=this.outputLayersTensorIndices[$],_=`${j.name}_${_e}_${et}`;g.push(_)}for(let $=0;$<g.length;$++){const j=g[$];assert(j in a),d.push(a[j])}return singletonOrArray(d)}runInternalGraph(s,o){o==null&&(o=pyListRepeat(null,s.length));const a={};for(let j=0;j<this.inputs.length;++j){const _e=this.inputs[j],et=s[j],_=o[j];a[_e.id]=[et,_]}const c=Object.keys(this.nodesByDepth).map(j=>parseInt(j,10)).sort(reverseNumberCompare);for(const j of c){const _e=this.nodesByDepth[j];for(const et of _e){const _=et.outboundLayer,b=et.inputTensors,tt=et.outputTensors,nt=new Array;for(const rt of b)rt.id in a&&nt.push(a[rt.id]);if(nt.length===b.length){let rt={},st,ot,it,at;if(et.callArgs!=null&&(rt=et.callArgs),nt.length===1){const[lt,ut]=nt[0];rt.mask==null&&(rt.mask=ut),it=toList(_.call(lt,rt)),at=toList(_.computeMask(lt,ut)),st=[lt],ot=[ut]}else st=nt.map(lt=>lt[0]),ot=nt.map(lt=>lt[1]),rt.mask==null&&(rt.mask=ot),it=toList(_.call(st,rt)),at=toList(_.computeMask(st,ot));if(_.activityRegularizer)throw new NotImplementedError("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let lt=0;lt<tt.length;++lt){const ut=tt[lt],ct=it[lt],dt=at[lt];a[ut.id]=[ct,dt]}}}}const d=[],g=[],$=[];for(const j of this.outputs){assert(j.id in a,`Could not compute output ${j.name} : ${j.id}`);const[_e,et]=a[j.id];$.push(_e.shape),d.push(_e),g.push(et)}return[d,g,$]}buildNodeConversionMap(s){const o={};let a;for(const c of this.layers){a=c instanceof Container?1:0;for(let d=0;d<c.inboundNodes.length;d++){const g=Container.nodeKey(c,d);this.containerNodes.has(g)&&(o[g]=a,a+=1)}}return o}getLayer(s,o){if(o!=null)return this.findLayer(o);if(s==null)throw new ValueError("Provide either a layer name or layer index");if(typeof s=="number")return this.findLayer(s);for(const a of this.layers)if(a.name===s)return a;throw new ValueError(`No such layer: ${s}`)}findLayer(s){if(this.layers.length<=s)throw new ValueError(`Was asked to retrieve layer at index ${s}, but model only has ${this.layers.length} layer(s).`);return this.layers[s]}calculateLosses(){return tidy(()=>{const s=[];for(const o of this.layers)for(let a=0;a<o.inboundNodes.length;++a){const c=Container.nodeKey(o,a);this.containerNodes.has(c)&&s.push(...o.calculateLosses())}return s})}getConfig(){const s={name:this.name},o=this.buildNodeConversionMap(this.layers),a=[];for(const g of this.layers){const $=g.getClassName(),j=g.getConfig(),_e=[];for(let _=0;_<g.inboundNodes.length;_++){const b=g.inboundNodes[_],tt=Container.nodeKey(g,_);let nt={};if(this.containerNodes.has(tt)){if(b.callArgs)try{JSON.stringify(b.callArgs),nt=b.callArgs}catch{console.warn(`Layer ${g.name} was passed non-serializable keyword arguments: ${b.callArgs}. They will not be included in the serialized model (and thus will be missing at deserialization time).`),nt={}}if(b.inboundLayers.length>0){const rt=[];for(let st=0;st<b.inboundLayers.length;st++){const ot=b.inboundLayers[st],it=b.nodeIndices[st],at=b.tensorIndices[st],lt=Container.nodeKey(ot,it);let ut=o[lt];ut==null&&(ut=0),rt.push([ot.name,ut,at,nt])}_e.push(rt)}}}const et={};et.name=g.name,et.className=$,et.config=j,et.inboundNodes=_e,a.push(et)}s.layers=a;const c=[];for(let g=0;g<this.inputLayers.length;g++){const $=this.inputLayers[g],j=this.inputLayersNodeIndices[g],_e=Container.nodeKey($,j);if(!this.containerNodes.has(_e))continue;let et=o[_e];et==null&&(et=0);const _=this.inputLayersTensorIndices[g];c.push([$.name,et,_])}s.inputLayers=c;const d=[];for(let g=0;g<this.outputLayers.length;g++){const $=this.outputLayers[g],j=this.outputLayersNodeIndices[g],_e=Container.nodeKey($,j);if(!this.containerNodes.has(_e))continue;let et=o[_e];et==null&&(et=0);const _=this.outputLayersTensorIndices[g];d.push([$.name,et,_])}return s.outputLayers=d,s}static fromConfig(s,o,a={},c=!1){const d={},g={};function $(st,ot){st.name in g?g[st.name].push(ot):g[st.name]=[ot]}function j(st,ot){const it=[];let at;for(const lt of ot){const ut=lt[0],ct=lt[1],dt=lt[2];if(at=lt[3]==null?{}:lt[3],!(ut in d)){$(st,ot);return}const pt=d[ut];if(pt.inboundNodes.length<=ct){$(st,ot);return}const ht=pt.inboundNodes[ct];it.push(ht.outputTensors[dt])}it.length>0&&st.apply(singletonOrArray(it),at)}function _e(st){const ot=st.name,it=deserialize(st,o.customObjects!=null?o.customObjects:{});it.setFastWeightInitDuringBuild(c),d[ot]=it,st.inboundNodes.forEach(lt=>{if(!(lt instanceof Array))throw new ValueError(`Corrupted configuration, expected array for nodeData: ${lt}`);$(it,lt)})}const et=o.name,_=o.layers;for(const st of _)_e(st);for(;!isObjectEmpty(g);)for(const st of _){const ot=d[st.name];if(ot.name in g){const it=g[ot.name];delete g[ot.name];for(const at of it)j(ot,at)}}const b=[],tt=[],nt=o.inputLayers;for(const st of nt){const ot=st[0],it=st[1],at=st[2];assert(ot in d);const ut=d[ot].inboundNodes[it].outputTensors;b.push(ut[at])}const rt=o.outputLayers;for(const st of rt){const ot=st[0],it=st[1],at=st[2];assert(ot in d);const ut=d[ot].inboundNodes[it].outputTensors;tt.push(ut[at])}return new s({inputs:b,outputs:tt,name:et})}get stateful(){if(this._stateful)throw new ValueError("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(const s of this.layers)if(s.stateful)return!0;return!1}resetStates(){tidy(()=>{this.layers.forEach(s=>{s.stateful&&s.resetStates()})})}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function standardizeSampleOrClassWeights(i,s,o){const a=s.length;if(i==null||Array.isArray(i)&&i.length===0)return s.map(c=>null);if(a===1)return Array.isArray(i)&&i.length===1?i:typeof i=="object"&&s[0]in i?[i[s[0]]]:[i];if(Array.isArray(i)){if(i.length!==a)throw new Error(`Provided ${o} is an array of ${i.length} element(s), but the model has ${a} outputs. Make sure a set of weights is provided for each model output.`);return i}else if(typeof i=="object"&&Object.keys(i).length>0&&typeof i[Object.keys(i)[0]]=="object"){const c=[];return s.forEach(d=>{d in i?c.push(i[d]):c.push(null)}),c}else throw new Error(`The model has multiple (${a}) outputs, so ${o} must be either an array with ${a} elements or an object with ${s} keys. Provided ${o} not understood: ${JSON.stringify(i)}`)}function standardizeClassWeights(i,s){return standardizeSampleOrClassWeights(i,s,"classWeight")}async function standardizeWeights(i,s,o,a){if(o!=null){const c=tidy(()=>{if(i.shape.length===1)return clone(i);if(i.shape.length===2){if(i.shape[1]>1)return argMax$2(i,1);if(i.shape[1]===1)return reshape$2(i,[i.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${i.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}else throw new Error(`Unexpected rank of target (y) tensor (${i.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)}),d=Array.from(await c.data());dispose(c);const g=[];return d.forEach($=>{if(o[$]==null)throw new Error(`classWeight must contain all classes in the training data. The class ${$} exists in the data but not in classWeight`);g.push(o[$])}),tensor1d(g,"float32")}else return null}function computeWeightedLoss(i,s){return mul(i,s)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const DEFAULT_VALIDATION_BATCH_SIZE=32;function standardizeDataIteratorOutput(i,s){let o,a;const c=s;o=c.xs,a=c.ys,assert$1(o!=null&&a!=null,()=>`A Dataset iterator for fitDataset() is expected to generate objects of the form \`{xs: xVal, ys: yVal}\`, where the two values may be \`tf.Tensor\`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates ${s}`);const d=flattenTensorOrArrayOrMap("input",i.inputNames,o),g=flattenTensorOrArrayOrMap("output",i.outputNames,a),$=d[0].shape[0];assert$1(d.length===i.inputs.length,()=>`LayersModel has ${i.inputs.length} inputs, but the dataset provides ${d.length} inputs.  (Expected input keys: ${JSON.stringify(i.inputNames)})`),assert$1(g.length===i.outputs.length,()=>`LayersModel has ${i.outputs.length} outputs, but the dataset provides ${g.length} outputs.  (Expected output keys: ${JSON.stringify(i.outputNames)})`);for(let j=0;j<d.length;j++)assert$1(d[j].shape[0]===$,()=>`Batch size mismatch: input ${i.inputNames[j]} has ${d[j].shape[0]}; expected  ${$} based on input ${i.inputNames[0]}.`);for(let j=0;j<g.length;j++)assert$1(g[j].shape[0]===$,()=>`Batch size mismatch: output ${i.outputNames[j]} has ${g[j].shape[0]}; expected  ${$} based on input ${i.inputNames[0]}.`);return{xs:d,ys:g}}function flattenTensorOrArrayOrMap(i,s,o){if(o instanceof Tensor)return[o];if(Array.isArray(o))return assert$1(o.length===s.length,()=>`Received an array of ${o.length} Tensors, but expected ${s.length} to match the ${i} keys ${s}.`),o;{const a=[];for(const c of s){if(o[c]==null)throw new ValueError(`The feature data generated by the dataset lacks the required ${i} key '${c}'.`);a.push(o[c])}return a}}function standardizeTensorValidationData(i){if(i.length===3)throw new NotImplementedError("Validation with sample weights is not implemented yet.");return{xs:i[0],ys:i[1]}}async function fitDataset(i,s,o){const a=o.batchesPerEpoch!=null;if(assert$1(i.optimizer!=null,()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig)."),assert$1(o!=null,()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call."),assert$1(o.epochs!=null&&o.epochs>0&&Number.isInteger(o.epochs),()=>`For fitDataset(), config.epochs is expected to be a positive integer, but got ${o.epochs}`),assert$1(!a||o.batchesPerEpoch>0&&Number.isInteger(o.batchesPerEpoch),()=>`For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got ${o.batchesPerEpoch}`),assert$1(o.validationSplit==null,()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead."),i.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");i.isTraining=!0;try{const c=o.validationData!=null;let d,g;if(c)if(isDatasetObject(o.validationData))assert$1(o.validationBatches==null||o.validationBatches>0&&Number.isInteger(o.validationBatches),()=>`For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got ${o.validationBatches}`);else{const st=standardizeTensorValidationData(o.validationData);d=st.xs,g=st.ys}const $=i.makeTrainFunction(),j=i.getDedupedMetricsNames();let _e;c?_e=j.slice().concat(j.map(st=>"val_"+st)):_e=j.slice();const et=standardizeCallbacks(o.callbacks,o.yieldEvery),_=o.verbose==null?1:o.verbose,{callbackList:b,history:tt}=configureCallbacks(et,_,o.epochs,null,null,getStepsPerEpoch(s,o),null,c,_e);b.setModel(i),i.history=tt,await b.onTrainBegin(),i.stopTraining_=!1;let nt=o.initialEpoch==null?0:o.initialEpoch,rt=await s.iterator();for(;nt<o.epochs;){const st={};await b.onEpochBegin(nt);let ot=0,it=0;for(a||(rt=await s.iterator());!a||ot<o.batchesPerEpoch;){const at=await rt.next();if(a&&at.done){console.warn(`You provided \`batchesPerEpoch\` as ${o.batchesPerEpoch}, but your dataset iterator ran out of data after ${ot} batches; interrupting training. Make sure that your dataset can generate at least \`batchesPerEpoch * epochs\` batches (in this case, ${o.batchesPerEpoch*o.epochs} batches). You may need to use the repeat() function when building your dataset.`);break}if(at.value!=null){const{xs:lt,ys:ut}=standardizeDataIteratorOutput(i,at.value),ct={};ct.batch=it,ct.size=lt[0].shape[0],await b.onBatchBegin(it,ct);const dt=[];if(o.classWeight!=null){const ft=standardizeClassWeights(o.classWeight,i.outputNames);for(let yt=0;yt<ft.length;++yt)dt.push(await standardizeWeights(ut[yt],null,ft[yt]))}const pt=lt.concat(ut).concat(dt),ht=$(pt);dispose(pt);for(let ft=0;ft<j.length;++ft){const yt=j[ft],wt=ht[ft];ct[yt]=wt,keep(wt)}await b.onBatchEnd(it,ct),disposeTensorsInLogs(ct),it++,ot++}if(a?ot>=o.batchesPerEpoch:at.done){if(c){let lt;isDatasetObject(o.validationData)?lt=toList(await i.evaluateDataset(o.validationData,{batches:o.validationBatches})):lt=toList(i.evaluate(d,g,{batchSize:o.validationBatchSize==null?DEFAULT_VALIDATION_BATCH_SIZE:o.validationBatchSize,verbose:0}));for(let ut=0;ut<i.metricsNames.length;++ut)st[`val_${i.metricsNames[ut]}`]=lt[ut]}break}if(i.stopTraining_)break}if(await b.onEpochEnd(nt,st),nt++,i.stopTraining_)break}return await b.onTrainEnd(),await i.history.syncData(),i.history}finally{i.isTraining=!1}}function getStepsPerEpoch(i,s){let o=null;return s.batchesPerEpoch!=null?o=s.batchesPerEpoch:Number.isFinite(i.size)&&(o=i.size),o}function isDatasetObject(i){return typeof i.iterator=="function"}function isLazyIteratorObject(i){return typeof i.next=="function"}async function evaluateDataset(i,s,o){o=o||{};const a=o.batches!=null,c=i.testFunction;let d=[];if(o.verbose>0)throw new NotImplementedError("Verbose mode is not implemented yet.");assert$1(!a||o.batches>0&&Number.isInteger(o.batches),()=>`Test loop expects \`batches\` to be a positive integer, but received ${JSON.stringify(o.batches)}`);const g=isLazyIteratorObject(s)?s:await s.iterator();let $=0,j=0;for(;!a||j<o.batches;){const _e=await g.next();if(d=tidy(()=>{if(_e.value){const{xs:et,ys:_}=standardizeDataIteratorOutput(i,_e.value),b=et.concat(_),tt=tidy(()=>c(b));if(dispose(b),j===0)for(let rt=0;rt<tt.length;++rt)d.push(scalar(0));const nt=b[0].shape[0];for(let rt=0;rt<tt.length;++rt){const st=tt[rt],ot=d[rt];d[rt]=tidy(()=>add$1(d[rt],mul(nt,st))),j>0&&dispose(ot)}dispose(tt),$+=nt,++j}return d}),_e.done){a&&console.warn(`Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least \`batches\` batches (in this case, ${o.batches} batches). You may need to use the repeat() function when building your dataset.`);break}}for(let _e=0;_e<d.length;++_e){const et=d[_e];d[_e]=div$1(d[_e],$),dispose(et)}return singletonOrArray(d)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function checkBatchSize(i){assert$1(i>0&&Number.isInteger(i),()=>`batchSize is required to be a positive integer, but got ${i}`)}function sliceArrays(i,s,o){return i==null?[null]:Array.isArray(i)?i.map(a=>sliceAlongFirstAxis(a,s,o-s)):sliceAlongFirstAxis(i,s,o-s)}function sliceArraysByIndices(i,s){return tidy(()=>i==null?null:Array.isArray(i)?i.map(o=>sliceArraysByIndices(o,s)):gather(i,s.dtype==="int32"?s:cast$3(s,"int32")))}function makeBatches(i,s){const o=[];let a=0,c=null;for(;a<i;)c=a+s,c>=i&&(c=i),o.push([a,c]),a=c;return o}function ensureTensorsRank2OrHigher(i){const s=[];i instanceof Tensor&&(i=[i]);for(let o=0;o<i.length;++o){const a=i[o];if(a.rank===1)s.push(expandDims$2(a,1));else{if(a.rank===0)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");s.push(a)}}return s}function disposeNewTensors(i,s){if(i==null)return;const o=[];if(s instanceof Tensor)o.push(s.id);else if(Array.isArray(s))s.forEach(c=>o.push(c.id));else if(s!=null)for(const c in s){const d=s[c];o.push(d.id)}const a=[];if(i instanceof Tensor)o.indexOf(i.id)===-1&&a.push(i);else if(Array.isArray(i))i.forEach(c=>{o.indexOf(c.id)===-1&&a.push(c)});else if(i!=null)for(const c in i){const d=i[c];o.indexOf(d.id)===-1&&a.push(d)}a.forEach(c=>{c.isDisposed||c.dispose()})}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function isDataTensor(i){return i instanceof Tensor}function isDataArray(i){return Array.isArray(i)}function isDataDict(i){return!isDataTensor(i)&&!isDataArray(i)}function standardizeInputData(i,s,o,a=!0,c=""){if(s==null||s.length===0){if(i!=null){let g=!1;if(isDataArray(i)&&i.length>0)g=!0;else if(isDataDict(i)){for(const $ in i)if(i.hasOwnProperty($)){g=!0;break}}else g=!0;if(g)throw new ValueError(`Error when checking model ${c} expected no data, but got ${i}`)}return[]}if(i==null)return s.map(g=>null);let d;if(isDataDict(i)){i=i,d=[];for(const g of s){if(i[g]==null)throw new ValueError(`No data provided for "${g}". Need data for each key in: ${s}`);d.push(i[g])}}else if(isDataArray(i)){if(i=i,i.length!==s.length)throw new ValueError(`Error when checking model ${c}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${s.length} Tensor(s), but instead got the following list of Tensor(s): ${i}`);d=i}else{if(i=i,s.length>1)throw new ValueError(`The model ${c} expects ${s.length} Tensor(s), but only received one Tensor. Found: Tensor with shape ${i.shape}`);d=[i]}if(d=ensureTensorsRank2OrHigher(d),o!=null)for(let g=0;g<s.length;++g){if(o[g]==null)continue;const $=d[g];if($.shape.length!==o[g].length)throw new ValueError(`Error when checking ${c}: expected ${s[g]} to have ${o[g].length} dimension(s). but got array with shape ${$.shape}`);for(let j=0;j<o[g].length;++j){if(j===0&&!a)continue;const _e=$.shape[j],et=o[g][j];if(et!=null&&et>=0&&_e!==et)throw new ValueError(`${c} expected a batch of elements where each example has shape [${o[g].slice(1,o[g].length)}] (i.e.,tensor shape [*,${o[g].slice(1,o[g].length)}]) but the ${c} received an input with ${$.shape[0]} examples, each with shape [${$.shape.slice(1,$.shape.length)}] (tensor shape [${$.shape}])`)}}return d}function checkArrayLengths(i,s,o){const a=unique$2(i.map(d=>d.shape[0]));a.sort();const c=unique$2(s.map(d=>d.shape[0]));if(c.sort(),a.length>1)throw new ValueError(`All input Tensors (x) should have the same number of samples. Got array shapes: ${JSON.stringify(i.map(d=>d.shape))}`);if(c.length>1)throw new ValueError(`All target Tensors (y) should have the same number of samples. Got array shapes: ${JSON.stringify(s.map(d=>d.shape))}`);if(a.length>0&&c.length>0&&!arraysEqual(a,c))throw new ValueError(`Input Tensors should have the same number of samples as target Tensors. Found ${a[0]} input sample(s) and ${c[0]} target sample(s).`)}function checkLossAndTargetCompatibility(i,s,o){const a=[meanSquaredError,binaryCrossentropy$1,categoricalCrossentropy$1];for(let c=0;c<i.length;++c){const d=i[c],g=s[c],$=o[c];if(g!=null){if(g===categoricalCrossentropy$1&&d.shape[d.shape.length-1]===1)throw new ValueError(`You are passing a target array of shape ${d.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(a.indexOf(g)!==-1){const j=d.shape.slice(1),_e=$.slice(1);for(let et=0;et<j.length;++et){const _=j[et],b=_e[et];if(b!=null&&_!==b)throw new ValueError(`A target Tensor with shape ${d.shape} was passed for an output of shape ${$}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}function checkInputData(i,s,o,a=!0,c=""){let d;if(Array.isArray(i)){if(i.length!==s.length)throw new ValueError(`Error when checking model ${c}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${s.length} Tensor(s), but instead got ${i.length} Tensors(s).`);d=i}else{if(s.length>1)throw new ValueError(`The model expects ${s.length} ${c} Tensors, but only received one Tensor. Found: array with shape ${JSON.stringify(i.shape)}.`);d=[i]}if(o!=null)for(let g=0;g<s.length;++g){if(o[g]==null)continue;const $=d[g];if($.shape.length!==o[g].length)throw new ValueError(`Error when checking ${c}: expected ${s[g]} to have ${o[g].length} dimension(s), but got array with shape ${JSON.stringify($.shape)}`);for(let j=0;j<o[g].length;++j){if(j===0&&!a)continue;const _e=$.shape[j],et=o[g][j];if(et!=null&&et!==_e)throw new ValueError(`Error when checking ${c}: expected ${s[g]} to have shape ${JSON.stringify(o[g])} but got array with shape ${JSON.stringify($.shape)}.`)}}}function collectMetrics(i,s){if(i==null||Array.isArray(i)&&i.length===0)return s.map(a=>[]);let o;if(typeof i=="string"||typeof i=="function")o=[i];else if(Array.isArray(i)||typeof i=="object")o=i;else throw new TypeError(`Type of metrics argument not understood. Expected an string,function, Array, or Object, found: ${i}`);if(Array.isArray(o))return s.map(a=>o);{const a=[];for(const c of s){let d=o.hasOwnProperty(c)?o[c]:[];Array.isArray(d)||(d=[d]),a.push(d)}return a}}const LAYERS_MODEL_FORMAT_NAME="layers-model";class LayersModel extends Container{constructor(s){super(s),this.isTraining=!1}summary(s,o,a=console.log){if(!this.built)throw new ValueError("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");printSummary(this,s,o,a)}compile(s){if(s.loss==null&&(s.loss=[]),this.loss=s.loss,typeof s.optimizer=="string")this.optimizer_=getOptimizer(s.optimizer),this.isOptimizerOwned=!0;else{if(!(s.optimizer instanceof Optimizer))throw new ValueError("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=s.optimizer,this.isOptimizerOwned=!1}let o=[];if(!Array.isArray(s.loss)&&typeof s.loss!="string"&&typeof s.loss!="function"){s.loss=s.loss;for(const g in s.loss)if(this.outputNames.indexOf(g)===-1)throw new ValueError(`Unknown entry in loss dictionary: "${g}". Only expected the following keys: ${this.outputNames}`);for(const g of this.outputNames)s.loss[g]==null&&console.warn(`Output "${g}" is missing from loss dictionary. We assume this was done on purpose, and we will not be expecting data to be passed to ${g} during training`),o.push(get$1(s.loss[g]))}else if(Array.isArray(s.loss)){if(s.loss.length!==this.outputs.length)throw new ValueError(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${s.loss}.`);o=s.loss.map($=>get$1($))}else{const g=get$1(s.loss);this.outputs.forEach($=>{o.push(g)})}this.lossFunctions=o,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let g=0;g<this.outputs.length;++g){const $=this.internalOutputShapes[g],j=this.outputNames[g];this.feedOutputNames.push(j),this.feedOutputShapes.push($),this.feedLossFns.push(this.lossFunctions[g])}const a=[];this.metrics=s.metrics,this.metricsNames=["loss"],this.metricsTensors=[],nameScope("loss",()=>{for(let g=0;g<this.outputs.length;++g){if(a.indexOf(g)!==-1)continue;const $=this.lossFunctions[g];this.outputs.length>1&&(this.metricsTensors.push([$,g]),this.metricsNames.push(this.outputNames[g]+"_loss"))}});const c=collectMetrics(s.metrics,this.outputNames),d=(g,$,j)=>{this.outputNames.length>1&&($=this.outputNames[g]+"_"+$),this.metricsNames.push($),this.metricsTensors.push([j,g])};nameScope("metric",()=>{for(let g=0;g<this.outputs.length;++g){if(a.indexOf(g)!==-1)continue;const $=c[g];(_e=>{const et="";let _,b,tt;for(const nt of _e){if(typeof nt=="string"&&["accuracy","acc","crossentropy","ce"].indexOf(nt)!==-1){const st=this.internalOutputShapes[g];st[st.length-1]===1||this.lossFunctions[g]===binaryCrossentropy$1?["accuracy","acc"].indexOf(nt)!==-1?b=binaryAccuracy:["crossentropy","ce"].indexOf(nt)!==-1&&(b=binaryCrossentropy):this.lossFunctions[g]===sparseCategoricalCrossentropy$1?["accuracy","acc"].indexOf(nt)!==-1?b=sparseCategoricalAccuracy:["crossentropy","ce"].indexOf(nt)!==-1&&(b=sparseCategoricalCrossentropy):["accuracy","acc"].indexOf(nt)!==-1?b=categoricalAccuracy:["crossentropy","ce"].indexOf(nt)!==-1&&(b=categoricalCrossentropy);let ot;["accuracy","acc"].indexOf(nt)!==-1?ot="acc":["crossentropy","ce"].indexOf(nt)!==-1&&(ot="ce"),tt=b,_=et+ot}else tt=get(nt),_=et+getLossOrMetricName(nt);let rt;nameScope(_,()=>{rt=tt}),d(g,_,rt)}})($)}}),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){this.collectedTrainableWeights!=null&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(s,o,a={}){const c=a.batchSize==null?32:a.batchSize;checkBatchSize(c);const g=this.standardizeUserDataXY(s,o,!0,c);try{const $=g[0].concat(g[1]);this.makeTestFunction();const j=this.testFunction,_e=this.testLoop(j,$,c,a.verbose,a.steps);return singletonOrArray(_e)}finally{disposeNewTensors(g[0],s),disposeNewTensors(g[1],o)}}async evaluateDataset(s,o){return this.makeTestFunction(),evaluateDataset(this,s,o)}checkNumSamples(s,o,a,c="steps"){let d;if(a!=null){if(d=null,o!=null)throw new ValueError(`If ${c} is set, batchSize must be null or undefined.Got batchSize = ${o}`)}else if(s!=null)Array.isArray(s)?d=s[0].shape[0]:d=s.shape[0];else throw new ValueError(`Either the input data should have a defined shape, or ${c} shoud be specified.`);return d}execute(s,o){if(Array.isArray(o)&&o.length===0)throw new ValueError("`outputs` is an empty Array, which is not allowed.");const a=Array.isArray(o),c=a?o:[o],d=this.retrieveSymbolicTensors(c),g=new FeedDict;if(s instanceof Tensor&&(s=[s]),Array.isArray(s)){if(s.length!==this.inputs.length)throw new ValueError(`The number of inputs provided (${s.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let j=0;j<this.inputs.length;++j)g.add(this.inputs[j],s[j])}else for(const j of this.inputs){const _e=s[j.name];if(_e==null)throw new ValueError(`No value is provided for the model's input ${j.name}`);g.add(j,_e)}const $=execute(d,g);return a?$:$[0]}retrieveSymbolicTensors(s){const o=pyListRepeat(null,s.length);let a=s.length;for(const c of this.layers){const d=Array.isArray(c.output)?c.output:[c.output],g=d.map($=>$.name);for(let $=0;$<s.length;++$){const j=g.indexOf(s[$]);if(j!==-1&&(o[$]=d[j],a--),a===0)break}if(a===0)break}if(a>0){const c=[];throw o.forEach((d,g)=>{d==null&&c.push(s[g])}),new ValueError(`Cannot find SymbolicTensors for output name(s): ${JSON.stringify(c)}`)}return o}predictLoop(s,o=32,a=!1){return tidy(()=>{const c=this.checkNumSamples(s);if(a)throw new NotImplementedError("Verbose predictLoop() is not implemented yet.");const d=makeBatches(c,o),g=this.outputs.map($=>[]);for(let $=0;$<d.length;++$)tidy(()=>{const _e=d[$][0],et=d[$][1],_=sliceArrays(s,_e,et),b=[];if(Array.isArray(_))for(let nt=0;nt<_.length;++nt)b.push({key:this.inputs[nt],value:_[nt]});else b.push({key:this.inputs[0],value:_});const tt=new FeedDict(b);return execute(this.outputs,tt)}).forEach((_e,et)=>g[et].push(_e));return singletonOrArray(g.map($=>concat$2($,0)))})}predict(s,o={}){const a=ensureTensorsRank2OrHigher(s);checkInputData(a,this.inputNames,this.feedInputShapes,!1);try{const c=o.batchSize==null?32:o.batchSize;return checkBatchSize(c),this.predictLoop(a,c)}finally{disposeNewTensors(a,s)}}predictOnBatch(s){checkInputData(s,this.inputNames,this.feedInputShapes,!0);const o=(Array.isArray(s)?s[0]:s).shape[0];return this.predictLoop(s,o)}standardizeUserDataXY(s,o,a=!0,c){if(this.optimizer_==null)throw new RuntimeError("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");const d=[];for(let g=0;g<this.feedOutputShapes.length;++g){const $=this.feedOutputShapes[g];this.feedLossFns[g]===sparseCategoricalCrossentropy$1?d.push($.slice(0,$.length-1).concat([1])):d.push($)}if(s=standardizeInputData(s,this.feedInputNames,this.feedInputShapes,!1,"input"),o=standardizeInputData(o,this.feedOutputNames,d,!1,"target"),checkArrayLengths(s,o),checkLossAndTargetCompatibility(o,this.feedLossFns,this.feedOutputShapes),this.stateful&&c!=null&&c>0&&s[0].shape[0]%c!==0)throw new ValueError(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${c}. Found: ${s[0].shape[0]} sample(s).`);return[s,o]}async standardizeUserData(s,o,a,c,d=!0,g){const[$,j]=this.standardizeUserDataXY(s,o,d,g);if(a!=null)throw new Error("sample weight is not supported yet.");let _e=null;if(c!=null){const et=standardizeClassWeights(c,this.outputNames);_e=[];for(let _=0;_<et.length;++_)_e.push(await standardizeWeights(j[_],null,et[_]))}return[$,j,_e]}testLoop(s,o,a,c=0,d){return tidy(()=>{const g=this.checkNumSamples(o,a,d,"steps"),$=[];if(c>0)throw new NotImplementedError("Verbose mode is not implemented yet.");if(d!=null)throw new NotImplementedError("steps mode in testLoop() is not implemented yet");{const j=makeBatches(g,a),_e=tensor1d(range$2(0,g));for(let et=0;et<j.length;++et){const _=j[et][0],b=j[et][1],tt=sliceAlongFirstAxis(_e,_,b-_),nt=sliceArraysByIndices(o,tt),rt=s(nt);if(et===0)for(let st=0;st<rt.length;++st)$.push(scalar(0));for(let st=0;st<rt.length;++st){const ot=rt[st];$[st]=add$1($[st],mul(b-_,ot))}}for(let et=0;et<$.length;++et)$[et]=div$1($[et],g)}return $})}getDedupedMetricsNames(){const s=this.metricsNames,o=[];for(let a=0;a<s.length;++a){const c=s[a];let d=c;if(count(s,c)>1){const g=count(s.slice(0,a),c);d+=`_${g}`}o.push(d)}return o}makeTrainFunction(){return s=>{const o=[],a=s.slice(0,this.inputs.length),c=s.slice(this.inputs.length,this.inputs.length+this.outputs.length),d=s.slice(this.inputs.length+this.outputs.length,this.inputs.length+this.outputs.length*2),g=[],$=()=>{const _=[];for(let rt=0;rt<this.inputs.length;++rt)_.push({key:this.inputs[rt],value:a[rt]});const b=new FeedDict(_),tt=execute(this.outputs,b,{training:!0});let nt;for(let rt=0;rt<this.lossFunctions.length;++rt){const st=this.lossFunctions[rt];let ot=st(c[rt],tt[rt]);d[rt]!=null&&(ot=computeWeightedLoss(ot,d[rt]));const it=mean$1(ot);o.push(it),rt===0?nt=ot:nt=add$1(nt,ot)}for(let rt=0;rt<this.metricsTensors.length;++rt){let st;if(this.outputs.length>1&&rt<this.outputs.length)st=o[rt];else{const ot=this.metricsTensors[rt][0],it=this.metricsTensors[rt][1];st=mean$1(ot(c[it],tt[it]))}keep(st),g.push(st)}return nt=mean$1(nt),this.calculateLosses().forEach(rt=>{nt=add$1(nt,rt)}),nt},j=this.collectedTrainableWeights.map(_=>_.read());return[this.optimizer_.minimize($,!0,j)].concat(g)}}makeTestFunction(){this.testFunction=s=>tidy(()=>{const o=[];let a;const c=s.slice(0,this.inputs.length),d=s.slice(this.inputs.length,this.inputs.length+this.outputs.length),g=[];for(let _e=0;_e<this.inputs.length;++_e)g.push({key:this.inputs[_e],value:c[_e]});const $=new FeedDict(g),j=execute(this.outputs,$);for(let _e=0;_e<this.lossFunctions.length;++_e){const et=this.lossFunctions[_e],_=mean$1(et(d[_e],j[_e]));_e===0?a=_:a=add$1(a,_),o.push(a)}for(let _e=0;_e<this.metricsTensors.length;++_e){const et=this.metricsTensors[_e][0],_=this.metricsTensors[_e][1],b=mean$1(et(d[_],j[_]));o.push(b)}return o})}async fit(s,o,a={}){if(this.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");this.isTraining=!0;let c,d,g,$,j,_e,et,_,b;try{const tt=a.batchSize==null?32:a.batchSize;checkBatchSize(tt);const rt=await this.standardizeUserData(s,o,a.sampleWeight,a.classWeight,!1,tt);c=rt[0],d=rt[1],b=rt[2];let st=!1,ot;if(a.validationData!=null&&a.validationData.length>0){if(st=!0,a.validationData.length===2)j=a.validationData[0],_e=a.validationData[1];else throw a.validationData.length===3?new NotImplementedError("validationData including sample weights is not supported yet."):new ValueError(`When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; ${a.validationData} is invalid.`);const ft=await this.standardizeUserData(j,_e,null,null,!0,tt);et=ft[0],_=ft[1],ot=et.concat(_)}else if(a.validationSplit!=null&&a.validationSplit>0&&a.validationSplit<1){st=!0;const ht=Math.floor(c[0].shape[0]*(1-a.validationSplit)),ft=c[0].shape[0];et=sliceArrays(c,ht,ft),g=c,c=sliceArrays(c,0,ht),_=sliceArrays(d,ht,ft),$=d,d=sliceArrays(d,0,ht),ot=et.concat(_)}else a.validationSteps!=null&&(st=!0);const it=c.concat(d).concat(b);this.checkTrainableWeightsConsistency();const at=this.makeTrainFunction(),lt=this.getDedupedMetricsNames();let ut,ct;st?(this.makeTestFunction(),ut=this.testFunction,ct=lt.slice().concat(lt.map(ht=>"val_"+ht))):(ut=null,ot=[],ct=lt.slice());const dt=standardizeCallbacks(a.callbacks,a.yieldEvery);return await this.fitLoop(at,it,lt,tt,a.epochs,a.verbose,dt,ut,ot,a.shuffle,ct,a.initialEpoch,null,null)}finally{this.isTraining=!1,disposeNewTensors(c,s),disposeNewTensors(d,o),disposeNewTensors(g,s),disposeNewTensors($,o),disposeNewTensors(et,j),disposeNewTensors(_,_e),b!=null&&dispose(b)}}async fitLoop(s,o,a,c,d,g,$,j,_e,et,_,b,tt,nt){c==null&&(c=32),d==null&&(d=1),et==null&&(et=!0),b==null&&(b=0);let rt=!1;if(j!=null&&_e!=null&&(rt=!0),nt!=null&&(rt=!0,tt==null))throw new ValueError("Can only use `validationSteps` when doing step-wise training, i.e., `stepsPerEpoch` must be set.");const st=this.checkNumSamples(o,c,tt,"steps_per_epoch");let ot;st!=null&&(ot=range$2(0,st)),g==null&&(g=1);const{callbackList:it,history:at}=configureCallbacks($,g,d,b,st,tt,c,rt,_);it.setModel(this),this.history=at,await it.onTrainBegin(),this.stopTraining_=!1;for(let lt=b;lt<d;++lt){await it.onEpochBegin(lt);const ut={};if(tt!=null)throw new NotImplementedError("stepsPerEpoch mode is not implemented yet.");{if(et==="batch")throw new NotImplementedError("batch shuffling is not implemneted yet");et&&shuffle(ot);const ct=tensor1d(ot),dt=makeBatches(st,c);for(let pt=0;pt<dt.length;++pt){const ht={};if(await it.onBatchBegin(pt,ht),tidy(()=>{const ft=dt[pt][0],yt=dt[pt][1],wt=sliceAlongFirstAxis(ct,ft,yt-ft);ht.batch=pt,ht.size=yt-ft;const _t=sliceArraysByIndices(o,wt),bt=s(_t);for(let xt=0;xt<a.length;++xt){const mt=a[xt],vt=bt[xt];ht[mt]=vt,keep(vt)}if(pt===dt.length-1&&rt){const xt=this.testLoop(j,_e,c);for(let mt=0;mt<a.length;++mt){const vt=a[mt],Et=xt[mt];keep(Et),ut["val_"+vt]=Et}}}),await it.onBatchEnd(pt,ht),disposeTensorsInLogs(ht),this.stopTraining_)break}ct.dispose()}if(await it.onEpochEnd(lt,ut),this.stopTraining_)break}return await it.onTrainEnd(),await this.history.syncData(),this.history}async fitDataset(s,o){return fitDataset(this,s,o)}async trainOnBatch(s,o){const a=await this.standardizeUserData(s,o),c=a[0],d=a[1],$=this.makeTrainFunction()(c.concat(d)),j=[];for(const _e of $){const et=await _e.data();j.push(et[0])}return dispose($),disposeNewTensors(a[0],s),disposeNewTensors(a[1],o),singletonOrArray(j)}getNamedWeights(s){const o=[],a=s!=null&&s.trainableOnly,c=a?this.trainableWeights:this.weights,d=this.getWeights(a);for(let g=0;g<c.length;++g)a&&!c[g].trainable||o.push({name:c[g].originalName,tensor:d[g]});return o}set stopTraining(s){this.stopTraining_=s}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(s){this.optimizer_!==s&&(this.optimizer_=s,this.isOptimizerOwned=!1)}dispose(){const s=super.dispose();if(s.refCountAfterDispose===0&&this.optimizer!=null&&this.isOptimizerOwned){const o=memory().numTensors;this.optimizer_.dispose(),s.numDisposedVariables+=o-memory().numTensors}return s}getLossIdentifiers(){let s;if(typeof this.loss=="string")s=toSnakeCase(this.loss);else if(Array.isArray(this.loss)){for(const o of this.loss)if(typeof o!="string")throw new Error("Serialization of non-string loss is not supported.");s=this.loss.map(o=>toSnakeCase(o))}else{const o=Object.keys(this.loss);s={};const a=this.loss;for(const c of o)if(typeof a[c]=="string")s[c]=toSnakeCase(a[c]);else throw new Error("Serialization of non-string loss is not supported.")}return s}getMetricIdentifiers(){if(typeof this.metrics=="string"||typeof this.metrics=="function")return[toSnakeCase(getLossOrMetricName(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map(s=>toSnakeCase(getLossOrMetricName(s)));{const s={};for(const o in this.metrics)s[o]=toSnakeCase(getLossOrMetricName(this.metrics[o]));return s}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(s){if(s.weighted_metrics!=null)throw new Error("Loading weight_metrics is not supported yet.");if(s.loss_weights!=null)throw new Error("Loading loss_weights is not supported yet.");if(s.sample_weight_mode!=null)throw new Error("Loading sample_weight_mode is not supported yet.");const o=convertPythonicToTs(s.optimizer_config),a=deserialize(o);let c;if(typeof s.loss=="string")c=toCamelCase(s.loss);else if(Array.isArray(s.loss))c=s.loss.map(g=>toCamelCase(g));else if(s.loss!=null){c={};for(const g in s.loss)c[g]=toCamelCase(s.loss[g])}let d;if(Array.isArray(s.metrics))d=s.metrics.map(g=>toCamelCase(g));else if(s.metrics!=null){d={};for(const g in s.metrics)d[g]=toCamelCase(s.metrics[g])}this.compile({loss:c,metrics:d,optimizer:a})}async save(s,o){if(typeof s=="string"){const _e=getSaveHandlers(s);if(_e.length===0)throw new ValueError(`Cannot find any save handlers for URL '${s}'`);if(_e.length>1)throw new ValueError(`Found more than one (${_e.length}) save handlers for URL '${s}'`);s=_e[0]}if(s.save==null)throw new ValueError("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");const a=await encodeWeights(this.getNamedWeights(o)),$={modelTopology:this.toJSON(null,!1),format:LAYERS_MODEL_FORMAT_NAME,generatedBy:`TensorFlow.js tfjs-layers v${version}`,convertedBy:null};if((o==null?!1:o.includeOptimizer)&&this.optimizer!=null){$.trainingConfig=this.getTrainingConfig();const _e="optimizer",{data:et,specs:_}=await encodeWeights(await this.optimizer.getWeights(),_e);a.specs.push(..._),a.data=concatenateArrayBuffers([a.data,et])}return this.userDefinedMetadata!=null&&(checkUserDefinedMetadata(this.userDefinedMetadata,this.name,!0),$.userDefinedMetadata=this.userDefinedMetadata),$.weightData=a.data,$.weightSpecs=a.specs,s.save($)}setUserDefinedMetadata(s){checkUserDefinedMetadata(s,this.name),this.userDefinedMetadata=s}getUserDefinedMetadata(){return this.userDefinedMetadata}}LayersModel.className="Model";registerClass(LayersModel);class Functional extends LayersModel{}Functional.className="Functional";registerClass(Functional);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class Sequential extends LayersModel{constructor(s){if(super({inputs:[],outputs:[]}),s=s||{},this.trainable=!0,this.built=!1,this.name=s.name!=null?s.name:getUid("sequential_"),s.layers!=null)for(const o of s.layers)this.add(o)}checkShape(s){if(s.inboundNodes[0].outputTensors[0].shape.some(a=>a<0))throw new ValueError(`Negative dimension size caused by adding layer ${s.name} with input shape [${s.inboundNodes[0].inputTensors[0].shape}]`)}add(s){const o=s instanceof Sequential||s instanceof LayersModel;let a;if(o){if(a=s,a.outputs.length!==1)throw new ValueError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(a.inputs.length!==1)throw new ValueError("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(this.outputs.length===0){if(s.inboundNodes.length===0){if(s.batchInputShape==null)throw new ValueError("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");const c=Input({batchShape:s.batchInputShape,dtype:s.dtype,name:s.name+"_input"});s.apply(c)}if(o)this.outputs=a.outputs,this.inputs=a.inputs;else{if(s.inboundNodes.length!==1)throw new ValueError(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${s.name} which has ${s.inboundNodes.length} pre-existing inbound connections.`);if(s.inboundNodes[0].outputTensors.length!==1)throw new ValueError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(s),this.outputs=[s.inboundNodes[0].outputTensors[0]],this.inputs=getSourceInputs(this.outputs[0])}this.inboundNodes=[],new Node({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:pyListRepeat(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map(c=>c.shape),outputShapes:this.outputs[0].shape})}else{const c=s.apply(this.outputs[0]);if(Array.isArray(c))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(s),this.outputs=[c],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(s),this.built=!1}pop(){if(this.layers.length===0)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),this.layers.length===0)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{const s=this.layers.length-1;this.layers[s].outboundNodes=[],this.outputs=[this.layers[s].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(s,o){return this.model==null&&this.build(),this.model.call(s,o)}build(s){if(getExactlyOneShape(s),this.inputs.length===0||this.outputs.length===0)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new LayersModel({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(s,o,a=console.log){this.built||this.build(),super.summary(s,o,a)}setWeights(s){this.model==null&&this.build(),this.model.setWeights(s)}evaluate(s,o,a={}){if(!this.built)throw new RuntimeError("The model needs to be compiled before being used.");return this.model.evaluate(s,o,a)}async evaluateDataset(s,o){if(!this.built)throw new RuntimeError("The model needs to be compiled before being used.");return this.model.evaluateDataset(s,o)}predict(s,o={}){return this.model==null&&this.build(),this.model.predict(s,o)}predictOnBatch(s){return this.model==null&&this.build(),this.model.predictOnBatch(s)}compile(s){this.build(),this.model.compile(s),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return this.model==null?void 0:this.model.optimizer}set optimizer(s){this.model.optimizer=s}async fit(s,o,a={}){if(!this.built)throw new RuntimeError("The model needs to be compiled before being used.");return this.model.fit(s,o,a)}async fitDataset(s,o){if(!this.built)throw new RuntimeError("The model needs to be compiled before being used.");return this.model.fitDataset(s,o)}async trainOnBatch(s,o){return this.model.trainOnBatch(s,o)}static fromConfig(s,o,a={},c=!1){let d,g={};if(o instanceof Array){if(o[0].className==null||o[0].className==="Merge")throw new ValueError("Legacy serialization format not supported yet.");d=o}else assert$1(o.layers!=null,()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field."),d=o.layers,delete o.layers,g=o;const $=new s(g);if(!($ instanceof Sequential))throw new NotImplementedError(`Sequential.fromConfig called on non-Sequential input: ${$}`);for(const j of d){const et=deserialize(j,void 0,c);c&&et.setFastWeightInitDuringBuild(!0),$.add(et)}return $}set stopTraining(s){if(this.model==null)throw new ValueError("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=s}get stopTraining(){if(this.model==null)throw new ValueError("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){const s=[];for(const o of this.layers){const a={};a.className=o.getClassName(),a.config=o.getConfig(),s.push(a)}return{name:this.name,layers:s}}}Sequential.className="Sequential";registerClass(Sequential);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function sequential(i){return new Sequential(i)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */let Activation$1=class extends Serializable{getConfig(){return{}}};class Elu extends Activation$1{apply(s,o=1){return elu$2(s,o)}}Elu.className="elu";registerClass(Elu);class Selu extends Activation$1{apply(s){return selu$2(s)}}Selu.className="selu";registerClass(Selu);class Relu extends Activation$1{apply(s){return relu$2(s)}}Relu.className="relu";registerClass(Relu);class Relu6 extends Activation$1{apply(s){return tidy(()=>minimum$2(6,relu$2(s)))}}Relu6.className="relu6";registerClass(Relu6);class Linear extends Activation$1{apply(s){return s}}Linear.className="linear";registerClass(Linear);class Sigmoid extends Activation$1{apply(s){return sigmoid$2(s)}}Sigmoid.className="sigmoid";registerClass(Sigmoid);class HardSigmoid extends Activation$1{apply(s){return hardSigmoid(s)}}HardSigmoid.className="hardSigmoid";registerClass(HardSigmoid);class Softplus extends Activation$1{apply(s){return softplus$2(s)}}Softplus.className="softplus";registerClass(Softplus);class Softsign extends Activation$1{apply(s){return softsign(s)}}Softsign.className="softsign";registerClass(Softsign);class Tanh extends Activation$1{apply(s){return tanh$2(s)}}Tanh.className="tanh";registerClass(Tanh);let Softmax$1=class extends Activation$1{apply(s,o=-1){return softmax$2(s,o)}};Softmax$1.className="softmax";registerClass(Softmax$1);class LogSoftmax extends Activation$1{apply(s,o=-1){return logSoftmax(s,o)}}LogSoftmax.className="logSoftmax";registerClass(LogSoftmax);class Gelu extends Activation$1{apply(s){return tidy(()=>tidy(()=>{const o=Math.sqrt(2),a=mul(.5,add$1(1,erf$2(div$1(s,o))));return mul(s,a)}))}}Gelu.className="gelu";registerClass(Gelu);class GeluNew extends Activation$1{apply(s){return tidy(()=>mul(.5,mul(s,add$1(1,tanh$2(mul(sqrt$2(div$1(2,Math.PI)),add$1(s,mul(.044715,pow$2(s,3)))))))))}}GeluNew.className="gelu_new";registerClass(GeluNew);class Mish extends Activation$1{apply(s){return tidy(()=>mul(s,tanh$2(softplus$2(s))))}}Mish.className="mish";registerClass(Mish);class Swish extends Activation$1{apply(s,o=1){return tidy(()=>mul(sigmoid$2(mul(s,o)),s))}}Swish.className="swish";registerClass(Swish);function serializeActivation(i){return i.getClassName()}function deserializeActivation(i,s={}){return deserializeKerasObject(i,SerializationMap.getMap().classNameMap,s,"activation")}function getActivation(i){if(i==null){const s={};return s.className="linear",s.config={},deserializeActivation(s)}if(typeof i=="string"){const s={};return s.className=i,s.config={},deserializeActivation(s)}else return i instanceof Activation$1?i:deserializeActivation(i)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function assertObjectArgs(i){if(i!=null&&typeof i!="object")throw new Error(`Argument to L1L2 regularizer's constructor is expected to be an object, but received: ${i}`)}class Regularizer extends Serializable{}class L1L2 extends Regularizer{constructor(s){super(),assertObjectArgs(s),this.l1=s==null||s.l1==null?.01:s.l1,this.l2=s==null||s.l2==null?.01:s.l2,this.hasL1=this.l1!==0,this.hasL2=this.l2!==0}apply(s){return tidy(()=>{let o=zeros$1([1]);return this.hasL1&&(o=add$1(o,sum$2(mul(this.l1,abs$2(s))))),this.hasL2&&(o=add$1(o,sum$2(mul(this.l2,square$1(s))))),reshape$2(o,[])})}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(s,o){return new s({l1:o.l1,l2:o.l2})}}L1L2.className="L1L2";registerClass(L1L2);const REGULARIZER_IDENTIFIER_REGISTRY_SYMBOL_MAP={l1l2:"L1L2"};function serializeRegularizer(i){return serializeKerasObject(i)}function deserializeRegularizer(i,s={}){return deserializeKerasObject(i,SerializationMap.getMap().classNameMap,s,"regularizer")}function getRegularizer(i){if(i==null)return null;if(typeof i=="string"){const o={className:i in REGULARIZER_IDENTIFIER_REGISTRY_SYMBOL_MAP?REGULARIZER_IDENTIFIER_REGISTRY_SYMBOL_MAP[i]:i,config:{}};return deserializeRegularizer(o)}else return i instanceof Regularizer?i:deserializeRegularizer(i)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class ReLU extends Layer{constructor(s){super(s??{}),this.supportsMasking=!0,s!=null&&(this.maxValue=s.maxValue)}call(s,o){s=getExactlyOneTensor(s);let a=relu$2(s);return this.maxValue!=null&&(a=clipByValue$2(a,0,this.maxValue)),a}computeOutputShape(s){return s}getConfig(){const s={maxValue:this.maxValue},o=super.getConfig();return Object.assign(s,o),s}}ReLU.className="ReLU";registerClass(ReLU);class LeakyReLU extends Layer{constructor(s){super(s??{}),this.DEFAULT_ALPHA=.3,s==null&&(s={}),this.alpha=s.alpha==null?this.DEFAULT_ALPHA:s.alpha}call(s,o){const a=getExactlyOneTensor(s);return leakyRelu$2(a,this.alpha)}computeOutputShape(s){return s}getConfig(){const s={alpha:this.alpha},o=super.getConfig();return Object.assign(s,o),s}}LeakyReLU.className="LeakyReLU";registerClass(LeakyReLU);class PReLU extends Layer{constructor(s){if(super(s??{}),this.DEFAULT_ALPHA_INITIALIZER="zeros",s==null&&(s={}),this.supportsMasking=!0,this.alphaInitializer=getInitializer(s.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=getRegularizer(s.alphaRegularizer),this.alphaConstraint=getConstraint(s.alphaConstraint),s.sharedAxes==null)this.sharedAxes=null;else if(Array.isArray(s.sharedAxes))this.sharedAxes=s.sharedAxes;else if(typeof s.sharedAxes=="number")this.sharedAxes=[s.sharedAxes];else throw new ValueError(`Expected sharedAxes to be a number or an array of numbers, but got ${s.sharedAxes}`)}build(s){s=getExactlyOneShape(s);const o=s.slice(1);if(this.sharedAxes!=null)for(const c of this.sharedAxes)o[c-1]=1;this.alpha=this.addWeight("alpha",o,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);const a={};if(this.sharedAxes!=null)for(let c=1;c<s.length;++c)a[c]=s[c];this.inputSpec=[new InputSpec({ndim:s.length,axes:a})],this.built=!0}call(s,o){return s=getExactlyOneTensor(s),prelu$2(s,this.alpha.read())}getConfig(){const s={alphaInitializer:serializeInitializer(this.alphaInitializer),alphaRegularizer:serializeRegularizer(this.alphaRegularizer),alphaConstraint:serializeConstraint(this.alphaConstraint),sharedAxes:this.sharedAxes},o=super.getConfig();return Object.assign(s,o),s}}PReLU.className="PReLU";registerClass(PReLU);let ELU$3=class extends Layer{constructor(s){if(super(s??{}),this.DEFAULT_ALPHA=1,s==null&&(s={}),s.alpha!=null&&s.alpha!==this.DEFAULT_ALPHA)throw new NotImplementedError(`Non-default alpha value (${s.alpha}) is not supported by the ELU layer yet.`);this.alpha=s.alpha==null?this.DEFAULT_ALPHA:s.alpha}call(s,o){const a=getExactlyOneTensor(s);return elu$3(a)}computeOutputShape(s){return s}getConfig(){const s={alpha:this.alpha},o=super.getConfig();return Object.assign(s,o),s}};ELU$3.className="ELU";registerClass(ELU$3);class ThresholdedReLU extends Layer{constructor(s){super(s??{}),this.DEFAULT_THETA=1,s==null&&(s={}),this.theta=s.theta==null?this.DEFAULT_THETA:s.theta}call(s,o){const a=getExactlyOneTensor(s);return mul(a,cast$3(greater$2(a,this.theta),"float32"))}computeOutputShape(s){return s}getConfig(){const s={theta:this.theta},o=super.getConfig();return Object.assign(s,o),s}}ThresholdedReLU.className="ThresholdedReLU";registerClass(ThresholdedReLU);class Softmax extends Layer{constructor(s){super(s??{}),this.DEFAULT_AXIS=1,s==null&&(s={}),this.softmax=new Softmax$1().apply,this.axis=s.axis==null?this.DEFAULT_AXIS:s.axis}call(s,o){return tidy(()=>{let a=getExactlyOneTensor(s);const c=o.mask;if(c!=null){const d=mul(sub$2(ones(a.shape),cast$3(c,a.dtype)),scalar(-1e9));a=add$1(a,d)}return this.axis instanceof Array?this.axis.length>1?exp$2(sub$2(a,logSumExp(a,this.axis,!0))):this.softmax(a,this.axis[0]):this.softmax(a,this.axis)})}computeOutputShape(s){return s}getConfig(){const s={axis:this.axis},o=super.getConfig();return Object.assign(s,o),s}}Softmax.className="Softmax";registerClass(Softmax);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function normalizeArray(i,s,o){if(typeof i=="number")return pyListRepeat(i,s);if(i.length!==s)throw new ValueError(`The ${o} argument must be an integer or tuple of ${s} integers. Received: ${i.length} elements.`);for(let a=0;a<s;++a){const c=i[a];if(!isInteger(c))throw new ValueError(`The ${o} argument must be an integer or tuple of ${s} integers. Received: ${JSON.stringify(i)} including a non-integer number ${c}`)}return i}function convOutputLength(i,s,o,a,c=1){if(i==null)return i;const d=s+(s-1)*(c-1);let g;return o==="same"?g=i:g=i-d+1,Math.floor((g+a-1)/a)}function deconvLength(i,s,o,a){if(i==null)return null;if(a==="valid")i=i*s+max$2([o-s,0]);else if(a==="same")i=i*s;else throw new ValueError(`Unsupport padding mode: ${a}.`);return i}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function preprocessConv2DInput(i,s){return tidy(()=>(checkDataFormat(s),s==="channelsFirst"?transpose$2(i,[0,2,3,1]):i))}function preprocessConv3DInput(i,s){return tidy(()=>(checkDataFormat(s),s==="channelsFirst"?transpose$2(i,[0,2,3,4,1]):i))}function conv1dWithBias(i,s,o,a=1,c="valid",d,g=1){return tidy(()=>{if(d==null&&(d=imageDataFormat()),checkDataFormat(d),i.shape.length!==3)throw new ValueError(`The input of a conv1dWithBias operation should be 3, but is ${i.shape.length} instead.`);if(s.shape.length!==3)throw new ValueError(`The kernel for a conv1dWithBias operation should be 3, but is ${s.shape.length} instead`);if(o!=null&&o.shape.length!==1)throw new ValueError(`The bias for a conv1dWithBias operation should be 1, but is ${o.shape.length} instead`);if(d==="channelsFirst"&&(i=transpose$2(i,[0,2,1])),c==="causal")throw new NotImplementedError("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let $=conv1d(i,s,a,c==="same"?"same":"valid","NWC",g);return o!=null&&($=biasAdd($,o)),$})}function conv2dWithBiasActivation(i,s,o,a=[1,1],c="valid",d,g,$=null){return tidy(()=>{if(d==null&&(d=imageDataFormat()),checkDataFormat(d),i.rank!==3&&i.rank!==4)throw new ValueError(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${i.rank}.`);if(s.rank!==3&&s.rank!==4)throw new ValueError(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${i.rank}.`);let j=preprocessConv2DInput(i,d);if(c==="causal")throw new NotImplementedError("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return j=conv2d$1({x:j,filter:s,strides:a,pad:c==="same"?"same":"valid",dilations:g,dataFormat:"NHWC",bias:o,activation:$}),d==="channelsFirst"&&(j=transpose$2(j,[0,3,1,2])),j})}function conv3dWithBias(i,s,o,a=[1,1,1],c="valid",d,g){return tidy(()=>{if(d==null&&(d=imageDataFormat()),checkDataFormat(d),i.rank!==4&&i.rank!==5)throw new ValueError(`conv3dWithBias expects input to be of rank 4 or 5, but received ${i.rank}.`);if(s.rank!==4&&s.rank!==5)throw new ValueError(`conv3dWithBias expects kernel to be of rank 4 or 5, but received ${i.rank}.`);let $=preprocessConv3DInput(i,d);if(c==="causal")throw new NotImplementedError("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return $=conv3d($,s,a,c==="same"?"same":"valid","NDHWC",g),o!=null&&($=biasAdd($,o)),d==="channelsFirst"&&($=transpose$2($,[0,4,1,2,3])),$})}class BaseConv extends Layer{constructor(s,o){if(super(o),this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",BaseConv.verifyArgs(o),this.rank=s,assertPositiveInteger(this.rank,"rank"),this.rank!==1&&this.rank!==2&&this.rank!==3)throw new NotImplementedError(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=normalizeArray(o.kernelSize,s,"kernelSize"),this.strides=normalizeArray(o.strides==null?1:o.strides,s,"strides"),this.padding=o.padding==null?"valid":o.padding,checkPaddingMode(this.padding),this.dataFormat=o.dataFormat==null?"channelsLast":o.dataFormat,checkDataFormat(this.dataFormat),this.activation=getActivation(o.activation),this.useBias=o.useBias==null?!0:o.useBias,this.biasInitializer=getInitializer(o.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=getConstraint(o.biasConstraint),this.biasRegularizer=getRegularizer(o.biasRegularizer),this.activityRegularizer=getRegularizer(o.activityRegularizer),this.dilationRate=normalizeArray(o.dilationRate==null?1:o.dilationRate,s,"dilationRate"),this.rank===1&&Array.isArray(this.dilationRate)&&this.dilationRate.length!==1)throw new ValueError(`dilationRate must be a number or an array of a single number for 1D convolution, but received ${JSON.stringify(this.dilationRate)}`);if(this.rank===2){if(typeof this.dilationRate=="number")this.dilationRate=[this.dilationRate,this.dilationRate];else if(this.dilationRate.length!==2)throw new ValueError(`dilationRate must be a number or array of two numbers for 2D convolution, but received ${JSON.stringify(this.dilationRate)}`)}else if(this.rank===3){if(typeof this.dilationRate=="number")this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(this.dilationRate.length!==3)throw new ValueError(`dilationRate must be a number or array of three numbers for 3D convolution, but received ${JSON.stringify(this.dilationRate)}`)}}static verifyArgs(s){if(assert("kernelSize"in s,"required key 'kernelSize' not in config"),typeof s.kernelSize!="number"&&!checkArrayTypeAndLength(s.kernelSize,"number",1,3))throw new ValueError(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(s.kernelSize)}.`)}getConfig(){const s={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:serializeActivation(this.activation),useBias:this.useBias,biasInitializer:serializeInitializer(this.biasInitializer),biasRegularizer:serializeRegularizer(this.biasRegularizer),activityRegularizer:serializeRegularizer(this.activityRegularizer),biasConstraint:serializeConstraint(this.biasConstraint)},o=super.getConfig();return Object.assign(s,o),s}}class Conv extends BaseConv{constructor(s,o){super(s,o),this.kernel=null,Conv.verifyArgs(o),this.filters=o.filters,assertPositiveInteger(this.filters,"filters"),this.kernelInitializer=getInitializer(o.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=getConstraint(o.kernelConstraint),this.kernelRegularizer=getRegularizer(o.kernelRegularizer)}build(s){s=getExactlyOneShape(s);const o=this.dataFormat==="channelsFirst"?1:s.length-1;if(s[o]==null)throw new ValueError(`The channel dimension of the input should be defined. Found ${s[o]}`);const a=s[o],c=this.kernelSize.concat([a,this.filters]);this.kernel=this.addWeight("kernel",c,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[o]:a}}],this.built=!0}call(s,o){return tidy(()=>{s=getExactlyOneTensor(s);let a;const c=this.bias==null?null:this.bias.read(),d=mapActivationToFusedKernel(this.activation.getClassName());if(d!=null&&this.rank===2)a=conv2dWithBiasActivation(s,this.kernel.read(),c,this.strides,this.padding,this.dataFormat,this.dilationRate,d);else{if(this.rank===1)a=conv1dWithBias(s,this.kernel.read(),c,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(this.rank===2)a=conv2dWithBiasActivation(s,this.kernel.read(),c,this.strides,this.padding,this.dataFormat,this.dilationRate);else if(this.rank===3)a=conv3dWithBias(s,this.kernel.read(),c,this.strides,this.padding,this.dataFormat,this.dilationRate);else throw new NotImplementedError("convolutions greater than 3D are not implemented yet.");this.activation!=null&&(a=this.activation.apply(a))}return a})}computeOutputShape(s){s=getExactlyOneShape(s);const o=[],a=this.dataFormat==="channelsLast"?s.slice(1,s.length-1):s.slice(2);for(let d=0;d<a.length;++d){const g=convOutputLength(a[d],this.kernelSize[d],this.padding,this.strides[d],typeof this.dilationRate=="number"?this.dilationRate:this.dilationRate[d]);o.push(g)}let c=[s[0]];return this.dataFormat==="channelsLast"?(c=c.concat(o),c.push(this.filters)):(c.push(this.filters),c=c.concat(o)),c}getConfig(){const s={filters:this.filters,kernelInitializer:serializeInitializer(this.kernelInitializer),kernelRegularizer:serializeRegularizer(this.kernelRegularizer),kernelConstraint:serializeConstraint(this.kernelConstraint)},o=super.getConfig();return Object.assign(s,o),s}static verifyArgs(s){if(!("filters"in s)||typeof s.filters!="number"||s.filters<1)throw new ValueError(`Convolution layer expected config.filters to be a 'number' > 0 but got ${JSON.stringify(s.filters)}`)}}class Conv2D extends Conv{constructor(s){super(2,s),Conv2D.verifyArgs(s)}getConfig(){const s=super.getConfig();return delete s.rank,s}static verifyArgs(s){if(typeof s.kernelSize!="number"&&!checkArrayTypeAndLength(s.kernelSize,"number",1,2))throw new ValueError(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(s.kernelSize)}.`)}}Conv2D.className="Conv2D";registerClass(Conv2D);class Conv3D extends Conv{constructor(s){super(3,s),Conv3D.verifyArgs(s)}getConfig(){const s=super.getConfig();return delete s.rank,s}static verifyArgs(s){if(typeof s.kernelSize!="number"&&!(Array.isArray(s.kernelSize)&&(s.kernelSize.length===1||s.kernelSize.length===3)))throw new ValueError(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(s.kernelSize)}.`)}}Conv3D.className="Conv3D";registerClass(Conv3D);class Conv2DTranspose extends Conv2D{constructor(s){if(super(s),this.inputSpec=[new InputSpec({ndim:4})],this.padding!=="same"&&this.padding!=="valid")throw new ValueError(`Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(s){if(s=getExactlyOneShape(s),s.length!==4)throw new ValueError("Input should have rank 4; Received input shape: "+JSON.stringify(s));const o=this.dataFormat==="channelsFirst"?1:s.length-1;if(s[o]==null)throw new ValueError("The channel dimension of the inputs should be defined. Found `None`.");const a=s[o],c=this.kernelSize.concat([this.filters,a]);this.kernel=this.addWeight("kernel",c,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new InputSpec({ndim:4,axes:{[o]:a}})],this.built=!0}call(s,o){return tidy(()=>{let a=getExactlyOneTensor(s);if(a.shape.length!==4)throw new ValueError(`Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${a.shape.length}`);const c=a.shape,d=c[0];let g,$;this.dataFormat==="channelsFirst"?(g=2,$=3):(g=1,$=2);const j=c[g],_e=c[$],et=this.kernelSize[0],_=this.kernelSize[1],b=this.strides[0],tt=this.strides[1],nt=deconvLength(j,b,et,this.padding),rt=deconvLength(_e,tt,_,this.padding),st=[d,nt,rt,this.filters];this.dataFormat!=="channelsLast"&&(a=transpose$2(a,[0,2,3,1]));let ot=conv2dTranspose(a,this.kernel.read(),st,this.strides,this.padding);return this.dataFormat!=="channelsLast"&&(ot=transpose$2(ot,[0,3,1,2])),this.bias!=null&&(ot=biasAdd(ot,this.bias.read(),this.dataFormat)),this.activation!=null&&(ot=this.activation.apply(ot)),ot})}computeOutputShape(s){s=getExactlyOneShape(s);const o=s.slice();let a,c,d;this.dataFormat==="channelsFirst"?(a=1,c=2,d=3):(a=3,c=1,d=2);const g=this.kernelSize[0],$=this.kernelSize[1],j=this.strides[0],_e=this.strides[1];return o[a]=this.filters,o[c]=deconvLength(o[c],j,g,this.padding),o[d]=deconvLength(o[d],_e,$,this.padding),o}getConfig(){const s=super.getConfig();return delete s.dilationRate,s}}Conv2DTranspose.className="Conv2DTranspose";registerClass(Conv2DTranspose);class Conv3DTranspose extends Conv3D{constructor(s){if(super(s),this.inputSpec=[new InputSpec({ndim:5})],this.padding!=="same"&&this.padding!=="valid")throw new ValueError(`Conv3DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(s){if(s=getExactlyOneShape(s),s.length!==5)throw new ValueError("Input should have rank 5; Received input shape: "+JSON.stringify(s));const o=this.dataFormat==="channelsFirst"?1:s.length-1;if(s[o]==null)throw new ValueError("The channel dimension of the inputs should be defined. Found `None`.");const a=s[o],c=this.kernelSize.concat([this.filters,a]);this.kernel=this.addWeight("kernel",c,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new InputSpec({ndim:5,axes:{[o]:a}})],this.built=!0}call(s,o){return tidy(()=>{let a=getExactlyOneTensor(s);if(a.shape.length!==5)throw new ValueError(`Conv3DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${a.shape.length}`);const c=a.shape,d=c[0];let g,$,j;this.dataFormat==="channelsFirst"?(j=2,g=3,$=4):(j=1,g=2,$=3);const _e=c[j],et=c[g],_=c[$],b=this.kernelSize[0],tt=this.kernelSize[1],nt=this.kernelSize[2],rt=this.strides[0],st=this.strides[1],ot=this.strides[2],it=deconvLength(_e,rt,b,this.padding),at=deconvLength(et,st,tt,this.padding),lt=deconvLength(_,ot,nt,this.padding),ut=[d,it,at,lt,this.filters];this.dataFormat!=="channelsLast"&&(a=transpose$2(a,[0,2,3,4,1]));let ct=conv3dTranspose(a,this.kernel.read(),ut,this.strides,this.padding);return this.dataFormat!=="channelsLast"&&(ct=transpose$2(ct,[0,4,1,2,3])),this.bias!==null&&(ct=biasAdd(ct,this.bias.read(),this.dataFormat)),this.activation!==null&&(ct=this.activation.apply(ct)),ct})}computeOutputShape(s){s=getExactlyOneShape(s);const o=s.slice();let a,c,d,g;this.dataFormat==="channelsFirst"?(a=1,c=2,d=3,g=4):(a=4,c=1,d=2,g=3);const $=this.kernelSize[0],j=this.kernelSize[1],_e=this.kernelSize[2],et=this.strides[0],_=this.strides[1],b=this.strides[2];return o[a]=this.filters,o[c]=deconvLength(o[c],et,$,this.padding),o[d]=deconvLength(o[d],_,j,this.padding),o[g]=deconvLength(o[g],b,_e,this.padding),o}getConfig(){const s=super.getConfig();return delete s.dilationRate,s}}Conv3DTranspose.className="Conv3DTranspose";registerClass(Conv3DTranspose);class SeparableConv extends Conv{constructor(s,o){if(super(s,o),this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,o.filters==null)throw new ValueError("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(o.kernelInitializer!=null||o.kernelRegularizer!=null||o.kernelConstraint!=null)throw new ValueError("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(o.padding!=null&&o.padding!=="same"&&o.padding!=="valid")throw new ValueError(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received ${JSON.stringify(o.padding)}`);this.depthMultiplier=o.depthMultiplier==null?1:o.depthMultiplier,this.depthwiseInitializer=getInitializer(o.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=getRegularizer(o.depthwiseRegularizer),this.depthwiseConstraint=getConstraint(o.depthwiseConstraint),this.pointwiseInitializer=getInitializer(o.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=getRegularizer(o.pointwiseRegularizer),this.pointwiseConstraint=getConstraint(o.pointwiseConstraint)}build(s){if(s=getExactlyOneShape(s),s.length<this.rank+2)throw new ValueError(`Inputs to SeparableConv${this.rank}D should have rank ${this.rank+2}, but received input shape: ${JSON.stringify(s)}`);const o=this.dataFormat==="channelsFirst"?1:s.length-1;if(s[o]==null||s[o]<0)throw new ValueError(`The channel dimension of the inputs should be defined, but found ${JSON.stringify(s[o])}`);const a=s[o],c=this.kernelSize.concat([a,this.depthMultiplier]),d=[];for(let $=0;$<this.rank;++$)d.push(1);d.push(a*this.depthMultiplier,this.filters);const g=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",c,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,g,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",d,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,g,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,g,this.biasConstraint):this.bias=null,this.inputSpec=[new InputSpec({ndim:this.rank+2,axes:{[o]:a}})],this.built=!0}call(s,o){return tidy(()=>{s=getExactlyOneTensor(s);let a;if(this.rank===1)throw new NotImplementedError("1D separable convolution is not implemented yet.");return this.rank===2&&(this.dataFormat==="channelsFirst"&&(s=transpose$2(s,[0,2,3,1])),a=separableConv2d(s,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(a=biasAdd(a,this.bias.read(),this.dataFormat)),this.activation!=null&&(a=this.activation.apply(a)),this.dataFormat==="channelsFirst"&&(a=transpose$2(a,[0,3,1,2])),a})}getConfig(){const s=super.getConfig();return delete s.rank,delete s.kernelInitializer,delete s.kernelRegularizer,delete s.kernelConstraint,s.depthwiseInitializer=serializeInitializer(this.depthwiseInitializer),s.pointwiseInitializer=serializeInitializer(this.pointwiseInitializer),s.depthwiseRegularizer=serializeRegularizer(this.depthwiseRegularizer),s.pointwiseRegularizer=serializeRegularizer(this.pointwiseRegularizer),s.depthwiseConstraint=serializeConstraint(this.depthwiseConstraint),s.pointwiseConstraint=serializeConstraint(this.pointwiseConstraint),s}}SeparableConv.className="SeparableConv";class SeparableConv2D extends SeparableConv{constructor(s){super(2,s)}}SeparableConv2D.className="SeparableConv2D";registerClass(SeparableConv2D);class Conv1D extends Conv{constructor(s){super(1,s),Conv1D.verifyArgs(s),this.inputSpec=[{ndim:3}]}getConfig(){const s=super.getConfig();return delete s.rank,delete s.dataFormat,s}static verifyArgs(s){if(typeof s.kernelSize!="number"&&!checkArrayTypeAndLength(s.kernelSize,"number",1,1))throw new ValueError(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(s.kernelSize)}.`)}}Conv1D.className="Conv1D";registerClass(Conv1D);class Cropping2D extends Layer{constructor(s){super(s),typeof s.cropping=="number"?this.cropping=[[s.cropping,s.cropping],[s.cropping,s.cropping]]:typeof s.cropping[0]=="number"?this.cropping=[[s.cropping[0],s.cropping[0]],[s.cropping[1],s.cropping[1]]]:this.cropping=s.cropping,this.dataFormat=s.dataFormat===void 0?"channelsLast":s.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(s){return this.dataFormat==="channelsFirst"?[s[0],s[1],s[2]-this.cropping[0][0]-this.cropping[0][1],s[3]-this.cropping[1][0]-this.cropping[1][1]]:[s[0],s[1]-this.cropping[0][0]-this.cropping[0][1],s[2]-this.cropping[1][0]-this.cropping[1][1],s[3]]}call(s,o){return tidy(()=>{if(s=getExactlyOneTensor(s),this.dataFormat==="channelsLast"){const a=sliceAlongAxis(s,this.cropping[0][0],s.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return sliceAlongAxis(a,this.cropping[1][0],s.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}else{const a=sliceAlongAxis(s,this.cropping[0][0],s.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return sliceAlongAxis(a,this.cropping[1][0],s.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}})}getConfig(){const s={cropping:this.cropping,dataFormat:this.dataFormat},o=super.getConfig();return Object.assign(s,o),s}}Cropping2D.className="Cropping2D";registerClass(Cropping2D);class UpSampling2D extends Layer{constructor(s){super(s),this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=s.size==null?this.DEFAULT_SIZE:s.size,this.dataFormat=s.dataFormat==null?"channelsLast":s.dataFormat,checkDataFormat(this.dataFormat),this.interpolation=s.interpolation==null?"nearest":s.interpolation,checkInterpolationFormat(this.interpolation)}computeOutputShape(s){if(this.dataFormat==="channelsFirst"){const o=s[2]==null?null:this.size[0]*s[2],a=s[3]==null?null:this.size[1]*s[3];return[s[0],s[1],o,a]}else{const o=s[1]==null?null:this.size[0]*s[1],a=s[2]==null?null:this.size[1]*s[2];return[s[0],o,a,s[3]]}}call(s,o){return tidy(()=>{let a=getExactlyOneTensor(s);const c=a.shape;if(this.dataFormat==="channelsFirst"){a=transpose$2(a,[0,2,3,1]);const d=this.size[0]*c[2],g=this.size[1]*c[3],$=this.interpolation==="nearest"?image.resizeNearestNeighbor(a,[d,g]):image.resizeBilinear(a,[d,g]);return transpose$2($,[0,3,1,2])}else{const d=this.size[0]*c[1],g=this.size[1]*c[2];return this.interpolation==="nearest"?image.resizeNearestNeighbor(a,[d,g]):image.resizeBilinear(a,[d,g])}})}getConfig(){const s={size:this.size,dataFormat:this.dataFormat,interpolation:this.interpolation},o=super.getConfig();return Object.assign(s,o),s}}UpSampling2D.className="UpSampling2D";registerClass(UpSampling2D);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function depthwiseConv2d(i,s,o=[1,1],a="valid",c,d){return tidy(()=>{c==null&&(c=imageDataFormat()),checkDataFormat(c);let g=preprocessConv2DInput(i,c);if(i.rank!==4)throw new ValueError(`Input for depthwiseConv2d is required to be 4-D, but is instead ${i.rank}-D`);if(s.rank!==4)throw new ValueError(`depthwiseKernel is required to be 4-D, but is instead ${s.rank}-D`);return g=depthwiseConv2d$1(g,s,o,a==="same"?"same":"valid","NHWC",d),c==="channelsFirst"&&(g=transpose$2(g,[0,3,1,2])),g})}class DepthwiseConv2D extends BaseConv{constructor(s){super(2,s),this.depthwiseKernel=null,this.depthMultiplier=s.depthMultiplier==null?1:s.depthMultiplier,this.depthwiseInitializer=getInitializer(s.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=getConstraint(s.depthwiseConstraint),this.depthwiseRegularizer=getRegularizer(s.depthwiseRegularizer)}build(s){if(s=getExactlyOneShape(s),s.length<4)throw new ValueError(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(s)}.`);const o=this.dataFormat==="channelsFirst"?1:3;if(s[o]==null||s[o]<0)throw new ValueError(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${s[o]}).`);const a=s[o],c=[this.kernelSize[0],this.kernelSize[1],a,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",c,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[a*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(s,o){return tidy(()=>{s=getExactlyOneTensor(s);let a=depthwiseConv2d(s,this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(a=biasAdd(a,this.bias.read(),this.dataFormat)),this.activation!=null&&(a=this.activation.apply(a)),a})}computeOutputShape(s){s=getExactlyOneShape(s);const o=this.dataFormat==="channelsFirst"?s[2]:s[1],a=this.dataFormat==="channelsFirst"?s[3]:s[2],c=this.dataFormat==="channelsFirst"?s[1]*this.depthMultiplier:s[3]*this.depthMultiplier,d=convOutputLength(o,this.kernelSize[0],this.padding,this.strides[0]),g=convOutputLength(a,this.kernelSize[1],this.padding,this.strides[1]);return this.dataFormat==="channelsFirst"?[s[0],c,d,g]:[s[0],d,g,c]}getConfig(){const s=super.getConfig();return s.depthMultiplier=this.depthMultiplier,s.depthwiseInitializer=serializeInitializer(this.depthwiseInitializer),s.depthwiseRegularizer=serializeRegularizer(this.depthwiseRegularizer),s.depthwiseConstraint=serializeConstraint(this.depthwiseRegularizer),s}}DepthwiseConv2D.className="DepthwiseConv2D";registerClass(DepthwiseConv2D);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function standardizeArgs(i,s,o,a){if(Array.isArray(i)){if(s!=null||o!=null)throw new ValueError("When inputs is an array, neither initialState or constants should be provided");a!=null&&(o=i.slice(i.length-a,i.length),i=i.slice(0,i.length-a)),i.length>1&&(s=i.slice(1,i.length)),i=i[0]}function c(d){return d==null||Array.isArray(d)?d:[d]}return s=c(s),o=c(o),{inputs:i,initialState:s,constants:o}}function rnn(i,s,o,a=!1,c,d,g=!1,$=!1){return tidy(()=>{const j=s.shape.length;if(j<3)throw new ValueError(`Input should be at least 3D, but is ${j}D.`);const _e=[1,0].concat(range$2(2,j));s=transpose$2(s,_e),g&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),c!=null&&(c=cast$3(cast$3(c,"bool"),"float32"),c.rank===j-1&&(c=expandDims$3(c,-1)),c=transpose$2(c,_e)),a&&(s=reverse$2(s,0),c!=null&&(c=reverse$2(c,0)));const et=[];let _,b=o;const tt=s.shape[0],nt=unstack(s);let rt;c!=null&&(rt=unstack(c));for(let ot=0;ot<tt;++ot){const it=nt[ot],at=tidy(()=>i(it,b));if(c==null)_=at[0],b=at[1];else{const lt=tidy(()=>{const ut=rt[ot],ct=sub$2(onesLike$2(ut),ut),dt=add$1(mul(at[0],ut),mul(b[0],ct)),pt=b.map((ht,ft)=>add$1(mul(at[1][ft],ut),mul(ht,ct)));return{output:dt,newStates:pt}});_=lt.output,b=lt.newStates}$&&et.push(_)}let st;return $&&(st=stack(et,1)),[_,st,b]})}class RNN extends Layer{constructor(s){super(s);let o;if(s.cell==null)throw new ValueError("cell property is missing for the constructor of RNN.");if(Array.isArray(s.cell)?o=new StackedRNNCells({cells:s.cell}):o=s.cell,o.stateSize==null)throw new ValueError("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=o,this.returnSequences=s.returnSequences==null?!1:s.returnSequences,this.returnState=s.returnState==null?!1:s.returnState,this.goBackwards=s.goBackwards==null?!1:s.goBackwards,this._stateful=s.stateful==null?!1:s.stateful,this.unroll=s.unroll==null?!1:s.unroll,this.supportsMasking=!0,this.inputSpec=[new InputSpec({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){if(this.states_==null){const s=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;return range$2(0,s).map(o=>null)}else return this.states_}setStates(s){this.states_=s}computeOutputShape(s){isArrayOfShapes(s)&&(s=s[0]),s=s;let o=this.cell.stateSize;Array.isArray(o)||(o=[o]);const a=o[0];let c;if(this.returnSequences?c=[s[0],s[1],a]:c=[s[0],a],this.returnState){const d=[];for(const g of o)d.push([s[0],g]);return[c].concat(d)}else return c}computeMask(s,o){return tidy(()=>{Array.isArray(o)&&(o=o[0]);const a=this.returnSequences?o:null;if(this.returnState){const c=this.states.map(d=>null);return[a].concat(c)}else return a})}get states(){if(this.states_==null){const s=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,o=[];for(let a=0;a<s;++a)o.push(null);return o}else return this.states_}set states(s){this.states_=s}build(s){if(this.numConstants!=null)throw new NotImplementedError("Constants support is not implemented in RNN yet.");isArrayOfShapes(s)&&(s=s[0]),s=s;const o=this.stateful?s[0]:null,a=s.slice(2);this.inputSpec[0]=new InputSpec({shape:[o,null,...a]});const c=[s[0]].concat(s.slice(2));this.cell.build(c);let d;if(Array.isArray(this.cell.stateSize)?d=this.cell.stateSize:d=[this.cell.stateSize],this.stateSpec!=null){if(!arraysEqual(this.stateSpec.map(g=>g.shape[g.shape.length-1]),d))throw new ValueError(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is ${this.cell.stateSize}`)}else this.stateSpec=d.map(g=>new InputSpec({shape:[null,g]}));this.stateful&&this.resetStates()}resetStates(s,o=!1){tidy(()=>{if(!this.stateful)throw new AttributeError("Cannot call resetStates() on an RNN Layer that is not stateful.");const a=this.inputSpec[0].shape[0];if(a==null)throw new ValueError("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(this.states_==null)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(c=>zeros$1([a,c])):this.states_=[zeros$1([a,this.cell.stateSize])];else if(s==null)dispose(this.states_),this.keptStates!=null&&(dispose(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(c=>zeros$1([a,c])):this.states_[0]=zeros$1([a,this.cell.stateSize]);else{if(Array.isArray(s)||(s=[s]),s.length!==this.states_.length)throw new ValueError(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${s.length} state value(s). Input received: ${s}`);o===!0?this.keptStates.push(this.states_.slice()):dispose(this.states_);for(let c=0;c<this.states_.length;++c){const d=s[c],g=Array.isArray(this.cell.stateSize)?this.cell.stateSize[c]:this.cell.stateSize,$=[a,g];if(!arraysEqual(d.shape,$))throw new ValueError(`State ${c} is incompatible with layer ${this.name}: expected shape=${$}, received shape=${d.shape}`);this.states_[c]=d}}this.states_=this.states_.map(c=>keep(c.clone()))})}apply(s,o){let a=o==null?null:o.initialState,c=o==null?null:o.constants;o==null&&(o={});const d=standardizeArgs(s,a,c,this.numConstants);s=d.inputs,a=d.initialState,c=d.constants;let g=[],$=[];if(a!=null){o.initialState=a,g=g.concat(a),this.stateSpec=[];for(const _e of a)this.stateSpec.push(new InputSpec({shape:_e.shape}));$=$.concat(this.stateSpec)}if(c!=null&&(o.constants=c,g=g.concat(c),this.numConstants=c.length),g[0]instanceof SymbolicTensor){const _e=[s].concat(g),et=this.inputSpec.concat($),_=this.inputSpec;this.inputSpec=et;const b=super.apply(_e,o);return this.inputSpec=_,b}else return super.apply(s,o)}call(s,o){return tidy(()=>{const a=o==null?null:o.mask,c=o==null?null:o.training;let d=o==null?null:o.initialState;s=getExactlyOneTensor(s),d==null&&(this.stateful?d=this.states_:d=this.getInitialState(s));const g=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(d.length!==g)throw new ValueError(`RNN Layer has ${g} state(s) but was passed ${d.length} initial state(s).`);this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");const $={training:c},_e=rnn((nt,rt)=>{const st=this.cell.call([nt].concat(rt),$);return[st[0],st.slice(1)]},s,d,this.goBackwards,a,null,this.unroll,this.returnSequences),et=_e[0],_=_e[1],b=_e[2];this.stateful&&this.resetStates(b,c);const tt=this.returnSequences?_:et;return this.returnState?[tt].concat(b):tt})}getInitialState(s){return tidy(()=>{let o=zeros$1(s.shape);return o=sum$2(o,[1,2]),o=expandDims$2(o),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map(a=>a>1?tile$2(o,[1,a]):o):this.cell.stateSize>1?[tile$2(o,[1,this.cell.stateSize])]:[o]})}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(s){super.setFastWeightInitDuringBuild(s),this.cell!=null&&this.cell.setFastWeightInitDuringBuild(s)}getConfig(){const s=super.getConfig(),o={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};this.numConstants!=null&&(o.numConstants=this.numConstants);const a=this.cell.getConfig();return this.getClassName()===RNN.className&&(o.cell={className:this.cell.getClassName(),config:a}),Object.assign(Object.assign(Object.assign({},a),s),o)}static fromConfig(s,o,a={}){const c=o.cell,d=deserialize(c,a);return new s(Object.assign(o,{cell:d}))}}RNN.className="RNN";registerClass(RNN);class RNNCell extends Layer{}class SimpleRNNCell extends RNNCell{constructor(s){super(s),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=s.units,assertPositiveInteger(this.units,"units"),this.activation=getActivation(s.activation==null?this.DEFAULT_ACTIVATION:s.activation),this.useBias=s.useBias==null?!0:s.useBias,this.kernelInitializer=getInitializer(s.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=getInitializer(s.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=getInitializer(s.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=getRegularizer(s.kernelRegularizer),this.recurrentRegularizer=getRegularizer(s.recurrentRegularizer),this.biasRegularizer=getRegularizer(s.biasRegularizer),this.kernelConstraint=getConstraint(s.kernelConstraint),this.recurrentConstraint=getConstraint(s.recurrentConstraint),this.biasConstraint=getConstraint(s.biasConstraint),this.dropout=min$2([1,max$2([0,s.dropout==null?0:s.dropout])]),this.recurrentDropout=min$2([1,max$2([0,s.recurrentDropout==null?0:s.recurrentDropout])]),this.dropoutFunc=s.dropoutFunc,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(s){s=getExactlyOneShape(s),this.kernel=this.addWeight("kernel",[s[s.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(s,o){return tidy(()=>{if(s=s,s.length!==2)throw new ValueError(`SimpleRNNCell expects 2 input Tensors, got ${s.length}.`);let a=s[1];s=s[0];const c=o.training==null?!1:o.training;0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=generateDropoutMask({ones:()=>onesLike$2(s),rate:this.dropout,training:c,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=generateDropoutMask({ones:()=>onesLike$2(a),rate:this.recurrentDropout,training:c,dropoutFunc:this.dropoutFunc}));let d;const g=this.dropoutMask,$=this.recurrentDropoutMask;g!=null?d=dot(mul(s,g),this.kernel.read()):d=dot(s,this.kernel.read()),this.bias!=null&&(d=biasAdd(d,this.bias.read())),$!=null&&(a=mul(a,$));let j=add$1(d,dot(a,this.recurrentKernel.read()));return this.activation!=null&&(j=this.activation.apply(j)),[j,j]})}getConfig(){const s=super.getConfig(),o={units:this.units,activation:serializeActivation(this.activation),useBias:this.useBias,kernelInitializer:serializeInitializer(this.kernelInitializer),recurrentInitializer:serializeInitializer(this.recurrentInitializer),biasInitializer:serializeInitializer(this.biasInitializer),kernelRegularizer:serializeRegularizer(this.kernelRegularizer),recurrentRegularizer:serializeRegularizer(this.recurrentRegularizer),biasRegularizer:serializeRegularizer(this.biasRegularizer),activityRegularizer:serializeRegularizer(this.activityRegularizer),kernelConstraint:serializeConstraint(this.kernelConstraint),recurrentConstraint:serializeConstraint(this.recurrentConstraint),biasConstraint:serializeConstraint(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return Object.assign(Object.assign({},s),o)}}SimpleRNNCell.className="SimpleRNNCell";registerClass(SimpleRNNCell);class SimpleRNN extends RNN{constructor(s){s.cell=new SimpleRNNCell(s),super(s)}call(s,o){return tidy(()=>{this.cell.dropoutMask!=null&&(dispose(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(dispose(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const a=o==null?null:o.mask,c=o==null?null:o.training,d=o==null?null:o.initialState;return super.call(s,{mask:a,training:c,initialState:d})})}static fromConfig(s,o){return new s(o)}}SimpleRNN.className="SimpleRNN";registerClass(SimpleRNN);class GRUCell extends RNNCell{constructor(s){if(super(s),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",s.resetAfter)throw new ValueError("GRUCell does not support reset_after parameter set to true.");this.units=s.units,assertPositiveInteger(this.units,"units"),this.activation=getActivation(s.activation===void 0?this.DEFAULT_ACTIVATION:s.activation),this.recurrentActivation=getActivation(s.recurrentActivation===void 0?this.DEFAULT_RECURRENT_ACTIVATION:s.recurrentActivation),this.useBias=s.useBias==null?!0:s.useBias,this.kernelInitializer=getInitializer(s.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=getInitializer(s.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=getInitializer(s.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=getRegularizer(s.kernelRegularizer),this.recurrentRegularizer=getRegularizer(s.recurrentRegularizer),this.biasRegularizer=getRegularizer(s.biasRegularizer),this.kernelConstraint=getConstraint(s.kernelConstraint),this.recurrentConstraint=getConstraint(s.recurrentConstraint),this.biasConstraint=getConstraint(s.biasConstraint),this.dropout=min$2([1,max$2([0,s.dropout==null?0:s.dropout])]),this.recurrentDropout=min$2([1,max$2([0,s.recurrentDropout==null?0:s.recurrentDropout])]),this.dropoutFunc=s.dropoutFunc,this.implementation=s.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(s){s=getExactlyOneShape(s);const o=s[s.length-1];this.kernel=this.addWeight("kernel",[o,this.units*3],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units*3],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units*3],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(s,o){return tidy(()=>{if(s=s,s.length!==2)throw new ValueError(`GRUCell expects 2 input Tensors (inputs, h, c), got ${s.length}.`);const a=o.training==null?!1:o.training;let c=s[1];s=s[0],0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=generateDropoutMask({ones:()=>onesLike$2(s),rate:this.dropout,training:a,count:3,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=generateDropoutMask({ones:()=>onesLike$2(c),rate:this.recurrentDropout,training:a,count:3,dropoutFunc:this.dropoutFunc}));const d=this.dropoutMask,g=this.recurrentDropoutMask;let $,j,_e;0<this.dropout&&this.dropout<1&&(s=mul(s,d[0]));let et=dot(s,this.kernel.read());this.useBias&&(et=biasAdd(et,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(c=mul(c,g[0]));const _=this.recurrentKernel.read(),[b,tt]=split$1(_,[2*this.units,this.units],_.rank-1),nt=dot(c,b),[rt,st,ot]=split$1(et,3,et.rank-1),[it,at]=split$1(nt,2,nt.rank-1);$=this.recurrentActivation.apply(add$1(rt,it)),j=this.recurrentActivation.apply(add$1(st,at));const lt=dot(mul(j,c),tt);_e=this.activation.apply(add$1(ot,lt));const ut=add$1(mul($,c),mul(add$1(1,neg$2($)),_e));return[ut,ut]})}getConfig(){const s=super.getConfig(),o={units:this.units,activation:serializeActivation(this.activation),recurrentActivation:serializeActivation(this.recurrentActivation),useBias:this.useBias,kernelInitializer:serializeInitializer(this.kernelInitializer),recurrentInitializer:serializeInitializer(this.recurrentInitializer),biasInitializer:serializeInitializer(this.biasInitializer),kernelRegularizer:serializeRegularizer(this.kernelRegularizer),recurrentRegularizer:serializeRegularizer(this.recurrentRegularizer),biasRegularizer:serializeRegularizer(this.biasRegularizer),activityRegularizer:serializeRegularizer(this.activityRegularizer),kernelConstraint:serializeConstraint(this.kernelConstraint),recurrentConstraint:serializeConstraint(this.recurrentConstraint),biasConstraint:serializeConstraint(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return Object.assign(Object.assign({},s),o)}}GRUCell.className="GRUCell";registerClass(GRUCell);class GRU extends RNN{constructor(s){s.implementation===0&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),s.cell=new GRUCell(s),super(s)}call(s,o){return tidy(()=>{this.cell.dropoutMask!=null&&(dispose(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(dispose(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const a=o==null?null:o.mask,c=o==null?null:o.training,d=o==null?null:o.initialState;return super.call(s,{mask:a,training:c,initialState:d})})}static fromConfig(s,o){return o.implmentation===0&&(o.implementation=1),new s(o)}}GRU.className="GRU";registerClass(GRU);class LSTMCell extends RNNCell{constructor(s){super(s),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=s.units,assertPositiveInteger(this.units,"units"),this.activation=getActivation(s.activation===void 0?this.DEFAULT_ACTIVATION:s.activation),this.recurrentActivation=getActivation(s.recurrentActivation===void 0?this.DEFAULT_RECURRENT_ACTIVATION:s.recurrentActivation),this.useBias=s.useBias==null?!0:s.useBias,this.kernelInitializer=getInitializer(s.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=getInitializer(s.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=getInitializer(s.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=s.unitForgetBias,this.kernelRegularizer=getRegularizer(s.kernelRegularizer),this.recurrentRegularizer=getRegularizer(s.recurrentRegularizer),this.biasRegularizer=getRegularizer(s.biasRegularizer),this.kernelConstraint=getConstraint(s.kernelConstraint),this.recurrentConstraint=getConstraint(s.recurrentConstraint),this.biasConstraint=getConstraint(s.biasConstraint),this.dropout=min$2([1,max$2([0,s.dropout==null?0:s.dropout])]),this.recurrentDropout=min$2([1,max$2([0,s.recurrentDropout==null?0:s.recurrentDropout])]),this.dropoutFunc=s.dropoutFunc,this.implementation=s.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(s){var o;s=getExactlyOneShape(s);const a=s[s.length-1];this.kernel=this.addWeight("kernel",[a,this.units*4],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units*4],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint);let c;if(this.useBias){if(this.unitForgetBias){const d=this.biasInitializer,g=this.units;c=new(o=class extends Initializer{apply(j,_e){const et=d.apply([g]),_=new Ones().apply([g]),b=d.apply([g*2]);return concatAlongFirstAxis(concatAlongFirstAxis(et,_),b)}},o.className="CustomInit",o)}else c=this.biasInitializer;this.bias=this.addWeight("bias",[this.units*4],null,c,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(s,o){return tidy(()=>{const a=o.training==null?!1:o.training;if(s=s,s.length!==3)throw new ValueError(`LSTMCell expects 3 input Tensors (inputs, h, c), got ${s.length}.`);let c=s[1];const d=s[2];s=s[0],0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=generateDropoutMask({ones:()=>onesLike$2(s),rate:this.dropout,training:a,count:4,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=generateDropoutMask({ones:()=>onesLike$2(c),rate:this.recurrentDropout,training:a,count:4,dropoutFunc:this.dropoutFunc}));const g=this.dropoutMask,$=this.recurrentDropoutMask;let j,_e,et,_;0<this.dropout&&this.dropout<1&&(s=mul(s,g[0]));let b=dot(s,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(c=mul(c,$[0])),b=add$1(b,dot(c,this.recurrentKernel.read())),this.useBias&&(b=biasAdd(b,this.bias.read()));const[tt,nt,rt,st]=split$1(b,4,b.rank-1);j=this.recurrentActivation.apply(tt),_e=this.recurrentActivation.apply(nt),et=add$1(mul(_e,d),mul(j,this.activation.apply(rt))),_=this.recurrentActivation.apply(st);const ot=mul(_,this.activation.apply(et));return[ot,ot,et]})}getConfig(){const s=super.getConfig(),o={units:this.units,activation:serializeActivation(this.activation),recurrentActivation:serializeActivation(this.recurrentActivation),useBias:this.useBias,kernelInitializer:serializeInitializer(this.kernelInitializer),recurrentInitializer:serializeInitializer(this.recurrentInitializer),biasInitializer:serializeInitializer(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:serializeRegularizer(this.kernelRegularizer),recurrentRegularizer:serializeRegularizer(this.recurrentRegularizer),biasRegularizer:serializeRegularizer(this.biasRegularizer),activityRegularizer:serializeRegularizer(this.activityRegularizer),kernelConstraint:serializeConstraint(this.kernelConstraint),recurrentConstraint:serializeConstraint(this.recurrentConstraint),biasConstraint:serializeConstraint(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return Object.assign(Object.assign({},s),o)}}LSTMCell.className="LSTMCell";registerClass(LSTMCell);class LSTM extends RNN{constructor(s){s.implementation===0&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),s.cell=new LSTMCell(s),super(s)}call(s,o){return tidy(()=>{this.cell.dropoutMask!=null&&(dispose(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(dispose(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const a=o==null?null:o.mask,c=o==null?null:o.training,d=o==null?null:o.initialState;return super.call(s,{mask:a,training:c,initialState:d})})}static fromConfig(s,o){return o.implmentation===0&&(o.implementation=1),new s(o)}}LSTM.className="LSTM";registerClass(LSTM);class StackedRNNCells extends RNNCell{constructor(s){super(s),this.cells=s.cells}get stateSize(){const s=[];for(const o of this.cells.slice().reverse())Array.isArray(o.stateSize)?s.push(...o.stateSize):s.push(o.stateSize);return s}call(s,o){return tidy(()=>{s=s;let a=s.slice(1);const c=[];for(const $ of this.cells.slice().reverse())Array.isArray($.stateSize)?c.push(a.splice(0,$.stateSize.length)):c.push(a.splice(0,1));c.reverse();const d=[];let g;for(let $=0;$<this.cells.length;++$){const j=this.cells[$];a=c[$],$===0?g=[s[0]].concat(a):g=[g[0]].concat(a),g=j.call(g,o),d.push(g.slice(1))}a=[];for(const $ of d.slice().reverse())a.push(...$);return[g[0]].concat(a)})}build(s){isArrayOfShapes(s)&&(s=s[0]),s=s;let o;this.cells.forEach((a,c)=>{nameScope(`RNNCell_${c}`,()=>{a.build(s),Array.isArray(a.stateSize)?o=a.stateSize[0]:o=a.stateSize,s=[s[0],o]})}),this.built=!0}getConfig(){const s=super.getConfig(),o=d=>({className:d.getClassName(),config:d.getConfig()}),c={cells:this.cells.map(o)};return Object.assign(Object.assign({},s),c)}static fromConfig(s,o,a={}){const c=[];for(const d of o.cells)c.push(deserialize(d,a));return new s({cells:c})}get trainableWeights(){if(!this.trainable)return[];const s=[];for(const o of this.cells)s.push(...o.trainableWeights);return s}get nonTrainableWeights(){const s=[];for(const o of this.cells)s.push(...o.nonTrainableWeights);if(!this.trainable){const o=[];for(const a of this.cells)o.push(...a.trainableWeights);return o.concat(s)}return s}getWeights(){const s=[];for(const o of this.cells)s.push(...o.weights);return batchGetValue(s)}setWeights(s){const o=[];for(const a of this.cells){const c=a.weights.length,d=s.splice(c);for(let g=0;g<a.weights.length;++g)o.push([a.weights[g],d[g]])}batchSetValue(o)}}StackedRNNCells.className="StackedRNNCells";registerClass(StackedRNNCells);function generateDropoutMask(i){const{ones:s,rate:o,training:a=!1,count:c=1,dropoutFunc:d}=i,g=()=>d!=null?d(s(),o):dropout(s(),o),$=()=>inTrainPhase(g,s,a);return!c||c<=1?keep($().clone()):Array(c).fill(void 0).map($).map(_e=>keep(_e.clone()))}/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */var __rest=function(i,s){var o={};for(var a in i)Object.prototype.hasOwnProperty.call(i,a)&&s.indexOf(a)<0&&(o[a]=i[a]);if(i!=null&&typeof Object.getOwnPropertySymbols=="function")for(var c=0,a=Object.getOwnPropertySymbols(i);c<a.length;c++)s.indexOf(a[c])<0&&Object.prototype.propertyIsEnumerable.call(i,a[c])&&(o[a[c]]=i[a[c]]);return o};class ConvRNN2D extends RNN{constructor(s){if(s.unroll)throw new NotImplementedError("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(s.cell))throw new NotImplementedError("It is not possible at the moment to stack convolutional cells.");super(s),this.inputSpec=[new InputSpec({ndim:5})]}call(s,o){return tidy(()=>{if(this.cell.dropoutMask!=null&&(dispose(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(dispose(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),o&&o.constants)throw new ValueError("ConvRNN2D cell does not support constants");const a=o==null?null:o.mask,c=o==null?null:o.training,d=o==null?null:o.initialState;return super.call(s,{mask:a,training:c,initialState:d})})}computeOutputShape(s){let o=this.computeSingleOutputShape(s);return this.returnSequences||(o=[o[0],...o.slice(2)]),this.returnState&&(o=[o,...Array(2).fill([s[0],...o.slice(-3)])]),o}getInitialState(s){return tidy(()=>{const{stateSize:o}=this.cell,a=s.shape,c=this.computeSingleOutputShape(a),d=[c[0],...c.slice(2)],g=zeros$1(d);return Array.isArray(o)?Array(o.length).fill(g):[g]})}resetStates(s,o=!1){tidy(()=>{if(!this.stateful)throw new AttributeError("Cannot call resetStates() on an RNN Layer that is not stateful.");const a=this.inputSpec[0].shape,c=this.computeSingleOutputShape(a),d=[c[0],...c.slice(2)];if(a[0]==null)throw new ValueError("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(this.getStates()==null)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>zeros$1(d)):this.states_=[zeros$1(d)];else if(s==null)dispose(this.states_),this.keptStates!=null&&(dispose(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>zeros$1(d)):this.states_[0]=zeros$1(d);else{if(Array.isArray(s)||(s=[s]),s.length!==this.states_.length)throw new ValueError(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${s.length} state value(s). Input received: ${s}`);o?this.keptStates.push(this.states_.slice()):dispose(this.states_);for(let $=0;$<this.states_.length;++$){const j=s[$],_e=d;if(!arraysEqual(j.shape,_e))throw new ValueError(`State ${$} is incompatible with layer ${this.name}: expected shape=${_e}, received shape=${j.shape}`);this.states_[$]=j}}this.states_=this.states_.map($=>keep($.clone()))})}computeSingleOutputShape(s){const{dataFormat:o,filters:a,kernelSize:c,padding:d,strides:g,dilationRate:$}=this.cell,j=o==="channelsFirst",_e=s[j?3:2],et=s[j?4:3],_=convOutputLength(_e,c[0],d,g[0],$[0]),b=convOutputLength(et,c[1],d,g[1],$[1]);return[...s.slice(0,2),...j?[a,_,b]:[_,b,a]]}}ConvRNN2D.className="ConvRNN2D";class ConvLSTM2DCell extends LSTMCell{constructor(s){const{filters:o,kernelSize:a,strides:c,padding:d,dataFormat:g,dilationRate:$}=s;super(Object.assign(Object.assign({},s),{units:o})),this.filters=o,assertPositiveInteger(this.filters,"filters"),this.kernelSize=normalizeArray(a,2,"kernelSize"),this.kernelSize.forEach(j=>assertPositiveInteger(j,"kernelSize")),this.strides=normalizeArray(c||1,2,"strides"),this.strides.forEach(j=>assertPositiveInteger(j,"strides")),this.padding=d||"valid",checkPaddingMode(this.padding),this.dataFormat=g||"channelsLast",checkDataFormat(this.dataFormat),this.dilationRate=normalizeArray($||1,2,"dilationRate"),this.dilationRate.forEach(j=>assertPositiveInteger(j,"dilationRate"))}build(s){var o;s=getExactlyOneShape(s);const a=this.dataFormat==="channelsFirst"?1:s.length-1;if(s[a]==null)throw new ValueError(`The channel dimension of the input should be defined. Found ${s[a]}`);const c=s[a],d=4,g=this.kernelSize.concat([c,this.filters*d]);this.kernel=this.addWeight("kernel",g,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);const $=this.kernelSize.concat([this.filters,this.filters*d]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",$,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let j;if(this.unitForgetBias){const _e=this.biasInitializer,et=this.filters;j=new(o=class extends Initializer{apply(b,tt){const nt=_e.apply([et]),rt=ones([et]),st=_e.apply([et*2]);return concatenate([nt,rt,st])}},o.className="CustomInit",o)}else j=this.biasInitializer;this.bias=this.addWeight("bias",[this.filters*d],null,j,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(s,o){return tidy(()=>{if(s.length!==3)throw new ValueError(`ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got ${s.length}.`);const a=o.training||!1,c=s[0],d=s[1],g=s[2],$=4;0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=generateDropoutMask({ones:()=>onesLike$2(c),rate:this.dropout,training:a,count:$,dropoutFunc:this.dropoutFunc}));const j=this.dropoutMask,_e=(kt,Nt,Mt)=>!Nt||!Nt[Mt]?kt:mul(Nt[Mt],kt);let et=_e(c,j,0),_=_e(c,j,1),b=_e(c,j,2),tt=_e(c,j,3);0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=generateDropoutMask({ones:()=>onesLike$2(d),rate:this.recurrentDropout,training:a,count:$,dropoutFunc:this.dropoutFunc}));const nt=this.recurrentDropoutMask;let rt=_e(d,nt,0),st=_e(d,nt,1),ot=_e(d,nt,2),it=_e(d,nt,3);const at=3,[lt,ut,ct,dt]=split$1(this.kernel.read(),$,at),[pt,ht,ft,yt]=this.useBias?split$1(this.bias.read(),$):[null,null,null,null];et=this.inputConv(et,lt,pt,this.padding),_=this.inputConv(_,ut,ht,this.padding),b=this.inputConv(b,ct,ft,this.padding),tt=this.inputConv(tt,dt,yt,this.padding);const[wt,_t,bt,xt]=split$1(this.recurrentKernel.read(),$,at);rt=this.recurrentConv(rt,wt),st=this.recurrentConv(st,_t),ot=this.recurrentConv(ot,bt),it=this.recurrentConv(it,xt);const mt=this.recurrentActivation.apply(add$1(et,rt)),vt=this.recurrentActivation.apply(add$1(_,st)),Et=add$1(mul(vt,g),mul(mt,this.activation.apply(add$1(b,ot)))),Ct=mul(this.recurrentActivation.apply(add$1(tt,it)),this.activation.apply(Et));return[Ct,Ct,Et]})}getConfig(){const s=super.getConfig(),o=__rest(s,["units"]),a={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return Object.assign(Object.assign({},o),a)}inputConv(s,o,a,c){const d=conv2d$2(s,o,this.strides,c||"valid",this.dataFormat==="channelsFirst"?"NCHW":"NHWC",this.dilationRate);return a?biasAdd(d,a,this.dataFormat):d}recurrentConv(s,o){return conv2d$2(s,o,1,"same",this.dataFormat==="channelsFirst"?"NCHW":"NHWC")}}ConvLSTM2DCell.className="ConvLSTM2DCell";registerClass(ConvLSTM2DCell);class ConvLSTM2D extends ConvRNN2D{constructor(s){const o=new ConvLSTM2DCell(s);super(Object.assign(Object.assign({},s),{cell:o}))}static fromConfig(s,o){return new s(o)}}ConvLSTM2D.className="ConvLSTM2D";registerClass(ConvLSTM2D);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class Dropout extends Layer{constructor(s){super(s),this.rate=Math.max(Math.min(s.rate,1),0),this.noiseShape=s.noiseShape,this.seed=s.seed,this.supportsMasking=!0}getNoiseShape(s){if(this.noiseShape==null)return this.noiseShape;const o=s.shape,a=[];for(let c=0;c<this.noiseShape.length;++c)a.push(this.noiseShape[c]==null?o[c]:this.noiseShape[c]);return a}call(s,o){return tidy(()=>{this.invokeCallHook(s,o);const a=getExactlyOneTensor(s);if(0<this.rate&&this.rate<1){const c=o.training==null?!1:o.training,d=this.getNoiseShape(a);return inTrainPhase(()=>dropout(a,this.rate,d,this.seed),()=>a,c)}return s})}getConfig(){const s={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},o=super.getConfig();return Object.assign(s,o),s}dispose(){return super.dispose()}}Dropout.className="Dropout";registerClass(Dropout);class SpatialDropout1D extends Dropout{constructor(s){super(s),this.inputSpec=[{ndim:3}]}getNoiseShape(s){const o=s.shape;return[o[0],1,o[2]]}}SpatialDropout1D.className="SpatialDropout1D";registerClass(SpatialDropout1D);class Dense extends Layer{constructor(s){if(super(s),this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",s.batchInputShape==null&&s.inputShape==null&&s.inputDim!=null){let o=null;s.batchSize!=null&&(o=s.batchSize),this.batchInputShape=[o,s.inputDim]}this.units=s.units,assertPositiveInteger(this.units,"units"),this.activation=getActivation(s.activation),s.useBias!=null&&(this.useBias=s.useBias),this.kernelInitializer=getInitializer(s.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=getInitializer(s.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=getConstraint(s.kernelConstraint),this.biasConstraint=getConstraint(s.biasConstraint),this.kernelRegularizer=getRegularizer(s.kernelRegularizer),this.biasRegularizer=getRegularizer(s.biasRegularizer),this.activityRegularizer=getRegularizer(s.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(s){s=getExactlyOneShape(s);const o=s[s.length-1];this.kernel==null&&(this.kernel=this.addWeight("kernel",[o,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:o}}],this.built=!0}computeOutputShape(s){s=getExactlyOneShape(s);const o=s.slice();return o[o.length-1]=this.units,o}call(s,o){return tidy(()=>{this.invokeCallHook(s,o);const a=getExactlyOneTensor(s),c=mapActivationToFusedKernel(this.activation.getClassName());let d;return c!=null?d=dot(a,this.kernel.read(),c,this.bias?this.bias.read():null):(d=dot(a,this.kernel.read()),this.bias!=null&&(d=biasAdd(d,this.bias.read())),this.activation!=null&&(d=this.activation.apply(d))),d})}getConfig(){const s={units:this.units,activation:serializeActivation(this.activation),useBias:this.useBias,kernelInitializer:serializeInitializer(this.kernelInitializer),biasInitializer:serializeInitializer(this.biasInitializer),kernelRegularizer:serializeRegularizer(this.kernelRegularizer),biasRegularizer:serializeRegularizer(this.biasRegularizer),activityRegularizer:serializeRegularizer(this.activityRegularizer),kernelConstraint:serializeConstraint(this.kernelConstraint),biasConstraint:serializeConstraint(this.biasConstraint)},o=super.getConfig();return Object.assign(s,o),s}}Dense.className="Dense";registerClass(Dense);class Flatten extends Layer{constructor(s){s=s||{},super(s),this.inputSpec=[{minNDim:3}],this.dataFormat=s.dataFormat}computeOutputShape(s){s=getExactlyOneShape(s);for(const o of s.slice(1))if(o==null)throw new ValueError(`The shape of the input to "Flatten" is not fully defined (got ${s.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[s[0],arrayProd(s,1)]}call(s,o){return tidy(()=>{this.invokeCallHook(s,o);let a=getExactlyOneTensor(s);if(this.dataFormat==="channelsFirst"&&a.rank>1){const c=[0];for(let d=2;d<a.rank;++d)c.push(d);c.push(1),a=transpose$2(a,c)}return batchFlatten(a)})}getConfig(){const s={};this.dataFormat!=null&&(s.dataFormat=this.dataFormat);const o=super.getConfig();return Object.assign(s,o),s}}Flatten.className="Flatten";registerClass(Flatten);class Activation extends Layer{constructor(s){super(s),this.supportsMasking=!0,this.activation=getActivation(s.activation)}call(s,o){return tidy(()=>{this.invokeCallHook(s,o);const a=getExactlyOneTensor(s);return this.activation.apply(a)})}getConfig(){const s={activation:serializeActivation(this.activation)},o=super.getConfig();return Object.assign(s,o),s}}Activation.className="Activation";registerClass(Activation);class RepeatVector extends Layer{constructor(s){super(s),this.n=s.n,this.inputSpec=[{ndim:2}]}computeOutputShape(s){return[s[0],this.n,s[1]]}call(s,o){return tidy(()=>(s=getExactlyOneTensor(s),repeat(s,this.n)))}getConfig(){const s={n:this.n},o=super.getConfig();return Object.assign(s,o),s}}RepeatVector.className="RepeatVector";registerClass(RepeatVector);class Reshape extends Layer{constructor(s){super(s),this.targetShape=s.targetShape;for(let o=0;o<this.targetShape.length;++o)this.isUnknown(this.targetShape[o])&&(this.targetShape[o]=null)}isUnknown(s){return s<0||s==null}fixUnknownDimension(s,o){const a="Total size of new array must be unchanged.",c=o.slice();let d=1,g=null;for(let j=0;j<c.length;++j){const _e=c[j];if(this.isUnknown(_e))if(g===null)g=j;else throw new ValueError("Can only specifiy one unknown dimension.");else d*=_e}const $=arrayProd(s);if(g!==null){if(d===0||$%d!==0)throw new ValueError(a);c[g]=$/d}else if($!==d)throw new ValueError(a);return c}computeOutputShape(s){let o=!1;for(let a=0;a<s.length;++a)if(this.isUnknown(s[a])){o=!0;break}return o?s.slice(0,1).concat(this.targetShape):s.slice(0,1).concat(this.fixUnknownDimension(s.slice(1),this.targetShape))}call(s,o){return tidy(()=>{this.invokeCallHook(s,o);const a=getExactlyOneTensor(s),c=a.shape,d=c.slice(0,1).concat(this.fixUnknownDimension(c.slice(1),this.targetShape));return reshape$2(a,d)})}getConfig(){const s={targetShape:this.targetShape},o=super.getConfig();return Object.assign(s,o),s}}Reshape.className="Reshape";registerClass(Reshape);class Permute extends Layer{constructor(s){if(super(s),s.dims==null)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(s.dims))throw new Error(`Permute constructor requires \`dims\` to be an Array, but received ${s.dims} instead.`);const o=range$2(1,s.dims.length+1);if(!arraysEqual(s.dims.slice().sort(),o))throw new Error("Invalid permutation `dims`: "+JSON.stringify(s.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=s.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new InputSpec({ndim:this.dims.length+1})]}computeOutputShape(s){s=getExactlyOneShape(s);const o=s.slice();return this.dims.forEach((a,c)=>{o[c+1]=s[a]}),o}call(s,o){return transpose$2(getExactlyOneTensor(s),this.dimsIncludingBatch)}getConfig(){const s={dims:this.dims},o=super.getConfig();return Object.assign(s,o),s}}Permute.className="Permute";registerClass(Permute);class Masking extends Layer{constructor(s){super(s??{}),this.supportsMasking=!0,s!=null?this.maskValue=s.maskValue==null?0:s.maskValue:this.maskValue=0}computeOutputShape(s){return s}getConfig(){const s=super.getConfig(),o={maskValue:this.maskValue};return Object.assign(o,s),o}computeMask(s,o){const a=getExactlyOneTensor(s);return any$2(notEqual$2(a,this.maskValue),-1)}call(s,o){return tidy(()=>{this.invokeCallHook(s,o);const a=getExactlyOneTensor(s),g=any$2(notEqual$2(a,this.maskValue),-1,!0);return mul(a,cast$3(g,a.dtype))})}}Masking.className="Masking";registerClass(Masking);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class Embedding extends Layer{constructor(s){if(super(s),this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",s.batchInputShape==null&&s.inputShape==null){let o=null;s.batchSize!=null&&(o=s.batchSize),s.inputLength==null?this.batchInputShape=[o,null]:this.batchInputShape=[o].concat(toList(s.inputLength))}this.inputDim=s.inputDim,assertPositiveInteger(this.inputDim,"inputDim"),this.outputDim=s.outputDim,assertPositiveInteger(this.outputDim,"outputDim"),this.embeddingsInitializer=getInitializer(s.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=getRegularizer(s.embeddingsRegularizer),this.activityRegularizer=getRegularizer(s.activityRegularizer),this.embeddingsConstraint=getConstraint(s.embeddingsConstraint),this.maskZero=s.maskZero,this.supportsMasking=s.maskZero,this.inputLength=s.inputLength}build(s){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(s){}computeMask(s,o){return tidy(()=>this.maskZero?(s=getExactlyOneTensor(s),notEqual$2(s,zerosLike$2(s))):null)}computeOutputShape(s){if(s=getExactlyOneShape(s),this.inputLength==null)return[...s,this.outputDim];const o=toList(this.inputLength);if(o.length!==s.length-1)throw new ValueError(`"inputLength" is ${this.inputLength}, but received input shape has shape ${s}`);{let a=0;for(let c=0;c<o.length;++c){const d=o[c],g=s[c+1];if(d!=null&&g!=null&&d!==g)throw new ValueError(`"inputLength" is ${this.inputLength}, but received input shape has shape ${s}`);d==null&&(o[a]=g),a++}}return[s[0],...o,this.outputDim]}call(s,o){return tidy(()=>{this.invokeCallHook(s,o);let a=getExactlyOneTensor(s);a.dtype!=="int32"&&(a=cast$2(a,"int32"));const c=gather(this.embeddings.read(),reshape$2(a,[a.size]));return reshape$2(c,getExactlyOneShape(this.computeOutputShape(a.shape)))})}getConfig(){const s={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:serializeInitializer(this.embeddingsInitializer),embeddingsRegularizer:serializeRegularizer(this.embeddingsRegularizer),activityRegularizer:serializeRegularizer(this.activityRegularizer),embeddingsConstraint:serializeConstraint(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},o=super.getConfig();return Object.assign(s,o),s}}Embedding.className="Embedding";registerClass(Embedding);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class Merge extends Layer{constructor(s){super(s||{}),this.supportsMasking=!0}mergeFunction(s){throw new NotImplementedError}computeElementwiseOpOutputShape(s,o){if(s==null||o==null)return null;if(s.length<o.length)return this.computeElementwiseOpOutputShape(o,s);if(o.length===0)return s;const a=s.slice(0,s.length-o.length);for(let c=0;c<o.length;++c){const d=s[s.length-o.length+c],g=o[c];if(d==null||g==null||d<0||g<0)a.push(null);else if(d===1)a.push(g);else if(g===1)a.push(d);else{if(d!==g)throw new ValueError("Operands could not be broadcast together with shapes "+JSON.stringify(s)+" "+JSON.stringify(o));a.push(d)}}return a}build(s){if(Array.isArray(s)&&!Array.isArray(s[0])&&(s=[getExactlyOneShape(s)]),s=s,s.length<2)throw new ValueError(`A merge layer should be called on an Array of at least 2 inputs. Got ${s.length} input(s).`);let o=[];for(const d of s)d!=null&&d[0]!==null&&o.push(d[0]);if(o=unique$2(o),o.length>1)throw new ValueError(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(s)}.`);let a=s[0]==null?null:s[0].slice(1);for(let d=1;d<s.length;++d){const g=s[d]==null?null:s[d].slice(1);a=this.computeElementwiseOpOutputShape(a,g)}const c=s.map(d=>d.length);s.indexOf(null)===-1&&unique$2(c).length===1?this.reshapeRequired=!1:this.reshapeRequired=!0}call(s,o){return tidy(()=>{if(s=s,this.reshapeRequired){const a=[],c=s.map(d=>d.rank);if(c.indexOf(null)===-1){const d=max$2(c);for(let g of s){const $=g.rank;for(let j=0;j<d-$;++j)g=expandDims$2(g,1);a.push(g)}return this.mergeFunction(a)}else{let d=!1;for(const j of s){const _e=j.rank;if(_e==null){const et=j.shape,_=et[0],b=et.slice(1).concat([_]);let tt=reshape$2(j,[_].concat(arrayProd(et.slice(1))));tt=transpose$2(tt,[1,0]),tt=reshape$2(tt,b),a.push(tt),d=!0}else if(_e>1){const et=range$2(1,_e).concat([0]);a.push(transpose$2(j,et)),d=!0}else a.push(j)}let g=this.mergeFunction(a);const $=g.rank;if(d){if($==null){const j=g.shape,_e=j.length,et=j[_e-1],_=[et].concat(j.slice(0,j.length-1));g=reshape$2(transpose$2(reshape$2(g,[-1,et]),[1,0]),_)}else if($>1){const j=[$-1].concat(range$2(0,$-1));g=transpose$2(g,j)}}return g}}else return this.mergeFunction(s)})}computeOutputShape(s){s=s;let o;s[0]==null?o=null:o=s[0].slice(1);for(let c=1;c<s.length;++c){const d=s[c]==null?null:s[c].slice(1);o=this.computeElementwiseOpOutputShape(o,d)}let a=[];for(const c of s)c!=null&&c[0]!==null&&a.push(c[0]);return a=unique$2(a),a.length===1?o=a.concat(o):o=[null].concat(o),o}computeMask(s,o){return tidy(()=>{if(o==null)return null;if(!Array.isArray(o))throw new ValueError("`mask` should be an Array");if(!Array.isArray(s))throw new ValueError("`inputs` should be an Array");if(o.length!==s.length)throw new ValueError(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${s.length} vs ${o.length})`);if(o.every(c=>c==null))return null;o=o.map(c=>c==null?c:expandDims$3(c,0));let a=o[0];for(let c=1;c<o.length-1;++c)a=logicalAnd$2(a,o[c]);return a})}}class Add extends Merge{constructor(s){super(s)}mergeFunction(s){return tidy(()=>{let o=s[0].clone();for(let a=1;a<s.length;++a)o=add$1(o,s[a]);return o})}}Add.className="Add";registerClass(Add);class Multiply extends Merge{constructor(s){super(s)}mergeFunction(s){return tidy(()=>{let o=s[0].clone();for(let a=1;a<s.length;++a)o=mul(o,s[a]);return o})}}Multiply.className="Multiply";registerClass(Multiply);class Average extends Merge{constructor(s){super(s)}mergeFunction(s){return tidy(()=>{let o=s[0].clone();for(let a=1;a<s.length;++a)o=add$1(o,s[a]);return mul(1/s.length,o)})}}Average.className="Average";registerClass(Average);class Maximum extends Merge{constructor(s){super(s)}mergeFunction(s){return tidy(()=>{let o=s[0];for(let a=1;a<s.length;++a)o=maximum$2(o,s[a]);return o})}}Maximum.className="Maximum";registerClass(Maximum);class Minimum extends Merge{constructor(s){super(s)}mergeFunction(s){return tidy(()=>{let o=s[0];for(let a=1;a<s.length;++a)o=minimum$2(o,s[a]);return o})}}Minimum.className="Minimum";registerClass(Minimum);class Concatenate extends Merge{constructor(s){super(s),this.DEFAULT_AXIS=-1,s==null&&(s={}),this.axis=s.axis==null?this.DEFAULT_AXIS:s.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(s){if(!(Array.isArray(s)&&Array.isArray(s[0]))||s.length===1)throw new ValueError("A `Concatenate` layer should be called on a list of at least 2 inputs");s=s;let o=!0;for(const c of s)if(c!=null){o=!1;break}if(o)return;const a=[];for(let c=0;c<s.length;++c){const d=s[c].slice();d.splice(this.axis,1);let g=!1;for(const $ of a)if(arraysEqual($,d)){g=!0;break}g||a.push(d)}if(a.length>1)throw new ValueError("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(s))}mergeFunction(s){return tidy(()=>concatenate(s,this.axis))}computeOutputShape(s){if(!(Array.isArray(s)&&Array.isArray(s[0])))throw new ValueError("A `Concatenate` layer should be called on a list of inputs.");const o=s,a=o[0].slice(),c=this.axis<0?a.length+this.axis:this.axis;for(const d of o.slice(1)){if(a[c]==null||d[c]==null){a[c]=null;break}a[c]+=d[c]}return a}computeMask(s,o){if(o==null)return null;if(!Array.isArray(o))throw new ValueError("`mask` should be an array for Concatenate");if(!Array.isArray(s))throw new ValueError("`inputs` should be an array for Concatenate");if(o.length!==s.length)throw new ValueError(`Mismatch in the length of mask (${o.length}) and the legnth of inputs (${s.length})`);return tidy(()=>{let a=!0;if(o.forEach(g=>{if(g!=null){a=!1;return}}),a)return null;const c=[];for(let g=0;g<s.length;++g)o[g]==null?c.push(cast$3(onesLike$2(s[g]),"bool")):o[g].rank<s[g].rank?c.push(expandDims$3(o[g],-1)):c.push(o[g]);const d=concat$2(c,this.axis);return all$2(d,-1,!1)})}getConfig(){const s={axis:this.axis},o=super.getConfig();return Object.assign(s,o),s}}Concatenate.className="Concatenate";registerClass(Concatenate);function interpretAxis(i,s){for(;i<0;)i+=s;return i}function batchDot(i,s,o){if(i.shape.length>3||s.shape.length>3)throw new NotImplementedError("batchDot is not implemented for tensors of 4D or higher rank yet");if(assert$1(i.shape.length>=2,()=>`batchDot requires the rank of x to be >= 2, but got ${i.shape.length}`),assert$1(i.shape.length>=2,()=>`batchDot requires the rank of y to be >= 2, but got ${s.shape.length}`),typeof o=="number"&&(o=[o,o]),i.dtype==="complex64"||s.dtype==="complex64")throw new NotImplementedError("batchDot is not implemented for complex64-type Tensors yet.");const a=i.shape.length,c=s.shape.length;o==null&&(o=[a-1,c-2]);const d=o;return tidy(()=>{let g;if(a>c){g=a-c;const j=[];for(let _e=0;_e<g;++_e)j.push(1);s=reshape$2(s,s.shape.concat(j))}else if(c>a){g=c-a;const j=[];for(let _e=0;_e<g;++_e)j.push(1);i=reshape$2(i,i.shape.concat(j))}else g=0;let $;if(i.shape.length===2&&s.shape.length===2)d[0]===d[1]?$=sum$2(mul(i,s),d[0]):$=sum$2(mul(transpose$2(i,[1,0]),s),d[1]);else{const j=d[0]!==i.shape.length-1,_e=d[1]===s.shape.length-1;$=matMul$1(i,s,j,_e)}if(g>0){let j;a>c?j=a+c-3:j=a-1;const _e=[];for(let et=j;et<j+g;++et)_e.push(et);$=squeeze($,_e)}return $.shape.length===1&&($=expandDims$3($,1)),$})}class Dot extends Merge{constructor(s){super(s),this.axes=s.axes,this.normalize=s.normalize==null?!1:s.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(s){assert$1(Array.isArray(s)&&s.length===2&&Array.isArray(s[0])&&Array.isArray(s[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");const o=s[0],a=s[1];if(o.length>3||a.length>3)throw new NotImplementedError("Dot layer does not support tensors of 4D or higher rank yet.");const c=this.interpretAxes(o,a);if(o[c[0]]!==a[c[1]])throw new ValueError(`Dimension incompatibility: ${o[c[0]]} !== ${a[c[1]]}`)}mergeFunction(s){if(s.length!==2)throw new ValueError(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${s.length} input(s).`);let o=s[0],a=s[1],c;return Array.isArray(this.axes)?c=this.axes.map((d,g)=>interpretAxis(d,s[g].shape.length)):c=[interpretAxis(this.axes,o.shape.length),interpretAxis(this.axes,a.shape.length)],this.normalize&&(o=l2Normalize(o,c[0]),a=l2Normalize(a,c[1])),batchDot(o,a,c)}interpretAxes(s,o){let a;return Array.isArray(this.axes)?a=this.axes:a=[interpretAxis(this.axes,s.length),interpretAxis(this.axes,o.length)],a}computeOutputShape(s){assert$1(Array.isArray(s)&&s.length===2&&Array.isArray(s[0])&&Array.isArray(s[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");const o=s[0].slice(),a=s[1].slice();if(o.length>3||a.length>3)throw new NotImplementedError("Dot layer does not support tensors of 4D or higher rank yet.");const c=this.interpretAxes(o,a);o.splice(c[0],1),a.splice(c[1],1),a.splice(0,1);const d=o.concat(a);return d.length===1&&d.push(1),d}computeMask(s,o){return null}getConfig(){const s={axes:this.axes,normalize:this.normalize},o=super.getConfig();return Object.assign(s,o),s}}Dot.className="Dot";registerClass(Dot);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class GaussianNoise extends Layer{constructor(s){super(s),this.supportsMasking=!0,this.stddev=s.stddev}computeOutputShape(s){return s}getConfig(){const s=super.getConfig(),o={stddev:this.stddev};return Object.assign(o,s),o}call(s,o){return tidy(()=>{this.invokeCallHook(s,o);const a=getExactlyOneTensor(s);return inTrainPhase(()=>add$1(randomNormal(a.shape,0,this.stddev),a),()=>a,o.training||!1)})}}GaussianNoise.className="GaussianNoise";registerClass(GaussianNoise);class GaussianDropout extends Layer{constructor(s){super(s),this.supportsMasking=!0,this.rate=s.rate}computeOutputShape(s){return s}getConfig(){const s=super.getConfig(),o={rate:this.rate};return Object.assign(o,s),o}call(s,o){return tidy(()=>{this.invokeCallHook(s,o);const a=getExactlyOneTensor(s);return this.rate>0&&this.rate<1?inTrainPhase(()=>{const d=Math.sqrt(this.rate/(1-this.rate));return mul(a,randomNormal(a.shape,1,d))},()=>a,o.training||!1):a})}}GaussianDropout.className="GaussianDropout";registerClass(GaussianDropout);class AlphaDropout extends Layer{constructor(s){super(s),this.supportsMasking=!0,this.rate=s.rate,this.noiseShape=s.noiseShape}_getNoiseShape(s){return this.noiseShape||getExactlyOneTensor(s).shape}computeOutputShape(s){return s}getConfig(){const s=super.getConfig(),o={rate:this.rate};return Object.assign(o,s),o}call(s,o){return tidy(()=>{if(this.rate<1&&this.rate>0){const a=this._getNoiseShape(s);return inTrainPhase(()=>{const d=getExactlyOneTensor(s),j=-1.6732632423543772*1.0507009873554805;let _e=greaterEqual$2(randomUniform(a),this.rate);_e=cast$2(_e,"float32");const et=((1-this.rate)*(1+this.rate*j**2))**-.5,_=-et*j*this.rate,b=add$1(mul(d,_e),mul(add$1(_e,-1),j));return add$1(mul(b,et),_)},()=>getExactlyOneTensor(s),o.training||!1)}return s})}}AlphaDropout.className="AlphaDropout";registerClass(AlphaDropout);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function batchNormalization(i,s,o,a,c,d=.001){let g;if(i.rank===2)g=batchNorm2d(i,s,o,a,c,d);else if(i.rank===3)g=batchNorm3d(i,s,o,a,c,d);else if(i.rank===4)g=batchNorm4d(i,s,o,a,c,d);else throw new NotImplementedError(`batchNormalization is not implemented for array of rank ${i.rank} yet`);return g}function regularNormalizeBatchInTraining(i,s,o,a,c=.001){return tidy(()=>{const d=moments(i,a),g=d.mean,$=d.variance;return[batchNormalization(i,g,$,o,s,c),g,$]})}function broadcastNormalizeBatchInTraining(i,s,o,a,c=.001){return tidy(()=>{const d=moments(i,a),g=d.mean,$=d.variance,j=[];for(const nt of range$2(0,i.rank))a.indexOf(nt)!==-1?j.push(1):j.push(i.shape[nt]);const _e=reshape$2(g,j),et=reshape$2($,j),_=s==null?null:reshape$2(s,j),b=o==null?null:reshape$2(o,j);return[batchNormalization(i,_e,et,b,_,c),g,$]})}function normalizeBatchInTraining(i,s,o,a,c=.001){return arraysEqual(a.slice().sort(),range$2(0,i.rank-1))?regularNormalizeBatchInTraining(i,s,o,a,c):broadcastNormalizeBatchInTraining(i,s,o,a,c)}class BatchNormalization extends Layer{constructor(s){s==null&&(s={}),super(s),this.supportsMasking=!0,this.axis=s.axis==null?-1:s.axis,this.momentum=s.momentum==null?.99:s.momentum,this.epsilon=s.epsilon==null?.001:s.epsilon,this.center=s.center==null?!0:s.center,this.scale=s.scale==null?!0:s.scale,this.betaInitializer=getInitializer(s.betaInitializer||"zeros"),this.gammaInitializer=getInitializer(s.gammaInitializer||"ones"),this.movingMeanInitializer=getInitializer(s.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=getInitializer(s.movingVarianceInitializer||"ones"),this.betaConstraint=getConstraint(s.betaConstraint),this.gammaConstraint=getConstraint(s.gammaConstraint),this.betaRegularizer=getRegularizer(s.betaRegularizer),this.gammaRegularizer=getRegularizer(s.gammaRegularizer)}build(s){s=getExactlyOneShape(s);const o=this.axis>=0?this.axis:this.axis+s.length,a=s[o];if(a==null)throw new ValueError(`Axis ${o} of input tensor should have a defined dimension but the layer received an input with shape ${JSON.stringify(s)}.`);this.inputSpec=[new InputSpec({ndim:s.length,axes:{[o]:a}})];const c=[a];this.scale&&(this.gamma=this.addWeight("gamma",c,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",c,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",c,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",c,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(s,o){return tidy(()=>{const a=o.training==null?!1:o.training,c=getExactlyOneTensor(s),d=c.shape,g=d.length,$=range$2(0,g),j=this.axis>=0?this.axis:this.axis+g;$.splice(j,1);const _e=pyListRepeat(1,g);_e[j]=d[j];const et=$.slice();et.sort();const _=!arraysEqual(et,range$2(0,g).slice(0,g-1)),b=()=>{if(_){const it=reshape$2(this.movingMean.read(),_e),at=reshape$2(this.movingVariance.read(),_e),lt=this.center?reshape$2(this.beta.read(),_e):null,ut=this.scale?reshape$2(this.gamma.read(),_e):null;return batchNormalization(c,it,at,lt,ut,this.epsilon)}else return batchNormalization(c,this.movingMean.read(),this.movingVariance.read(),this.beta==null?null:this.beta.read(),this.gamma==null?null:this.gamma.read(),this.epsilon)};if(!a)return b();const[tt,nt,rt]=normalizeBatchInTraining(c,this.gamma.read(),this.beta.read(),$,this.epsilon),st=(it,at,lt)=>{tidy(()=>{const ut=1-lt,ct=it.read(),dt=mul(sub$2(ct,at),ut);it.write(sub$2(ct,dt))})};return(()=>{st(this.movingMean,nt,this.momentum),st(this.movingVariance,rt,this.momentum)})(),tt})}getConfig(){const s={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:serializeInitializer(this.betaInitializer),gammaInitializer:serializeInitializer(this.gammaInitializer),movingMeanInitializer:serializeInitializer(this.movingMeanInitializer),movingVarianceInitializer:serializeInitializer(this.movingVarianceInitializer),betaRegularizer:serializeRegularizer(this.betaRegularizer),gammaRegularizer:serializeRegularizer(this.gammaRegularizer),betaConstraint:serializeConstraint(this.betaConstraint),gammaConstraint:serializeConstraint(this.gammaConstraint)},o=super.getConfig();return Object.assign(s,o),s}}BatchNormalization.className="BatchNormalization";registerClass(BatchNormalization);class LayerNormalization extends Layer{constructor(s){if(s==null&&(s={}),super(s),this.axis=s.axis==null?-1:s.axis,typeof this.axis=="number"){if(!Number.isInteger(this.axis))throw new Error(`Expected axis to be an integer, but received ${this.axis}`)}else if(Array.isArray(this.axis)){for(const o of this.axis)if(!Number.isInteger(o))throw new Error(`Expected axis to be an array of integers, but received ${JSON.stringify(this.axis)}`)}else throw new Error(`Expected axis to be an integer or an array of integers, but received ${JSON.stringify(this.axis)}`);this.epsilon=s.epsilon==null?.001:s.epsilon,this.center=s.center==null?!0:s.center,this.scale=s.scale==null?!0:s.scale,this.betaInitializer=getInitializer(s.betaInitializer||"zeros"),this.gammaInitializer=getInitializer(s.gammaInitializer||"ones"),this.betaRegularizer=getRegularizer(s.betaRegularizer),this.gammaRegularizer=getRegularizer(s.gammaRegularizer),this.supportsMasking=!0}build(s){s=getExactlyOneShape(s);const o=s.length;typeof this.axis=="number"&&(this.axis=[this.axis]);for(let d=0;d<this.axis.length;++d)this.axis[d]<0&&(this.axis[d]+=o);for(const d of this.axis)if(d<0||d>=o)throw new Error(`Invalid axis: ${d}`);if(this.axis.length!==unique$2(this.axis).length)throw new Error(`Found duplicate axes in: ${this.axis}`);const a=this.axis.map(d=>s[d]),c=!0;this.scale?this.gamma=this.addWeight("gamma",a,"float32",this.gammaInitializer,this.gammaRegularizer,c):this.gamma=null,this.center?this.beta=this.addWeight("beta",a,"float32",this.betaInitializer,this.betaRegularizer,c):this.beta=null,this.built=!0}call(s,o){const a=getExactlyOneTensor(s),c=a.shape,d=c.length;return tidy(()=>{let{mean:$,variance:j}=moments(a,this.axis,!0);const _e=pyListRepeat(1,d);for(const rt of this.axis)_e[rt]=c[rt];const et=rt=>rt!=null&&rt.shape.length!==d?reshape$2(rt,_e):rt;let _=this.scale?et(this.gamma.read()):null,b=this.center?et(this.beta.read()):null;const tt=[],nt=[];for(let rt=0;rt<d;++rt)this.axis.indexOf(rt)!==-1?(tt.push(c[rt]),nt.push(1)):(tt.push(1),nt.push(c[rt]));return $=tile$3($,tt),j=tile$3(j,tt),_!=null&&(_=tile$3(_,nt)),b!=null&&(b=tile$3(b,nt)),batchNormalization(a,$,j,b,_,this.epsilon)})}getConfig(){const s={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:serializeInitializer(this.betaInitializer),gammaInitializer:serializeInitializer(this.gammaInitializer),betaRegularizer:serializeRegularizer(this.betaRegularizer),gammaRegularizer:serializeRegularizer(this.gammaRegularizer)},o=super.getConfig();return Object.assign(s,o),s}}LayerNormalization.className="LayerNormalization";registerClass(LayerNormalization);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function spatial2dPadding(i,s,o){return tidy(()=>{if(i.rank!==4)throw new ValueError(`temporalPadding expects input tensor to be 4-D, but received a ${i.rank}-D tensor.`);if(s==null&&(s=[[1,1],[1,1]]),s.length!==2||s[0].length!==2||s[1].length!==2)throw new ValueError("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(o==null&&(o=imageDataFormat()),o!=="channelsLast"&&o!=="channelsFirst")throw new ValueError(`Unknown data format: ${o}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let a;return o==="channelsFirst"?a=[[0,0],[0,0],s[0],s[1]]:a=[[0,0],s[0],s[1],[0,0]],pad(i,a)})}class ZeroPadding2D extends Layer{constructor(s){if(s==null&&(s={}),super(s),this.dataFormat=s.dataFormat==null?imageDataFormat():s.dataFormat,s.padding==null)this.padding=[[1,1],[1,1]];else if(typeof s.padding=="number")this.padding=[[s.padding,s.padding],[s.padding,s.padding]];else{if(s.padding=s.padding,s.padding.length!==2)throw new ValueError(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${s.padding.length} array.`);let o,a;if(typeof s.padding[0]=="number")o=[s.padding[0],s.padding[0]],a=[s.padding[1],s.padding[1]];else{if(s.padding=s.padding,s.padding[0].length!==2)throw new ValueError(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${s.padding[0].length} array.`);if(o=s.padding[0],s.padding[1].length!==2)throw new ValueError(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${s.padding[1].length} array.`);a=s.padding[1]}this.padding=[o,a]}this.inputSpec=[new InputSpec({ndim:4})]}computeOutputShape(s){s=getExactlyOneShape(s);let o,a;return this.dataFormat==="channelsFirst"?(s[2]!=null&&s[2]>=0?o=s[2]+this.padding[0][0]+this.padding[0][1]:o=null,s[3]!=null&&s[3]>=0?a=s[3]+this.padding[1][0]+this.padding[1][1]:a=null,[s[0],s[1],o,a]):(s[1]!=null&&s[1]>=0?o=s[1]+this.padding[0][0]+this.padding[0][1]:o=null,s[2]!=null&&s[2]>=0?a=s[2]+this.padding[1][0]+this.padding[1][1]:a=null,[s[0],o,a,s[3]])}call(s,o){return tidy(()=>spatial2dPadding(getExactlyOneTensor(s),this.padding,this.dataFormat))}getConfig(){const s={padding:this.padding,dataFormat:this.dataFormat},o=super.getConfig();return Object.assign(s,o),s}}ZeroPadding2D.className="ZeroPadding2D";registerClass(ZeroPadding2D);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function pool2d(i,s,o,a,c,d){return tidy(()=>{checkDataFormat(c),checkPoolMode(d),checkPaddingMode(a),o==null&&(o=[1,1]),a==null&&(a="valid"),c==null&&(c=imageDataFormat()),d==null&&(d="max"),i=preprocessConv2DInput(i,c);let g;const $=a==="same"?"same":"valid";return d==="max"?g=maxPool$2(i,s,o,$):g=avgPool$2(i,s,o,$),c==="channelsFirst"&&(g=transpose$2(g,[0,3,1,2])),g})}function pool3d$1(i,s,o,a,c,d){return tidy(()=>{checkDataFormat(c),checkPoolMode(d),checkPaddingMode(a),o==null&&(o=[1,1,1]),a==null&&(a="valid"),c==null&&(c=imageDataFormat()),d==null&&(d="max"),i=preprocessConv3DInput(i,c);let g;const $=a==="same"?"same":"valid";return d==="max"?g=maxPool3d$1(i,s,o,$):g=avgPool3d(i,s,o,$),c==="channelsFirst"&&(g=transpose$2(g,[0,4,1,2,3])),g})}class Pooling1D extends Layer{constructor(s){if(s.poolSize==null&&(s.poolSize=2),super(s),typeof s.poolSize=="number")this.poolSize=[s.poolSize];else if(Array.isArray(s.poolSize)&&s.poolSize.length===1&&typeof s.poolSize[0]=="number")this.poolSize=s.poolSize;else throw new ValueError(`poolSize for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(s.poolSize)}`);if(assertPositiveInteger(this.poolSize,"poolSize"),s.strides==null)this.strides=this.poolSize;else if(typeof s.strides=="number")this.strides=[s.strides];else if(Array.isArray(s.strides)&&s.strides.length===1&&typeof s.strides[0]=="number")this.strides=s.strides;else throw new ValueError(`strides for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(s.strides)}`);assertPositiveInteger(this.strides,"strides"),this.padding=s.padding==null?"valid":s.padding,checkPaddingMode(this.padding),this.inputSpec=[new InputSpec({ndim:3})]}computeOutputShape(s){s=getExactlyOneShape(s);const o=convOutputLength(s[1],this.poolSize[0],this.padding,this.strides[0]);return[s[0],o,s[2]]}call(s,o){return tidy(()=>{this.invokeCallHook(s,o),s=expandDims$2(getExactlyOneTensor(s),2);const a=this.poolingFunction(getExactlyOneTensor(s),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return squeeze(a,[2])})}getConfig(){const s={poolSize:this.poolSize,padding:this.padding,strides:this.strides},o=super.getConfig();return Object.assign(s,o),s}}class MaxPooling1D extends Pooling1D{constructor(s){super(s)}poolingFunction(s,o,a,c,d){return checkDataFormat(d),checkPaddingMode(c),pool2d(s,o,a,c,d,"max")}}MaxPooling1D.className="MaxPooling1D";registerClass(MaxPooling1D);class AveragePooling1D extends Pooling1D{constructor(s){super(s)}poolingFunction(s,o,a,c,d){return checkDataFormat(d),checkPaddingMode(c),pool2d(s,o,a,c,d,"avg")}}AveragePooling1D.className="AveragePooling1D";registerClass(AveragePooling1D);class Pooling2D extends Layer{constructor(s){if(s.poolSize==null&&(s.poolSize=[2,2]),super(s),this.poolSize=Array.isArray(s.poolSize)?s.poolSize:[s.poolSize,s.poolSize],s.strides==null)this.strides=this.poolSize;else if(Array.isArray(s.strides)){if(s.strides.length!==2)throw new ValueError(`If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length ${s.strides.length}.`);this.strides=s.strides}else this.strides=[s.strides,s.strides];assertPositiveInteger(this.poolSize,"poolSize"),assertPositiveInteger(this.strides,"strides"),this.padding=s.padding==null?"valid":s.padding,this.dataFormat=s.dataFormat==null?"channelsLast":s.dataFormat,checkDataFormat(this.dataFormat),checkPaddingMode(this.padding),this.inputSpec=[new InputSpec({ndim:4})]}computeOutputShape(s){s=getExactlyOneShape(s);let o=this.dataFormat==="channelsFirst"?s[2]:s[1],a=this.dataFormat==="channelsFirst"?s[3]:s[2];return o=convOutputLength(o,this.poolSize[0],this.padding,this.strides[0]),a=convOutputLength(a,this.poolSize[1],this.padding,this.strides[1]),this.dataFormat==="channelsFirst"?[s[0],s[1],o,a]:[s[0],o,a,s[3]]}call(s,o){return tidy(()=>(this.invokeCallHook(s,o),this.poolingFunction(getExactlyOneTensor(s),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){const s={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},o=super.getConfig();return Object.assign(s,o),s}}class MaxPooling2D extends Pooling2D{constructor(s){super(s)}poolingFunction(s,o,a,c,d){return checkDataFormat(d),checkPaddingMode(c),pool2d(s,o,a,c,d,"max")}}MaxPooling2D.className="MaxPooling2D";registerClass(MaxPooling2D);class AveragePooling2D extends Pooling2D{constructor(s){super(s)}poolingFunction(s,o,a,c,d){return checkDataFormat(d),checkPaddingMode(c),pool2d(s,o,a,c,d,"avg")}}AveragePooling2D.className="AveragePooling2D";registerClass(AveragePooling2D);class Pooling3D extends Layer{constructor(s){if(s.poolSize==null&&(s.poolSize=[2,2,2]),super(s),this.poolSize=Array.isArray(s.poolSize)?s.poolSize:[s.poolSize,s.poolSize,s.poolSize],s.strides==null)this.strides=this.poolSize;else if(Array.isArray(s.strides)){if(s.strides.length!==3)throw new ValueError(`If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length ${s.strides.length}.`);this.strides=s.strides}else this.strides=[s.strides,s.strides,s.strides];assertPositiveInteger(this.poolSize,"poolSize"),assertPositiveInteger(this.strides,"strides"),this.padding=s.padding==null?"valid":s.padding,this.dataFormat=s.dataFormat==null?"channelsLast":s.dataFormat,checkDataFormat(this.dataFormat),checkPaddingMode(this.padding),this.inputSpec=[new InputSpec({ndim:5})]}computeOutputShape(s){s=getExactlyOneShape(s);let o=this.dataFormat==="channelsFirst"?s[2]:s[1],a=this.dataFormat==="channelsFirst"?s[3]:s[2],c=this.dataFormat==="channelsFirst"?s[4]:s[3];return o=convOutputLength(o,this.poolSize[0],this.padding,this.strides[0]),a=convOutputLength(a,this.poolSize[1],this.padding,this.strides[1]),c=convOutputLength(c,this.poolSize[2],this.padding,this.strides[2]),this.dataFormat==="channelsFirst"?[s[0],s[1],o,a,c]:[s[0],o,a,c,s[4]]}call(s,o){return tidy(()=>(this.invokeCallHook(s,o),this.poolingFunction(getExactlyOneTensor(s),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){const s={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},o=super.getConfig();return Object.assign(s,o),s}}class MaxPooling3D extends Pooling3D{constructor(s){super(s)}poolingFunction(s,o,a,c,d){return checkDataFormat(d),checkPaddingMode(c),pool3d$1(s,o,a,c,d,"max")}}MaxPooling3D.className="MaxPooling3D";registerClass(MaxPooling3D);class AveragePooling3D extends Pooling3D{constructor(s){super(s)}poolingFunction(s,o,a,c,d){return checkDataFormat(d),checkPaddingMode(c),pool3d$1(s,o,a,c,d,"avg")}}AveragePooling3D.className="AveragePooling3D";registerClass(AveragePooling3D);class GlobalPooling1D extends Layer{constructor(s){super(s),this.inputSpec=[new InputSpec({ndim:3})]}computeOutputShape(s){return[s[0],s[2]]}call(s,o){throw new NotImplementedError}}class GlobalAveragePooling1D extends GlobalPooling1D{constructor(s){super(s||{})}call(s,o){return tidy(()=>{const a=getExactlyOneTensor(s);return mean$1(a,1)})}}GlobalAveragePooling1D.className="GlobalAveragePooling1D";registerClass(GlobalAveragePooling1D);class GlobalMaxPooling1D extends GlobalPooling1D{constructor(s){super(s||{})}call(s,o){return tidy(()=>{const a=getExactlyOneTensor(s);return max$3(a,1)})}}GlobalMaxPooling1D.className="GlobalMaxPooling1D";registerClass(GlobalMaxPooling1D);class GlobalPooling2D extends Layer{constructor(s){super(s),this.dataFormat=s.dataFormat==null?"channelsLast":s.dataFormat,checkDataFormat(this.dataFormat),this.inputSpec=[new InputSpec({ndim:4})]}computeOutputShape(s){return s=s,this.dataFormat==="channelsLast"?[s[0],s[3]]:[s[0],s[1]]}call(s,o){throw new NotImplementedError}getConfig(){const s={dataFormat:this.dataFormat},o=super.getConfig();return Object.assign(s,o),s}}class GlobalAveragePooling2D extends GlobalPooling2D{call(s,o){return tidy(()=>{const a=getExactlyOneTensor(s);return this.dataFormat==="channelsLast"?mean$1(a,[1,2]):mean$1(a,[2,3])})}}GlobalAveragePooling2D.className="GlobalAveragePooling2D";registerClass(GlobalAveragePooling2D);class GlobalMaxPooling2D extends GlobalPooling2D{call(s,o){return tidy(()=>{const a=getExactlyOneTensor(s);return this.dataFormat==="channelsLast"?max$3(a,[1,2]):max$3(a,[2,3])})}}GlobalMaxPooling2D.className="GlobalMaxPooling2D";registerClass(GlobalMaxPooling2D);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class Wrapper extends Layer{constructor(s){super(s),this.layer=s.layer}build(s){this.built=!0}get trainable(){return this.layer!=null?this.layer.trainable:!1}set trainable(s){this.layer!=null&&(this.layer.trainable=s)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(s){this.layer.setWeights(s)}getConfig(){const s={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},o=super.getConfig();return Object.assign(s,o),s}setFastWeightInitDuringBuild(s){super.setFastWeightInitDuringBuild(s),this.layer!=null&&this.layer.setFastWeightInitDuringBuild(s)}static fromConfig(s,o,a={}){const c=o.layer,d=deserialize(c,a);delete o.layer;const g={layer:d};return Object.assign(g,o),new s(g)}}class TimeDistributed extends Wrapper{constructor(s){super(s),this.supportsMasking=!0}build(s){if(s=getExactlyOneShape(s),s.length<3)throw new ValueError(`TimeDistributed layer expects an input shape >= 3D, but received input shape ${JSON.stringify(s)}`);this.inputSpec=[{shape:s}];const o=[s[0]].concat(s.slice(2));this.layer.built||(this.layer.build(o),this.layer.built=!0),super.build(s)}computeOutputShape(s){s=getExactlyOneShape(s);const o=[s[0]].concat(s.slice(2)),a=this.layer.computeOutputShape(o),c=s[1];return[a[0],c].concat(a.slice(1))}call(s,o){return tidy(()=>(s=getExactlyOneTensor(s),rnn((g,$)=>[getExactlyOneTensor(this.layer.call(g,o)),[]],s,[],!1,null,null,!1,!0)[1]))}}TimeDistributed.className="TimeDistributed";registerClass(TimeDistributed);function checkBidirectionalMergeMode(i){checkStringTypeUnionValue(VALID_BIDIRECTIONAL_MERGE_MODES,"BidirectionalMergeMode",i)}const DEFAULT_BIDIRECTIONAL_MERGE_MODE="concat";class Bidirectional extends Wrapper{constructor(s){super(s);const o=s.layer.getConfig(),a={};a.className=s.layer.getClassName(),a.config=o,this.forwardLayer=deserialize(a),o.goBackwards=o.goBackwards!==!0;const c={};if(c.className=s.layer.getClassName(),c.config=o,this.backwardLayer=deserialize(c),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=s.mergeMode===void 0?DEFAULT_BIDIRECTIONAL_MERGE_MODE:s.mergeMode,checkBidirectionalMergeMode(this.mergeMode),s.weights)throw new NotImplementedError("weights support is not implemented for Bidirectional layer yet.");this._stateful=s.layer.stateful,this.returnSequences=s.layer.returnSequences,this.returnState=s.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=s.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(s){this._trainable=s,this.forwardLayer!=null&&(this.forwardLayer.trainable=s),this.backwardLayer!=null&&(this.backwardLayer.trainable=s)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(s){const o=s.length,a=Math.floor(o/2);this.forwardLayer.setWeights(s.slice(0,a)),this.backwardLayer.setWeights(s.slice(a))}computeOutputShape(s){let o=this.forwardLayer.computeOutputShape(s);Array.isArray(o)&&Array.isArray(o[0])||(o=[o]),o=o;let a,c,d;return this.returnState&&(d=o.slice(1)),a=o[0],a=a,this.mergeMode==="concat"?(a[a.length-1]*=2,c=[a]):this.mergeMode==null?c=[a,a.slice()]:c=[a],this.returnState?this.mergeMode==null?c.concat(d).concat(d.slice()):[a].concat(d).concat(d.slice()):singletonOrArray(c)}apply(s,o){let a=o==null?null:o.initialState,c=o==null?null:o.constants;o==null&&(o={});const d=standardizeArgs(s,a,c,this.numConstants);if(s=d.inputs,a=d.initialState,c=d.constants,Array.isArray(s)&&(a=s.slice(1),s=s[0]),(a==null||a.length===0)&&c==null)return super.apply(s,o);const g=[],$=[];if(a!=null){const _e=a.length;if(_e%2>0)throw new ValueError("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");o.initialState=a,g.push(...a);const et=a.map(_=>new InputSpec({shape:_.shape}));this.forwardLayer.stateSpec=et.slice(0,_e/2),this.backwardLayer.stateSpec=et.slice(_e/2),$.push(...et)}if(c!=null)throw new NotImplementedError("Support for constants in Bidirectional layers is not implemented yet.");const j=g[0]instanceof SymbolicTensor;for(const _e of g)if(_e instanceof SymbolicTensor!==j)throw new ValueError("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(j){const _e=[s].concat(g),et=this.inputSpec.concat($),_=this.inputSpec;this.inputSpec=et;const b=super.apply(_e,o);return this.inputSpec=_,b}else return super.apply(s,o)}call(s,o){return tidy(()=>{const a=o.initialState;let c,d;if(a==null)c=this.forwardLayer.call(s,o),d=this.backwardLayer.call(s,o);else{const j=a.slice(0,a.length/2),_e=a.slice(a.length/2);c=this.forwardLayer.call(s,Object.assign(o,{initialState:j})),d=this.backwardLayer.call(s,Object.assign(o,{initialState:_e}))}let g;this.returnState&&(Array.isArray(c)&&(g=c.slice(1).concat(d.slice(1))),c=c[0],d=d[0]),this.returnSequences&&(d=reverse$2(d,1));let $;return this.mergeMode==="concat"?$=concatenate([c,d]):this.mergeMode==="sum"?$=add$1(c,d):this.mergeMode==="ave"?$=mul(.5,add$1(c,d)):this.mergeMode==="mul"?$=mul(c,d):this.mergeMode==null&&($=[c,d]),this.returnState?this.mergeMode==null?$.concat(g):[$].concat(g):$})}resetStates(s){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(s){nameScope(this.forwardLayer.name,()=>{this.forwardLayer.build(s)}),nameScope(this.backwardLayer.name,()=>{this.backwardLayer.build(s)}),this.built=!0}computeMask(s,o){Array.isArray(o)&&(o=o[0]);let a;if(this.returnSequences?this.mergeMode==null?a=[o,o]:a=o:this.mergeMode==null?a=[null,null]:a=null,this.returnState){const d=this.forwardLayer.states.map(g=>null);return Array.isArray(a)?a.concat(d).concat(d):[a].concat(d).concat(d)}else return a}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(s){super.setFastWeightInitDuringBuild(s),this.forwardLayer!=null&&this.forwardLayer.setFastWeightInitDuringBuild(s),this.backwardLayer!=null&&this.backwardLayer.setFastWeightInitDuringBuild(s)}getConfig(){const s={mergeMode:this.mergeMode},o=super.getConfig();return Object.assign(s,o),s}static fromConfig(s,o){const a=deserialize(o.layer);if(delete o.layer,o.numConstants!=null)throw new NotImplementedError("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");const c=o;return c.layer=a,new s(c)}}Bidirectional.className="Bidirectional";registerClass(Bidirectional);/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class Rescaling extends Layer{constructor(s){super(s),this.scale=s.scale,s.offset?this.offset=s.offset:this.offset=0}getConfig(){const s={scale:this.scale,offset:this.offset},o=super.getConfig();return Object.assign(s,o),s}call(s,o){return tidy(()=>(s=getExactlyOneTensor(s),s.dtype!=="float32"&&(s=cast$2(s,"float32")),add$1(mul(s,this.scale),this.offset)))}}Rescaling.className="Rescaling";registerClass(Rescaling);/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const{resizeBilinear:resizeBilinear$2,cropAndResize:cropAndResize$2}=image;class CenterCrop extends Layer{constructor(s){super(s),this.height=s.height,this.width=s.width}centerCrop(s,o,a,c,d,g,$,j){return tidy(()=>{let _e,et=!1;const _=o/g,b=a/$,tt=(c+o)/g,nt=(d+a)/$,rt=[_,b,tt,nt],st=[];s.rank===3?(et=!0,_e=stack([s])):_e=s;for(let ut=0;ut<_e.shape[0];ut++)st.push(rt);const ot=tensor(st,[st.length,4]),it=range$3(0,st.length,1,"int32"),lt=cropAndResize$2(_e,ot,it,[c,d],"nearest");return cast$2(et?getExactlyOneTensor(unstack(lt)):lt,j)})}upsize(s,o,a,c){return tidy(()=>{const d=resizeBilinear$2(s,[o,a]);return cast$2(d,c)})}call(s,o){return tidy(()=>{const a=getExactlyOneTensor(s),c=a.dtype,d=a.shape,g=d[d.length-3],$=d[d.length-2];let j=0;g!==this.height&&(j=Math.floor((g-this.height)/2));let _e=0;return $!==this.width&&(_e=Math.floor(($-this.width)/2),_e===0&&(_e=1)),j>=0&&_e>=0?this.centerCrop(a,j,_e,this.height,this.width,g,$,c):this.upsize(s,this.height,this.width,c)})}getConfig(){const s={height:this.height,width:this.width},o=super.getConfig();return Object.assign(s,o),s}computeOutputShape(s){s=getExactlyOneShape(s);const o=s.length-3,a=s.length-2;return s[o]=this.height,s[a]=this.width,s}}CenterCrop.className="CenterCrop";registerClass(CenterCrop);/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function encodeCategoricalInputs(i,s,o,a){let c=getExactlyOneTensor(i);if(c.dtype!=="int32"&&(c=cast$2(c,"int32")),s==="int")return c;const d=c.shape;if(c.rank===0&&(c=expandDims$3(c,-1)),s==="oneHot"&&c.shape[c.shape.length-1]!==1&&(c=expandDims$3(c,-1)),c.rank>2)throw new ValueError(`When outputMode is not int, maximum output rank is 2 Received outputMode ${s} and input shape ${d} which would result in output rank ${c.rank}.`);const g=["multiHot","oneHot"].includes(s),$=c;let j;if(typeof a<"u"&&s==="count"?j=denseBincount$2($,a,o,g):j=denseBincount$2($,[],o,g),s!=="tfIdf")return j;if(a)return mul(j,a);throw new ValueError("When outputMode is 'tfIdf', weights must be provided.")}/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class CategoryEncoding extends Layer{constructor(s){super(s),this.numTokens=s.numTokens,s.outputMode?this.outputMode=s.outputMode:this.outputMode="multiHot"}getConfig(){const s={numTokens:this.numTokens,outputMode:this.outputMode},o=super.getConfig();return Object.assign(s,o),s}computeOutputShape(s){return s=getExactlyOneShape(s),s==null?[this.numTokens]:this.outputMode==="oneHot"&&s[s.length-1]!==1?(s.push(this.numTokens),s):(s[s.length-1]=this.numTokens,s)}call(s,o){return tidy(()=>{s=getExactlyOneTensor(s),s.dtype!=="int32"&&(s=cast$2(s,"int32"));let a;if(typeof o.countWeights<"u"){if(this.outputMode!=="count")throw new ValueError(`countWeights is not used when outputMode !== count.
              Received countWeights=${o.countWeights}`);a=getExactlyOneTensor(o.countWeights)}const c=max$3(s),d=min$3(s),g=greater$2(this.numTokens,c).bufferSync().get(0),$=greaterEqual$2(d,0).bufferSync().get(0);if(!(g&&$))throw new ValueError(`Input values must be between 0 < values <= numTokens with numTokens=${this.numTokens}`);return encodeCategoricalInputs(s,this.outputMode,this.numTokens,a)})}}CategoryEncoding.className="CategoryEncoding";registerClass(CategoryEncoding);/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const INTERPOLATION_KEYS$1=["bilinear","nearest"],INTERPOLATION_METHODS$1=new Set(INTERPOLATION_KEYS$1);class Resizing extends Layer{constructor(s){if(super(s),this.height=s.height,this.width=s.width,s.interpolation)if(INTERPOLATION_METHODS$1.has(s.interpolation))this.interpolation=s.interpolation;else throw new ValueError(`Invalid interpolation parameter: ${s.interpolation} is not implemented`);else this.interpolation="bilinear";this.cropToAspectRatio=!!s.cropToAspectRatio}computeOutputShape(s){s=getExactlyOneShape(s);const o=s[2];return[this.height,this.width,o]}getConfig(){const s={height:this.height,width:this.width,interpolation:this.interpolation,cropToAspectRatio:this.cropToAspectRatio},o=super.getConfig();return Object.assign(s,o),s}call(s,o){return tidy(()=>{const a=[this.height,this.width];if(this.interpolation==="bilinear")return image.resizeBilinear(s,a,!this.cropToAspectRatio);if(this.interpolation==="nearest")return image.resizeNearestNeighbor(s,a,!this.cropToAspectRatio);throw new Error(`Interpolation is ${this.interpolation} but only ${[...INTERPOLATION_METHODS$1]} are supported`)})}}Resizing.className="Resizing";registerClass(Resizing);/**
 * @license
 * Copyright 2023 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class RandomSeed{constructor(s){this.seed=s}next(){if(this.seed!==void 0)return this.seed++}}RandomSeed.className="RandomSeed";/**
 * @license
 * Copyright 2023 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class BaseRandomLayer extends Layer{constructor(s){super(s),this.randomGenerator=new RandomSeed(s.seed)}getConfig(){const s={seed:this.randomGenerator.seed},o=super.getConfig();return Object.assign(s,o),s}}BaseRandomLayer.className="BaseRandomLayer";/**
 * @license
 * Copyright 2023 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const INTERPOLATION_KEYS=["bilinear","nearest"],INTERPOLATION_METHODS=new Set(INTERPOLATION_KEYS);class RandomWidth extends BaseRandomLayer{constructor(s){super(s);const{factor:o,interpolation:a="bilinear"}=s;if(this.factor=o,Array.isArray(this.factor)&&this.factor.length===2)this.widthLower=this.factor[0],this.widthUpper=this.factor[1];else if(!Array.isArray(this.factor)&&this.factor>0)this.widthLower=-this.factor,this.widthUpper=this.factor;else throw new ValueError(`Invalid factor: ${this.factor}. Must be positive number or tuple of 2 numbers`);if(this.widthLower<-1||this.widthUpper<-1)throw new ValueError(`factor must have values larger than -1. Got: ${this.factor}`);if(this.widthUpper<this.widthLower)throw new ValueError(`factor cannot have upper bound less than lower bound.
        Got upper bound: ${this.widthUpper}.
        Got lower bound: ${this.widthLower}
      `);if(a)if(INTERPOLATION_METHODS.has(a))this.interpolation=a;else throw new ValueError(`Invalid interpolation parameter: ${a} is not implemented`)}getConfig(){const s={factor:this.factor,interpolation:this.interpolation},o=super.getConfig();return Object.assign(s,o),s}computeOutputShape(s){s=getExactlyOneShape(s);const o=s[2];return[this.imgHeight,-1,o]}call(s,o){return tidy(()=>{const a=getExactlyOneTensor(s);this.imgHeight=a.shape[a.shape.length-3];const c=a.shape[a.shape.length-2];this.widthFactor=randomUniform([1],1+this.widthLower,1+this.widthUpper,"float32",this.randomGenerator.next());let d=this.widthFactor.dataSync()[0]*c;d=Math.round(d);const g=[this.imgHeight,d];switch(this.interpolation){case"bilinear":return image.resizeBilinear(s,g);case"nearest":return image.resizeNearestNeighbor(s,g);default:throw new Error(`Interpolation is ${this.interpolation}
          but only ${[...INTERPOLATION_METHODS]} are supported`)}})}}RandomWidth.className="RandomWidth";registerClass(RandomWidth);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function dense(i){return new Dense(i)}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ENV$1=env();ENV$1.registerFlag("KEEP_INTERMEDIATE_TENSORS",()=>!1,i=>{i&&console.warn("Keep intermediate tensors is ON. This will print the values of all intermediate tensors during model inference. Not all models support this mode. For details, check e2e/benchmarks/ model_config.js. This significantly impacts performance.")});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */var DataType;(function(i){i[i.DT_INVALID=0]="DT_INVALID",i[i.DT_FLOAT=1]="DT_FLOAT",i[i.DT_DOUBLE=2]="DT_DOUBLE",i[i.DT_INT32=3]="DT_INT32",i[i.DT_UINT8=4]="DT_UINT8",i[i.DT_INT16=5]="DT_INT16",i[i.DT_INT8=6]="DT_INT8",i[i.DT_STRING=7]="DT_STRING",i[i.DT_COMPLEX64=8]="DT_COMPLEX64",i[i.DT_INT64=9]="DT_INT64",i[i.DT_BOOL=10]="DT_BOOL",i[i.DT_QINT8=11]="DT_QINT8",i[i.DT_QUINT8=12]="DT_QUINT8",i[i.DT_QINT32=13]="DT_QINT32",i[i.DT_BFLOAT16=14]="DT_BFLOAT16",i[i.DT_QINT16=15]="DT_QINT16",i[i.DT_QUINT16=16]="DT_QUINT16",i[i.DT_UINT16=17]="DT_UINT16",i[i.DT_COMPLEX128=18]="DT_COMPLEX128",i[i.DT_HALF=19]="DT_HALF",i[i.DT_RESOURCE=20]="DT_RESOURCE",i[i.DT_VARIANT=21]="DT_VARIANT",i[i.DT_UINT32=22]="DT_UINT32",i[i.DT_UINT64=23]="DT_UINT64",i[i.DT_FLOAT_REF=101]="DT_FLOAT_REF",i[i.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",i[i.DT_INT32_REF=103]="DT_INT32_REF",i[i.DT_UINT8_REF=104]="DT_UINT8_REF",i[i.DT_INT16_REF=105]="DT_INT16_REF",i[i.DT_INT8_REF=106]="DT_INT8_REF",i[i.DT_STRING_REF=107]="DT_STRING_REF",i[i.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",i[i.DT_INT64_REF=109]="DT_INT64_REF",i[i.DT_BOOL_REF=110]="DT_BOOL_REF",i[i.DT_QINT8_REF=111]="DT_QINT8_REF",i[i.DT_QUINT8_REF=112]="DT_QUINT8_REF",i[i.DT_QINT32_REF=113]="DT_QINT32_REF",i[i.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF",i[i.DT_QINT16_REF=115]="DT_QINT16_REF",i[i.DT_QUINT16_REF=116]="DT_QUINT16_REF",i[i.DT_UINT16_REF=117]="DT_UINT16_REF",i[i.DT_COMPLEX128_REF=118]="DT_COMPLEX128_REF",i[i.DT_HALF_REF=119]="DT_HALF_REF",i[i.DT_RESOURCE_REF=120]="DT_RESOURCE_REF",i[i.DT_VARIANT_REF=121]="DT_VARIANT_REF",i[i.DT_UINT32_REF=122]="DT_UINT32_REF",i[i.DT_UINT64_REF=123]="DT_UINT64_REF"})(DataType||(DataType={}));var SaverDef;(function(i){(function(s){s[s.LEGACY=0]="LEGACY",s[s.V1=1]="V1",s[s.V2=2]="V2"})(i.CheckpointFormatVersion||(i.CheckpointFormatVersion={}))})(SaverDef||(SaverDef={}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */var ZipMismatchMode;(function(i){i[i.FAIL=0]="FAIL",i[i.SHORTEST=1]="SHORTEST",i[i.LONGEST=2]="LONGEST"})(ZipMismatchMode||(ZipMismatchMode={}));/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function assertNotComplex$1(i,s){Array.isArray(i)||(i=[i]),i.forEach(o=>{o!=null&&assert$1(o.dtype!=="complex64",()=>`${s} does not support complex64 tensors in the CPU backend.`)})}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const whereImpl$1=whereImpl$2;class MathBackendCPU extends KernelBackend{nextDataId(){return MathBackendCPU.nextDataId++}constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new DataStorage(this,engine())}write(s,o,a){this.firstUse&&(this.firstUse=!1,env().get("IS_NODE")&&warn(`
============================
Hi, looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, visit https://github.com/tensorflow/tfjs-node for more details. 
============================`));const c={id:this.nextDataId()};return this.data.set(c,{values:s,dtype:a,refCount:1}),c}makeTensorInfo(s,o,a){let c;if(o==="string"&&a!=null&&a.length>0&&isString(a[0])){const d=a.map(g=>encodeString(g));c=this.write(d,s,o)}else c=this.write(a,s,o);return{dataId:c,shape:s,dtype:o}}refCount(s){return this.data.has(s)?this.data.get(s).refCount:0}incRef(s){const o=this.data.get(s);o.refCount++}decRef(s){if(this.data.has(s)){const o=this.data.get(s);o.refCount--}}move(s,o,a,c,d){this.data.set(s,{values:o,dtype:c,refCount:d})}numDataIds(){return this.data.numDataIds()}async read(s){return this.readSync(s)}readSync(s){const{dtype:o,complexTensorInfos:a}=this.data.get(s);if(o==="complex64"){const c=this.readSync(a.real.dataId),d=this.readSync(a.imag.dataId);return mergeRealAndImagArrays(c,d)}return convertBackendValuesAndArrayBuffer(this.data.get(s).values,o)}bufferSync(s){const o=this.readSync(s.dataId);if(s.dtype==="string")try{const a=o.map(c=>decodeString(c));return buffer(s.shape,s.dtype,a)}catch{throw new Error("Failed to decode encoded string bytes into utf-8")}return buffer(s.shape,s.dtype,o)}makeOutput(s,o,a){return engine().makeTensorFromTensorInfo(this.makeTensorInfo(o,a,s),this)}disposeData(s,o=!1){if(this.data.has(s)){if(this.data.get(s).refCount--,!o&&this.data.get(s).refCount>0)return!1;const{complexTensorInfos:a}=this.data.get(s);a!=null&&(this.disposeData(a.real.dataId,!0),this.disposeData(a.imag.dataId,!0)),this.data.delete(s)}return!0}disposeIntermediateTensorInfo(s){this.disposeData(s.dataId)}async time(s){const o=now();return s(),{kernelMs:now()-o}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(s){assertNotComplex$1([s],"where");const o=this.readSync(s.dataId);return whereImpl$1(s.shape,o)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}}MathBackendCPU.nextDataId=0;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function simpleAbsImpl(i){const s=new Float32Array(i.length);for(let o=0;o<i.length;++o)s[o]=Math.abs(i[o]);return s}const abs$1=i=>{const{x:s}=i.inputs,o=i.backend;assertNotComplex$1(s,"abs");let a=new Float32Array(sizeFromShape(s.shape));const c=o.data.get(s.dataId).values;return a=simpleAbsImpl(c),o.makeOutput(a,s.shape,s.dtype)},absConfig$1={kernelName:Abs,backendName:"cpu",kernelFunc:abs$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function createSimpleBinaryKernelImpl(i){return(s,o,a,c,d)=>{const g=assertAndGetBroadcastShape(s,o),$=g.length,j=computeStrides(g),_e=sizeFromShape(g),et=getTypedArrayFromDType(d,_e),_=s.length,b=o.length,tt=computeStrides(s),nt=computeStrides(o),rt=getBroadcastDims$1(s,g),st=getBroadcastDims$1(o,g);if(rt.length+st.length===0)for(let ot=0;ot<et.length;++ot)et[ot]=i(a[ot%a.length],c[ot%c.length]);else for(let ot=0;ot<et.length;++ot){const it=indexToLoc(ot,$,j),at=it.slice(-_);rt.forEach(dt=>at[dt]=0);const lt=locToIndex(at,_,tt),ut=it.slice(-b);st.forEach(dt=>ut[dt]=0);const ct=locToIndex(ut,b,nt);et[ot]=i(a[lt],c[ct])}return[et,g]}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function complex$1(i){const{inputs:s,backend:o}=i,{real:a,imag:c}=s,d=o.data.get(a.dataId).values,g=o.data.get(c.dataId).values,$=o.makeTensorInfo(a.shape,"complex64"),j=o.data.get($.dataId);return j.complexTensorInfos={real:o.makeTensorInfo(a.shape,"float32",d),imag:o.makeTensorInfo(c.shape,"float32",g)},$}const complexConfig$1={kernelName:Complex,backendName:"cpu",kernelFunc:complex$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zeros(i,s,o="float32"){if(o==="complex64"){const c=zeros(i,s,"float32"),d=zeros(i,s,"float32");return complex$1({inputs:{real:c,imag:d},backend:i})}const a=makeZerosTypedArray(sizeFromShape(s),o);return i.makeTensorInfo(s,o,a)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function identity$1(i){const{inputs:s,backend:o}=i,{x:a}=s;return o.incRef(a.dataId),{dataId:a.dataId,shape:a.shape,dtype:a.dtype}}const identityConfig$1={kernelName:Identity$1,backendName:"cpu",kernelFunc:identity$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function real$1(i){const{inputs:s,backend:o}=i,{input:a}=s,c=o.data.get(a.dataId).complexTensorInfos.real,d=o.data.get(c.dataId).values;return o.makeTensorInfo(c.shape,c.dtype,d)}const realConfig$1={kernelName:Real,backendName:"cpu",kernelFunc:real$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function castImpl(i,s,o,a){if(a==="int32"){const c=Int32Array.from(i);return[s,"int32",c]}if(a==="bool"){const c=toTypedArray([0],o),[d,g]=createSimpleBinaryKernelImpl(($,j)=>$!==j?1:0)(s,[],i,c,"bool");return[g,"bool",d]}throw new Error(`Error in Cast: failed to cast ${o} to ${a}`)}function cast$1(i){const{inputs:s,backend:o,attrs:a}=i,{x:c}=s,{dtype:d}=a;if(d==="complex64"){if(c.dtype==="complex64")return identity$1({inputs:{x:c},backend:o});const et=zeros(o,c.shape,c.dtype),_=cast$1({inputs:{x:c},backend:o,attrs:{dtype:"float32"}}),b=complex$1({inputs:{real:_,imag:et},backend:o});return o.disposeIntermediateTensorInfo(et),o.disposeIntermediateTensorInfo(_),b}if(c.dtype==="complex64"){const et=real$1({inputs:{input:c},backend:o}),_=cast$1({inputs:{x:et},backend:o,attrs:{dtype:d}});return o.disposeIntermediateTensorInfo(et),_}if(!hasEncodingLoss(c.dtype,d)){const et=identity$1({inputs:{x:c},backend:o});return{dataId:et.dataId,shape:et.shape,dtype:d}}const g=o.data.get(c.dataId).values,[$,j,_e]=castImpl(g,c.shape,c.dtype,d);return o.makeTensorInfo($,j,_e)}const castConfig$1={kernelName:Cast,backendName:"cpu",kernelFunc:cast$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function binaryKernelFunc$1(i,s,o,a){return o==null?({inputs:c,backend:d})=>{const{a:g,b:$}=c,j=d;assertNotComplex$1([g,$],i);const _e=j.data.get(g.dataId).values,et=j.data.get($.dataId).values,_=g.dtype==="string"?fromUint8ToStringArray(_e):_e,b=g.dtype==="string"?fromUint8ToStringArray(et):et,tt=a||g.dtype,[nt,rt]=s(g.shape,$.shape,_,b,tt);return j.makeTensorInfo(rt,tt,nt)}:({inputs:c,backend:d})=>{const{a:g,b:$}=c,j=d;if(g.dtype==="complex64"||$.dtype==="complex64"){const _e=cast$1({inputs:{x:g},backend:j,attrs:{dtype:"complex64"}}),et=j.data.get(_e.dataId),_=et.complexTensorInfos.real,b=et.complexTensorInfos.imag,tt=j.data.get(_.dataId).values,nt=j.data.get(b.dataId).values,rt=cast$1({inputs:{x:$},backend:j,attrs:{dtype:"complex64"}}),st=j.data.get(rt.dataId),ot=st.complexTensorInfos.real,it=st.complexTensorInfos.imag,at=j.data.get(ot.dataId).values,lt=j.data.get(it.dataId).values,[ut,ct,dt]=o(g.shape,$.shape,tt,nt,at,lt),pt=j.makeTensorInfo(dt,"float32",ut),ht=j.makeTensorInfo(dt,"float32",ct),ft=complex$1({inputs:{real:pt,imag:ht},backend:j});return j.disposeIntermediateTensorInfo(_e),j.disposeIntermediateTensorInfo(rt),j.disposeIntermediateTensorInfo(pt),j.disposeIntermediateTensorInfo(ht),ft}else{const _e=j.data.get(g.dataId).values,et=j.data.get($.dataId).values,_=a||g.dtype,[b,tt]=s(g.shape,$.shape,_e,et,_);return j.makeTensorInfo(tt,_,b)}}}function createComplexBinaryKernelImpl(i){return(s,o,a,c,d,g)=>{const $=assertAndGetBroadcastShape(s,o),j=sizeFromShape($),_e=$.length,et=computeStrides($),_=getTypedArrayFromDType("float32",j),b=getTypedArrayFromDType("float32",j),tt=getBroadcastDims$1(s,$),nt=getBroadcastDims$1(o,$),rt=mergeRealAndImagArrays(a,c),st=mergeRealAndImagArrays(d,g),ot=s.length,it=computeStrides(s),at=o.length,lt=computeStrides(o);if(tt.length+nt.length===0)for(let ut=0;ut<_.length;ut++){const ct=ut%rt.length,dt=ut%st.length,pt=i(rt[ct*2],rt[ct*2+1],st[dt*2],st[dt*2+1]);_[ut]=pt.real,b[ut]=pt.imag}else for(let ut=0;ut<_.length;ut++){const ct=indexToLoc(ut,_e,et),dt=ct.slice(-ot);tt.forEach(wt=>dt[wt]=0);const pt=locToIndex(dt,ot,it),ht=ct.slice(-at);nt.forEach(wt=>ht[wt]=0);const ft=locToIndex(ht,at,lt),yt=i(rt[pt*2],rt[pt*2+1],st[ft*2],st[ft*2+1]);_[ut]=yt.real,b[ut]=yt.imag}return[_,b,$]}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const addImpl=createSimpleBinaryKernelImpl((i,s)=>i+s),addComplexImpl=createComplexBinaryKernelImpl((i,s,o,a)=>({real:i+o,imag:s+a})),add=binaryKernelFunc$1(Add$1,addImpl,addComplexImpl),addConfig$1={kernelName:Add$1,backendName:"cpu",kernelFunc:add};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bincountImpl(i,s,o,a,c){const d=sizeFromShape(a),g=makeZerosTypedArray(c,o);for(let $=0;$<i.length;$++){const j=i[$];if(j<0)throw new Error("Input x must be non-negative!");j>=c||(d>0?g[j]+=s[$]:g[j]+=1)}return g}function bincountReduceImpl(i,s,o,a=!1){const c=i.shape[0],d=i.shape[1],g=buffer([c,o],s.dtype);for(let $=0;$<c;$++)for(let j=0;j<d;j++){const _e=i.get($,j);if(_e<0)throw new Error("Input x must be non-negative!");_e>=o||(a?g.set(1,$,_e):s.size>0?g.set(g.get($,_e)+s.get($,j),$,_e):g.set(g.get($,_e)+1,$,_e))}return g}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bitwiseAndImpl=createSimpleBinaryKernelImpl((i,s)=>i&s),bitwiseAnd$1=binaryKernelFunc$1(BitwiseAnd,bitwiseAndImpl),bitwiseAndConfig$1={kernelName:BitwiseAnd,backendName:"cpu",kernelFunc:bitwiseAnd$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function createSimpleUnaryImpl(i){return(s,o,a)=>{const c=getArrayFromDType(o,s.length);for(let d=0;d<s.length;++d)c[d]=i(s[d],a);return c}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function unaryKernelFunc$1(i,s,o){const a=createSimpleUnaryImpl(s);return unaryKernelFuncFromImpl(i,a,o)}function unaryKernelFuncFromImpl(i,s,o){return({inputs:a,attrs:c,backend:d})=>{const{x:g}=a;assertNotComplex$1(g,i);const $=d,j=$.data.get(g.dataId).values;let _e;if(g.dtype==="string"){if(!Array.isArray(j))throw new Error("String tensor's value was not an instance of Array");_e=fromUint8ToStringArray(j)}else _e=j;const et=o||g.dtype,_=s(_e,et,c);return $.makeTensorInfo(g.shape,et,_)}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ceilImpl=createSimpleUnaryImpl(i=>Math.ceil(i)),ceil$1=unaryKernelFuncFromImpl(Ceil,ceilImpl),ceilConfig$1={kernelName:Ceil,backendName:"cpu",kernelFunc:ceil$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function concatImpl$1(i,s,o,a){const c=getArrayFromDType(o,sizeFromShape(s));if(a&&o!=="string"){let d=0;i.forEach(g=>{const $=sizeFromShape(g.shape);c.set(g.vals,d),d+=$})}else{let d=0;i.forEach(g=>{const $=o==="string"?fromUint8ToStringArray(g.vals):g.vals;let j=0;for(let _e=0;_e<g.shape[0];++_e){const et=_e*s[1]+d;for(let _=0;_<g.shape[1];++_)c[et+_]=$[j++]}d+=g.shape[1]})}return c}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const equalImpl=createSimpleBinaryKernelImpl((i,s)=>i===s?1:0),equal$1=binaryKernelFunc$1(Equal,equalImpl,null,"bool"),equalConfig$1={kernelName:Equal,backendName:"cpu",kernelFunc:equal$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const expImpl=createSimpleUnaryImpl(i=>Math.exp(i)),exp$1=unaryKernelFuncFromImpl(Exp,expImpl,"float32"),expConfig$1={kernelName:Exp,backendName:"cpu",kernelFunc:exp$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const expm1Impl=createSimpleUnaryImpl(i=>Math.expm1(i)),expm1$1=unaryKernelFuncFromImpl(Expm1,expm1Impl),expm1Config$1={kernelName:Expm1,backendName:"cpu",kernelFunc:expm1$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const floorImpl=createSimpleUnaryImpl(i=>Math.floor(i)),floor$1=unaryKernelFuncFromImpl(Floor,floorImpl),floorConfig$1={kernelName:Floor,backendName:"cpu",kernelFunc:floor$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const floorDivImpl=createSimpleBinaryKernelImpl((i,s)=>Math.floor(i/s)),floorDiv$1=binaryKernelFunc$1(FloorDiv,floorDivImpl,null,"int32"),floorDivConfig$1={kernelName:FloorDiv,backendName:"cpu",kernelFunc:floorDiv$1};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gatherNdImpl(i,s,o,a,c,d,g,$,j){const _e=buffer([a,d],o);for(let et=0;et<a;et++){const _=[];let b=0;for(let tt=0;tt<c;tt++){const nt=i[et*c+tt];b+=nt*g[tt],_.push(nt)}if(b<0||b>=j/d)throw new Error(`Invalid indices: ${_} does not index into ${$}`);for(let tt=0;tt<d;tt++)_e.values[et*d+tt]=s.get(...s.indexToLoc(b*d+tt))}return _e}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gatherV2Impl(i,s,o){const a=buffer(o,i.dtype);for(let c=0;c<a.size;++c){const g=a.indexToLoc(c).slice(),$=g[0],j=g[2],_e=s.locToIndex([$,j]);g[2]=s.values[_e];const et=i.locToIndex(g);0<=et&&et<i.values.length&&(a.values[c]=i.values[et])}return a}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const greaterImpl=createSimpleBinaryKernelImpl((i,s)=>i>s?1:0),greater$1=binaryKernelFunc$1(Greater,greaterImpl,null,"bool"),greaterConfig$1={kernelName:Greater,backendName:"cpu",kernelFunc:greater$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const greaterEqualImpl=createSimpleBinaryKernelImpl((i,s)=>i>=s?1:0),greaterEqual$1=binaryKernelFunc$1(GreaterEqual,greaterEqualImpl,null,"bool"),greaterEqualConfig$1={kernelName:GreaterEqual,backendName:"cpu",kernelFunc:greaterEqual$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lessImpl=createSimpleBinaryKernelImpl((i,s)=>i<s?1:0),less$1=binaryKernelFunc$1(Less,lessImpl,null,"bool"),lessConfig$1={kernelName:Less,backendName:"cpu",kernelFunc:less$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lessEqualImpl=createSimpleBinaryKernelImpl((i,s)=>i<=s?1:0),lessEqual$1=binaryKernelFunc$1(LessEqual,lessEqualImpl,null,"bool"),lessEqualConfig$1={kernelName:LessEqual,backendName:"cpu",kernelFunc:lessEqual$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function linSpaceImpl(i,s,o){const a=(s-i)/(o-1),c=makeZerosTypedArray(o,"float32");c[0]=i;for(let d=1;d<c.length;d++)c[d]=c[d-1]+a;return c}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const logImpl=createSimpleUnaryImpl(i=>Math.log(i)),log$1=unaryKernelFuncFromImpl(Log,logImpl),logConfig$1={kernelName:Log,backendName:"cpu",kernelFunc:log$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function maxImpl$1(i,s,o,a){const c=getTypedArrayFromDType(a,sizeFromShape(o));for(let d=0;d<c.length;++d){const g=d*s;let $=i[g];for(let j=0;j<s;++j){const _e=i[g+j];(Number.isNaN(_e)||_e>$)&&($=_e)}c[d]=$}return c}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const maximumImpl=createSimpleBinaryKernelImpl((i,s)=>Math.max(i,s)),maximum$1=binaryKernelFunc$1(Maximum$1,maximumImpl),maximumConfig$1={kernelName:Maximum$1,backendName:"cpu",kernelFunc:maximum$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const minimumImpl=createSimpleBinaryKernelImpl((i,s)=>Math.min(i,s)),minimum$1=binaryKernelFunc$1(Minimum$1,minimumImpl),minimumConfig$1={kernelName:Minimum$1,backendName:"cpu",kernelFunc:minimum$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const multiplyImpl=createSimpleBinaryKernelImpl((i,s)=>i*s),multiplyComplexImpl=createComplexBinaryKernelImpl((i,s,o,a)=>({real:i*o-s*a,imag:i*a+s*o})),multiply$1=binaryKernelFunc$1(Multiply$1,multiplyImpl,multiplyComplexImpl),multiplyConfig$1={kernelName:Multiply$1,backendName:"cpu",kernelFunc:multiply$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function negImpl(i,s,o){const a=createScalarValue(-1,o);return multiplyImpl([],s,a,i,o)}function neg$1(i){const{inputs:s,backend:o}=i,{x:a}=s;assertNotComplex$1(a,"neg");const c=o.data.get(a.dataId).values,[d,g]=negImpl(c,a.shape,a.dtype);return o.makeTensorInfo(g,a.dtype,d)}const negConfig$1={kernelName:Neg,backendName:"cpu",kernelFunc:neg$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const notEqualImpl=createSimpleBinaryKernelImpl((i,s)=>i!==s?1:0),notEqual$1=binaryKernelFunc$1(NotEqual,notEqualImpl,null,"bool"),notEqualConfig$1={kernelName:NotEqual,backendName:"cpu",kernelFunc:notEqual$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function transposeImpl$1(i,s,o,a,c){const d=s.length,g=sizeFromShape(s),$=computeStrides(s),j=computeStrides(c),_e=getTypedArrayFromDType(o,sizeFromShape(c));for(let et=0;et<g;++et){const _=indexToLoc(et,d,$),b=new Array(_.length);for(let nt=0;nt<b.length;nt++)b[nt]=_[a[nt]];const tt=locToIndex(b,d,j);_e[tt]=i[et]}return _e}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function transpose$1(i){const{inputs:s,attrs:o,backend:a}=i,{x:c}=s,{perm:d}=o;assertNotComplex$1(c,"transpose");const g=c.shape.length,$=new Array(g);for(let _=0;_<$.length;_++)$[_]=c.shape[d[_]];const j=a.data.get(c.dataId).values,_e=transposeImpl$1(j,c.shape,c.dtype,d,$);return{dataId:a.write(_e,$,c.dtype),shape:$,dtype:c.dtype}}const transposeConfig$1={kernelName:Transpose,backendName:"cpu",kernelFunc:transpose$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function prodImpl(i,s,o,a){const[c,d]=computeOutAndReduceShapes(i,a),g=upcastType(s,"int32"),$=makeZerosTypedArray(sizeFromShape(c),g),j=sizeFromShape(d);for(let _e=0;_e<$.length;++_e){const et=_e*j;let _=1;for(let b=0;b<j;++b)_*=o[et+b];$[_e]=_}return{outVals:$,outShape:c,outDtype:g}}function prod$1(i){const{inputs:s,backend:o,attrs:a}=i,{x:c}=s,{axis:d,keepDims:g}=a;assertNotComplex$1(c,"prod");const $=c.shape.length,j=parseAxisParam(d,c.shape),_e=getAxesPermutation(j,$);let et=j,_=c;const b=[];_e!=null&&(_=transpose$1({inputs:{x:c},backend:o,attrs:{perm:_e}}),b.push(_),et=getInnerMostAxes(et.length,$));const tt=o.data.get(_.dataId).values,{outVals:nt,outShape:rt,outDtype:st}=prodImpl(_.shape,_.dtype,tt,et);let ot=rt;return g&&(ot=expandShapeToKeepDim(rt,j)),b.forEach(it=>o.disposeIntermediateTensorInfo(it)),o.makeTensorInfo(ot,st,nt)}const prodConfig$1={kernelName:Prod,backendName:"cpu",kernelFunc:prod$1};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function validateIndices(i,s,o){i.forEach((a,c)=>{if(a<0||a>=o){const d=indexToLoc(c,s.length,computeStrides(s)).join(",");throw new Error(`indices[${d}] = ${a} is not in [0, ${o})`)}})}function validateSplits(i,s){for(let o=0;o<i.length;++o){const a=i[o],c=o===i.length-1?s:i[o+1].length;if(a.length===0)throw new Error("Ragged splits may not be empty");if(a[0]<0)throw new Error("Ragged splits must be non-negative");if(a[a.length-1]>c)throw new Error("Ragged splits must not point past values");for(let d=1;d<a.length;++d)if(a[d-1]>a[d])throw new Error("Ragged splits must be sorted in ascending order")}}function makeSplits(i,s,o,a){const c=[];let d=0;const g=s.length-1+o.length,$=new Array(g).fill(null).map(()=>[0]);validateSplits(o,a);let j=1;for(let _e=0;_e<s.length-1;++_e){j*=s[_e];const et=s[_e+1];for(let _=1;_<j+1;++_)$[_e].push(_*et)}for(let _e=0;_e<i.length;++_e){let et=i[_e],_=i[_e]+1;for(let b=0;b<o.length;++b){const tt=o[b],nt=b+s.length-1;if(nt>=0){const rt=$[nt],st=rt[rt.length-1]-tt[et];for(let ot=et;ot<_;++ot)$[nt].push(tt[ot+1]+st)}et=tt[et],_=tt[_]}_!==et&&(c.push([et,_]),d+=_-et)}return{outSplits:$,valueSlices:c,numValues:d}}function getSplits(i){const s=[];for(let o=0;o<i.length;++o){const a=i[o].length,c=getArrayFromDType("int32",a);s.push(c),i[o].forEach((d,g)=>c[g]=d)}return s}function computeFlatOuterDims(i,s){const o=i.slice(0,s);for(;o.length<s;)o.push(1);for(let a=s;a<i.length;a++)o[s-1]*=i[a];return o}function writeValueSlices(i,s,o,a,c,d){const g=computeFlatOuterDims(s,2)[1],$=computeFlatOuterDims(d,2)[1];let j=0;for(const _e of o)for(let et=_e[0];et<_e[1];++et){for(let _=0;_<a;++_)c[j*$+_]=i[et*g+_];++j}}function getValues(i,s,o,a,c){const d=s.slice();d[0]=c;const g=getArrayFromDType(o,sizeFromShape(d)),$=i.length,j=$===0?0:$/s[0];return writeValueSlices(i,s,a,j,g,d),[g,d]}function raggedGatherImpl(i,s,o,a,c,d,g,$){if(i.length===0)throw new Error("paramsNestedSplits must be non empty");if(s[0].length===0)throw new Error("Split tensors must not be scalars");const j=s[0][0]-1;if(validateIndices(d,g,j),a.length===0)throw new Error("params.rank must be nonzero");const _e=a[0],{outSplits:et,valueSlices:_,numValues:b}=makeSplits(d,g,i,_e),tt=getSplits(et),nt=getValues(o,a,c,_,b);return[tt,nt[0],nt[1]]}/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const INT32_MAX=2147483647;function raggedRangeImpl(i,s,o,a,c,d,g){if(s.length>1)throw new Error("starts must be a scalar or vector");if(c.length>1)throw new Error("limits must be a scalar or vector");if(g.length>1)throw new Error("deltas must be a scalar or vector");const $=s.length===0,j=c.length===0,_e=g.length===0,et=[];$||et.push(s[0]),j||et.push(c[0]),_e||et.push(g[0]);for(let st=1;st<et.length;++st)if(et[st]!==et[st-1])throw new Error("starts, limits, and deltas must have the same shape");const _=et.length===0?1:et[0],b=getArrayFromDType("int32",_+1);b[0]=0;for(let st=0;st<_;++st){const ot=$?i[0]:i[st],it=j?a[0]:a[st],at=_e?d[0]:d[st];if(at===0)throw new Error("Requires delta != 0");let lt;if(at>0&&it<ot||at<0&&it>ot)lt=0;else if(lt=Math.ceil(Math.abs((it-ot)/at)),lt>INT32_MAX)throw new Error(`Requires ((limit - start) / delta) <= ${INT32_MAX}`);b[st+1]=b[st]+lt}const tt=b[_],nt=getArrayFromDType(o,tt);let rt=0;for(let st=0;st<_;++st){const ot=b[st+1]-b[st];let it=$?i[0]:i[st];const at=_e?d[0]:d[st];for(let lt=0;lt<ot;++lt)nt[rt++]=it,it+=at}return[b,nt]}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var RowPartitionType=RowPartitionType$1;class RaggedTensorToTensorOp{constructor(s,o,a,c,d,g,$,j,_e,et){this.shape=s,this.shapeShape=o,this.values=a,this.valuesShape=c,this.valuesDType=d,this.defaultValue=g,this.defaultValueShape=$,this.rowPartitionValues=j,this.rowPartitionValuesShapes=_e,this.rowPartitionTypes=getRowPartitionTypesHelper(et),this.raggedRank=getRaggedRank(this.rowPartitionTypes)}getRowPartitionTypeByDimension(s){return this.rowPartitionTypes[0]===RowPartitionType.FIRST_DIM_SIZE?this.rowPartitionTypes[s+1]:this.rowPartitionTypes[s]}getRowPartitionTensor(s){return this.rowPartitionTypes[0]===RowPartitionType.FIRST_DIM_SIZE?this.rowPartitionValues[s+1]:this.rowPartitionValues[s]}getMaxWidth(s){const o=this.getRowPartitionTensor(s-1);switch(this.getRowPartitionTypeByDimension(s-1)){case RowPartitionType.VALUE_ROWIDS:return RaggedTensorToTensorOp.getMaxWidthValueRowID(o);case RowPartitionType.ROW_SPLITS:return RaggedTensorToTensorOp.getMaxWidthRowSplit(o);default:throw new Error(`Cannot handle partition type ${RowPartitionType[this.getRowPartitionTypeByDimension(s-1)]}`)}}static getMaxWidthRowSplit(s){const o=s.length;if(o===0||o===1)return 0;let a=0;for(let c=0;c<o-1;++c){const d=s[c+1]-s[c];d>a&&(a=d)}return a}static getMaxWidthValueRowID(s){const o=s.length;if(o===0)return 0;let a=0,c=s[0],d=0;for(let g=1;g<o;++g){const $=s[g];$!==c&&(c=$,d=Math.max(g-a,d),a=g)}return Math.max(o-a,d)}tensorShapeFromTensor(s,o,a=!0){if(o.length===0){if(s[0]===-1)return[];throw new Error("The only valid scalar shape tensor is the fully unknown shape specified as -1.")}return makeShape(s,a)}calculateOutputSize(s){const o=this.valuesShape,a=this.defaultValueShape;validateDefaultValueShape(a,o);const c=this.tensorShapeFromTensor(this.shape,this.shapeShape),g=combineRaggedTensorToTensorShapes(this.raggedRank,c,o);g[0]<0&&(g[0]=s);for(let $=1;$<=this.raggedRank;++$)g[$]<0&&(g[$]=this.getMaxWidth($));return g}calculateFirstParentOutputIndex(s,o,a){const c=Math.min(s,a),d=[];let g=0;for(let $=0;$<c;++$,g+=o)d.push(g);for(let $=c;$<s;++$)d.push(-1);return assert$1(d.length===s,()=>"Final length of result must be equal to firstDimension."),d}calculateOutputIndexRowSplit(s,o,a,c){const d=s.length,g=[];for(let $=0;$<d-1;++$){const j=s[$+1]-s[$];let _e=Math.min(c,j),et=o[$];et===-1&&(_e=0);for(let _=0;_<_e;++_)g.push(et),et+=a;for(let _=0;_<j-_e;++_)g.push(-1)}if(d>0&&g.length!==s[d-1])throw new Error("Invalid row split size.");return g}calculateOutputIndexValueRowID(s,o,a,c){const d=s.length,g=[];if(d===0)return[];let $=0,j=s[0];if(j>=o.length)throw new Error(`Got currentValueRowId=${j}, which is not less than ${o.length}`);let _e=o[j];g.push(_e);for(let et=1;et<d;++et){const _=s[et];if(_===j)_e>=0&&(++$,$<c?_e+=a:_e=-1);else{if($=0,j=_,_>=o.length)throw new Error(`Got nextValueRowId=${_} which is not less than ${o.length}`);_e=o[_]}g.push(_e)}if(g.length!==s.length)throw new Error("Invalid row ids.");return g}calculateOutputIndex(s,o,a,c){const d=this.getRowPartitionTensor(s),g=this.getRowPartitionTypeByDimension(s);switch(g){case RowPartitionType.VALUE_ROWIDS:return this.calculateOutputIndexValueRowID(d,o,a,c);case RowPartitionType.ROW_SPLITS:if(d.length-1>o.length)throw new Error(`Row partition size is greater than output size: ${d.length-1} > ${o.length}`);return this.calculateOutputIndexRowSplit(d,o,a,c);default:throw new Error(`Unsupported partition type: ${RowPartitionType[g]}`)}}getFirstDimensionSize(){const s=this.rowPartitionValues[0];if(this.rowPartitionTypes.length===0)throw new Error("No row_partition_types given.");const o=this.rowPartitionTypes[0];switch(o){case RowPartitionType.FIRST_DIM_SIZE:return s[0];case RowPartitionType.VALUE_ROWIDS:throw new Error("Cannot handle VALUE_ROWIDS in first dimension.");case RowPartitionType.ROW_SPLITS:return this.rowPartitionValuesShapes[0][0]-1;default:throw new Error(`Cannot handle type ${RowPartitionType[o]}`)}}compute(){if(this.rowPartitionValues[0].length<=0)throw new Error("Invalid first partition input. Tensor requires at least one element.");const o=this.getFirstDimensionSize(),a=this.calculateOutputSize(o),c=new Array(this.raggedRank+1);c[c.length-1]=1;for(let j=c.length-2;j>=0;--j)c[j]=c[j+1]*a[j+1];const d=makeShape(a,!1),g=getArrayFromDType(this.valuesDType,sizeFromShape(d));if(c[0]*a[0]>0){let j=this.calculateFirstParentOutputIndex(o,c[0],a[0]);for(let _e=1;_e<=this.raggedRank;++_e)j=this.calculateOutputIndex(_e-1,j,c[_e],a[_e]);this.setOutput(this.raggedRank,j,g,d)}return[d,g]}setOutput(s,o,a,c){if(a.length===0)return;const d=this.values,g=a;let $=c.slice();$=$.slice(s+1);const j=sizeFromShape($),_e=o.length;let et=this.defaultValue;if(et.length!==j&&et.length!==1){const nt=this.defaultValueShape;tidy(()=>{const rt=reshape$2(et,nt);et=broadcastTo(rt,$).dataSync()})}let _=0,b=0,tt=0;for(let nt=0;nt<=_e;++nt){let rt=nt<_e?o[nt]:-1;if(rt===tt){++tt;continue}if(b<tt){const st=d.subarray(_*j),ot=g.subarray(b*j),it=(tt-b)*j;copyArray(ot,st,it)}if(nt>=_e){const st=a.length;rt=Math.floor(st/j)}if(rt>tt)if(this.defaultValue.length===1)g.subarray(tt*j,rt*j).fill(this.defaultValue[0]),tt=rt;else for(;rt>tt;){const st=g.slice(tt*j);copyArray(st,et,j),++tt}rt<0?(_=nt+1,b=tt):(_=nt,b=tt,tt=b+1)}}}function copyArray(i,s,o){for(let a=0;a<o;a++)i[a]=s[a]}function makeShape(i,s){const o=[];for(let a of i){if(a<0){if(!s)throw new Error(`Dimension ${a} must be >= 0`);if(a<-1)throw new Error(`Dimension ${a} must be >= -1`);a=-1}o.push(a)}return o}function raggedTensorToTensorImpl(i,s,o,a,c,d,g,$,j,_e){return new RaggedTensorToTensorOp(i,s,o,a,c,d,g,$,j,_e).compute()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rangeImpl(i,s,o,a){const c=i===s,d=i<s&&o<0,g=s<i&&o>1;if(c||d||g)return makeZerosTypedArray(0,a);const $=Math.abs(Math.ceil((s-i)/o)),j=makeZerosTypedArray($,a);s<i&&o===1&&(o=-1),j[0]=i;for(let _e=1;_e<j.length;_e++)j[_e]=j[_e-1]+o;return j}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rsqrtImpl=createSimpleUnaryImpl(i=>1/Math.sqrt(i)),rsqrt$1=unaryKernelFuncFromImpl(Rsqrt,rsqrtImpl),rsqrtConfig$1={kernelName:Rsqrt,backendName:"cpu",kernelFunc:rsqrt$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function scatterImpl(i,s,o,a,c,d,g,$,j,_e){const et=[a/c,c],_=i.values,b=s.values;if(a===0)return buffer(o,s.dtype);const tt=j instanceof TensorBuffer?j:buffer(et,s.dtype);typeof j=="string"||typeof j=="number"?tt.values.fill(j):typeof j=="boolean"&&tt.values.fill(+j);for(let nt=0;nt<d;nt++){const rt=[];let st=0;for(let ot=0;ot<g;ot++){const it=_[nt*g+ot];rt.push(it),st+=it*$[ot]}if(st<0||st>=a/c)throw new Error(`Invalid indices: ${rt} does not index into ${o}`);for(let ot=0;ot<c;ot++)_e?tt.values[st*c+ot]+=b[nt*c+ot]:tt.values[st*c+ot]=s.rank===0?b[0]:b[nt*c+ot]}return tt}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sigmoidImpl=createSimpleUnaryImpl(i=>1/(1+Math.exp(-i))),sigmoid$1=unaryKernelFunc$1(Sigmoid$1,i=>1/(1+Math.exp(-i))),sigmoidConfig$1={kernelName:Sigmoid$1,backendName:"cpu",kernelFunc:sigmoid$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sliceImpl(i,s,o,a,c){const d=isSliceContinous(a,s,o),g=sizeFromShape(o),$=computeStrides(a);if(d){const _=computeFlatOffset(s,$);return c==="string"?i.slice(_,_+g):i.subarray(_,_+g)}const j=c==="string"?fromUint8ToStringArray(i):i,_e=buffer(a,c,j),et=buffer(o,c);for(let _=0;_<et.size;++_){const b=et.indexToLoc(_),tt=b.map((nt,rt)=>nt+s[rt]);et.set(_e.get(...tt),...b)}return c==="string"?fromStringArrayToUint8(et.values):et.values}function slice$1(i){const{inputs:s,backend:o,attrs:a}=i,{x:c}=s,{begin:d,size:g}=a;assertNotComplex$1(c,"slice");const[$,j]=parseSliceParams(c,d,g);assertParamsValid(c,$,j);const _e=o.data.get(c.dataId).values,et=sliceImpl(_e,$,j,c.shape,c.dtype);return o.makeTensorInfo(j,c.dtype,et)}const sliceConfig$1={kernelName:Slice,backendName:"cpu",kernelFunc:slice$1};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sparseFillEmptyRowsImpl(i,s,o,a,c,d,g){const $=s[0],j=d[0],_e=new Array(j),et=new Array($),_=s[1];if(j===0){if($!==0)throw new Error(getSparseFillEmptyRowsIndicesDenseShapeMismatch($));const st=getArrayFromDType(o,0),ot=getArrayFromDType(c,0);return[st,[0,_],ot,_e,et]}let b=!0,tt=0;const nt=new Array(j).fill(0);for(let st=0;st<$;++st){const ot=i[st*_];if(ot<0)throw new Error(getSparseFillEmptyRowsNegativeIndexErrorMessage(st,ot));if(ot>=j)throw new Error(getSparseFillEmptyRowsOutOfRangeIndexErrorMessage(st,ot,j));++nt[ot],b=b&&ot>=tt,tt=ot}let rt=!0;for(let st=0;st<j;++st){const ot=nt[st]===0;_e[st]=ot,rt=rt&&!ot,nt[st]=Math.max(nt[st],1),st>0&&(nt[st]+=nt[st-1])}if(rt&&b){const st=i,ot=a;for(let it=0;it<$;++it)et[it]=it;return[st,[$,_],ot,_e,et]}else{const st=nt[j-1],ot=getArrayFromDType(o,st*_),it=getArrayFromDType(c,st),at=new Array(j).fill(0);for(let lt=0;lt<$;++lt){const ut=i[lt*_],ct=at[ut],dt=(ut===0?0:nt[ut-1])+ct;at[ut]++;for(let pt=0;pt<_;++pt)ot[dt*_+pt]=i[lt*_+pt];it[dt]=a[lt],et[lt]=dt}for(let lt=0;lt<j;++lt)if(at[lt]===0){const ct=lt===0?0:nt[lt-1];ot[ct*_+0]=lt;for(let dt=1;dt<_;++dt)ot[ct*_+dt]=0;it[ct]=g}return[ot,[st,_],it,_e,et]}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sparseReshapeImpl(i,s,o,a,c){const d=sizeFromShape(a),g=s[0],$=c.length,j=[];let _e=1,et=-1;for(let st=0;st<$;++st){const ot=c[st];if(ot===-1){if(et!==-1)throw new Error(getSparseReshapeMultipleNegativeOneOutputDimErrorMessage(et,st));et=st,j.push(1)}else{if(ot<0)throw new Error(getSparseReshapeNegativeOutputDimErrorMessage(st,ot));_e*=ot,j.push(ot)}}if(et!==-1){if(_e<=0)throw new Error(getSparseReshapeEmptyTensorZeroOutputDimErrorMessage());const st=Math.trunc(d/_e);if(_e*st!==d)throw new Error(getSparseReshapeInputOutputMultipleErrorMessage(a,j));j[et]=st}if(sizeFromShape(j)!==d)throw new Error(getSparseReshapeInputOutputMismatchErrorMessage(a,j));const b=a.length,tt=[];if(b>0){tt[b-1]=1;for(let st=b-2;st>=0;--st)tt[st]=tt[st+1]*a[st+1]}const nt=[];if($>0){nt[$-1]=1;for(let st=$-2;st>=0;--st)nt[st]=nt[st+1]*j[st+1]}const rt=getArrayFromDType(o,g*$);for(let st=0;st<g;++st){let ot=0;for(let it=0;it<b;++it)ot+=i[st*b+it]*tt[it];for(let it=0;it<$;++it)rt[st*$+it]=Math.trunc(ot/nt[it]),ot%=nt[it]}return[rt,[g,$],j]}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sparseSegmentReductionImpl(i,s,o,a,c,d=!1,g=0){const $=a.length,j=[s[0],i.length/s[0]],_e=j[1],_=$>0?c[$-1]+1:0;if(_<0)throw new Error(getSparseSegmentReductionNegativeSegmentIdsErrorMessage());const b=s.slice();b[0]=_;const tt=b.reduce((at,lt)=>at*lt,1),nt=getArrayFromDType(o,tt);if($===0)return _>0&&nt.fill(g),[nt,b];if(_<=0)throw new Error(getSparseSegmentReductionNegativeSegmentIdsErrorMessage());let rt=0,st=1,ot=0,it=c[rt];for(;;){let at=0;if(st<$){if(at=c[st],it===at){++st;continue}if(it>=at)throw new Error(getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage())}if(it<0||it>=_)throw new Error(getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage(it,_));it>ot&&nt.fill(g,ot*_e,it*_e);for(let lt=rt;lt<st;++lt){const ut=a[lt];if(ut<0||ut>=j[0])throw new Error(getSparseSegmentReductionIndicesOutOfRangeErrorMessage(lt,a[lt],j[0]));for(let ct=0;ct<_e;ct++)nt[it*_e+ct]+=i[ut*_e+ct]}if(d)for(let lt=0;lt<_e;lt++)nt[it*_e+lt]/=st-rt;if(rt=st,++st,ot=it+1,it=at,st>$)break}return ot<_&&nt.fill(g,ot*_e,_*_e),[nt,b]}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sqrtImpl=createSimpleUnaryImpl(i=>Math.sqrt(i)),sqrt$1=unaryKernelFunc$1(Sqrt,i=>Math.sqrt(i)),sqrtConfig$1={kernelName:Sqrt,backendName:"cpu",kernelFunc:sqrt$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const squaredDifferenceImpl=createSimpleBinaryKernelImpl((i,s)=>{const o=i-s;return o*o}),squaredDifference$1=binaryKernelFunc$1(SquaredDifference,squaredDifferenceImpl),squaredDifferenceConfig$1={kernelName:SquaredDifference,backendName:"cpu",kernelFunc:squaredDifference$1};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const staticRegexReplaceImpl=createSimpleUnaryImpl((i,s)=>{const{pattern:o,replaceGlobal:a,rewrite:c}=s;return i.replace(new RegExp(o,a?"g":""),c)}),staticRegexReplace$1=unaryKernelFuncFromImpl(StaticRegexReplace,staticRegexReplaceImpl),staticRegexReplaceConfig$1={kernelName:StaticRegexReplace,backendName:"cpu",kernelFunc:staticRegexReplace$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function stridedSliceImpl(i,s,o,a){const c=buffer(i,s.dtype);for(let d=0;d<c.size;d++){const g=c.indexToLoc(d),$=new Array(g.length);for(let j=0;j<$.length;j++)$[j]=g[j]*o[j]+a[j];c.set(s.get(...$),...g)}return c}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class StringNGramsOp{constructor(s,o,a,c,d,g){this.separator=encodeString(s),this.nGramWidths=o,this.leftPad=encodeString(a),this.rightPad=encodeString(c),this.padWidth=d,this.preserveShort=g}getPadWidth(s){return Math.min(this.padWidth<0?s-1:this.padWidth,s-1)}getNumNGrams(s,o){const a=this.getPadWidth(o);return Math.max(0,s+2*a-o+1)}createNGrams(s,o,a,c,d,g){for(let $=0;$<d;++$){const j=this.getPadWidth(g),_e=Math.max(0,j-$),et=Math.max(0,j-(d-($+1))),_=g-(_e+et),b=o+(_e>0?0:$-j);let tt=0;tt+=_e*this.leftPad.length;for(let it=0;it<_;++it)tt+=s[b+it].length;tt+=et*this.rightPad.length;const nt=_e+et+_-1;tt+=nt*this.separator.length,a[c+$]=new Uint8Array(tt);const rt=a[c+$];let st=0;const ot=it=>it.forEach(at=>rt[st++]=at);for(let it=0;it<_e;++it)ot(this.leftPad),ot(this.separator);for(let it=0;it<_-1;++it)ot(s[b+it]),ot(this.separator);if(_>0){ot(s[b+_-1]);for(let it=0;it<et;++it)ot(this.separator),ot(this.rightPad)}else{for(let it=0;it<et-1;++it)ot(this.rightPad),ot(this.separator);ot(this.rightPad)}}}compute(s,o){const a=s.length,c=o.length;if(c>0){let j=o[0];if(j!==0)throw new Error(`First split value must be 0, got ${j}`);for(let _e=1;_e<c;++_e){let et=o[_e]>=j;if(et=et&&o[_e]<=a,!et)throw new Error(`Invalid split value ${o[_e]}, must be in [${j}, ${a}]`);j=o[_e]}if(j!==a)throw new Error(`Last split value must be data size. Expected ${a}, got ${j}`)}const d=c-1,g=getArrayFromDType("int32",c);if(a===0||c===0){const j=new Array(a);for(let _e=0;_e<=d;++_e)g[_e]=0;return[j,g]}g[0]=0;for(let j=1;j<=d;++j){const _e=o[j]-o[j-1];let et=0;this.nGramWidths.forEach(_=>{et+=this.getNumNGrams(_e,_)}),this.preserveShort&&_e>0&&et===0&&(et=1),g[j]=g[j-1]+et}const $=new Array(g[d]);for(let j=0;j<d;++j){const _e=o[j];let et=g[j];if(this.nGramWidths.forEach(_=>{const b=o[j+1]-o[j],tt=this.getNumNGrams(b,_);this.createNGrams(s,_e,$,et,tt,_),et+=tt}),this.preserveShort&&et===g[j]){const _=o[j+1]-o[j];if(_===0)continue;const b=_+2*this.padWidth;this.createNGrams(s,_e,$,et,1,b)}}return[$,g]}}function stringNGramsImpl(i,s,o,a,c,d,g,$){return new StringNGramsOp(o,a,c,d,g,$).compute(i,s)}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function split(i,s,o,a){if(!i.length)return;if(s.length===0){for(let d=0;d<i.length;++d)a.push(i.subarray(d,d+1));return}if(s.length===1){const d=s[0];let g=i.indexOf(d);for(;g!==-1;){const $=i.subarray(0,g);(!o||$.length!==0)&&a.push($),i=i.subarray(g+1),g=i.indexOf(d)}(!o||i.length!==0)&&a.push(i);return}let c=0;for(let d=0;d<i.length+1;d++)if(d===i.length||s.indexOf(i[d])!==-1){const g=i.subarray(c,d);(!o||g.length!==0)&&a.push(g),c=d+1}}function stringSplitImpl(i,s,o){const a=i.length,c=[];let d=0,g=0;const $=new Array(a);for(let b=0;b<a;++b){const tt=c.length;split(i[b],s,o,c);const nt=c.length-tt;$[b]=nt,d+=nt,g=Math.max(g,nt)}const j=getArrayFromDType("int32",d*2),_e=new Array(d),et=[a,g];let _=0;for(let b=0;b<a;++b)for(let tt=0;tt<$[b];++tt)j[_*2]=b,j[_*2+1]=tt,_e[_]=c[_],++_;return[j,_e,et]}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function stringToHashBucketFastImpl(i,s){const o=getArrayFromDType("int32",i.length);for(let a=0;a<i.length;++a)o[a]=fingerPrint64(i[a]).modulo(s).getLowBitsUnsigned();return o}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const subImpl=createSimpleBinaryKernelImpl((i,s)=>i-s),subComplexImpl=createComplexBinaryKernelImpl((i,s,o,a)=>({real:i-o,imag:s-a})),sub$1=binaryKernelFunc$1(Sub,subImpl,subComplexImpl),subConfig$1={kernelName:Sub,backendName:"cpu",kernelFunc:sub$1};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tileImpl(i,s){const o=new Array(i.rank);for(let c=0;c<o.length;c++)o[c]=i.shape[c]*s[c];const a=buffer(o,i.dtype);for(let c=0;c<a.values.length;++c){const d=a.indexToLoc(c),g=new Array(i.rank);for(let j=0;j<g.length;j++)g[j]=d[j]%i.shape[j];const $=i.locToIndex(g);a.values[c]=i.values[$]}return a}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const comparePair=(i,s)=>{const o=s.value-i.value;return o===0?i.index-s.index:o};function select$2(i,s,o=0,a=i.length-1){for(;a>o;){if(a-o>600){const $=a-o+1,j=s-o+1,_e=Math.log($),et=.5*Math.exp(2*_e/3),_=.5*Math.sqrt(_e*et*($-et)/$)*Math.sign(j-$/2),b=Math.max(o,Math.floor(s-j*et/$+_)),tt=Math.min(a,Math.floor(s+($-j)*et/$+_));select$2(i,s,b,tt)}const c=i[s];let d=o,g=a;for(swap(i,o,s),comparePair(i[a],c)>0&&swap(i,o,a);d<g;){for(swap(i,d,g),d++,g--;comparePair(i[d],c)<0;)d=d+1;for(;comparePair(i[g],c)>0;)g=g-1}comparePair(i[o],c)===0?swap(i,o,g):(g=g+1,swap(i,g,a)),g<=s&&(o=g+1),s<=g&&(a=g-1)}}function topKImpl(i,s,o,a,c){const d=s[s.length-1],[g,$]=[i.length/d,d],j=getTypedArrayFromDType(o,g*a),_e=getTypedArrayFromDType("int32",g*a);for(let _=0;_<g;_++){const b=_*$,tt=i.subarray(b,b+$);let nt=new Array(tt.length);tt.forEach((it,at)=>nt[at]={value:it,index:at}),a<nt.length&&(select$2(nt,a),nt=nt.slice(0,a)),c&&nt.sort(comparePair);const rt=_*a,st=j.subarray(rt,rt+a),ot=_e.subarray(rt,rt+a);for(let it=0;it<a;it++)st[it]=nt[it].value,ot[it]=nt[it].index}const et=s.slice();return et[et.length-1]=a,[buffer(et,o,j),buffer(et,"int32",_e)]}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uniqueImpl(i,s,o,a){const c=parseAxisParam(s,o)[0],d=[1,o[0],1];for(let nt=0;nt<c;nt++)d[0]*=o[nt];d[1]=o[c];for(let nt=c+1;nt<o.length;nt++)d[2]*=o[nt];const g=new Map,$=new Int32Array(o[c]),j=new TensorBuffer(d,a,i),_e=[],et=d[0]===1&&d[2]===1;for(let nt=0;nt<o[c];nt++){let rt;if(et)rt=i[nt].toString();else{const ot=[];for(let it=0;it<d[0];it++)for(let at=0;at<d[2];at++)ot.push(j.get(it,nt,at));rt=ot.join(",")}const st=g.get(rt);if(st!=null)$[nt]=st;else{const ot=g.size;g.set(rt,ot),$[nt]=ot,_e.push(nt)}}const _=d.slice();_[1]=g.size;const b=new TensorBuffer(_,a);_e.forEach((nt,rt)=>{for(let st=0;st<d[0];st++)for(let ot=0;ot<d[2];ot++)b.set(j.get(st,nt,ot),st,rt,ot)});const tt=o.slice();return tt[c]=_[1],{outputValues:b.values,outputShape:tt,indices:$}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const shared=Object.freeze(Object.defineProperty({__proto__:null,addImpl,bincountImpl,bincountReduceImpl,bitwiseAndImpl,castImpl,ceilImpl,concatImpl:concatImpl$1,equalImpl,expImpl,expm1Impl,floorDivImpl,floorImpl,gatherNdImpl,gatherV2Impl,greaterEqualImpl,greaterImpl,lessEqualImpl,lessImpl,linSpaceImpl,logImpl,maxImpl:maxImpl$1,maximumImpl,minimumImpl,multiplyImpl,negImpl,notEqualImpl,prodImpl,raggedGatherImpl,raggedRangeImpl,raggedTensorToTensorImpl,rangeImpl,rsqrtImpl,scatterImpl,sigmoidImpl,simpleAbsImpl,sliceImpl,sparseFillEmptyRowsImpl,sparseReshapeImpl,sparseSegmentReductionImpl,sqrtImpl,squaredDifferenceImpl,staticRegexReplaceImpl,stridedSliceImpl,stringNGramsImpl,stringSplitImpl,stringToHashBucketFastImpl,subImpl,tileImpl,topKImpl,transposeImpl:transposeImpl$1,uniqueImpl},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */registerBackend("cpu",()=>new MathBackendCPU,1);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const elu$1=unaryKernelFunc$1(Elu$1,i=>i>=0?i:Math.exp(i)-1),eluConfig$1={kernelName:Elu$1,backendName:"cpu",kernelFunc:elu$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function leakyRelu$1(i){const{inputs:s,backend:o,attrs:a}=i,{x:c}=s,{alpha:d}=a;assertNotComplex$1([c],"leakyRelu");const g=sizeFromShape(c.shape),$=o.data.get(c.dataId).values,j=getTypedArrayFromDType("float32",g);for(let _e=0;_e<$.length;_e++)j[_e]=$[_e]<0?d*$[_e]:$[_e];return o.makeTensorInfo(c.shape,"float32",j)}const leakyReluConfig$1={kernelName:LeakyRelu,backendName:"cpu",kernelFunc:leakyRelu$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const preluImpl=createSimpleBinaryKernelImpl((i,s)=>i<0?s*i:i);function prelu$1(i){const{inputs:s,backend:o}=i,{x:a,alpha:c}=s;assertNotComplex$1([a,c],"prelu");const d=o.data.get(a.dataId).values,g=o.data.get(c.dataId).values,[$,j]=preluImpl(a.shape,c.shape,d,g,"float32");return o.makeTensorInfo(j,"float32",$)}const preluConfig$1={kernelName:Prelu,backendName:"cpu",kernelFunc:prelu$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const relu$1=unaryKernelFunc$1(Relu$1,i=>Math.max(0,i)),reluConfig$1={kernelName:Relu$1,backendName:"cpu",kernelFunc:relu$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const relu6$1=unaryKernelFunc$1(Relu6$1,i=>Math.min(Math.max(0,i),6)),relu6Config$1={kernelName:Relu6$1,backendName:"cpu",kernelFunc:relu6$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function applyActivation(i,s,o,a,c){if(o==="linear")return identity$1({inputs:{x:s},backend:i});if(o==="relu")return relu$1({inputs:{x:s},backend:i});if(o==="elu")return elu$1({inputs:{x:s},backend:i});if(o==="relu6")return relu6$1({inputs:{x:s},backend:i});if(o==="prelu")return prelu$1({inputs:{x:s,alpha:a},backend:i});if(o==="leakyrelu")return leakyRelu$1({inputs:{x:s},backend:i,attrs:{alpha:c}});if(o==="sigmoid")return sigmoid$1({inputs:{x:s},backend:i});throw new Error(`Activation ${o} has not been implemented for the CPU backend.`)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function reshape$1(i){const{inputs:s,backend:o,attrs:a}=i,{x:c}=s,{shape:d}=a,g=sizeFromShape(c.shape),$=inferFromImplicitShape(d,g),j=sizeFromShape($);assert$1(g===j,()=>`The new shape (${$}) has ${j} elements and the old shape (${c.shape}) has ${g} elements. The new shape and old shape must have the same number of elements.`),o.incRef(c.dataId);const _e=o.data.get(c.dataId);if(_e.complexTensorInfos!=null){const et=_e.complexTensorInfos.real,_=_e.complexTensorInfos.imag;et.shape=$,_.shape=$}return{dataId:c.dataId,shape:$,dtype:c.dtype}}const reshapeConfig$1={kernelName:Reshape$1,backendName:"cpu",kernelFunc:reshape$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function batchMatMul$1(i){const{inputs:s,backend:o,attrs:a}=i,{a:c,b:d}=s,{transposeA:g,transposeB:$}=a;assertNotComplex$1([c,d],"matMul");const j=c.shape.length,_e=d.shape.length,et=g?c.shape[j-2]:c.shape[j-1],_=$?d.shape[_e-1]:d.shape[_e-2],b=g?c.shape[j-1]:c.shape[j-2],tt=$?d.shape[_e-2]:d.shape[_e-1],nt=c.shape.slice(0,-2),rt=d.shape.slice(0,-2),st=sizeFromShape(nt),ot=sizeFromShape(rt),at=assertAndGetBroadcastShape(c.shape.slice(0,-2),d.shape.slice(0,-2)).concat([b,tt]);assert$1(et===_,()=>`Error in matMul: inner shapes (${et}) and (${_}) of Tensors with shapes ${c.shape} and ${d.shape} and transposeA=${g} and transposeB=${$} must match.`);const lt=g?[st,et,b]:[st,b,et],ut=$?[ot,tt,_]:[ot,_,tt],ct=reshape$1({inputs:{x:c},backend:o,attrs:{shape:lt}}),dt=reshape$1({inputs:{x:d},backend:o,attrs:{shape:ut}}),pt=g?ct.shape[1]:ct.shape[2],ht=g?ct.shape[2]:ct.shape[1],ft=$?dt.shape[1]:dt.shape[2],yt=Math.max(st,ot),wt=o.data.get(ct.dataId).values,_t=o.data.get(dt.dataId).values,bt=computeStrides(ct.shape),xt=computeStrides(dt.shape),[mt,vt,Et]=g?[bt[0],1,bt[1]]:[bt[0],bt[1],1],[Ct,kt,Nt]=$?[1,xt[1],xt[0]]:[xt[1],1,xt[0]],Mt=ht*ft,Vt=buffer([yt,ht,ft],ct.dtype),Gt=Vt.values,Ft=o.blockSize;for(let jt=0;jt<yt;jt++){const qt=jt%st,Yt=jt%ot;for(let Qt=0;Qt<ht;Qt+=Ft){const Zt=Math.min(Qt+Ft,ht);for(let en=0;en<ft;en+=Ft){const on=Math.min(en+Ft,ft);for(let rn=0;rn<pt;rn+=Ft){const sn=Math.min(rn+Ft,pt);for(let pn=Qt;pn<Zt;pn++)for(let dn=en;dn<on;dn++){let mn=0;for(let Sn=rn;Sn<sn;Sn++){const Ln=wt[qt*mt+pn*vt+Sn*Et],In=_t[Sn*Ct+dn*kt+Yt*Nt];mn+=Ln*In}Gt[jt*Mt+(pn*ft+dn)]+=mn}}}}}return o.disposeIntermediateTensorInfo(ct),o.disposeIntermediateTensorInfo(dt),o.makeTensorInfo(at,Vt.dtype,Vt.values)}const batchMatMulConfig$1={kernelName:BatchMatMul,backendName:"cpu",kernelFunc:batchMatMul$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _fusedMatMul$1(i){const{inputs:s,backend:o,attrs:a}=i,{a:c,b:d,bias:g,preluActivationWeights:$}=s,{transposeA:j,transposeB:_e,activation:et,leakyreluAlpha:_}=a;let b,tt,nt;const rt=[];b=batchMatMul$1({inputs:{a:c,b:d},attrs:{transposeA:j,transposeB:_e},backend:o}),g&&(tt=add({inputs:{a:b,b:g},backend:o}),rt.push(b),b=tt),et&&(nt=applyActivation(o,b,et,$,_),rt.push(b),b=nt);for(const ot of rt)o.disposeIntermediateTensorInfo(ot);return b}const _fusedMatMulConfig$1={kernelName:_FusedMatMul,backendName:"cpu",kernelFunc:_fusedMatMul$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const acos$1=unaryKernelFunc$1(Acos,i=>Math.acos(i)),acosConfig$1={kernelName:Acos,backendName:"cpu",kernelFunc:acos$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const acosh$1=unaryKernelFunc$1(Acosh,i=>Math.acosh(i)),acoshConfig$1={kernelName:Acosh,backendName:"cpu",kernelFunc:acosh$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function addN$1(i){const{inputs:s,backend:o}=i,a=s;assertNotComplex$1(s,"addN");const c=a.map($=>o.data.get($.dataId).values),d=buffer(a[0].shape,a[0].dtype),g=d.values;for(let $=0;$<a.length;$++){const j=c[$];for(let _e=0;_e<g.length;_e++)g[_e]+=j[_e]}return o.makeTensorInfo(d.shape,d.dtype,d.values)}const addNConfig$1={kernelName:AddN,backendName:"cpu",kernelFunc:addN$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function all$1(i){const{inputs:s,backend:o,attrs:a}=i,{x:c}=s,{axis:d,keepDims:g}=a;assertNotComplex$1(c,"all");const $=parseAxisParam(d,c.shape);let j=$;const _e=getAxesPermutation(j,c.shape.length);let et=c;_e!=null&&(et=transpose$1({inputs:{x:c},backend:o,attrs:{perm:_e}}),j=getInnerMostAxes(j.length,c.shape.length)),assertAxesAreInnerMostDims("all",j,et.shape.length);const[_,b]=computeOutAndReduceShapes(et.shape,j),tt=sizeFromShape(b),nt=makeZerosTypedArray(sizeFromShape(_),et.dtype),rt=o.data.get(et.dataId).values;for(let ot=0;ot<nt.length;++ot){const it=ot*tt;let at=rt[it];for(let lt=0;lt<tt;++lt){const ut=rt[it+lt];at=at&&ut}nt[ot]=at}_e!=null&&o.disposeIntermediateTensorInfo(et);const st=o.makeTensorInfo(_,et.dtype,nt);if(g){const ot=expandShapeToKeepDim(_,$),it=reshape$1({inputs:{x:st},backend:o,attrs:{shape:ot}});return o.disposeIntermediateTensorInfo(st),it}return st}const allConfig$1={kernelName:All,backendName:"cpu",kernelFunc:all$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function any$1(i){const{inputs:s,backend:o,attrs:a}=i,{x:c}=s,{axis:d,keepDims:g}=a;assertNotComplex$1(c,"any");const $=parseAxisParam(d,c.shape);let j=$;const _e=getAxesPermutation(j,c.shape.length);let et=c;_e!=null&&(et=transpose$1({inputs:{x:c},backend:o,attrs:{perm:_e}}),j=getInnerMostAxes(j.length,c.shape.length)),assertAxesAreInnerMostDims("any",j,et.shape.length);const[_,b]=computeOutAndReduceShapes(et.shape,j),tt=sizeFromShape(b),nt=makeZerosTypedArray(sizeFromShape(_),et.dtype),rt=o.data.get(et.dataId).values;for(let ot=0;ot<nt.length;++ot){const it=ot*tt;let at=rt[it];for(let lt=0;lt<tt;++lt){const ut=rt[it+lt];at=at||ut}nt[ot]=at}_e!=null&&o.disposeIntermediateTensorInfo(et);const st=o.makeTensorInfo(_,et.dtype,nt);if(g){const ot=expandShapeToKeepDim(_,$),it=reshape$1({inputs:{x:st},backend:o,attrs:{shape:ot}});return o.disposeIntermediateTensorInfo(st),it}return st}const anyConfig$1={kernelName:Any,backendName:"cpu",kernelFunc:any$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function argMax$1(i){const{inputs:s,backend:o,attrs:a}=i,{x:c}=s,{axis:d}=a;assertNotComplex$1(c,"argMax");let g=parseAxisParam(d,c.shape);const $=getAxesPermutation(g,c.shape.length);let j=c;const _e=[];$!=null&&(j=transpose$1({inputs:{x:c},backend:o,attrs:{perm:$}}),_e.push(j),g=getInnerMostAxes(g.length,j.shape.length)),g=[g[0]],assertAxesAreInnerMostDims("argMax",g,j.shape.length);const[et,_]=computeOutAndReduceShapes(j.shape,g),b=sizeFromShape(et),tt=makeZerosTypedArray(b,"int32"),nt=sizeFromShape(_),rt=o.data.get(j.dataId).values;for(let st=0;st<tt.length;++st){const ot=st*nt;let it=rt[ot],at=0;for(let lt=0;lt<nt;++lt){const ut=rt[ot+lt];ut>it&&(it=ut,at=lt)}tt[st]=at}return _e.forEach(st=>o.disposeIntermediateTensorInfo(st)),o.makeTensorInfo(et,"int32",tt)}const argMaxConfig$1={kernelName:ArgMax,backendName:"cpu",kernelFunc:argMax$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function argMin$1(i){const{inputs:s,backend:o,attrs:a}=i,{x:c}=s,{axis:d}=a;assertNotComplex$1(c,"argMin");let g=parseAxisParam(d,c.shape);const $=getAxesPermutation(g,c.shape.length);let j=c;const _e=[];$!=null&&(j=transpose$1({inputs:{x:c},backend:o,attrs:{perm:$}}),_e.push(j),g=getInnerMostAxes(g.length,j.shape.length)),g=[g[0]],assertAxesAreInnerMostDims("argMin",g,j.shape.length);const[et,_]=computeOutAndReduceShapes(j.shape,g),b=sizeFromShape(et),tt=makeZerosTypedArray(b,"int32"),nt=sizeFromShape(_),rt=o.data.get(j.dataId).values;for(let st=0;st<tt.length;++st){const ot=st*nt;let it=rt[ot],at=0;for(let lt=0;lt<nt;++lt){const ut=rt[ot+lt];ut<it&&(it=ut,at=lt)}tt[st]=at}return _e.forEach(st=>o.disposeIntermediateTensorInfo(st)),o.makeTensorInfo(et,"int32",tt)}const argMinConfig$1={kernelName:ArgMin,backendName:"cpu",kernelFunc:argMin$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const asin$1=unaryKernelFunc$1(Asin,i=>Math.asin(i)),asinConfig$1={kernelName:Asin,backendName:"cpu",kernelFunc:asin$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const asinh$1=unaryKernelFunc$1(Asinh,i=>Math.asinh(i)),asinhConfig$1={kernelName:Asinh,backendName:"cpu",kernelFunc:asinh$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const atan$1=unaryKernelFunc$1(Atan,i=>Math.atan(i)),atanConfig$1={kernelName:Atan,backendName:"cpu",kernelFunc:atan$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const atan2Impl=createSimpleBinaryKernelImpl((i,s)=>Math.atan2(i,s)),atan2$1=binaryKernelFunc$1(Atan2,atan2Impl),atan2Config$1={kernelName:Atan2,backendName:"cpu",kernelFunc:atan2$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const atanh$1=unaryKernelFunc$1(Atanh,i=>Math.atanh(i)),atanhConfig$1={kernelName:Atanh,backendName:"cpu",kernelFunc:atanh$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pool(i,s,o,a,c,d){const g=c.strideHeight,$=c.strideWidth,j=c.dilationHeight,_e=c.dilationWidth,et=c.effectiveFilterHeight,_=c.effectiveFilterWidth,b=c.padInfo.top,tt=c.padInfo.left,nt=d==="max"?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,rt=buffer(c.outShape,o),st=rt.values,ot=c.outShape[1]*c.outShape[2]*c.outShape[3],it=c.outShape[2]*c.outShape[3],at=c.outShape[3];for(let lt=0;lt<c.batchSize;++lt){const ut=lt*ot,ct=lt*a[0];for(let dt=0;dt<c.inChannels;++dt)for(let pt=0;pt<c.outHeight;++pt){const ht=pt*g-b,ft=Math.max(0,ht),yt=Math.min(c.inHeight,et+ht),wt=ut+pt*it;for(let _t=0;_t<c.outWidth;++_t){const bt=_t*$-tt,xt=Math.max(0,bt),mt=Math.min(c.inWidth,_+bt);let vt=nt,Et=0,Ct=0;for(let Nt=ft;Nt<yt;Nt+=j){const Mt=ct+Nt*a[1];for(let Vt=xt;Vt<mt;Vt+=_e){const Gt=Mt+Vt*a[2],Ft=i[Gt+dt];d==="max"&&Ft>vt?vt=Ft:d==="avg"&&(Et+=Ft,Ct++)}if(isNaN(vt))break}const kt=wt+_t*at+dt;st[kt]=d==="avg"?Et/Ct:vt}}}return rt}function maxPoolPositions(i,s,o,a,c=!1,d=!1){const g=buffer(a.outShape,"int32"),$=a.strideHeight,j=a.strideWidth,_e=a.dilationHeight,et=a.dilationWidth,_=a.effectiveFilterHeight,b=a.effectiveFilterWidth,tt=a.padInfo.top,nt=a.padInfo.left,rt=buffer(s,o,i);for(let st=0;st<a.batchSize;++st)for(let ot=0;ot<a.inChannels;++ot)for(let it=0;it<a.outHeight;++it){const at=it*$-tt;let lt=at;for(;lt<0;)lt+=_e;const ut=Math.min(a.inHeight,_+at);for(let ct=0;ct<a.outWidth;++ct){const dt=ct*j-nt;let pt=dt;for(;pt<0;)pt+=et;const ht=Math.min(a.inWidth,b+dt);let ft=Number.NEGATIVE_INFINITY,yt=-1;for(let wt=lt;wt<ut;wt+=_e){const _t=wt-at;for(let bt=pt;bt<ht;bt+=et){const xt=bt-dt,mt=rt.get(st,wt,bt,ot);mt>ft&&(ft=mt,c?yt=d?((st*a.inHeight+wt)*a.inWidth+bt)*a.inChannels+ot:(wt*a.inWidth+bt)*a.inChannels+ot:yt=_t*b+xt)}}g.set(yt,st,it,ct,ot)}}return g}function pool3d(i,s,o,a,c,d){const g=c.strideDepth,$=c.strideHeight,j=c.strideWidth,_e=c.dilationDepth,et=c.dilationHeight,_=c.dilationWidth,b=c.effectiveFilterDepth,tt=c.effectiveFilterHeight,nt=c.effectiveFilterWidth,rt=c.padInfo.front,st=c.padInfo.top,ot=c.padInfo.left,it=d==="max"?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,at=buffer(c.outShape,o),lt=at.values,ut=c.outShape[1]*c.outShape[2]*c.outShape[3]*c.outShape[4],ct=c.outShape[2]*c.outShape[3]*c.outShape[4],dt=c.outShape[3]*c.outShape[4],pt=c.outShape[4];for(let ht=0;ht<c.batchSize;++ht){const ft=ht*ut,yt=ht*a[0];for(let wt=0;wt<c.inChannels;++wt)for(let _t=0;_t<c.outDepth;++_t){const bt=_t*g-rt;let xt=bt;for(;xt<0;)xt+=_e;const mt=Math.min(c.inDepth,b+bt),vt=ft+_t*ct;for(let Et=0;Et<c.outHeight;++Et){const Ct=Et*$-st;let kt=Ct;for(;kt<0;)kt+=et;const Nt=Math.min(c.inHeight,tt+Ct),Mt=vt+Et*dt;for(let Vt=0;Vt<c.outWidth;++Vt){const Gt=Vt*j-ot;let Ft=Gt;for(;Ft<0;)Ft+=_;const jt=Math.min(c.inWidth,nt+Gt),qt=Mt+Vt*pt;let Yt=it,Qt=0,Zt=0;for(let on=xt;on<mt;on+=_e){const rn=yt+on*a[1];for(let sn=kt;sn<Nt;sn+=et){const pn=rn+sn*a[2];for(let dn=Ft;dn<jt;dn+=_){const mn=pn+dn*a[3],Sn=i[mn+wt];if(d==="max"&&Sn>Yt?Yt=Sn:d==="avg"&&(Qt+=Sn,Zt++),isNaN(Yt))break}if(isNaN(Yt))break}if(isNaN(Yt))break}const en=qt+wt;lt[en]=d==="avg"?Qt/Math.max(Zt,1):Yt}}}}return at}function maxPool3dPositions(i,s){const o=buffer(s.outShape,"int32"),a=s.strideDepth,c=s.strideHeight,d=s.strideWidth,g=s.dilationDepth,$=s.dilationHeight,j=s.dilationWidth,_e=s.effectiveFilterDepth,et=s.effectiveFilterHeight,_=s.effectiveFilterWidth,b=s.padInfo.front,tt=s.padInfo.top,nt=s.padInfo.left;for(let rt=0;rt<s.batchSize;++rt)for(let st=0;st<s.inChannels;++st)for(let ot=0;ot<s.outDepth;++ot){const it=ot*a-b;let at=it;for(;at<0;)at+=g;const lt=Math.min(s.inDepth,_e+it);for(let ut=0;ut<s.outHeight;++ut){const ct=ut*c-tt;let dt=ct;for(;dt<0;)dt+=$;const pt=Math.min(s.inHeight,et+ct);for(let ht=0;ht<s.outWidth;++ht){const ft=ht*d-nt;let yt=ft;for(;yt<0;)yt+=j;const wt=Math.min(s.inWidth,_+ft);let _t=Number.NEGATIVE_INFINITY,bt=-1;for(let xt=at;xt<lt;xt+=g){const mt=xt-it;for(let vt=dt;vt<pt;vt+=$){const Et=vt-ct;for(let Ct=yt;Ct<wt;Ct+=j){const kt=Ct-ft,Nt=i.get(rt,xt,vt,Ct,st);Nt>=_t&&(_t=Nt,bt=mt*et*_+Et*et+kt)}}}o.set(bt,rt,ot,ut,ht,st)}}}return o}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function avgPool$1(i){const{inputs:s,backend:o,attrs:a}=i,{x:c}=s;assertNotComplex$1(c,"avgPool");const{filterSize:d,strides:g,pad:$,dimRoundingMode:j}=a,_e=1;assert$1(eitherStridesOrDilationsAreOne(g,_e),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${g} and dilations '${_e}'`);const et=computePool2DInfo(c.shape,d,g,_e,$,j);let _;if(et.filterWidth===1&&et.filterHeight===1&&arraysEqual(et.inShape,et.outShape))_=identity$1({inputs:{x:c},backend:o});else{const b=o.data.get(c.dataId).values,tt=computeStrides(c.shape),nt=pool(b,c.shape,c.dtype,tt,et,"avg");_=o.makeTensorInfo(et.outShape,c.dtype,nt.values)}return _}const avgPoolConfig$1={kernelName:AvgPool,backendName:"cpu",kernelFunc:avgPool$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function avgPool3D$1(i){const{inputs:s,backend:o,attrs:a}=i,{x:c}=s,{filterSize:d,strides:g,pad:$,dimRoundingMode:j,dataFormat:_e}=a;assertNotComplex$1(c,"avgPool3d");const et=computePool3DInfo(c.shape,d,g,1,$,j,_e),_=o.data.get(c.dataId).values,b=pool3d(_,c.shape,c.dtype,computeStrides(c.shape),et,"avg");return o.makeTensorInfo(b.shape,"float32",b.values)}const avgPool3DConfig$1={kernelName:AvgPool3D,backendName:"cpu",kernelFunc:avgPool3D$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function avgPool3DGrad$1(i){const{inputs:s,backend:o,attrs:a}=i,{dy:c,input:d}=s,{filterSize:g,strides:$,pad:j,dimRoundingMode:_e}=a;assertNotComplex$1([c,d],"avgPool3DGrad");const et=computePool3DInfo(d.shape,g,$,1,j,_e),_=et.strideDepth,b=et.strideHeight,tt=et.strideWidth,nt=et.filterDepth,rt=et.filterHeight,st=et.filterWidth,ot=et.dilationDepth,it=et.dilationHeight,at=et.dilationWidth,lt=et.effectiveFilterDepth,ut=et.effectiveFilterHeight,ct=et.effectiveFilterWidth,dt=lt-1-et.padInfo.front,pt=ct-1-et.padInfo.left,ht=ut-1-et.padInfo.top,ft=buffer(d.shape,"float32"),yt=1/(nt*rt*st),wt=o.bufferSync(c);for(let _t=0;_t<et.batchSize;++_t)for(let bt=0;bt<et.inChannels;++bt)for(let xt=0;xt<et.inDepth;++xt)for(let mt=0;mt<et.inHeight;++mt)for(let vt=0;vt<et.inWidth;++vt){const Et=xt-dt,Ct=mt-ht,kt=vt-pt;let Nt=0;for(let Mt=0;Mt<lt;Mt+=ot){const Vt=(Et+Mt)/_;if(!(Vt<0||Vt>=et.outDepth||Math.floor(Vt)!==Vt))for(let Gt=0;Gt<ut;Gt+=it){const Ft=(Ct+Gt)/b;if(!(Ft<0||Ft>=et.outHeight||Math.floor(Ft)!==Ft))for(let jt=0;jt<ct;jt+=at){const qt=(kt+jt)/tt;if(qt<0||qt>=et.outWidth||Math.floor(qt)!==qt)continue;const Yt=wt.get(_t,Vt,Ft,qt,bt);Nt+=Yt}}}ft.set(Nt*yt,_t,xt,mt,vt,bt)}return o.makeTensorInfo(ft.shape,ft.dtype,ft.values)}const avgPool3DGradConfig$1={kernelName:AvgPool3DGrad,backendName:"cpu",kernelFunc:avgPool3DGrad$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function avgPoolGrad$1(i){const{inputs:s,backend:o,attrs:a}=i,{dy:c,input:d}=s,g=d;assertNotComplex$1([c,d],"avgPoolGrad");const{filterSize:$,strides:j,pad:_e}=a,et=computePool2DInfo(g.shape,$,j,1,_e),_=et.strideHeight,b=et.strideWidth,tt=et.filterHeight,nt=et.filterWidth,rt=et.dilationHeight,st=et.dilationWidth,ot=et.effectiveFilterHeight,it=et.effectiveFilterWidth,at=it-1-et.padInfo.left,lt=ot-1-et.padInfo.top,ut=buffer(g.shape,"float32"),ct=1/(tt*nt),dt=o.data.get(c.dataId).values,pt=buffer(c.shape,"float32",dt);for(let ht=0;ht<et.batchSize;++ht)for(let ft=0;ft<et.inChannels;++ft)for(let yt=0;yt<et.inHeight;++yt)for(let wt=0;wt<et.inWidth;++wt){const _t=yt-lt,bt=wt-at;let xt=0;for(let mt=0;mt<ot;mt+=rt){const vt=(_t+mt)/_;if(!(vt<0||vt>=et.outHeight||Math.floor(vt)!==vt))for(let Et=0;Et<it;Et+=st){const Ct=(bt+Et)/b;if(Ct<0||Ct>=et.outWidth||Math.floor(Ct)!==Ct)continue;const kt=pt.get(ht,vt,Ct,ft);xt+=kt}}ut.set(xt*ct,ht,yt,wt,ft)}return o.makeTensorInfo(ut.shape,ut.dtype,ut.values)}const avgPoolGradConfig$1={kernelName:AvgPoolGrad,backendName:"cpu",kernelFunc:avgPoolGrad$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function batchNorm$1(i){const{inputs:s,backend:o,attrs:a}=i,{x:c,scale:d,offset:g,mean:$,variance:j}=s;assert$1($.shape.length===j.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),assert$1(g==null||$.shape.length===g.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),assert$1(d==null||$.shape.length===d.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks."),assertNotComplex$1([c,$,j,d,g],"batchNorm");let{varianceEpsilon:_e}=a;_e==null&&(_e=.001);const et=o.data.get(c.dataId).values,_=o.data.get($.dataId).values,b=o.data.get(j.dataId).values,tt=d?o.data.get(d.dataId).values:new Float32Array([1]),nt=g?o.data.get(g.dataId).values:new Float32Array([0]),rt=new Float32Array(et.length),st=nt.length,ot=tt.length,it=b.length,at=_.length;let lt=0,ut=0,ct=0,dt=0;for(let pt=0;pt<et.length;++pt)rt[pt]=nt[lt++]+(et[pt]-_[ut++])*tt[ct++]/Math.sqrt(b[dt++]+_e),lt>=st&&(lt=0),ut>=at&&(ut=0),ct>=ot&&(ct=0),dt>=it&&(dt=0);return o.makeTensorInfo(c.shape,c.dtype,rt)}const batchNormConfig$1={kernelName:FusedBatchNorm,backendName:"cpu",kernelFunc:batchNorm$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function batchToSpaceND$1(i){const{inputs:s,backend:o,attrs:a}=i,{x:c}=s,{blockShape:d,crops:g}=a;assertNotComplex$1([c],"batchToSpaceND");const $=d.reduce((ot,it)=>ot*it),j=getReshaped(c.shape,d,$),_e=getPermuted(j.length,d.length),et=getReshapedPermuted(c.shape,d,$),_=getSliceBeginCoords(g,d.length),b=getSliceSize(et,g,d.length),tt=reshape$1({inputs:{x:c},backend:o,attrs:{shape:j}}),nt=transpose$1({inputs:{x:tt},backend:o,attrs:{perm:_e}}),rt=reshape$1({inputs:{x:nt},backend:o,attrs:{shape:et}}),st=slice$1({inputs:{x:rt},backend:o,attrs:{begin:_,size:b}});return o.disposeIntermediateTensorInfo(tt),o.disposeIntermediateTensorInfo(nt),o.disposeIntermediateTensorInfo(rt),st}const batchToSpaceNDConfig$1={kernelName:BatchToSpaceND,backendName:"cpu",kernelFunc:batchToSpaceND$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bincount$1(i){const{inputs:s,backend:o,attrs:a}=i,{x:c,weights:d}=s,{size:g}=a,$=o.data.get(c.dataId).values,j=o.data.get(d.dataId).values,_e=bincountImpl($,j,d.dtype,d.shape,g);return o.makeTensorInfo([g],d.dtype,_e)}const bincountConfig$1={kernelName:Bincount,backendName:"cpu",kernelFunc:bincount$1};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function broadcastArgs$1(i){const{inputs:s,backend:o}=i,{s0:a,s1:c}=s,d=o.data.get(a.dataId).values,g=o.data.get(c.dataId).values,$=assertAndGetBroadcastShape(Array.from(d),Array.from(g));return o.makeTensorInfo([$.length],"int32",Int32Array.from($))}const broadcastArgsConfig$1={kernelName:BroadcastArgs,backendName:"cpu",kernelFunc:broadcastArgs$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const clipByValue$1=unaryKernelFunc$1(ClipByValue,(i,s)=>{const o=s;return i>o.clipValueMax?o.clipValueMax:i<o.clipValueMin?o.clipValueMin:i}),clipByValueConfig$1={kernelName:ClipByValue,backendName:"cpu",kernelFunc:clipByValue$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const complexAbs$1=i=>{const{x:s}=i.inputs,o=i.backend,a=new Float32Array(sizeFromShape(s.shape)),c=o.data.get(s.dataId),d=c.complexTensorInfos.real,g=c.complexTensorInfos.imag,$=o.data.get(d.dataId).values,j=o.data.get(g.dataId).values;for(let _e=0;_e<$.length;_e++){const et=$[_e],_=j[_e];a[_e]=Math.hypot(et,_)}return o.makeOutput(a,s.shape,"float32")},complexAbsConfig$1={kernelName:ComplexAbs,backendName:"cpu",kernelFunc:complexAbs$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function imag$1(i){const{inputs:s,backend:o}=i,{input:a}=s,c=o.data.get(a.dataId).complexTensorInfos.imag,d=o.data.get(c.dataId).values;return o.makeTensorInfo(c.shape,c.dtype,d)}const imagConfig$1={kernelName:Imag,backendName:"cpu",kernelFunc:imag$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function concat$1(i){const{inputs:s,backend:o,attrs:a}=i,{axis:c}=a,d=parseAxisParam(c,s[0].shape)[0],g=s.map(rt=>rt.shape);assertParamsConsistent(g,d);let $=computeOutShape$1(s.map(rt=>rt.shape),d);if(sizeFromShape($)===0)return o.makeTensorInfo($,s[0].dtype,[]);const j=s.filter(rt=>sizeFromShape(rt.shape)>0);if(j.length===1)return identity$1({inputs:{x:j[0]},backend:o});if(j[0].dtype==="complex64"){const rt=j.map(lt=>real$1({inputs:{input:lt},backend:o})),st=j.map(lt=>imag$1({inputs:{input:lt},backend:o})),ot=concat$1({inputs:rt,backend:o,attrs:{axis:d}}),it=concat$1({inputs:st,backend:o,attrs:{axis:d}}),at=complex$1({inputs:{real:ot,imag:it},backend:o});return rt.forEach(lt=>o.disposeIntermediateTensorInfo(lt)),st.forEach(lt=>o.disposeIntermediateTensorInfo(lt)),o.disposeIntermediateTensorInfo(ot),o.disposeIntermediateTensorInfo(it),at}const _e=j.map(rt=>{const ot=[-1,sizeFromShape(rt.shape.slice(d))];return reshape$1({inputs:{x:rt},backend:o,attrs:{shape:ot}})}),et=_e.map(rt=>({vals:o.data.get(rt.dataId).values,shape:rt.shape}));$=computeOutShape$1(_e.map(rt=>rt.shape),1);const _=_e[0].shape[0]===1,b=concatImpl$1(et,$,s[0].dtype,_),tt=computeOutShape$1(j.map(rt=>rt.shape),d),nt=o.makeTensorInfo(tt,s[0].dtype,b);return _e.forEach(rt=>o.disposeIntermediateTensorInfo(rt)),nt}const concatConfig$1={kernelName:Concat,backendName:"cpu",kernelFunc:concat$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function conv2D(i){const{inputs:s,backend:o,attrs:a}=i,{x:c,filter:d}=s,{strides:g,pad:$,dataFormat:j,dilations:_e,dimRoundingMode:et}=a;assertNotComplex$1([c,d],"conv2d");const _=convertConv2DDataFormat(j),b=computeConv2DInfo(c.shape,d.shape,g,_e,$,et,!1,_),tt=b.filterHeight,nt=b.filterWidth,rt=b.dilationHeight,st=b.dilationWidth,ot=b.padInfo.left,it=b.padInfo.top,at=b.dataFormat==="channelsLast",lt=new TensorBuffer(b.outShape,c.dtype),ut=computeStrides(c.shape),ct=computeStrides(d.shape),dt=ut[0],pt=at?ut[1]:ut[2],ht=at?ut[2]:1,ft=at?1:ut[1],yt=lt.strides[0],wt=at?lt.strides[1]:lt.strides[2],_t=at?lt.strides[2]:1,bt=at?1:lt.strides[1],xt=o.data.get(c.dataId).values,mt=o.data.get(d.dataId).values,vt=lt.values;for(let Et=0;Et<b.batchSize;++Et){const Ct=Et*dt,kt=Et*yt;for(let Nt=0;Nt<b.outHeight;++Nt){const Mt=kt+Nt*wt,Vt=Nt*b.strideHeight-it;for(let Gt=0;Gt<tt;++Gt){const Ft=Vt+Gt*rt;if(Ft<0||Ft>=b.inHeight)continue;const jt=Gt*ct[0],qt=Ct+Ft*pt;for(let Yt=0;Yt<b.outWidth;++Yt){const Qt=Mt+Yt*_t,Zt=Yt*b.strideWidth-ot;for(let en=0;en<nt;++en){const on=Zt+en*st;if(on<0||on>=b.inWidth)continue;const rn=jt+en*ct[1],sn=qt+on*ht;let pn=rn;for(let dn=0;dn<b.inChannels;++dn){const mn=xt[sn+dn*ft];for(let Sn=0;Sn<b.outChannels;++Sn)vt[Qt+Sn*bt]+=mn*mt[pn+Sn];pn+=b.outChannels}}}}}}return o.makeTensorInfo(lt.shape,lt.dtype,vt)}const conv2DConfig$1={kernelName:Conv2D$1,backendName:"cpu",kernelFunc:conv2D};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function conv2DBackpropFilter$1(i){const{inputs:s,backend:o,attrs:a}=i,{x:c,dy:d}=s,{strides:g,pad:$,dataFormat:j,dimRoundingMode:_e,filterShape:et}=a;assertNotComplex$1([c,d],"conv2dBackpropFilter");const _=convertConv2DDataFormat(j),b=computeConv2DInfo(c.shape,et,g,1,$,_e,!1,_),{strideHeight:tt,strideWidth:nt,filterHeight:rt,filterWidth:st}=b,ot=b.dataFormat==="channelsLast",it=new TensorBuffer(b.filterShape,"float32"),at=b.padInfo.left,lt=b.padInfo.top,ut=o.data.get(c.dataId).values,ct=o.data.get(d.dataId).values,dt=new TensorBuffer(c.shape,c.dtype,ut),pt=new TensorBuffer(d.shape,d.dtype,ct);for(let ht=0;ht<rt;++ht){const ft=Math.max(0,Math.ceil((lt-ht)/tt)),yt=Math.min(b.outHeight,(b.inHeight+lt-ht)/tt);for(let wt=0;wt<st;++wt){const _t=Math.max(0,Math.ceil((at-wt)/nt)),bt=Math.min(b.outWidth,(b.inWidth+at-wt)/nt);for(let xt=0;xt<b.inChannels;++xt)for(let mt=0;mt<b.outChannels;++mt){let vt=0;for(let Et=0;Et<b.batchSize;++Et)for(let Ct=ft;Ct<yt;++Ct){const kt=ht+Ct*tt-lt;for(let Nt=_t;Nt<bt;++Nt){const Mt=wt+Nt*nt-at;ot?vt+=dt.get(Et,kt,Mt,xt)*pt.get(Et,Ct,Nt,mt):vt+=dt.get(Et,xt,kt,Mt)*pt.get(Et,mt,Ct,Nt)}}it.set(vt,ht,wt,xt,mt)}}}return o.makeTensorInfo(it.shape,it.dtype,it.values)}const conv2DBackpropFilterConfig$1={kernelName:Conv2DBackpropFilter,backendName:"cpu",kernelFunc:conv2DBackpropFilter$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function conv2DBackpropInput$1(i){const{inputs:s,backend:o,attrs:a}=i,{dy:c,filter:d}=s,{inputShape:g,strides:$,pad:j,dataFormat:_e,dimRoundingMode:et}=a;assertNotComplex$1([c,d],"conv2dBackpropInput");const _=computeStrides(d.shape),b=computeStrides(c.shape);let tt=convertConv2DDataFormat(_e);const nt=computeConv2DInfo(g,d.shape,$,1,j,et,!1,tt),rt=new TensorBuffer(nt.inShape,"float32"),st=rt.values,ot=o.data.get(c.dataId).values,it=o.data.get(d.dataId).values,[at,lt,ut]=_,{batchSize:ct,filterHeight:dt,filterWidth:pt,inChannels:ht,inHeight:ft,inWidth:yt,outChannels:wt,outHeight:_t,outWidth:bt,strideHeight:xt,strideWidth:mt}=nt;tt=nt.dataFormat;const vt=dt-1-nt.padInfo.top,Et=pt-1-nt.padInfo.left,Ct=tt==="channelsLast",kt=rt.strides[0],Nt=Ct?rt.strides[1]:rt.strides[2],Mt=Ct?rt.strides[2]:1,Vt=Ct?1:rt.strides[1],Gt=b[0],Ft=Ct?b[1]:b[2],jt=Ct?b[2]:1,qt=Ct?1:b[1];for(let Yt=0;Yt<ct;++Yt)for(let Qt=0;Qt<ht;++Qt)for(let Zt=0;Zt<ft;++Zt){const en=Zt-vt,on=Math.max(0,Math.ceil(en/xt)),rn=Math.min(_t,(dt+en)/xt);for(let sn=0;sn<yt;++sn){const pn=sn-Et,dn=Math.max(0,Math.ceil(pn/mt)),mn=Math.min(bt,(pt+pn)/mt);let Sn=0;for(let In=on;In<rn;++In){const On=In*xt-en;for(let xn=dn;xn<mn;++xn){const Dn=xn*mt-pn,Mn=Gt*Yt+Ft*In+jt*xn,ln=at*(dt-1-On)+lt*(pt-1-Dn)+ut*Qt;for(let qn=0;qn<wt;++qn){const jn=ot[Mn+qt*qn],Xn=it[ln+qn];Sn+=jn*Xn}}}const Ln=kt*Yt+Nt*Zt+Mt*sn+Vt*Qt;st[Ln]=Sn}}return o.makeTensorInfo(rt.shape,rt.dtype,rt.values)}const conv2DBackpropInputConfig$1={kernelName:Conv2DBackpropInput,backendName:"cpu",kernelFunc:conv2DBackpropInput$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function conv3D$1(i){const{inputs:s,backend:o,attrs:a}=i,{x:c,filter:d}=s,{strides:g,pad:$,dilations:j}=a;assertNotComplex$1([c,d],"conv3d");const _e=computeConv3DInfo(c.shape,d.shape,g,j,$),{filterDepth:et,filterHeight:_,filterWidth:b,dilationDepth:tt,dilationHeight:nt,dilationWidth:rt,padInfo:st}=_e,ot=st.front,it=st.left,at=st.top,lt=new TensorBuffer(_e.outShape,c.dtype),ut=o.data.get(c.dataId).values,ct=o.data.get(d.dataId).values,dt=lt.values,pt=computeStrides(c.shape),ht=computeStrides(d.shape);for(let ft=0;ft<_e.batchSize;++ft){const yt=ft*pt[0],wt=ft*lt.strides[0];for(let _t=0;_t<_e.outDepth;++_t){const bt=wt+_t*lt.strides[1],xt=_t*_e.strideDepth-ot;for(let mt=0;mt<et;++mt){const vt=xt+mt*tt;if(vt<0||vt>=_e.inDepth)continue;const Et=mt*ht[0],Ct=yt+vt*pt[1];for(let kt=0;kt<_e.outHeight;++kt){const Nt=bt+kt*lt.strides[2],Mt=kt*_e.strideHeight-at;for(let Vt=0;Vt<_;++Vt){const Gt=Mt+Vt*nt;if(Gt<0||Gt>=_e.inHeight)continue;const Ft=Et+Vt*ht[1],jt=Ct+Gt*pt[2];for(let qt=0;qt<_e.outWidth;++qt){const Yt=Nt+qt*_e.outChannels,Qt=qt*_e.strideWidth-it;for(let Zt=0;Zt<b;++Zt){const en=Qt+Zt*rt;if(en<0||en>=_e.inWidth)continue;const on=Ft+Zt*ht[2],rn=jt+en*_e.inChannels;let sn=on;for(let pn=0;pn<_e.inChannels;++pn){const dn=ut[rn+pn];for(let mn=0;mn<_e.outChannels;++mn)dt[Yt+mn]+=dn*ct[sn+mn];sn+=_e.outChannels}}}}}}}}return o.makeTensorInfo(lt.shape,lt.dtype,lt.values)}const conv3DConfig$1={kernelName:Conv3D$1,backendName:"cpu",kernelFunc:conv3D$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function conv3DBackpropFilterV2$1(i){const{inputs:s,backend:o,attrs:a}=i,{x:c,dy:d}=s,{strides:g,pad:$,filterShape:j}=a;assertNotComplex$1([c,d],"conv3dBackpropFilterV2");const _e=computeStrides(c.shape),et=computeStrides(d.shape),_=computeConv3DInfo(c.shape,j,g,1,$),b=_.strideDepth,tt=_.strideHeight,nt=_.strideWidth,rt=_.filterDepth,st=_.filterHeight,ot=_.filterWidth,it=new TensorBuffer(_.filterShape,"float32"),at=it.values,[lt,ut,ct,dt]=it.strides,pt=o.data.get(d.dataId).values,[ht,ft,yt,wt]=et,_t=o.data.get(c.dataId).values,[bt,xt,mt,vt]=_e,Et=_.padInfo.front,Ct=_.padInfo.left,kt=_.padInfo.top;for(let Nt=0;Nt<rt;++Nt){const Mt=Math.max(0,Math.ceil((Et-Nt)/b)),Vt=Math.min(_.outDepth,(_.inDepth+Et-Nt)/b),Gt=Nt*lt;for(let Ft=0;Ft<st;++Ft){const jt=Math.max(0,Math.ceil((kt-Ft)/tt)),qt=Math.min(_.outHeight,(_.inHeight+kt-Ft)/tt),Yt=Ft*ut+Gt;for(let Qt=0;Qt<ot;++Qt){const Zt=Math.max(0,Math.ceil((Ct-Qt)/nt)),en=Math.min(_.outWidth,(_.inWidth+Ct-Qt)/nt),on=Qt*ct+Yt;for(let rn=0;rn<_.inChannels;++rn){const sn=rn*dt+on;for(let pn=0;pn<_.outChannels;++pn){let dn=0;for(let mn=0;mn<_.batchSize;++mn){const Sn=mn*bt,Ln=mn*ht;for(let In=Mt;In<Vt;++In){const xn=(Nt+In*b-Et)*xt+Sn,Dn=In*ft+Ln;for(let Mn=jt;Mn<qt;++Mn){const qn=(Ft+Mn*tt-kt)*mt+xn,jn=Mn*yt+Dn;for(let Xn=Zt;Xn<en;++Xn){const rr=(Qt+Xn*nt-Ct)*vt+qn,or=Xn*wt+jn;dn+=_t[rr+rn]*pt[or+pn]}}}}at[sn+pn]=dn}}}}}return o.makeTensorInfo(it.shape,it.dtype,it.values)}const conv3DBackpropFilterV2Config$1={kernelName:Conv3DBackpropFilterV2,backendName:"cpu",kernelFunc:conv3DBackpropFilterV2$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function conv3DBackpropInputV2(i){const{inputs:s,backend:o,attrs:a}=i,{dy:c,filter:d}=s,{pad:g,strides:$,inputShape:j}=a;assertNotComplex$1([c],"conv3dBackpropInputV2");const _e=computeStrides(c.shape),et=computeStrides(d.shape),_=computeConv3DInfo(j,d.shape,$,1,g),b=new TensorBuffer(_.inShape,"float32"),tt=b.values,[nt,rt,st,ot]=b.strides,it=o.data.get(c.dataId).values,[at,lt,ut,ct]=_e,dt=o.data.get(d.dataId).values,[pt,ht,ft,yt]=et,{batchSize:wt,filterDepth:_t,filterHeight:bt,filterWidth:xt,inChannels:mt,inDepth:vt,inHeight:Et,inWidth:Ct,outChannels:kt,outDepth:Nt,outHeight:Mt,outWidth:Vt,strideDepth:Gt,strideHeight:Ft,strideWidth:jt}=_,qt=_t-1-_.padInfo.front,Yt=bt-1-_.padInfo.top,Qt=xt-1-_.padInfo.left;for(let Zt=0;Zt<wt;++Zt)for(let en=0;en<mt;++en)for(let on=0;on<vt;++on){const rn=on-qt,sn=Math.max(0,Math.ceil(rn/Gt)),pn=Math.min(Nt,(_t+rn)/Gt);for(let dn=0;dn<Et;++dn){const mn=dn-Yt,Sn=Math.max(0,Math.ceil(mn/Ft)),Ln=Math.min(Mt,(bt+mn)/Ft);for(let In=0;In<Ct;++In){const On=In-Qt,xn=Math.max(0,Math.ceil(On/jt)),Dn=Math.min(Vt,(xt+On)/jt);let Mn=0;for(let ln=sn;ln<pn;++ln){const qn=ln*Gt-rn;for(let jn=Sn;jn<Ln;++jn){const Xn=jn*Ft-mn;for(let Wn=xn;Wn<Dn;++Wn){const rr=Wn*jt-On,or=at*Zt+lt*ln+ut*jn+ct*Wn,zn=pt*(_t-1-qn)+ht*(bt-1-Xn)+ft*(xt-1-rr)+yt*en;for(let Qn=0;Qn<kt;++Qn){const an=it[or+Qn],ir=dt[zn+Qn];Mn+=an*ir}}}}tt[nt*Zt+rt*on+st*dn+ot*In+en]=Mn}}}return o.makeTensorInfo(b.shape,b.dtype,b.values)}const conv3DBackpropInputV2Config={kernelName:Conv3DBackpropInputV2,backendName:"cpu",kernelFunc:conv3DBackpropInputV2};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cos$1=unaryKernelFunc$1(Cos,i=>Math.cos(i)),cosConfig$1={kernelName:Cos,backendName:"cpu",kernelFunc:cos$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cosh$1=unaryKernelFunc$1(Cosh,i=>Math.cosh(i)),coshConfig$1={kernelName:Cosh,backendName:"cpu",kernelFunc:cosh$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cropAndResize$1(i){const{inputs:s,backend:o,attrs:a}=i,{image:c,boxes:d,boxInd:g}=s,{cropSize:$,method:j,extrapolationValue:_e}=a,[et,_,b,tt]=c.shape,nt=d.shape[0],[rt,st]=$,ot=buffer([nt,rt,st,tt],"float32"),it=o.data.get(d.dataId).values,at=o.data.get(g.dataId).values,lt=o.data.get(c.dataId).values,ut=computeStrides(c.shape),ct=computeStrides(ot.shape);for(let dt=0;dt<nt;dt++){const pt=dt*4,ht=it[pt],ft=it[pt+1],yt=it[pt+2],wt=it[pt+3],_t=at[dt];if(_t>=et)continue;const bt=rt>1?(yt-ht)*(_-1)/(rt-1):0,xt=st>1?(wt-ft)*(b-1)/(st-1):0;for(let mt=0;mt<rt;mt++){const vt=rt>1?ht*(_-1)+mt*bt:.5*(ht+yt)*(_-1);if(vt<0||vt>_-1){for(let Et=0;Et<st;Et++)for(let Ct=0;Ct<tt;Ct++){const kt=Ct+Et*ct[2]+mt*ct[1]+dt*ct[0];ot.values[kt]=_e}continue}if(j==="bilinear"){const Et=Math.floor(vt),Ct=Math.ceil(vt),kt=vt-Et;for(let Nt=0;Nt<st;Nt++){const Mt=st>1?ft*(b-1)+Nt*xt:.5*(ft+wt)*(b-1);if(Mt<0||Mt>b-1){for(let jt=0;jt<tt;jt++){const qt=jt+Nt*ct[2]+mt*ct[1]+dt*ct[0];ot.values[qt]=_e}continue}const Vt=Math.floor(Mt),Gt=Math.ceil(Mt),Ft=Mt-Vt;for(let jt=0;jt<tt;jt++){let qt=jt+Vt*ut[2]+Et*ut[1]+_t*ut[0];const Yt=lt[qt];qt=jt+Gt*ut[2]+Et*ut[1]+_t*ut[0];const Qt=lt[qt];qt=jt+Vt*ut[2]+Ct*ut[1]+_t*ut[0];const Zt=lt[qt];qt=jt+Gt*ut[2]+Ct*ut[1]+_t*ut[0];const en=lt[qt],on=Yt+(Qt-Yt)*Ft,rn=Zt+(en-Zt)*Ft;qt=jt+Nt*ct[2]+mt*ct[1]+dt*ct[0],ot.values[qt]=on+(rn-on)*kt}}}else for(let Et=0;Et<st;++Et){const Ct=st>1?ft*(b-1)+Et*xt:.5*(ft+wt)*(b-1);if(Ct<0||Ct>b-1){for(let Mt=0;Mt<tt;Mt++){const Vt=Mt+Et*ct[2]+mt*ct[1]+dt*ct[0];ot.values[Vt]=_e}continue}const kt=Math.round(Ct),Nt=Math.round(vt);for(let Mt=0;Mt<tt;Mt++){const Vt=Mt+kt*ut[2]+Nt*ut[1]+_t*ut[0],Gt=Mt+Et*ct[2]+mt*ct[1]+dt*ct[0];ot.values[Gt]=lt[Vt]}}}}return o.makeTensorInfo(ot.shape,ot.dtype,ot.values)}const cropAndResizeConfig$1={kernelName:CropAndResize,backendName:"cpu",kernelFunc:cropAndResize$1};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cumprod$1(i){const{inputs:s,backend:o,attrs:a}=i,{x:c}=s,{axis:d,exclusive:g,reverse:$}=a;assertNotComplex$1(c,"cumprod");const j=getAxesPermutation([d],c.shape.length);let _e=c;j!=null&&(_e=transpose$1({inputs:{x:c},backend:o,attrs:{perm:j}}));const et=getInnerMostAxes(1,c.shape.length)[0];if(et!==_e.shape.length-1)throw new Error(`backend.cumprod in CPU expects an inner-most axis=${_e.shape.length-1} but got axis=${et}`);const _=upcastType(_e.dtype,"int32"),b=makeOnesTypedArray(sizeFromShape(_e.shape),_),tt=o.data.get(_e.dataId).values,nt=_e.shape[_e.shape.length-1],rt=$?(ot,it)=>ot+nt-it-1:(ot,it)=>ot+it;for(let ot=0;ot<tt.length;ot+=nt)for(let it=0;it<nt;it++){const at=rt(ot,it);if(it===0)b[at]=g?1:tt[at];else{const lt=rt(ot,it-1);b[at]=g?tt[lt]*b[lt]:tt[at]*b[lt]}}const st=o.makeTensorInfo(_e.shape,_,b);if(j!=null){const ot=getUndoAxesPermutation(j),it=transpose$1({inputs:{x:st},backend:o,attrs:{perm:ot}});return o.disposeIntermediateTensorInfo(st),o.disposeIntermediateTensorInfo(_e),it}return st}const cumprodConfig$1={kernelName:Cumprod,backendName:"cpu",kernelFunc:cumprod$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cumsum$1(i){const{inputs:s,backend:o,attrs:a}=i,{x:c}=s,{axis:d,exclusive:g,reverse:$}=a;assertNotComplex$1(c,"cumsum");const j=getAxesPermutation([d],c.shape.length);let _e=c;j!=null&&(_e=transpose$1({inputs:{x:c},backend:o,attrs:{perm:j}}));const et=getInnerMostAxes(1,c.shape.length)[0];if(et!==_e.shape.length-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${_e.shape.length-1} but got axis=${et}`);const _=upcastType(_e.dtype,"int32"),b=makeZerosTypedArray(sizeFromShape(_e.shape),_),tt=o.data.get(_e.dataId).values,nt=_e.shape[_e.shape.length-1],rt=$?(ot,it)=>ot+nt-it-1:(ot,it)=>ot+it;for(let ot=0;ot<tt.length;ot+=nt)for(let it=0;it<nt;it++){const at=rt(ot,it);if(it===0)b[at]=g?0:tt[at];else{const lt=rt(ot,it-1);b[at]=g?tt[lt]+b[lt]:tt[at]+b[lt]}}const st=o.makeTensorInfo(_e.shape,_,b);if(j!=null){const ot=getUndoAxesPermutation(j),it=transpose$1({inputs:{x:st},backend:o,attrs:{perm:ot}});return o.disposeIntermediateTensorInfo(st),o.disposeIntermediateTensorInfo(_e),it}return st}const cumsumConfig$1={kernelName:Cumsum,backendName:"cpu",kernelFunc:cumsum$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function denseBincount$1(i){const{inputs:s,backend:o,attrs:a}=i,{x:c,weights:d}=s,{size:g,binaryOutput:$}=a;if(c.shape.length===1){const j=o.data.get(c.dataId).values,_e=o.data.get(d.dataId).values,et=bincountImpl(j,_e,d.dtype,d.shape,g);return o.makeTensorInfo([g],d.dtype,et)}else if(c.shape.length===2){const j=o.bufferSync(c),_e=o.bufferSync(d),et=bincountReduceImpl(j,_e,g,$);return o.makeTensorInfo(et.shape,d.dtype,et.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${c.shape.length}.`)}const denseBincountConfig$1={kernelName:DenseBincount,backendName:"cpu",kernelFunc:denseBincount$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function depthToSpace$1(i){const{inputs:s,backend:o,attrs:a}=i,{x:c}=s,{blockSize:d,dataFormat:g}=a;assert$1(g==="NHWC",()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${g}`);const $=c.shape[0],j=c.shape[1],_e=c.shape[2],et=c.shape[3],_=j*d,b=_e*d,tt=et/(d*d),nt=o.data.get(c.dataId).values,rt=new Float32Array($*_*b*tt);let st=0;for(let ot=0;ot<$;++ot)for(let it=0;it<_;++it){const at=Math.floor(it/d),lt=it%d;for(let ut=0;ut<b;++ut){const ct=Math.floor(ut/d),dt=ut%d,pt=(lt*d+dt)*tt;for(let ht=0;ht<tt;++ht){const yt=ht+pt+et*(ct+_e*(at+j*ot));rt[st++]=nt[yt]}}}return o.makeTensorInfo([$,_,b,tt],c.dtype,rt)}const depthToSpaceConfig$1={kernelName:DepthToSpace,backendName:"cpu",kernelFunc:depthToSpace$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function depthwiseConv2dNative$1(i){const{inputs:s,backend:o,attrs:a}=i,{x:c,filter:d}=s,{strides:g,pad:$,dilations:j,dimRoundingMode:_e}=a;assertNotComplex$1([c,d],"depthwiseConv2DNative");const et=computeStrides(c.shape),_=computeStrides(d.shape);let b=j;b==null&&(b=[1,1]),assert$1(eitherStridesOrDilationsAreOne(g,b),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${g} and dilations '${b}'`);const tt=computeConv2DInfo(c.shape,d.shape,g,b,$,_e,!0),{filterHeight:nt,filterWidth:rt,dilationHeight:st,dilationWidth:ot,padInfo:it}=tt,at=it.left,lt=it.top,ut=tt.outChannels/tt.inChannels,ct=new TensorBuffer(tt.outShape,c.dtype),dt=o.data.get(c.dataId).values,pt=o.data.get(d.dataId).values,ht=ct.values;for(let ft=0;ft<tt.batchSize;++ft){const yt=ft*et[0],wt=ft*ct.strides[0];for(let _t=0;_t<tt.outHeight;++_t){const bt=wt+_t*ct.strides[1],xt=_t*tt.strideHeight-lt;for(let mt=0;mt<nt;++mt){const vt=xt+mt*st;if(vt<0||vt>=tt.inHeight)continue;const Et=mt*_[0],Ct=yt+vt*et[1];for(let kt=0;kt<tt.outWidth;++kt){const Nt=bt+kt*ct.strides[2],Mt=kt*tt.strideWidth-at;for(let Vt=0;Vt<rt;++Vt){const Gt=Mt+Vt*ot;if(Gt<0||Gt>=tt.inWidth)continue;const Ft=Et+Vt*_[1],jt=Ct+Gt*tt.inChannels;let qt=Nt,Yt=Ft;for(let Qt=0;Qt<tt.inChannels;++Qt){const Zt=dt[jt+Qt];for(let en=0;en<ut;++en)ht[qt+en]+=Zt*pt[Yt+en];qt+=ut,Yt+=ut}}}}}}return o.makeTensorInfo(ct.shape,ct.dtype,ct.values)}const depthwiseConv2dNativeConfig$1={kernelName:DepthwiseConv2dNative,backendName:"cpu",kernelFunc:depthwiseConv2dNative$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function depthwiseConv2dNativeBackpropFilter$1(i){const{inputs:s,backend:o,attrs:a}=i,{x:c,dy:d}=s,{strides:g,dilations:$,pad:j,dimRoundingMode:_e,filterShape:et}=a;assertNotComplex$1([c,d],"depthwiseConv2dNativeBackpropFilter");const _=computeConv2DInfo(c.shape,et,g,$,j,_e,!0),{strideHeight:b,strideWidth:tt,filterHeight:nt,filterWidth:rt}=_,st=new TensorBuffer(_.filterShape,"float32"),ot=_.padInfo.left,it=_.padInfo.top,at=_.outChannels/_.inChannels,lt=o.data.get(c.dataId).values,ut=new TensorBuffer(c.shape,c.dtype,lt),ct=o.data.get(d.dataId).values,dt=new TensorBuffer(d.shape,d.dtype,ct);for(let pt=0;pt<nt;++pt){const ht=Math.max(0,Math.ceil((it-pt)/b)),ft=Math.min(_.outHeight,(_.inHeight+it-pt)/b);for(let yt=0;yt<rt;++yt){const wt=Math.max(0,Math.ceil((ot-yt)/tt)),_t=Math.min(_.outWidth,(_.inWidth+ot-yt)/tt);for(let bt=0;bt<_.outChannels;++bt){const xt=Math.trunc(bt/at),mt=bt%at;let vt=0;for(let Et=0;Et<_.batchSize;++Et)for(let Ct=ht;Ct<ft;++Ct){const kt=pt+Ct*b-it;for(let Nt=wt;Nt<_t;++Nt){const Mt=yt+Nt*tt-ot;vt+=ut.get(Et,kt,Mt,xt)*dt.get(Et,Ct,Nt,bt)}}st.set(vt,pt,yt,xt,mt)}}}return o.makeTensorInfo(st.shape,st.dtype,st.values)}const depthwiseConv2dNativeBackpropFilterConfig$1={kernelName:DepthwiseConv2dNativeBackpropFilter,backendName:"cpu",kernelFunc:depthwiseConv2dNativeBackpropFilter$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function depthwiseConv2dNativeBackpropInput$1(i){const{inputs:s,backend:o,attrs:a}=i,{dy:c,filter:d}=s,{strides:g,dilations:$,pad:j,dimRoundingMode:_e,inputShape:et}=a;assertNotComplex$1([c,d],"depthwiseConv2DNativeBackpropInput");const _=computeStrides(c.shape),b=computeStrides(d.shape),tt=computeConv2DInfo(et,d.shape,g,$,j,_e,!0),nt=new TensorBuffer(tt.inShape,"float32"),rt=nt.values,[st,ot,it]=nt.strides,at=o.data.get(c.dataId).values,[lt,ut,ct]=_,dt=o.data.get(d.dataId).values,[pt,ht,ft]=b,{batchSize:yt,filterHeight:wt,filterWidth:_t,inChannels:bt,inHeight:xt,inWidth:mt,outChannels:vt,outHeight:Et,outWidth:Ct,strideHeight:kt,strideWidth:Nt}=tt,Mt=wt-1-tt.padInfo.top,Vt=_t-1-tt.padInfo.left,Gt=vt/bt;for(let Ft=0;Ft<yt;++Ft)for(let jt=0;jt<bt;++jt)for(let qt=0;qt<xt;++qt){const Yt=qt-Mt,Qt=Math.max(0,Math.ceil(Yt/kt)),Zt=Math.min(Et,(wt+Yt)/kt);for(let en=0;en<mt;++en){const on=en-Vt,rn=Math.max(0,Math.ceil(on/Nt)),sn=Math.min(Ct,(_t+on)/Nt);let pn=0;for(let dn=Qt;dn<Zt;++dn){const mn=dn*kt-Yt;for(let Sn=rn;Sn<sn;++Sn){const Ln=Sn*Nt-on,In=lt*Ft+ut*dn+ct*Sn,On=pt*(wt-1-mn)+ht*(_t-1-Ln)+ft*jt;for(let xn=0;xn<Gt;++xn){const Dn=jt*Gt+xn,Mn=at[In+Dn],ln=dt[On+xn];pn+=Mn*ln}}}rt[st*Ft+ot*qt+it*en+jt]=pn}}return o.makeTensorInfo(nt.shape,nt.dtype,nt.values)}const depthwiseConv2dNativeBackpropInputConfig$1={kernelName:DepthwiseConv2dNativeBackpropInput,backendName:"cpu",kernelFunc:depthwiseConv2dNativeBackpropInput$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function diag$1(i){const{inputs:s,backend:o}=i,{x:a}=s,c=sizeFromShape(a.shape),d=o.data.get(a.dataId).values,g=buffer([c,c],a.dtype),$=g.values;for(let _e=0;_e<d.length;_e++)$[_e*c+_e]=d[_e];const j=[...a.shape,...a.shape];return o.makeTensorInfo(j,g.dtype,g.values)}const diagConfig$1={kernelName:Diag,backendName:"cpu",kernelFunc:diag$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dilation2DConfig$1={kernelName:Dilation2D,backendName:"cpu",kernelFunc:({inputs:i,backend:s,attrs:o})=>{const{x:a,filter:c}=i,{strides:d,pad:g,dilations:$}=o,j=s,_e=j.data.get(a.dataId).values,et=a.shape.length,_=j.data.get(c.dataId).values,b=c.shape.length,{batchSize:tt,inHeight:nt,inWidth:rt,inChannels:st,outHeight:ot,outWidth:it,padInfo:at,strideHeight:lt,strideWidth:ut,filterHeight:ct,filterWidth:dt,dilationHeight:pt,dilationWidth:ht,outShape:ft}=computeDilation2DInfo(a.shape,c.shape,d,g,"NHWC",$),yt=sizeFromShape(ft),wt=ft.length,_t=getArrayFromDType(a.dtype,yt);for(let xt=0;xt<tt;++xt)for(let mt=0;mt<ot;++mt){const vt=mt*lt-at.top;for(let Et=0;Et<it;++Et){const Ct=Et*ut-at.left;for(let kt=0;kt<st;++kt){let Nt=Number.MIN_SAFE_INTEGER;for(let Vt=0;Vt<ct;++Vt){const Gt=vt+Vt*pt;if(Gt>=0&&Gt<nt)for(let Ft=0;Ft<dt;++Ft){const jt=Ct+Ft*ht;if(jt>=0&&jt<rt){const qt=locToIndex([xt,Gt,jt,kt],et,computeStrides(a.shape)),Yt=locToIndex([Vt,Ft,kt],b,computeStrides(c.shape)),Qt=_e[qt]+_[Yt];Qt>Nt&&(Nt=Qt)}}}const Mt=locToIndex([xt,mt,Et,kt],wt,computeStrides(ft));_t[Mt]=Nt}}}return{dataId:j.write(toTypedArray(_t,a.dtype),ft,a.dtype),shape:ft,dtype:a.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dilation2DBackpropFilterConfig={kernelName:Dilation2DBackpropFilter,backendName:"cpu",kernelFunc:({inputs:i,backend:s,attrs:o})=>{const{x:a,filter:c,dy:d}=i,{strides:g,pad:$,dilations:j}=o,_e=s,et=toNestedArray(a.shape,_e.data.get(a.dataId).values),_=toNestedArray(c.shape,_e.data.get(c.dataId).values),{batchSize:b,inHeight:tt,inWidth:nt,inChannels:rt,outHeight:st,outWidth:ot,padInfo:it,strideHeight:at,strideWidth:lt,filterHeight:ut,filterWidth:ct,dilationHeight:dt,dilationWidth:pt,outShape:ht}=computeDilation2DInfo(a.shape,c.shape,g,$,"NHWC",j);assert$1(d.rank===ht.length,()=>`Error in ${Dilation2DBackpropFilter}, dy must have the same rank as output ${ht.length}, but got ${d.rank}`);const ft=toNestedArray(ht,_e.data.get(d.dataId).values),yt=makeZerosNestedTypedArray(c.shape,c.dtype);for(let _t=0;_t<b;++_t)for(let bt=0;bt<st;++bt){const xt=bt*at-it.top;for(let mt=0;mt<ot;++mt){const vt=mt*lt-it.left;for(let Et=0;Et<rt;++Et){let Ct=Number.MIN_SAFE_INTEGER,kt=0,Nt=0;for(let Mt=0;Mt<ut;++Mt){const Vt=xt+Mt*dt;if(Vt>=0&&Vt<tt)for(let Gt=0;Gt<ct;++Gt){const Ft=vt+Gt*pt;if(Ft>=0&&Ft<nt){const jt=et[_t][Vt][Ft][Et]+_[Mt][Gt][Et];jt>Ct&&(Ct=jt,kt=Mt,Nt=Gt)}}}yt[kt][Nt][Et]+=ft[_t][bt][mt][Et]}}}return{dataId:_e.write(toTypedArray(yt,a.dtype),c.shape,c.dtype),shape:c.shape,dtype:c.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dilation2DBackpropInputConfig={kernelName:Dilation2DBackpropInput,backendName:"cpu",kernelFunc:({inputs:i,backend:s,attrs:o})=>{const{x:a,filter:c,dy:d}=i,{strides:g,pad:$,dilations:j}=o,_e=s,et=toNestedArray(a.shape,_e.data.get(a.dataId).values),_=toNestedArray(c.shape,_e.data.get(c.dataId).values),{batchSize:b,inHeight:tt,inWidth:nt,inChannels:rt,outHeight:st,outWidth:ot,padInfo:it,strideHeight:at,strideWidth:lt,filterHeight:ut,filterWidth:ct,dilationHeight:dt,dilationWidth:pt,outShape:ht}=computeDilation2DInfo(a.shape,c.shape,g,$,"NHWC",j);assert$1(d.rank===ht.length,()=>`Error in ${Dilation2DBackpropInput}, dy must have the same rank as output ${ht.length}, but got ${d.rank}`);const ft=toNestedArray(ht,_e.data.get(d.dataId).values),yt=makeZerosNestedTypedArray(a.shape,a.dtype);for(let _t=0;_t<b;++_t)for(let bt=0;bt<st;++bt){const xt=bt*at-it.top;for(let mt=0;mt<ot;++mt){const vt=mt*lt-it.left;for(let Et=0;Et<rt;++Et){let Ct=Number.MIN_SAFE_INTEGER,kt=xt<0?0:xt,Nt=vt<0?0:vt;for(let Mt=0;Mt<ut;++Mt){const Vt=xt+Mt*dt;if(Vt>=0&&Vt<tt)for(let Gt=0;Gt<ct;++Gt){const Ft=vt+Gt*pt;if(Ft>=0&&Ft<nt){const jt=et[_t][Vt][Ft][Et]+_[Mt][Gt][Et];jt>Ct&&(Ct=jt,kt=Vt,Nt=Ft)}}}yt[_t][kt][Nt][Et]+=ft[_t][bt][mt][Et]}}}return{dataId:_e.write(toTypedArray(yt,a.dtype),a.shape,a.dtype),shape:a.shape,dtype:a.dtype}}};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function draw(i){const{inputs:s,backend:o,attrs:a}=i,{image:c}=s,{canvas:d,options:g}=a,{contextOptions:$,imageOptions:j}=g||{},_e=(j==null?void 0:j.alpha)||1,et=($==null?void 0:$.contextType)||"2d";if(et!=="2d")throw new Error(`Context type ${$.contextType} is not supported by the CPU backend.`);const _=d.getContext(et,($==null?void 0:$.contextAttributes)||{});if(_==null)throw new Error(`Could not get the context with ${et} type.`);const[b,tt]=c.shape.slice(0,2),nt=c.shape.length===2?1:c.shape[2],rt=o.data.get(c.dataId).values,st=c.dtype==="float32"?255:1,ot=new Uint8ClampedArray(tt*b*4);for(let at=0;at<b*tt;++at){const lt=[0,0,0,255*_e];for(let ct=0;ct<nt;ct++){const dt=rt[at*nt+ct];if(c.dtype==="float32"){if(dt<0||dt>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${dt}.`)}else if(c.dtype==="int32"&&(dt<0||dt>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${dt}.`);nt===1?(lt[0]=dt*st,lt[1]=dt*st,lt[2]=dt*st):lt[ct]=dt*st}const ut=at*4;ot[ut+0]=Math.round(lt[0]),ot[ut+1]=Math.round(lt[1]),ot[ut+2]=Math.round(lt[2]),ot[ut+3]=Math.round(lt[3])}d.width=tt,d.height=b;const it=new ImageData(ot,tt,b);return _.putImageData(it,0,0),c}const drawConfig={kernelName:Draw,backendName:"cpu",kernelFunc:draw};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sum$1(i){const{inputs:s,backend:o,attrs:a}=i,{x:c}=s,{axis:d,keepDims:g}=a;assertNotComplex$1(c,"sum");let $;c.dtype==="bool"?$=cast$1({inputs:{x:c},backend:o,attrs:{dtype:"int32"}}):$=identity$1({inputs:{x:c},backend:o});const j=$.shape.length,_e=parseAxisParam(d,$.shape),et=getAxesPermutation(_e,j);let _=_e,b=$;et!=null&&(b=transpose$1({inputs:{x:$},backend:o,attrs:{perm:et}}),_=getInnerMostAxes(_.length,j)),assertAxesAreInnerMostDims("sum",_,b.shape.length);const[tt,nt]=computeOutAndReduceShapes(b.shape,_),rt=upcastType(b.dtype,"int32");let st=zeros(o,tt,rt);const ot=sizeFromShape(nt),it=o.data.get(st.dataId).values,at=o.data.get(b.dataId).values;for(let lt=0;lt<it.length;++lt){const ut=lt*ot;let ct=0;for(let dt=0;dt<ot;++dt)ct+=at[ut+dt];it[lt]=ct}if(g){const lt=expandShapeToKeepDim(st.shape,_e),ut=st;st=reshape$1({inputs:{x:st},backend:o,attrs:{shape:lt}}),o.disposeIntermediateTensorInfo(ut)}return o.disposeIntermediateTensorInfo($),et!=null&&o.disposeIntermediateTensorInfo(b),st}const sumConfig$1={kernelName:Sum,backendName:"cpu",kernelFunc:sum$1};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function einsum$1(i){const{inputs:s,backend:o,attrs:a}=i,{equation:c}=a,d=s,{allDims:g,summedDims:$,idDims:j}=decodeEinsumEquation(c,d.length);checkEinsumDimSizes(g.length,j,d);const{path:_e,steps:et}=getEinsumComputePath($,j),_=et.length;let b=null,tt=g.length;const nt=[];for(let rt=0;rt<_;++rt){for(const st of et[rt]){const{permutationIndices:ot,expandDims:it}=getEinsumPermutation(tt,j[st]);let at;isIdentityPermutation(ot)?at=d[st]:(at=transpose$1({inputs:{x:d[st]},backend:o,attrs:{perm:ot}}),nt.push(at));const lt=at.shape.slice();for(let ut=0;ut<it.length;++ut)lt.splice(it[ut],0,1);arraysEqual(at.shape,lt)||(at=reshape$1({inputs:{x:at},backend:o,attrs:{shape:lt}}),nt.push(at)),b===null?b=at:(b=multiply$1({inputs:{a:at,b},backend:o}),nt.push(b))}rt<_-1&&(_e[rt]>=0&&(b=sum$1({inputs:{x:b},backend:o,attrs:{axis:_e[rt]-(g.length-tt),keepDims:!1}}),nt.push(b)),tt--)}for(const rt of nt)rt!==b&&o.disposeIntermediateTensorInfo(rt);return b}const einsumConfig$1={kernelName:Einsum,backendName:"cpu",kernelFunc:einsum$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eluGrad$1(i){const{inputs:s,backend:o}=i,{dy:a,y:c}=s;assertNotComplex$1([a,c],"eluGrad");const d=new Float32Array(sizeFromShape(c.shape)),g=o.data.get(c.dataId).values,$=o.data.get(a.dataId).values;for(let j=0;j<g.length;++j){const _e=g[j];_e>=0?d[j]=$[j]:d[j]=$[j]*(_e+1)}return o.makeTensorInfo(c.shape,"float32",d)}const eluGradConfig$1={kernelName:EluGrad,backendName:"cpu",kernelFunc:eluGrad$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const p=ERF_P,a1=ERF_A1,a2=ERF_A2,a3=ERF_A3,a4=ERF_A4,a5=ERF_A5,erf$1=unaryKernelFunc$1(Erf,i=>{const s=Math.sign(i),o=Math.abs(i),a=1/(1+p*o);return s*(1-((((a5*a+a4)*a+a3)*a+a2)*a+a1)*a*Math.exp(-o*o))}),erfConfig$1={kernelName:Erf,backendName:"cpu",kernelFunc:erf$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function expandDims$1(i){const{inputs:s,backend:o,attrs:a}=i,{input:c}=s,{dim:d}=a,g=c.shape.length,$=c.shape.slice();let j=d;return d<0&&(assert$1(-(g+1)<=d,()=>`Axis must be in the interval [${-(g+1)}, ${g}]`),j=g+d+1),$.splice(j,0,1),reshape$1({inputs:{x:c},backend:o,attrs:{shape:$}})}const expandDimsConfig$1={kernelName:ExpandDims,backendName:"cpu",kernelFunc:expandDims$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const realDivImpl=createSimpleBinaryKernelImpl((i,s)=>i/s),div=binaryKernelFunc$1(RealDiv,realDivImpl),realDivConfig$1={kernelName:RealDiv,backendName:"cpu",kernelFunc:div};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fftBatch(i,s,o){const a=i.shape,c=a[0],d=a[1],g=o.data.get(i.dataId),$=g.complexTensorInfos.real,j=g.complexTensorInfos.imag,_e=[c,d],et=sizeFromShape(_e),_=getTypedArrayFromDType("float32",et),b=getTypedArrayFromDType("float32",et);for(let st=0;st<c;st++){const ot=slice$1({inputs:{x:$},backend:o,attrs:{begin:[st,0],size:[1,d]}}),it=slice$1({inputs:{x:j},backend:o,attrs:{begin:[st,0],size:[1,d]}}),at=complex$1({inputs:{real:ot,imag:it},backend:o}),{real:lt,imag:ut}=fftImpl$1(at,s,o),ct=mergeRealAndImagArrays(lt,ut);for(let dt=0;dt<d;dt++){const pt=getComplexWithIndex(ct,dt);_[st*d+dt]=pt.real,b[st*d+dt]=pt.imag}o.disposeIntermediateTensorInfo(ot),o.disposeIntermediateTensorInfo(it),o.disposeIntermediateTensorInfo(at)}const tt=o.makeTensorInfo(_e,"float32",_),nt=o.makeTensorInfo(_e,"float32",b),rt=complex$1({inputs:{real:tt,imag:nt},backend:o});return o.disposeIntermediateTensorInfo(tt),o.disposeIntermediateTensorInfo(nt),rt}function fftImpl$1(i,s,o){const a=sizeFromShape(i.shape),c=o.data.get(i.dataId),d=o.data.get(c.complexTensorInfos.real.dataId).values,g=o.data.get(c.complexTensorInfos.imag.dataId).values;if(isExponentOf2(a)){const $=fftRadix2(d,g,a,s,o),j=[i.shape[0],i.shape[1]];if(s){const _e=o.makeTensorInfo(j,"float32",$.real),et=o.makeTensorInfo(j,"float32",$.imag),_=o.makeTensorInfo([],"float32",createScalarValue(a,"float32")),b=identity$1({inputs:{x:_},backend:o}),tt=realDivConfig$1.kernelFunc({inputs:{a:_e,b:_},backend:o}),nt=realDivConfig$1.kernelFunc({inputs:{a:et,b},backend:o}),rt=o.data.get(tt.dataId).values,st=o.data.get(nt.dataId).values;return o.disposeIntermediateTensorInfo(_e),o.disposeIntermediateTensorInfo(et),o.disposeIntermediateTensorInfo(_),o.disposeIntermediateTensorInfo(b),o.disposeIntermediateTensorInfo(tt),o.disposeIntermediateTensorInfo(nt),{real:rt,imag:st}}return $}else{const $=mergeRealAndImagArrays(d,g),j=fourierTransformByMatmul($,a,s);return splitRealAndImagArrays(j)}}function isExponentOf2(i){return(i&i-1)===0}function fftRadix2(i,s,o,a,c){if(o===1)return{real:i,imag:s};const d=mergeRealAndImagArrays(i,s),g=o/2,$=complexWithEvenIndex(d),j=$.real,_e=$.imag,et=[j.length],_=c.makeTensorInfo(et,"float32",j),b=c.makeTensorInfo(et,"float32",_e),tt=complex$1({inputs:{real:_,imag:b},backend:c}),nt=complexWithOddIndex(d),rt=nt.real,st=nt.imag,ot=[rt.length],it=c.makeTensorInfo(ot,"float32",rt),at=c.makeTensorInfo(ot,"float32",st),lt=complex$1({inputs:{real:it,imag:at},backend:c}),ut=fftRadix2(j,_e,g,a,c),ct=ut.real,dt=ut.imag,pt=[ct.length],ht=c.makeTensorInfo(pt,"float32",ct),ft=c.makeTensorInfo(pt,"float32",dt),yt=complex$1({inputs:{real:ht,imag:ft},backend:c}),wt=fftRadix2(rt,st,g,a,c),_t=wt.real,bt=wt.imag,xt=[_t.length],mt=c.makeTensorInfo(xt,"float32",_t),vt=c.makeTensorInfo(xt,"float32",bt),Et=complex$1({inputs:{real:mt,imag:vt},backend:c}),Ct=exponents(o,a),kt=[Ct.real.length],Nt=c.makeTensorInfo(kt,"float32",Ct.real),Mt=c.makeTensorInfo(kt,"float32",Ct.imag),Vt=complex$1({inputs:{real:Nt,imag:Mt},backend:c}),Gt=multiply$1({inputs:{a:Vt,b:Et},backend:c}),Ft=add({inputs:{a:yt,b:Gt},backend:c}),jt=sub$1({inputs:{a:yt,b:Gt},backend:c}),qt=real$1({inputs:{input:Ft},backend:c}),Yt=real$1({inputs:{input:jt},backend:c}),Qt=imag$1({inputs:{input:Ft},backend:c}),Zt=imag$1({inputs:{input:jt},backend:c}),en=concat$1({inputs:[qt,Yt],backend:c,attrs:{axis:0}}),on=concat$1({inputs:[Qt,Zt],backend:c,attrs:{axis:0}}),rn=c.data.get(en.dataId).values,sn=c.data.get(on.dataId).values;return c.disposeIntermediateTensorInfo(_),c.disposeIntermediateTensorInfo(b),c.disposeIntermediateTensorInfo(tt),c.disposeIntermediateTensorInfo(it),c.disposeIntermediateTensorInfo(at),c.disposeIntermediateTensorInfo(lt),c.disposeIntermediateTensorInfo(ht),c.disposeIntermediateTensorInfo(ft),c.disposeIntermediateTensorInfo(yt),c.disposeIntermediateTensorInfo(mt),c.disposeIntermediateTensorInfo(vt),c.disposeIntermediateTensorInfo(Et),c.disposeIntermediateTensorInfo(Nt),c.disposeIntermediateTensorInfo(Mt),c.disposeIntermediateTensorInfo(Vt),c.disposeIntermediateTensorInfo(Gt),c.disposeIntermediateTensorInfo(Ft),c.disposeIntermediateTensorInfo(jt),c.disposeIntermediateTensorInfo(qt),c.disposeIntermediateTensorInfo(Qt),c.disposeIntermediateTensorInfo(Yt),c.disposeIntermediateTensorInfo(Zt),c.disposeIntermediateTensorInfo(en),c.disposeIntermediateTensorInfo(on),{real:rn,imag:sn}}function fourierTransformByMatmul(i,s,o){const a=new Float32Array(s*2);for(let c=0;c<s;c++){let d=0,g=0;for(let $=0;$<s;$++){const j=exponent(c*$,s,o),_e=getComplexWithIndex(i,$);d+=_e.real*j.real-_e.imag*j.imag,g+=_e.real*j.imag+_e.imag*j.real}o&&(d/=s,g/=s),assignToTypedArray(a,d,g,c)}return a}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fft$1(i){const{inputs:s,backend:o}=i,{input:a}=s,c=sizeFromShape(a.shape),d=a.shape[a.shape.length-1],g=c/d,$=reshape$1({inputs:{x:a},backend:o,attrs:{shape:[g,d]}}),j=fftBatch($,!1,o),_e=reshape$1({inputs:{x:j},backend:o,attrs:{shape:a.shape}});return o.disposeIntermediateTensorInfo($),o.disposeIntermediateTensorInfo(j),_e}const fftConfig$1={kernelName:FFT,backendName:"cpu",kernelFunc:fft$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fill$1(i){const{backend:s,attrs:o}=i,{shape:a,value:c,dtype:d}=o,g=d||inferDtype(c),$=getArrayFromDType(g,sizeFromShape(a));return fillValues($,c,g),s.makeTensorInfo(a,g,$)}const fillConfig$1={kernelName:Fill,backendName:"cpu",kernelFunc:fill$1};function fillValues(i,s,o){i.fill(s)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const flipLeftRightConfig$1={kernelName:FlipLeftRight,backendName:"cpu",kernelFunc:({inputs:i,attrs:s,backend:o})=>{const{image:a}=i,c=o,d=getTypedArrayFromDType(a.dtype,sizeFromShape(a.shape)),[g,$,j,_e]=a.shape,et=c.data.get(a.dataId).values;for(let b=0;b<g;b++){const tt=b*j*$*_e;for(let nt=0;nt<$;nt++){const rt=nt*(j*_e);for(let st=0;st<j;st++){const ot=st*_e;for(let it=0;it<_e;it++){const at=Math.round(j-st-1),lt=tt+rt+ot+it;let ut=et[lt];if(at>=0&&at<j){const ct=at*_e,dt=tt+rt+ct+it;ut=et[dt]}d[lt]=ut}}}}return{dataId:c.write(d,a.shape,a.dtype),shape:a.shape,dtype:a.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fusedConv2D(i){const{inputs:s,backend:o,attrs:a}=i,{x:c,filter:d,bias:g,preluActivationWeights:$}=s,{strides:j,pad:_e,dataFormat:et,dilations:_,dimRoundingMode:b,activation:tt,leakyreluAlpha:nt}=a;let rt=conv2D({inputs:{x:c,filter:d},backend:o,attrs:{strides:j,pad:_e,dataFormat:et,dilations:_,dimRoundingMode:b}});if(g){const st=rt;if(et==="NCHW"&&g.shape.length===1&&g.shape[0]!==1){const ot=reshape$1({inputs:{x:g},backend:o,attrs:{shape:[g.shape[0],1,1]}});rt=add({inputs:{a:rt,b:ot},backend:o}),o.disposeIntermediateTensorInfo(ot)}else rt=add({inputs:{a:rt,b:g},backend:o});o.disposeIntermediateTensorInfo(st)}if(tt){const st=rt;if(et==="NCHW"&&tt==="prelu"&&$.shape.length===1&&$.shape[0]!==1){const ot=reshape$1({inputs:{x:$},backend:o,attrs:{shape:[$.shape[0],1,1]}});rt=applyActivation(o,rt,tt,ot,nt),o.disposeIntermediateTensorInfo(ot)}else rt=applyActivation(o,rt,tt,$,nt);o.disposeIntermediateTensorInfo(st)}return rt}const fusedConv2DConfig$1={kernelName:FusedConv2D,backendName:"cpu",kernelFunc:fusedConv2D};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fusedDepthwiseConv2D$1(i){const{inputs:s,backend:o,attrs:a}=i,{x:c,filter:d,bias:g,preluActivationWeights:$}=s,{strides:j,pad:_e,dataFormat:et,dilations:_,dimRoundingMode:b,activation:tt,leakyreluAlpha:nt}=a;let rt=depthwiseConv2dNative$1({inputs:{x:c,filter:d},backend:o,attrs:{strides:j,pad:_e,dataFormat:et,dilations:_,dimRoundingMode:b}});if(g){const st=rt;rt=add({inputs:{a:rt,b:g},backend:o}),o.disposeIntermediateTensorInfo(st)}if(tt){const st=rt;rt=applyActivation(o,rt,tt,$,nt),o.disposeIntermediateTensorInfo(st)}return rt}const fusedDepthwiseConv2DConfig$1={kernelName:FusedDepthwiseConv2D,backendName:"cpu",kernelFunc:fusedDepthwiseConv2D$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gatherNd$1(i){const{inputs:s,backend:o}=i,{params:a,indices:c}=s,d=sizeFromShape(a.shape),g=c.shape,$=g[g.length-1],[j,_e,et,_]=prepareAndValidate(a,c);if(_e===0)return o.makeTensorInfo(j,a.dtype,[]);const b=o.data.get(c.dataId).values,tt=o.bufferSync(a),nt=gatherNdImpl(b,tt,a.dtype,_e,$,et,_,a.shape,d);return o.makeTensorInfo(j,a.dtype,nt.values)}const gatherNdConfig$1={kernelName:GatherNd,backendName:"cpu",kernelFunc:gatherNd$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gatherV2$1(i){const{inputs:s,backend:o,attrs:a}=i,{x:c,indices:d}=s,{axis:g,batchDims:$}=a;assertNotComplex$1([c,d],"gatherV2");const j=parseAxisParam(g,c.shape)[0],_e=o.data.get(d.dataId).values,et=c.shape[j];for(let lt=0;lt<_e.length;++lt){const ut=_e[lt];assert$1(ut<=et-1&&ut>=0,()=>`GatherV2: the index value ${ut} is not in [0, ${et-1}]`)}let _=$;$==null&&(_=0);const b=sizeFromShape(d.shape),tt=collectGatherOpShapeInfo(c,d,j,_),nt=reshape$1({inputs:{x:c},backend:o,attrs:{shape:[tt.batchSize,tt.outerSize,tt.dimSize,tt.sliceSize]}}),rt=reshape$1({inputs:{x:d},backend:o,attrs:{shape:[tt.batchSize,b/tt.batchSize]}}),st=[tt.batchSize,tt.outerSize,b/tt.batchSize,tt.sliceSize],ot=o.bufferSync(rt),it=o.bufferSync(nt),at=gatherV2Impl(it,ot,st);return o.disposeIntermediateTensorInfo(nt),o.disposeIntermediateTensorInfo(rt),o.makeTensorInfo(tt.outputShape,at.dtype,at.values)}const gatherV2Config$1={kernelName:GatherV2,backendName:"cpu",kernelFunc:gatherV2$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ifft$1(i){const{inputs:s,backend:o}=i,{input:a}=s,c=sizeFromShape(a.shape),d=a.shape[a.shape.length-1],g=c/d,$=reshape$1({inputs:{x:a},backend:o,attrs:{shape:[g,d]}}),j=fftBatch($,!0,o),_e=reshape$1({inputs:{x:j},backend:o,attrs:{shape:a.shape}});return o.disposeIntermediateTensorInfo($),o.disposeIntermediateTensorInfo(j),_e}const ifftConfig$1={kernelName:IFFT,backendName:"cpu",kernelFunc:ifft$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const isFinite$2=unaryKernelFunc$1(IsFinite,i=>Number.isFinite(i)?1:0,"bool"),isFiniteConfig$1={kernelName:IsFinite,backendName:"cpu",kernelFunc:isFinite$2};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const isInf$1=unaryKernelFunc$1(IsInf,i=>Math.abs(i)===1/0?1:0,"bool"),isInfConfig$1={kernelName:IsInf,backendName:"cpu",kernelFunc:isInf$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const isNaN$2=unaryKernelFunc$1(IsNan,i=>Number.isNaN(i)?1:0,"bool"),isNaNConfig$1={kernelName:IsNan,backendName:"cpu",kernelFunc:isNaN$2};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function linSpace$1(i){const{backend:s,attrs:o}=i,{start:a,stop:c,num:d}=o,g=linSpaceImpl(a,c,d);return s.makeTensorInfo([g.length],"float32",g)}const linSpaceConfig$1={kernelName:LinSpace,backendName:"cpu",kernelFunc:linSpace$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const log1p$1=unaryKernelFunc$1(Log1p,i=>Math.log1p(i)),log1pConfig$1={kernelName:Log1p,backendName:"cpu",kernelFunc:log1p$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const logicalAndImpl=createSimpleBinaryKernelImpl((i,s)=>i&&s),logicalAnd$1=binaryKernelFunc$1(LogicalAnd,logicalAndImpl,null,"bool"),logicalAndConfig$1={kernelName:LogicalAnd,backendName:"cpu",kernelFunc:logicalAnd$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const logicalNot$1=unaryKernelFunc$1(LogicalNot,i=>i?0:1,"bool"),logicalNotConfig$1={kernelName:LogicalNot,backendName:"cpu",kernelFunc:logicalNot$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const logicalOrImpl=createSimpleBinaryKernelImpl((i,s)=>i||s),logicalOr$1=binaryKernelFunc$1(LogicalOr,logicalOrImpl,null,"bool"),logicalOrConfig$1={kernelName:LogicalOr,backendName:"cpu",kernelFunc:logicalOr$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lRN(i){const{inputs:s,backend:o,attrs:a}=i,{x:c}=s,{depthRadius:d,bias:g,alpha:$,beta:j}=a;assertNotComplex$1(c,"LRN");const _e=c.shape[3],et=_e-1,_=o.data.get(c.dataId).values,b=sizeFromShape(c.shape),tt=new Float32Array(b);function nt(rt){const st=rt%_e;let ot=rt-st+Math.max(0,st-d);const it=rt-st+Math.min(st+d,et);let at=0;for(;ot<=it;ot++){const lt=_[ot];at+=lt*lt}return at}for(let rt=0;rt<b;rt++){const st=nt(rt),ot=_[rt]*Math.pow(g+$*st,-j);tt[rt]=ot}return o.makeTensorInfo(c.shape,c.dtype,tt)}const LRNConfig$1={kernelName:LRN,backendName:"cpu",kernelFunc:lRN};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lRNGrad(i){const{inputs:s,backend:o,attrs:a}=i,{x:c,y:d,dy:g}=s,{depthRadius:$,bias:j,alpha:_e,beta:et}=a;assertNotComplex$1(g,"LRNGrad");const _=sizeFromShape(g.shape),b=g.shape[3],tt=o.data.get(g.dataId).values,nt=o.data.get(c.dataId).values,rt=o.data.get(d.dataId).values,st=new Float32Array(_),ot=_;for(let it=0;it<ot;it++){const at=it%b,lt=it-at+Math.max(0,at-$),ut=it-at+Math.min(b,at+$+1);let ct=0;for(let dt=lt;dt<ut;dt++)ct+=Math.pow(nt[dt],2);ct=_e*ct+j;for(let dt=lt;dt<ut;dt++){let pt=-2*_e*et*nt[dt]*rt[it]/ct;it===dt&&(pt+=Math.pow(ct,-et)),pt*=tt[it],st[dt]+=pt}}return o.makeTensorInfo(g.shape,c.dtype,st)}const LRNGradConfig$1={kernelName:LRNGrad,backendName:"cpu",kernelFunc:lRNGrad};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function max$1(i){const{inputs:s,backend:o,attrs:a}=i,{x:c}=s,{reductionIndices:d,keepDims:g}=a,$=o;let j=c.shape;const _e=j.length,et=parseAxisParam(d,j);let _=et;const b=getAxesPermutation(_,_e);let tt=$.data.get(c.dataId).values;if(b!=null){const lt=new Array(_e);for(let ut=0;ut<lt.length;ut++)lt[ut]=j[b[ut]];tt=transposeImpl$1(tt,j,c.dtype,b,lt),_=getInnerMostAxes(_.length,_e),j=lt}assertNotComplex$1(c,"max"),assertAxesAreInnerMostDims("max",_,_e);const[nt,rt]=computeOutAndReduceShapes(j,_),st=sizeFromShape(rt),ot=maxImpl$1(tt,st,nt,c.dtype),it=$.write(ot,nt,c.dtype);let at=nt;return g&&(at=expandShapeToKeepDim(nt,et)),{dataId:it,shape:at,dtype:c.dtype}}const maxConfig$1={kernelName:Max,backendName:"cpu",kernelFunc:max$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function maxPool$1(i){const{inputs:s,backend:o,attrs:a}=i,{x:c}=s;assertNotComplex$1(c,"maxPool");const{filterSize:d,strides:g,pad:$,dimRoundingMode:j}=a,_e=1;assert$1(eitherStridesOrDilationsAreOne(g,_e),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${g} and dilations '${_e}'`);const et=computePool2DInfo(c.shape,d,g,_e,$,j);let _;if(et.filterWidth===1&&et.filterHeight===1&&arraysEqual(et.inShape,et.outShape))_=identity$1({inputs:{x:c},backend:o});else{const b=o.data.get(c.dataId).values,tt=computeStrides(c.shape),nt=pool(b,c.shape,c.dtype,tt,et,"max");_=o.makeTensorInfo(et.outShape,c.dtype,nt.values)}return _}const maxPoolConfig$1={kernelName:MaxPool,backendName:"cpu",kernelFunc:maxPool$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function maxPool3D(i){const{inputs:s,backend:o,attrs:a}=i,{x:c}=s,{filterSize:d,strides:g,pad:$,dimRoundingMode:j,dataFormat:_e}=a;assertNotComplex$1(c,"maxPool3d");const et=computePool3DInfo(c.shape,d,g,1,$,j,_e),_=o.data.get(c.dataId).values,b=pool3d(_,c.shape,c.dtype,computeStrides(c.shape),et,"max");return o.makeTensorInfo(b.shape,"float32",b.values)}const maxPool3DConfig$1={kernelName:MaxPool3D,backendName:"cpu",kernelFunc:maxPool3D};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function maxPool3DGrad$1(i){const{inputs:s,backend:o,attrs:a}=i,{dy:c,input:d}=s,{filterSize:g,strides:$,pad:j,dimRoundingMode:_e}=a;assertNotComplex$1([c,d],"maxPool3DGrad");const et=computePool3DInfo(d.shape,g,$,1,j,_e),_=o.bufferSync(d),b=maxPool3dPositions(_,et),tt=et.strideDepth,nt=et.strideHeight,rt=et.strideWidth,st=et.dilationDepth,ot=et.dilationHeight,it=et.dilationWidth,at=et.effectiveFilterDepth,lt=et.effectiveFilterHeight,ut=et.effectiveFilterWidth,ct=at-1-et.padInfo.front,dt=ut-1-et.padInfo.left,pt=lt-1-et.padInfo.top,ht=buffer(d.shape,"float32"),ft=o.bufferSync(c);for(let yt=0;yt<et.batchSize;++yt)for(let wt=0;wt<et.inChannels;++wt)for(let _t=0;_t<et.inDepth;++_t)for(let bt=0;bt<et.inHeight;++bt)for(let xt=0;xt<et.inWidth;++xt){const mt=_t-ct,vt=bt-pt,Et=xt-dt;let Ct=0;for(let kt=0;kt<at;kt+=st){const Nt=(mt+kt)/tt;if(!(Nt<0||Nt>=et.outDepth||Math.floor(Nt)!==Nt))for(let Mt=0;Mt<lt;Mt+=ot){const Vt=(vt+Mt)/nt;if(!(Vt<0||Vt>=et.outHeight||Math.floor(Vt)!==Vt))for(let Gt=0;Gt<ut;Gt+=it){const Ft=(Et+Gt)/rt;if(Ft<0||Ft>=et.outWidth||Math.floor(Ft)!==Ft)continue;const jt=at*lt*ut-1-b.get(yt,Nt,Vt,Ft,wt),qt=kt*lt*ut+Mt*ut+Gt,Yt=jt===qt?1:0;if(Yt===0)continue;const Qt=ft.get(yt,Nt,Vt,Ft,wt);Ct+=Qt*Yt}}}ht.set(Ct,yt,_t,bt,xt,wt)}return o.makeTensorInfo(ht.shape,ht.dtype,ht.values)}const maxPool3DGradConfig$1={kernelName:MaxPool3DGrad,backendName:"cpu",kernelFunc:maxPool3DGrad$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function maxPoolGrad$1(i){const{inputs:s,backend:o,attrs:a}=i,{dy:c,input:d,output:g}=s,$=d;assertNotComplex$1([d,g],"maxPoolGrad");const{filterSize:j,strides:_e,pad:et,dimRoundingMode:_}=a,b=computePool2DInfo($.shape,j,_e,1,et,_),tt=o.data.get($.dataId).values,nt=buffer(b.outShape,$.dtype,maxPoolPositions(tt,$.shape,$.dtype,b).values),rt=b.strideHeight,st=b.strideWidth,ot=b.dilationHeight,it=b.dilationWidth,at=b.effectiveFilterHeight,lt=b.effectiveFilterWidth,ut=lt-1-b.padInfo.left,ct=at-1-b.padInfo.top,dt=buffer($.shape,"float32"),pt=o.data.get(c.dataId).values,ht=buffer(c.shape,"float32",pt);for(let ft=0;ft<b.batchSize;++ft)for(let yt=0;yt<b.inChannels;++yt)for(let wt=0;wt<b.inHeight;++wt)for(let _t=0;_t<b.inWidth;++_t){const bt=wt-ct,xt=_t-ut;let mt=0;for(let vt=0;vt<at;vt+=ot){const Et=(bt+vt)/rt;if(!(Et<0||Et>=b.outHeight||Math.floor(Et)!==Et))for(let Ct=0;Ct<lt;Ct+=it){const kt=(xt+Ct)/st;if(kt<0||kt>=b.outWidth||Math.floor(kt)!==kt)continue;const Nt=at*lt-1-nt.get(ft,Et,kt,yt),Mt=vt*lt+Ct,Vt=Nt===Mt?1:0;if(Vt===0)continue;const Gt=ht.get(ft,Et,kt,yt);mt+=Gt*Vt}}dt.set(mt,ft,wt,_t,yt)}return o.makeTensorInfo(dt.shape,dt.dtype,dt.values)}const maxPoolGradConfig$1={kernelName:MaxPoolGrad,backendName:"cpu",kernelFunc:maxPoolGrad$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function maxPoolWithArgmaxImpl$1(i,s,o,a,c){const d=computeStrides(s),g=pool(i,s,o,d,c,"max"),$=maxPoolPositions(i,s,o,c,!0,a);return[g.values,$.values]}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const maxPoolWithArgmaxConfig$1={kernelName:MaxPoolWithArgmax,backendName:"cpu",kernelFunc:({inputs:i,attrs:s,backend:o})=>{const{x:a}=i,{filterSize:c,strides:d,pad:g,includeBatchInIndex:$}=s,j=o;assertNotComplex$1(a,"MaxPoolWithArgmax");const _e=j.data.get(a.dataId).values,et=computePool2DInfo(a.shape,c,d,[1,1],g),[_,b]=maxPoolWithArgmaxImpl$1(_e,a.shape,a.dtype,$,et),tt=j.write(_,et.outShape,a.dtype),nt=j.write(b,et.outShape,a.dtype);return[{dataId:tt,shape:et.outShape,dtype:a.dtype},{dataId:nt,shape:et.outShape,dtype:"int32"}]}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mean(i){const{inputs:s,backend:o,attrs:a}=i,{x:c}=s,{axis:d,keepDims:g}=a,$=parseAxisParam(d,c.shape),_e=computeOutAndReduceShapes(c.shape,$)[1],et=sizeFromShape(_e),_=[],b=o.makeTensorInfo([],"float32",new Float32Array([et]));_.push(b);const tt=cast$1({inputs:{x:c},backend:o,attrs:{dtype:"float32"}});_.push(tt);const nt=div({inputs:{a:tt,b},backend:o});_.push(nt);const rt=sum$1({inputs:{x:nt},backend:o,attrs:{axis:d,keepDims:g}});return _.forEach(st=>o.disposeIntermediateTensorInfo(st)),rt}const meanConfig$1={kernelName:Mean,backendName:"cpu",kernelFunc:mean};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function min$1(i){const{inputs:s,backend:o,attrs:a}=i,{x:c}=s,{axis:d,keepDims:g}=a;assertNotComplex$1(c,"min");const $=parseAxisParam(d,c.shape);let j=$;const _e=getAxesPermutation(j,c.shape.length);let et=c;_e!=null&&(et=transpose$1({inputs:{x:c},backend:o,attrs:{perm:_e}}),j=getInnerMostAxes(j.length,c.shape.length)),assertAxesAreInnerMostDims("min",j,et.shape.length);const[_,b]=computeOutAndReduceShapes(et.shape,j),tt=sizeFromShape(b),nt=makeZerosTypedArray(sizeFromShape(_),et.dtype),rt=o.data.get(et.dataId).values;for(let ot=0;ot<nt.length;++ot){const it=ot*tt;let at=rt[it];for(let lt=0;lt<tt;++lt){const ut=rt[it+lt];(Number.isNaN(ut)||ut<at)&&(at=ut)}nt[ot]=at}_e!=null&&o.disposeIntermediateTensorInfo(et);const st=o.makeTensorInfo(_,et.dtype,nt);if(g){const ot=expandShapeToKeepDim(_,$),it=reshape$1({inputs:{x:st},backend:o,attrs:{shape:ot}});return o.disposeIntermediateTensorInfo(st),it}return st}const minConfig$1={kernelName:Min,backendName:"cpu",kernelFunc:min$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mirrorPad(i){const{inputs:s,backend:o,attrs:a}=i,{x:c}=s,{paddings:d,mode:g}=a;assertNotComplex$1(c,"mirrorPad");const $=d.map((at,lt)=>at[0]+c.shape[lt]+at[1]),j=d.map(at=>at[0]),_e=d.map((at,lt)=>at[0]+c.shape[lt]),et=g==="reflect"?0:1,_=o.data.get(c.dataId).values,b=c.shape.length,tt=computeStrides(c.shape),nt=sizeFromShape($),rt=$.length,st=computeStrides($),ot=getTypedArrayFromDType(c.dtype,nt);for(let at=0;at<nt;at++){let lt=indexToLoc(at,rt,st);for(let ct=0;ct<rt;ct++)lt[ct]<j[ct]?lt[ct]=j[ct]*2-lt[ct]-et:lt[ct]>=_e[ct]&&(lt[ct]=(_e[ct]-1)*2-lt[ct]+et);lt=lt.map((ct,dt)=>ct-j[dt]);const ut=locToIndex(lt,b,tt);ot[at]=_[ut]}return{dataId:o.write(ot,$,c.dtype),shape:$,dtype:c.dtype}}const mirrorPadConfig$1={kernelName:MirrorPad,backendName:"cpu",kernelFunc:mirrorPad};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const modImpl=createSimpleBinaryKernelImpl((i,s)=>{const o=i%s;return i<0&&s<0||i>=0&&s>=0?o:(o+s)%s}),mod$1=binaryKernelFunc$1(Mod,modImpl),modConfig$1={kernelName:Mod,backendName:"cpu",kernelFunc:mod$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function softmax$1(i){const{inputs:s,backend:o,attrs:a}=i,{logits:c}=s,{dim:d}=a,g=c.shape.length;let $=d;if($===-1&&($=g-1),$!==g-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${g} and dim was ${$}`);const j=parseAxisParam([$],c.shape),_e=max$1({inputs:{x:c},backend:o,attrs:{reductionIndices:j,keepDims:!1}}),et=expandShapeToKeepDim(_e.shape,j),_=reshape$1({inputs:{x:_e},backend:o,attrs:{shape:et}}),b=sub$1({inputs:{a:c,b:_},backend:o}),tt=exp$1({inputs:{x:b},backend:o}),nt=sum$1({inputs:{x:tt},backend:o,attrs:{axis:j,keepDims:!1}}),rt=reshape$1({inputs:{x:nt},backend:o,attrs:{shape:et}}),st=div({inputs:{a:tt,b:rt},backend:o});return o.disposeIntermediateTensorInfo(_e),o.disposeIntermediateTensorInfo(_),o.disposeIntermediateTensorInfo(b),o.disposeIntermediateTensorInfo(tt),o.disposeIntermediateTensorInfo(nt),o.disposeIntermediateTensorInfo(rt),st}const softmaxConfig$1={kernelName:Softmax$2,backendName:"cpu",kernelFunc:softmax$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function multinomial$1(i){const{inputs:s,backend:o,attrs:a}=i,{logits:c}=s,{numSamples:d,seed:g,normalized:$}=a;assertNotComplex$1(c,"multinomial");const j=$?c:softmax$1({inputs:{logits:c},backend:o,attrs:{dim:-1}}),_e=j.shape[0],et=j.shape[1],_=o.data.get(j.dataId).values,b=[_e,d],tt=makeZerosTypedArray(sizeFromShape(b),"int32");for(let nt=0;nt<_e;++nt){const rt=nt*et,st=new Float32Array(et-1);st[0]=_[rt];for(let at=1;at<st.length;++at)st[at]=st[at-1]+_[rt+at];const ot=seedrandom.alea(g.toString()),it=nt*d;for(let at=0;at<d;++at){const lt=ot();tt[it+at]=st.length;for(let ut=0;ut<st.length;ut++)if(lt<st[ut]){tt[it+at]=ut;break}}}return $||o.disposeIntermediateTensorInfo(j),o.makeTensorInfo(b,"int32",tt)}const multinomialConfig$1={kernelName:Multinomial,backendName:"cpu",kernelFunc:multinomial$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nonMaxSuppressionV3Impl$1=nonMaxSuppressionV3Impl$2;function nonMaxSuppressionV3$1(i){const{inputs:s,backend:o,attrs:a}=i,{boxes:c,scores:d}=s,{maxOutputSize:g,iouThreshold:$,scoreThreshold:j}=a;assertNotComplex$1(c,"NonMaxSuppression");const _e=o.data.get(c.dataId).values,et=o.data.get(d.dataId).values,{selectedIndices:_}=nonMaxSuppressionV3Impl$1(_e,et,g,$,j);return o.makeTensorInfo([_.length],"int32",new Int32Array(_))}const nonMaxSuppressionV3Config$1={kernelName:NonMaxSuppressionV3,backendName:"cpu",kernelFunc:nonMaxSuppressionV3$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nonMaxSuppressionV4Impl$1=nonMaxSuppressionV4Impl$2;function nonMaxSuppressionV4$1(i){const{inputs:s,backend:o,attrs:a}=i,{boxes:c,scores:d}=s,{maxOutputSize:g,iouThreshold:$,scoreThreshold:j,padToMaxOutputSize:_e}=a;assertNotComplex$1(c,"NonMaxSuppressionPadded");const et=o.data.get(c.dataId).values,_=o.data.get(d.dataId).values,{selectedIndices:b,validOutputs:tt}=nonMaxSuppressionV4Impl$1(et,_,g,$,j,_e);return[o.makeTensorInfo([b.length],"int32",new Int32Array(b)),o.makeTensorInfo([],"int32",new Int32Array([tt]))]}const nonMaxSuppressionV4Config$1={kernelName:NonMaxSuppressionV4,backendName:"cpu",kernelFunc:nonMaxSuppressionV4$1};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nonMaxSuppressionV5Impl$1=nonMaxSuppressionV5Impl$2;function nonMaxSuppressionV5$1(i){const{inputs:s,backend:o,attrs:a}=i,{boxes:c,scores:d}=s,{maxOutputSize:g,iouThreshold:$,scoreThreshold:j,softNmsSigma:_e}=a;assertNotComplex$1(c,"NonMaxSuppressionWithScore");const et=o.data.get(c.dataId).values,_=o.data.get(d.dataId).values,b=g,tt=$,nt=j,rt=_e,{selectedIndices:st,selectedScores:ot}=nonMaxSuppressionV5Impl$1(et,_,b,tt,nt,rt);return[o.makeTensorInfo([st.length],"int32",new Int32Array(st)),o.makeTensorInfo([ot.length],"float32",new Float32Array(ot))]}const nonMaxSuppressionV5Config$1={kernelName:NonMaxSuppressionV5,backendName:"cpu",kernelFunc:nonMaxSuppressionV5$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oneHot$1(i){const{inputs:s,backend:o,attrs:a}=i,{indices:c}=s,{dtype:d,depth:g,onValue:$,offValue:j}=a;assertNotComplex$1(c,"oneHot");const _e=sizeFromShape(c.shape),et=new Float32Array(_e*g);et.fill(j);const _=o.data.get(c.dataId).values;for(let b=0;b<_e;++b)_[b]>=0&&_[b]<g&&(et[b*g+_[b]]=$);return o.makeTensorInfo([...c.shape,g],d,et)}const oneHotConfig$1={kernelName:OneHot,backendName:"cpu",kernelFunc:oneHot$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zerosLike$1(i){const{inputs:s,backend:o}=i,{x:a}=s;if(a.dtype==="string")throw new Error("zerosLike is not supported for string tensors");if(a.dtype==="complex64"){const c=real$1({inputs:{input:a},backend:o}),d=zerosLike$1({inputs:{x:c},backend:o}),g=imag$1({inputs:{input:a},backend:o}),$=zerosLike$1({inputs:{x:g},backend:o}),j=complex$1({inputs:{real:d,imag:$},backend:o});return o.disposeIntermediateTensorInfo(c),o.disposeIntermediateTensorInfo(d),o.disposeIntermediateTensorInfo(g),o.disposeIntermediateTensorInfo($),j}else return fill$1({backend:o,attrs:{shape:a.shape,value:0,dtype:a.dtype}})}const zerosLikeConfig$1={kernelName:ZerosLike,backendName:"cpu",kernelFunc:zerosLike$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function onesLike$1(i){const{inputs:s,backend:o}=i,{x:a}=s;if(a.dtype==="string")throw new Error("onesLike is not supported for string tensors");if(a.dtype==="complex64"){const c=real$1({inputs:{input:a},backend:o}),d=onesLike$1({inputs:{x:c},backend:o}),g=imag$1({inputs:{input:a},backend:o}),$=zerosLike$1({inputs:{x:g},backend:o}),j=complex$1({inputs:{real:d,imag:$},backend:o});return o.disposeIntermediateTensorInfo(c),o.disposeIntermediateTensorInfo(d),o.disposeIntermediateTensorInfo(g),o.disposeIntermediateTensorInfo($),j}else return fill$1({backend:o,attrs:{shape:a.shape,value:1,dtype:a.dtype}})}const onesLikeConfig$1={kernelName:OnesLike,backendName:"cpu",kernelFunc:onesLike$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pack$1(i){const{inputs:s,backend:o,attrs:a}=i,{axis:c}=a;if(s.length===1)return expandDims$1({inputs:{input:s[0]},backend:o,attrs:{dim:c}});const d=s[0].shape,g=s[0].dtype;s.forEach(et=>{assertShapesMatch(d,et.shape,"All tensors passed to stack must have matching shapes"),assert$1(g===et.dtype,()=>"All tensors passed to stack must have matching dtypes")});const $=[],j=s.map(et=>{const _=expandDims$1({inputs:{input:et},backend:o,attrs:{dim:c}});return $.push(_),_}),_e=concat$1({inputs:j,backend:o,attrs:{axis:c}});return $.forEach(et=>o.disposeIntermediateTensorInfo(et)),_e}const packConfig$1={kernelName:Pack,backendName:"cpu",kernelFunc:pack$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function padV2$1(i){const{inputs:s,backend:o,attrs:a}=i,{x:c}=s,{paddings:d,constantValue:g}=a;assertNotComplex$1(c,"pad");const $=d.map((it,at)=>it[0]+c.shape[at]+it[1]),j=d.map(it=>it[0]),_e=o.data.get(c.dataId).values,et=sizeFromShape(c.shape),_=c.shape.length,b=computeStrides(c.shape),tt=sizeFromShape($),nt=$.length,rt=computeStrides($),st=getTypedArrayFromDType(c.dtype,tt);g!==0&&st.fill(g);for(let it=0;it<et;it++){const lt=indexToLoc(it,_,b).map((ct,dt)=>ct+j[dt]),ut=locToIndex(lt,nt,rt);st[ut]=_e[it]}return{dataId:o.write(st,$,c.dtype),shape:$,dtype:c.dtype}}const padV2Config$1={kernelName:PadV2,backendName:"cpu",kernelFunc:padV2$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const powImpl=createSimpleBinaryKernelImpl((i,s)=>Math.pow(i,s)),pow$1=binaryKernelFunc$1(Pow,powImpl),powConfig$1={kernelName:Pow,backendName:"cpu",kernelFunc:pow$1};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function raggedGather$1(i){const{inputs:s,backend:o,attrs:a}=i,{paramsNestedSplits:c,paramsDenseValues:d,indices:g}=s,$=c.map(st=>o.data.get(st.dataId).values),j=c.map(st=>st.shape),_e=o.data.get(d.dataId).values,et=o.data.get(g.dataId).values,[_,b,tt]=raggedGatherImpl($,j,_e,d.shape,d.dtype,et,g.shape),nt=_.map(st=>o.makeTensorInfo([st.length],"int32",st)),rt=o.makeTensorInfo(tt,d.dtype,b);return nt.concat([rt])}const raggedGatherConfig$1={kernelName:RaggedGather,backendName:"cpu",kernelFunc:raggedGather$1};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function raggedRange$1(i){const{inputs:s,backend:o}=i,{starts:a,limits:c,deltas:d}=s,g=o.data.get(a.dataId).values,$=o.data.get(c.dataId).values,j=o.data.get(d.dataId).values,[_e,et]=raggedRangeImpl(g,a.shape,a.dtype,$,c.shape,j,d.shape),_=o.makeTensorInfo([_e.length],"int32",_e),b=o.makeTensorInfo([et.length],a.dtype,et);return[_,b]}const raggedRangeConfig$1={kernelName:RaggedRange,backendName:"cpu",kernelFunc:raggedRange$1};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function raggedTensorToTensor$1(i){const{inputs:s,backend:o,attrs:a}=i,{shape:c,values:d,defaultValue:g,rowPartitionTensors:$}=s,{rowPartitionTypes:j}=a,_e=o.data.get(c.dataId).values,et=o.data.get(d.dataId).values,_=o.data.get(g.dataId).values,b=$.map(st=>o.data.get(st.dataId).values),tt=$.map(st=>st.shape),[nt,rt]=raggedTensorToTensorImpl(_e,c.shape,et,d.shape,d.dtype,_,g.shape,b,tt,j);return o.makeTensorInfo(nt,d.dtype,rt)}const raggedTensorToTensorConfig$1={kernelName:RaggedTensorToTensor,backendName:"cpu",kernelFunc:raggedTensorToTensor$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function range$1(i){const{backend:s,attrs:o}=i,{start:a,stop:c,dtype:d,step:g}=o,$=rangeImpl(a,c,g,d);return s.makeTensorInfo([$.length],d,$)}const rangeConfig$1={kernelName:Range,backendName:"cpu",kernelFunc:range$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const reciprocal$1=unaryKernelFunc$1(Reciprocal,i=>1/i),reciprocalConfig$1={kernelName:Reciprocal,backendName:"cpu",kernelFunc:reciprocal$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function resizeBilinear$1(i){const{inputs:s,backend:o,attrs:a}=i,{images:c}=s,{alignCorners:d,halfPixelCenters:g,size:$}=a;assertNotComplex$1(c,"resizeBilinear");const j=computeStrides(c.shape),[_e,et]=$,[_,b,tt,nt]=c.shape,rt=o.data.get(c.dataId).values,st=new Float32Array(sizeFromShape([_,_e,et,nt])),ot=[d&&_e>1?b-1:b,d&&et>1?tt-1:tt],it=[d&&_e>1?_e-1:_e,d&&et>1?et-1:et];let at=0;const lt=ot[0]/it[0],ut=ot[1]/it[1];for(let ct=0;ct<_;ct++)for(let dt=0;dt<_e;dt++){let pt;g?pt=lt*(dt+.5)-.5:pt=lt*dt;const ht=Math.max(0,Math.floor(pt)),ft=pt-ht,yt=Math.min(b-1,Math.ceil(pt)),wt=ct*j[0]+ht*j[1],_t=ct*j[0]+yt*j[1];for(let bt=0;bt<et;bt++){let xt;g?xt=ut*(bt+.5)-.5:xt=ut*bt;const mt=Math.max(0,Math.floor(xt)),vt=xt-mt,Et=Math.min(tt-1,Math.ceil(xt)),Ct=wt+mt*j[2],kt=_t+mt*j[2],Nt=wt+Et*j[2],Mt=_t+Et*j[2];for(let Vt=0;Vt<nt;Vt++){const Gt=rt[Ct+Vt],Ft=rt[kt+Vt],jt=rt[Nt+Vt],qt=rt[Mt+Vt],Yt=Gt+(jt-Gt)*vt,Qt=Ft+(qt-Ft)*vt,Zt=Yt+(Qt-Yt)*ft;st[at++]=Zt}}}return o.makeTensorInfo([_,_e,et,nt],"float32",st)}const resizeBilinearConfig$1={kernelName:ResizeBilinear,backendName:"cpu",kernelFunc:resizeBilinear$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function resizeBilinearGrad$1(i){const{inputs:s,backend:o,attrs:a}=i,{images:c,dy:d}=s,{alignCorners:g}=a;assertNotComplex$1([d,c],"resizeBilinearGrad");const $=computeStrides(c.shape),[j,_e,et,_]=c.shape,[,b,tt]=d.shape,nt=new Float32Array(j*_e*et*_),rt=[g&&b>1?_e-1:_e,g&&tt>1?et-1:et],st=[g&&b>1?b-1:b,g&&tt>1?tt-1:tt],ot=rt[0]/st[0],it=rt[1]/st[1],at=o.data.get(d.dataId).values;let lt=0;for(let ut=0;ut<j;ut++){const ct=ut*$[0];for(let dt=0;dt<b;dt++){const pt=dt*ot,ht=Math.floor(pt),ft=Math.min(Math.ceil(pt),_e-1),yt=ct+ht*$[1],wt=ct+ft*$[1],_t=pt-ht,bt=1-_t;for(let xt=0;xt<tt;xt++){const mt=xt*it,vt=Math.floor(mt),Et=Math.min(Math.ceil(mt),et-1),Ct=mt-vt,kt=1-Ct,Nt=yt+vt*$[2],Mt=yt+Et*$[2],Vt=wt+vt*$[2],Gt=wt+Et*$[2],Ft=bt*kt,jt=bt*Ct,qt=_t*kt,Yt=_t*Ct;for(let Qt=0;Qt<_;Qt++){const Zt=at[lt++];nt[Nt+Qt]+=Zt*Ft,nt[Mt+Qt]+=Zt*jt,nt[Vt+Qt]+=Zt*qt,nt[Gt+Qt]+=Zt*Yt}}}}return o.makeTensorInfo([j,et,_e,_],"float32",nt)}const resizeBilinearGradConfig$1={kernelName:ResizeBilinearGrad,backendName:"cpu",kernelFunc:resizeBilinearGrad$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function resizeNearestNeighbor$1(i){const{inputs:s,backend:o,attrs:a}=i,{images:c}=s,{alignCorners:d,halfPixelCenters:g,size:$}=a;assertNotComplex$1(c,"resizeNearestNeighbor");const j=computeStrides(c.shape),[_e,et]=$,[_,b,tt,nt]=c.shape,rt=o.data.get(c.dataId).values,st=new Float32Array(_*_e*et*nt),ot=[d&&_e>1?b-1:b,d&&et>1?tt-1:tt],it=[d&&_e>1?_e-1:_e,d&&et>1?et-1:et],at=ot[0]/it[0],lt=ot[1]/it[1];let ut=0;for(let ct=0;ct<_;ct++){const dt=ct*j[0];for(let pt=0;pt<_e;pt++){const ht=g?at*(pt+.5):at*pt;let ft=Math.min(b-1,d?Math.round(ht):Math.floor(ht));g&&(ft=Math.max(0,ft));const yt=dt+ft*j[1];for(let wt=0;wt<et;wt++){const _t=g?lt*(wt+.5):lt*wt;let bt=Math.min(tt-1,d?Math.round(_t):Math.floor(_t));g&&(bt=Math.max(0,bt));const xt=yt+bt*j[2];for(let mt=0;mt<nt;mt++){const vt=rt[xt+mt];st[ut++]=vt}}}}return o.makeTensorInfo([_,_e,et,nt],c.dtype,st)}const resizeNearestNeighborConfig$1={kernelName:ResizeNearestNeighbor,backendName:"cpu",kernelFunc:resizeNearestNeighbor$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function resizeNearestNeighborGrad$1(i){const{inputs:s,backend:o,attrs:a}=i,{images:c,dy:d}=s,{alignCorners:g}=a;assertNotComplex$1([d,c],"resizeNearestNeighborGrad");const $=computeStrides(c.shape),j=computeStrides(d.shape),[_e,et,_,b]=c.shape,[,tt,nt]=d.shape,rt=new Float32Array(_e*et*_*b),st=o.data.get(d.dataId).values,ot=[g&&tt>1?et-1:et,g&&nt>1?_-1:_],it=[g&&tt>1?tt-1:tt,g&&nt>1?nt-1:nt],at=ot[0]/it[0],lt=ot[1]/it[1],ut=1/at,ct=1/lt,dt=Math.ceil(ut)*2+2,pt=Math.ceil(ct)*2+2;for(let ht=0;ht<_e;ht++){const ft=ht*$[0];for(let yt=0;yt<et;yt++){const wt=ft+yt*$[1],_t=Math.floor(yt*ut),bt=Math.floor(_t-dt/2);for(let xt=0;xt<_;xt++){const mt=wt+xt*$[2],vt=Math.floor(xt*ct),Et=Math.floor(vt-pt/2);for(let Ct=0;Ct<b;Ct++){let kt=0;for(let Nt=0;Nt<dt;Nt++){const Mt=Nt+bt;if(Mt<0||Mt>=tt)continue;const Vt=ft+Mt*j[1],Gt=Mt*at,Ft=Math.min(et-1,g?Math.round(Gt):Math.floor(Gt));if(yt===Ft)for(let jt=0;jt<pt;jt++){const qt=jt+Et;if(qt<0||qt>=nt)continue;const Yt=Vt+qt*j[2],Qt=qt*lt,Zt=Math.min(_-1,g?Math.round(Qt):Math.floor(Qt));xt===Zt&&(kt+=st[Yt+Ct])}}rt[mt+Ct]=kt}}}}return o.makeTensorInfo(c.shape,c.dtype,rt)}const resizeNearestNeighborGradConfig$1={kernelName:ResizeNearestNeighborGrad,backendName:"cpu",kernelFunc:resizeNearestNeighborGrad$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function reverse$1(i){const{inputs:s,backend:o,attrs:a}=i,{x:c}=s,{dims:d}=a;assertNotComplex$1(c,"reverse");const g=c.shape.length,$=parseAxisParam(d,c.shape);if(g===0)return identity$1({inputs:{x:c},backend:o});const j=new TensorBuffer(c.shape,c.dtype),_e=o.bufferSync(c);for(let et=0;et<j.size;et++){const _=j.indexToLoc(et),b=_.slice();$.forEach(tt=>b[tt]=c.shape[tt]-1-b[tt]),j.set(_e.get(...b),..._)}return o.makeTensorInfo(j.shape,j.dtype,j.values)}const reverseConfig$1={kernelName:Reverse,backendName:"cpu",kernelFunc:reverse$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rotateWithOffsetConfig$1={kernelName:RotateWithOffset,backendName:"cpu",kernelFunc:({inputs:i,attrs:s,backend:o})=>{const{image:a}=i,{radians:c,fillValue:d,center:g}=s,$=o,j=getTypedArrayFromDType(a.dtype,sizeFromShape(a.shape)),[_e,et,_,b]=a.shape,[tt,nt]=getImageCenter(g,et,_),rt=255,st=Math.sin(c),ot=Math.cos(c),it=$.data.get(a.dataId).values;for(let lt=0;lt<_e;lt++){const ut=lt*_*et*b;for(let ct=0;ct<et;ct++){const dt=ct*(_*b);for(let pt=0;pt<_;pt++){const ht=pt*b;for(let ft=0;ft<b;ft++){const yt=[_e,ct,pt,ft],wt=yt[2],_t=yt[1];let bt=(wt-tt)*ot-(_t-nt)*st,xt=(wt-tt)*st+(_t-nt)*ot;bt=Math.round(bt+tt),xt=Math.round(xt+nt);let mt=d;if(typeof d!="number"&&(ft===3?mt=rt:mt=d[ft]),bt>=0&&bt<_&&xt>=0&&xt<et){const Et=xt*(_*b),Ct=bt*b,kt=ut+Et+Ct+ft;mt=it[kt]}const vt=ut+dt+ht+ft;j[vt]=mt}}}}return{dataId:$.write(j,a.shape,a.dtype),shape:a.shape,dtype:a.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const round$1=unaryKernelFunc$1(Round,i=>{const s=Math.floor(i);return i-s<.5?Math.floor(i):i-s>.5?Math.ceil(i):s%2===0?s:s+1}),roundConfig$1={kernelName:Round,backendName:"cpu",kernelFunc:round$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function scatterNd$1(i){const{inputs:s,backend:o,attrs:a}=i,{indices:c,updates:d}=s,{shape:g}=a,{sliceRank:$,numUpdates:j,sliceSize:_e,strides:et,outputSize:_}=calculateShapes(d,c,g),b=!0,tt=o.bufferSync(c),nt=o.bufferSync(d),rt=scatterImpl(tt,nt,g,_,_e,j,$,et,0,b);return o.makeTensorInfo(g,rt.dtype,rt.values)}const scatterNdConfig$1={kernelName:ScatterNd,backendName:"cpu",kernelFunc:scatterNd$1};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lowerBound(i,s){let o=0,a=i.length,c=0;for(;o<a;)c=Math.floor((o+a)/2),i[c]<s?o=c+1:a=c;return a}function upperBound(i,s){let o=0,a=i.length,c=0;for(;o<a;)c=Math.floor((o+a)/2),i[c]<=s?o=c+1:a=c;return a}function searchSortedImpl(i,s,o,a,c,d){const g=getArrayFromDType("int32",o*c);for(let $=0;$<o;++$){const j=i.slice($*a,($+1)*a),_e=$*c;for(let et=0;et<c;++et)g[_e+et]=d==="left"?lowerBound(j,s[et+_e]):upperBound(j,s[et+_e])}return g}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function searchSorted$1(i){const{inputs:s,backend:o,attrs:a}=i,{sortedSequence:c,values:d}=s,{side:g}=a,$=o.data.get(c.dataId).values,j=o.data.get(d.dataId).values,_e=searchSortedImpl($,j,c.shape[0],c.shape[1],d.shape[1],g);return o.makeTensorInfo(d.shape,"int32",_e)}const searchSortedConfig$1={kernelName:SearchSorted,backendName:"cpu",kernelFunc:searchSorted$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function select$1(i){const{inputs:s,backend:o}=i,{condition:a,t:c,e:d}=s;assertNotComplex$1([a,c,d],"select");const g=a.shape.length,$=o.data.get(a.dataId).values,j=o.data.get(c.dataId).values,_e=o.data.get(d.dataId).values,et=upcastType(c.dtype,d.dtype),_=makeZerosTypedArray(sizeFromShape(c.shape),et);let b=0;const tt=g===0||g>1||c.shape.length===1?1:sizeFromShape(c.shape.slice(1));for(let nt=0;nt<$.length;nt++)for(let rt=0;rt<tt;rt++)$[nt]===1?_[b++]=j[nt]:_[b++]=_e[nt];return o.makeTensorInfo(c.shape,et,_)}const selectConfig$1={kernelName:Select,backendName:"cpu",kernelFunc:select$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const scaleAlpha=SELU_SCALEALPHA,scale=SELU_SCALE,selu$1=unaryKernelFunc$1(Selu$1,i=>i>=0?scale*i:scaleAlpha*(Math.exp(i)-1)),seluConfig$1={kernelName:Selu$1,backendName:"cpu",kernelFunc:selu$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sign$1=unaryKernelFunc$1(Sign,i=>i<0?-1:i>0?1:0),signConfig$1={kernelName:Sign,backendName:"cpu",kernelFunc:sign$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sin$1=unaryKernelFunc$1(Sin,i=>Math.sin(i)),sinConfig$1={kernelName:Sin,backendName:"cpu",kernelFunc:sin$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sinh$1=unaryKernelFunc$1(Sinh,i=>Math.sinh(i)),sinhConfig$1={kernelName:Sinh,backendName:"cpu",kernelFunc:sinh$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const epsilon=11920928955078125e-23,threshold=Math.log(epsilon)+2,softplus$1=unaryKernelFunc$1(Softplus$1,i=>{const s=i>-threshold,o=i<threshold,a=Math.exp(i);let c;return o?c=a:s?c=i:c=Math.log(1+a),c}),softplusConfig$1={kernelName:Softplus$1,backendName:"cpu",kernelFunc:softplus$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function spaceToBatchND$1(i){const{inputs:s,backend:o,attrs:a}=i,{x:c}=s,{blockShape:d,paddings:g}=a;assertNotComplex$1([c],"spaceToBatchND");const $=sizeFromShape(d),j=[[0,0]];j.push(...g);for(let ct=1+d.length;ct<c.shape.length;++ct)j.push([0,0]);const _e=padV2Config$1.kernelFunc({inputs:{x:c},backend:o,attrs:{paddings:j,constantValue:0}}),et=getReshaped(_e.shape,d,$,!1),_=getPermuted(et.length,d.length,!1),b=getReshapedPermuted(_e.shape,d,$,!1),rt=reshape$1({inputs:{x:_e},backend:o,attrs:{shape:et}}),it=transpose$1({inputs:{x:rt},backend:o,attrs:{perm:_}}),ut=reshape$1({inputs:{x:it},backend:o,attrs:{shape:b}});return o.disposeIntermediateTensorInfo(_e),o.disposeIntermediateTensorInfo(rt),o.disposeIntermediateTensorInfo(it),ut}const spaceToBatchNDConfig$1={kernelName:SpaceToBatchND,backendName:"cpu",kernelFunc:spaceToBatchND$1};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sparseFillEmptyRows$1(i){const{inputs:s,backend:o}=i,{indices:a,values:c,denseShape:d,defaultValue:g}=s;if(d.shape.length!==1)throw new Error(`Dense shape must be a vector, saw:
        ${d.shape}`);if(a.shape.length!==2)throw new Error(`Indices must be a matrix, saw:
        ${a.shape}`);if(c.shape.length!==1)throw new Error(`Values must be a vector, saw:
        ${c.shape}`);if(g.shape.length!==0)throw new Error(`Default value must be a scalar, saw:
        ${g.shape}`);const $=o.data.get(a.dataId).values,j=o.data.get(c.dataId).values,_e=o.data.get(d.dataId).values,et=o.data.get(g.dataId).values[0],[_,b,tt,nt,rt]=sparseFillEmptyRowsImpl($,a.shape,a.dtype,j,c.dtype,_e,et);return[o.makeTensorInfo(b,a.dtype,_),o.makeTensorInfo([b[0]],c.dtype,tt),o.makeTensorInfo([nt.length],"bool",new Uint8Array(nt.map(st=>Number(st)))),o.makeTensorInfo([rt.length],a.dtype,new Int32Array(rt))]}const sparseFillEmptyRowsConfig$1={kernelName:SparseFillEmptyRows,backendName:"cpu",kernelFunc:sparseFillEmptyRows$1};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sparseReshape$1(i){const{inputs:s,backend:o}=i,{inputIndices:a,inputShape:c,newShape:d}=s;if(a.shape.length!==2)throw new Error(`Input indices should be a matrix but received shape
        ${a.shape}`);if(c.shape.length!==1)throw new Error(`Input shape should be a vector but received shape
        ${c.shape}`);if(d.shape.length!==1)throw new Error(`Target shape should be a vector but received shape ${d.shape}`);const g=Array.from(o.data.get(c.dataId).values),$=o.data.get(a.dataId).values,j=Array.from(o.data.get(d.dataId).values),[_e,et,_]=sparseReshapeImpl($,a.shape,a.dtype,g,j);return[o.makeTensorInfo(et,a.dtype,_e),o.makeTensorInfo([_.length],d.dtype,new Int32Array(_))]}const sparseReshapeConfig$1={kernelName:SparseReshape,backendName:"cpu",kernelFunc:sparseReshape$1};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sparseSegmentMean$1(i){const{inputs:s,backend:o}=i,{data:a,indices:c,segmentIds:d}=s;if(a.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(c.shape.length!==1)throw new Error(`Indices should be a vector but received shape
          ${c.shape}`);if(d.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
          ${d.shape}`);if(c.shape[0]!==d.shape[0])throw new Error("segmentIds and indices should have same size.");const g=o.data.get(a.dataId).values,$=o.data.get(c.dataId).values,j=o.data.get(d.dataId).values,[_e,et]=sparseSegmentReductionImpl(g,a.shape,a.dtype,$,j,!0);return o.makeTensorInfo(et,a.dtype,_e)}const sparseSegmentMeanConfig$1={kernelName:SparseSegmentMean,backendName:"cpu",kernelFunc:sparseSegmentMean$1};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sparseSegmentSum$1(i){const{inputs:s,backend:o}=i,{data:a,indices:c,segmentIds:d}=s;if(a.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(c.shape.length!==1)throw new Error(`Indices should be a vector but received shape
         ${c.shape}`);if(d.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
         ${d.shape}`);if(c.shape[0]!==d.shape[0])throw new Error("segmentIds and indices should have same size.");const g=o.data.get(a.dataId).values,$=o.data.get(c.dataId).values,j=o.data.get(d.dataId).values,[_e,et]=sparseSegmentReductionImpl(g,a.shape,a.dtype,$,j);return o.makeTensorInfo(et,a.dtype,_e)}const sparseSegmentSumConfig$1={kernelName:SparseSegmentSum,backendName:"cpu",kernelFunc:sparseSegmentSum$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sparseToDense$1(i){const{inputs:s,backend:o,attrs:a}=i,{sparseIndices:c,sparseValues:d,defaultValue:g}=s,{outputShape:$}=a,{sliceRank:j,numUpdates:_e,sliceSize:et,strides:_,outputSize:b}=calculateShapes(d,c,$),tt=!1,nt=o.bufferSync(c);let rt;switch(d.dtype){case"bool":{const st=o.bufferSync(d),ot=!!o.data.get(g.dataId).values[0];rt=scatterImpl(nt,st,$,b,et,_e,j,_,ot,tt);break}case"float32":{const st=o.bufferSync(d),ot=o.data.get(g.dataId).values[0];rt=scatterImpl(nt,st,$,b,et,_e,j,_,ot,tt);break}case"int32":{const st=o.bufferSync(d),ot=o.data.get(g.dataId).values[0];rt=scatterImpl(nt,st,$,b,et,_e,j,_,ot,tt);break}case"string":{const st=o.bufferSync(d),ot=decodeString(o.data.get(g.dataId).values[0]);rt=scatterImpl(nt,st,$,b,et,_e,j,_,ot,tt);break}default:throw new Error(`Unsupported type ${d.dtype}`)}return o.makeTensorInfo($,rt.dtype,rt.values)}const sparseToDenseConfig$1={kernelName:SparseToDense,backendName:"cpu",kernelFunc:sparseToDense$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function splitV$1(i){const{inputs:s,backend:o,attrs:a}=i,{x:c}=s,{numOrSizeSplits:d,axis:g}=a,$=parseAxisParam(g,c.shape)[0],j=prepareSplitSize(c,d,$),_e=new Array(c.shape.length).fill(0),et=c.shape.slice();return j.map(_=>{const b=[...et];b[$]=_;const tt=slice$1({inputs:{x:c},backend:o,attrs:{begin:_e,size:b}});return _e[$]+=_,tt})}const splitVConfig$1={kernelName:SplitV,backendName:"cpu",kernelFunc:splitV$1};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const squareConfig$1={kernelName:Square,backendName:"cpu",kernelFunc:({inputs:i,backend:s})=>{const{x:o}=i,a=s;assertNotComplex$1(o,"square");const c=a.data.get(o.dataId).values,d=new Float32Array(c.length);for(let $=0;$<c.length;++$){const j=c[$];d[$]=j*j}return{dataId:a.write(d,o.shape,o.dtype),shape:o.shape,dtype:o.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const step$1=unaryKernelFunc$1(Step,(i,s)=>{const o=s;return isNaN(i)?NaN:i>0?1:o.alpha}),stepConfig$1={kernelName:Step,backendName:"cpu",kernelFunc:step$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function stridedSlice$1(i){const{inputs:s,backend:o,attrs:a}=i,{x:c}=s,{begin:d,end:g,strides:$,beginMask:j,endMask:_e,ellipsisMask:et,newAxisMask:_,shrinkAxisMask:b}=a;assertNotComplex$1(c,"stridedSlice");const{finalShapeSparse:tt,finalShape:nt,isIdentity:rt,sliceDim0:st,isSimpleSlice:ot,begin:it,end:at,strides:lt}=sliceInfo(c.shape,d,g,$,j,_e,et,_,b);let ut;if(rt)ut=reshape$1({inputs:{x:c},backend:o,attrs:{shape:nt}});else if(st||ot){assert$1(c.shape.length>=1,()=>`Input must have rank at least 1, got: ${c.shape.length}`);const ct=computeOutShape$2(it,at,lt),dt=slice$1({inputs:{x:c},backend:o,attrs:{begin:it,size:ct}});ut=reshape$1({inputs:{x:dt},backend:o,attrs:{shape:nt}}),o.disposeIntermediateTensorInfo(dt)}else{const ct=o.bufferSync(c),dt=stridedSliceImpl(tt,ct,lt,it);ut=o.makeTensorInfo(nt,dt.dtype,dt.values)}return ut}const stridedSliceConfig$1={kernelName:StridedSlice,backendName:"cpu",kernelFunc:stridedSlice$1};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function stringNGrams$1(i){const{inputs:s,backend:o,attrs:a}=i,{separator:c,nGramWidths:d,leftPad:g,rightPad:$,padWidth:j,preserveShortSequences:_e}=a,{data:et,dataSplits:_}=s,b=o.data.get(et.dataId).values,tt=o.data.get(_.dataId).values,[nt,rt]=stringNGramsImpl(b,tt,c,d,g,$,j,_e);return[o.makeTensorInfo([nt.length],"string",nt),o.makeTensorInfo(_.shape,"int32",rt)]}const stringNGramsConfig$1={kernelName:StringNGrams,backendName:"cpu",kernelFunc:stringNGrams$1};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function stringSplit$1(i){const{inputs:s,backend:o,attrs:a}=i,{skipEmpty:c}=a,{input:d,delimiter:g}=s;if(d.dtype!=="string")throw new Error("Input must be of datatype string");if(d.shape.length!==1)throw new Error(`Input must be a vector, got shape: ${d.shape}`);if(g.shape.length!==0)throw new Error(`Delimiter must be a scalar, got shape: ${g.shape}`);const $=o.data.get(d.dataId).values,j=o.data.get(g.dataId).values[0],[_e,et,_]=stringSplitImpl($,j,c),b=et.length;return[o.makeTensorInfo([b,2],"int32",_e),o.makeTensorInfo([b],"string",et),o.makeTensorInfo([2],"int32",new Int32Array(_))]}const stringSplitConfig$1={kernelName:StringSplit,backendName:"cpu",kernelFunc:stringSplit$1};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function stringToHashBucketFast$1(i){const{inputs:s,backend:o,attrs:a}=i,{numBuckets:c}=a,{input:d}=s;if(d.dtype!=="string")throw new Error("Input must be of datatype string");if(c<=0)throw new Error("Number of buckets must be at least 1");const g=o.data.get(d.dataId).values,$=stringToHashBucketFastImpl(g,c);return o.makeTensorInfo(d.shape,"int32",$)}const stringToHashBucketFastConfig$1={kernelName:StringToHashBucketFast,backendName:"cpu",kernelFunc:stringToHashBucketFast$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tan$1=unaryKernelFunc$1(Tan,i=>Math.tan(i)),tanConfig$1={kernelName:Tan,backendName:"cpu",kernelFunc:tan$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tanh$1=unaryKernelFunc$1(Tanh$1,i=>Math.tanh(i)),tanhConfig$1={kernelName:Tanh$1,backendName:"cpu",kernelFunc:tanh$1};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tensorScatterUpdate$1(i){const{inputs:s,backend:o}=i,{tensor:a,indices:c,updates:d}=s,{sliceRank:g,numUpdates:$,sliceSize:j,strides:_e,outputSize:et}=calculateShapes(d,c,a.shape),_=!1,b=o.bufferSync(c),tt=o.bufferSync(d),nt=o.bufferSync(a),rt=scatterImpl(b,tt,a.shape,et,j,$,g,_e,nt,_);return o.makeTensorInfo(a.shape,rt.dtype,rt.values)}const tensorScatterUpdateConfig$1={kernelName:TensorScatterUpdate,backendName:"cpu",kernelFunc:tensorScatterUpdate$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tile$1(i){const{inputs:s,backend:o,attrs:a}=i,{x:c}=s,{reps:d}=a;assertNotComplex$1(c,"tile");const g=tileImpl(o.bufferSync(c),d);return o.makeTensorInfo(g.shape,g.dtype,g.values)}const tileConfig$1={kernelName:Tile,backendName:"cpu",kernelFunc:tile$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function topK$1(i){const{inputs:s,backend:o,attrs:a}=i,{x:c}=s,{k:d,sorted:g}=a;assertNotComplex$1(c,"topk");const $=o.data.get(c.dataId).values,[j,_e]=topKImpl($,c.shape,c.dtype,d,g);return[o.makeTensorInfo(j.shape,j.dtype,j.values),o.makeTensorInfo(_e.shape,_e.dtype,_e.values)]}const topKConfig$1={kernelName:TopK,backendName:"cpu",kernelFunc:topK$1};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function transform$1(i){const{inputs:s,attrs:o,backend:a}=i,{image:c,transforms:d}=s,{interpolation:g,fillMode:$,fillValue:j,outputShape:_e}=o,[et,_,b,tt]=c.shape,[nt,rt]=_e??[_,b],st=[et,nt,rt,tt],ot=computeStrides(c.shape),it=ot[0],at=ot[1],lt=ot[2],ut=computeStrides(st),ct=ut[0],dt=ut[1],pt=ut[2],ht=getTypedArrayFromDType(c.dtype,sizeFromShape(st));ht.fill(j);const ft=a.data.get(c.dataId).values,yt=a.data.get(d.dataId).values;for(let _t=0;_t<et;++_t){const bt=d.shape[0]===1?yt:yt.subarray(_t*8,_t*8+8);for(let xt=0;xt<nt;++xt)for(let mt=0;mt<rt;++mt)for(let vt=0;vt<tt;++vt){let Et;const Ct=bt[6]*mt+bt[7]*xt+1;if(Ct===0)continue;const kt=(bt[0]*mt+bt[1]*xt+bt[2])/Ct,Nt=(bt[3]*mt+bt[4]*xt+bt[5])/Ct,Mt=mapCoord(kt,b,$),Vt=mapCoord(Nt,_,$);switch(g){case"nearest":Et=nearestInterpolation(ft,_,b,it,at,lt,_t,Vt,Mt,vt,j);break;case"bilinear":Et=bilinearInterpolation(ft,_,b,it,at,lt,_t,Vt,Mt,vt,j);break;default:throw new Error(`Error in Transform: Expect 'nearest' or 'bilinear', but got ${g}`)}const Gt=_t*ct+xt*dt+mt*pt+vt;ht[Gt]=Et}return a.makeTensorInfo(st,c.dtype,ht)}return{dataId:a.write(ht,st,c.dtype),shape:c.shape,dtype:c.dtype}}const transformConfig$1={kernelName:Transform,backendName:"cpu",kernelFunc:transform$1};function mapCoord(i,s,o){switch(o){case"reflect":return mapCoordReflect(i,s);case"wrap":return mapCoordWrap(i,s);case"nearest":return mapCoordNearest(i,s);case"constant":default:return mapCoordConstant(i)}}function mapCoordReflect(i,s){let o=i;if(o<0)if(s<=1)o=0;else{const a=2*s;o<a&&(o=a*Math.trunc(-o/a)+o),o=o<-s?o+a:-o-1}else if(o>s-1)if(s<=1)o=0;else{const a=2*s;o-=a*Math.trunc(o/a),o>=s&&(o=a-o-1)}return clamp(0,o,s-1)}function mapCoordWrap(i,s){let o=i;if(o<0)if(s<=1)o=0;else{const a=s-1;o+=s*(Math.trunc(-o/a)+1)}else if(o>s-1)if(s<=1)o=0;else{const a=s-1;o-=s*Math.trunc(o/a)}return clamp(0,o,s-1)}function mapCoordConstant(i,s){return i}function mapCoordNearest(i,s){return clamp(0,i,s-1)}function readWithFillValue(i,s,o,a,c,d,g,$,j,_e,et){const _=g*a+$*c+j*d+_e;return 0<=$&&$<s&&0<=j&&j<o?i[_]:et}function nearestInterpolation(i,s,o,a,c,d,g,$,j,_e,et){const _=Math.round($),b=Math.round(j);return readWithFillValue(i,s,o,a,c,d,g,_,b,_e,et)}function bilinearInterpolation(i,s,o,a,c,d,g,$,j,_e,et){const _=Math.floor($),b=Math.floor(j),tt=_+1,nt=b+1,rt=(nt-j)*readWithFillValue(i,s,o,a,c,d,g,_,b,_e,et)+(j-b)*readWithFillValue(i,s,o,a,c,d,g,_,nt,_e,et),st=(nt-j)*readWithFillValue(i,s,o,a,c,d,g,tt,b,_e,et)+(j-b)*readWithFillValue(i,s,o,a,c,d,g,tt,nt,_e,et);return(tt-$)*rt+($-_)*st}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function unique$1(i){const{inputs:s,attrs:o,backend:a}=i,{axis:c}=o,{x:d}=s;assertNotComplex$1(d,"unique");const g=a.data.get(d.dataId).values,{outputValues:$,outputShape:j,indices:_e}=uniqueImpl(g,c,d.shape,d.dtype);return[a.makeTensorInfo(j,d.dtype,$),a.makeTensorInfo([_e.length],"int32",_e)]}const uniqueConfig$1={kernelName:Unique,backendName:"cpu",kernelFunc:unique$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function unpack$1(i){const{inputs:s,backend:o,attrs:a}=i,{value:c}=s;let{axis:d}=a;d<0&&(d+=c.shape.length);const g=c.shape.length,$=c.shape[d],j=new Array(g-1);let _e=0;for(let tt=0;tt<g;tt++)tt!==d&&(j[_e++]=c.shape[tt]);const et=new Array(g).fill(0),_=c.shape.slice();_[d]=1;const b=new Array($);for(let tt=0;tt<b.length;tt++){et[d]=tt;const nt=slice$1({inputs:{x:c},backend:o,attrs:{begin:et,size:_}});b[tt]=reshape$1({inputs:{x:nt},backend:o,attrs:{shape:j}}),o.disposeIntermediateTensorInfo(nt)}return b}const unpackConfig$1={kernelName:Unpack,backendName:"cpu",kernelFunc:unpack$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function unsortedSegmentSum$1(i){const{inputs:s,backend:o,attrs:a}=i,{x:c,segmentIds:d}=s,{numSegments:g}=a;assertNotComplex$1(c,"unsortedSegmentSum");const $=c.shape.length,j=d.shape.length,_e=[],et=[],_=$-j;let b=d;for(let nt=0;nt<_;++nt){const rt=expandDims$1({inputs:{input:b},backend:o,attrs:{dim:nt+1}});b=rt,et.push(rt)}for(let nt=0;nt<g;++nt){const rt=createScalarValue(nt,"int32"),st=o.makeTensorInfo([],"int32",rt),ot=equal$1({inputs:{a:st,b},backend:o}),it=cast$1({inputs:{x:ot},backend:o,attrs:{dtype:"float32"}}),at=multiply$1({inputs:{a:it,b:c},backend:o}),lt=sum$1({inputs:{x:at},backend:o,attrs:{axis:0,keepDims:!1}});_e.push(lt),et.push(st),et.push(ot),et.push(it),et.push(at),et.push(lt)}const tt=pack$1({inputs:_e,backend:o,attrs:{axis:0}});return et.forEach(nt=>o.disposeIntermediateTensorInfo(nt)),tt}const unsortedSegmentSumConfig$1={kernelName:UnsortedSegmentSum,backendName:"cpu",kernelFunc:unsortedSegmentSum$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kernelConfigs$1=[_fusedMatMulConfig$1,absConfig$1,acosConfig$1,acoshConfig$1,addConfig$1,addNConfig$1,allConfig$1,anyConfig$1,argMaxConfig$1,argMinConfig$1,asinConfig$1,asinhConfig$1,atanConfig$1,atan2Config$1,atanhConfig$1,avgPoolConfig$1,avgPool3DConfig$1,avgPool3DGradConfig$1,avgPoolGradConfig$1,batchMatMulConfig$1,batchNormConfig$1,batchToSpaceNDConfig$1,bincountConfig$1,bitwiseAndConfig$1,broadcastArgsConfig$1,castConfig$1,ceilConfig$1,clipByValueConfig$1,complexConfig$1,complexAbsConfig$1,concatConfig$1,conv2DConfig$1,conv2DBackpropFilterConfig$1,conv2DBackpropInputConfig$1,conv3DConfig$1,conv3DBackpropFilterV2Config$1,conv3DBackpropInputV2Config,cosConfig$1,coshConfig$1,cropAndResizeConfig$1,cumprodConfig$1,cumsumConfig$1,denseBincountConfig$1,depthToSpaceConfig$1,depthwiseConv2dNativeConfig$1,depthwiseConv2dNativeBackpropFilterConfig$1,depthwiseConv2dNativeBackpropInputConfig$1,diagConfig$1,dilation2DConfig$1,dilation2DBackpropFilterConfig,dilation2DBackpropInputConfig,drawConfig,einsumConfig$1,eluConfig$1,eluGradConfig$1,equalConfig$1,erfConfig$1,expConfig$1,expandDimsConfig$1,expm1Config$1,fftConfig$1,fillConfig$1,flipLeftRightConfig$1,floorConfig$1,floorDivConfig$1,fusedConv2DConfig$1,fusedDepthwiseConv2DConfig$1,gatherNdConfig$1,gatherV2Config$1,greaterConfig$1,greaterEqualConfig$1,identityConfig$1,ifftConfig$1,imagConfig$1,isFiniteConfig$1,isInfConfig$1,isNaNConfig$1,leakyReluConfig$1,lessConfig$1,lessEqualConfig$1,linSpaceConfig$1,logConfig$1,log1pConfig$1,logicalAndConfig$1,logicalNotConfig$1,logicalOrConfig$1,LRNConfig$1,LRNGradConfig$1,maxConfig$1,maximumConfig$1,maxPoolConfig$1,maxPool3DConfig$1,maxPool3DGradConfig$1,maxPoolGradConfig$1,maxPoolWithArgmaxConfig$1,meanConfig$1,minConfig$1,minimumConfig$1,mirrorPadConfig$1,modConfig$1,multinomialConfig$1,multiplyConfig$1,negConfig$1,nonMaxSuppressionV3Config$1,nonMaxSuppressionV4Config$1,nonMaxSuppressionV5Config$1,notEqualConfig$1,oneHotConfig$1,onesLikeConfig$1,packConfig$1,padV2Config$1,powConfig$1,preluConfig$1,prodConfig$1,raggedGatherConfig$1,raggedRangeConfig$1,raggedTensorToTensorConfig$1,rangeConfig$1,realConfig$1,realDivConfig$1,reciprocalConfig$1,reluConfig$1,relu6Config$1,reshapeConfig$1,resizeBilinearConfig$1,resizeBilinearGradConfig$1,resizeNearestNeighborConfig$1,resizeNearestNeighborGradConfig$1,reverseConfig$1,rotateWithOffsetConfig$1,roundConfig$1,rsqrtConfig$1,scatterNdConfig$1,searchSortedConfig$1,selectConfig$1,seluConfig$1,sigmoidConfig$1,signConfig$1,sinConfig$1,sinhConfig$1,sliceConfig$1,softmaxConfig$1,softplusConfig$1,spaceToBatchNDConfig$1,sparseFillEmptyRowsConfig$1,sparseReshapeConfig$1,sparseSegmentMeanConfig$1,sparseSegmentSumConfig$1,sparseToDenseConfig$1,splitVConfig$1,sqrtConfig$1,squareConfig$1,squaredDifferenceConfig$1,staticRegexReplaceConfig$1,stepConfig$1,stridedSliceConfig$1,stringNGramsConfig$1,stringSplitConfig$1,stringToHashBucketFastConfig$1,subConfig$1,sumConfig$1,tanConfig$1,tanhConfig$1,tensorScatterUpdateConfig$1,tileConfig$1,topKConfig$1,transformConfig$1,transposeConfig$1,uniqueConfig$1,unpackConfig$1,unsortedSegmentSumConfig$1,zerosLikeConfig$1];for(const i of kernelConfigs$1)registerKernel(i);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const contexts={},WEBGL_ATTRIBUTES={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function setWebGLContext(i,s){contexts[i]=s}function getWebGLContext(i,s){if(!(i in contexts)||s!=null){const a=getWebGLRenderingContext(i,s);if(a!==null)contexts[i]=a;else return console.log("Could not get context for WebGL version",i),null}const o=contexts[i];return o==null||o.isContextLost()?(delete contexts[i],getWebGLContext(i)):(o.disable(o.DEPTH_TEST),o.disable(o.STENCIL_TEST),o.disable(o.BLEND),o.disable(o.DITHER),o.disable(o.POLYGON_OFFSET_FILL),o.disable(o.SAMPLE_COVERAGE),o.enable(o.SCISSOR_TEST),o.enable(o.CULL_FACE),o.cullFace(o.BACK),contexts[i])}function createCanvas(i){if(!env().getBool("IS_SAFARI")&&typeof OffscreenCanvas<"u"&&i===2)return new OffscreenCanvas(300,150);if(typeof document<"u")return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}function getWebGLRenderingContext(i,s){if(i!==1&&i!==2)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");const o=s??createCanvas(i);return o.addEventListener("webglcontextlost",a=>{a.preventDefault(),delete contexts[i]},!1),env().getBool("SOFTWARE_WEBGL_ENABLED")&&(WEBGL_ATTRIBUTES.failIfMajorPerformanceCaveat=!1),i===1?o.getContext("webgl",WEBGL_ATTRIBUTES)||o.getContext("experimental-webgl",WEBGL_ATTRIBUTES):o.getContext("webgl2",WEBGL_ATTRIBUTES)}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var PackingScheme;(function(i){i[i.DENSE=0]="DENSE",i[i.SHARED_BATCH=1]="SHARED_BATCH"})(PackingScheme||(PackingScheme={}));var TextureUsage;(function(i){i[i.RENDER=0]="RENDER",i[i.UPLOAD=1]="UPLOAD",i[i.PIXELS=2]="PIXELS",i[i.DOWNLOAD=3]="DOWNLOAD"})(TextureUsage||(TextureUsage={}));var PhysicalTextureType;(function(i){i[i.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",i[i.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",i[i.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",i[i.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",i[i.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"})(PhysicalTextureType||(PhysicalTextureType={}));function getUnpackedMatrixTextureShapeWidthHeight(i,s){return[s,i]}function getUnpackedArraySizeFromMatrixSize(i,s){return i*s}function getDenseTexShape(i){const s=sizeFromShape(i),o=Math.ceil(s/4);return sizeToSquarishShape(o)}function getPackedMatrixTextureShapeWidthHeight(i,s){return[Math.max(1,Math.ceil(s/2)),Math.max(1,Math.ceil(i/2))]}function getPackedRGBAArraySizeFromMatrixShape(i,s){const[o,a]=getPackedMatrixTextureShapeWidthHeight(i,s);return o*a*4}function getTextureConfig(i,s){const o=i;let a,c,d,g,$,j,_e,et,_,b;return env().getNumber("WEBGL_VERSION")===2?(a=o.R32F,c=o.R16F,d=o.RGBA16F,g=o.RGBA32F,$=o.RED,_e=4,et=1,_=o.HALF_FLOAT,b=o.FLOAT,j=o.RGBA8):(a=i.RGBA,c=i.RGBA,d=i.RGBA,g=o.RGBA,$=i.RGBA,_e=4,et=4,_=s!=null?s.HALF_FLOAT_OES:null,b=i.FLOAT,j=i.RGBA),{internalFormatFloat:a,internalFormatHalfFloat:c,internalFormatPackedHalfFloat:d,internalFormatPackedFloat:g,textureFormatFloat:$,downloadTextureFormat:j,downloadUnpackNumChannels:_e,defaultNumChannels:et,textureTypeHalfFloat:_,textureTypeFloat:b}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function callAndCheck(i,s){const o=s();return env().getBool("DEBUG")&&checkWebGLError(i),o}function checkWebGLError(i){const s=i.getError();if(s!==i.NO_ERROR)throw new Error("WebGL Error: "+getWebGLErrorMessage(i,s))}const MIN_FLOAT16=596e-10,MAX_FLOAT16=65504;function canBeRepresented(i){return!!(env().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||i===0||MIN_FLOAT16<Math.abs(i)&&Math.abs(i)<MAX_FLOAT16)}function getWebGLErrorMessage(i,s){switch(s){case i.NO_ERROR:return"NO_ERROR";case i.INVALID_ENUM:return"INVALID_ENUM";case i.INVALID_VALUE:return"INVALID_VALUE";case i.INVALID_OPERATION:return"INVALID_OPERATION";case i.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case i.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case i.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${s}`}}function getExtensionOrThrow(i,s){return throwIfNull(i,()=>i.getExtension(s),'Extension "'+s+'" not supported on this browser.')}function createVertexShader$1(i,s){const o=throwIfNull(i,()=>i.createShader(i.VERTEX_SHADER),"Unable to create vertex WebGLShader.");if(callAndCheck(i,()=>i.shaderSource(o,s)),callAndCheck(i,()=>i.compileShader(o)),i.getShaderParameter(o,i.COMPILE_STATUS)===!1)throw console.log(i.getShaderInfoLog(o)),new Error("Failed to compile vertex shader.");return o}function createFragmentShader(i,s){const o=throwIfNull(i,()=>i.createShader(i.FRAGMENT_SHADER),"Unable to create fragment WebGLShader.");if(callAndCheck(i,()=>i.shaderSource(o,s)),callAndCheck(i,()=>i.compileShader(o)),env().get("ENGINE_COMPILE_ONLY"))return o;if(i.getShaderParameter(o,i.COMPILE_STATUS)===!1)throw logShaderSourceAndInfoLog(s,i.getShaderInfoLog(o)),new Error("Failed to compile fragment shader.");return o}const lineNumberRegex=/ERROR: [0-9]+:([0-9]+):/g;function logShaderSourceAndInfoLog(i,s){const o=lineNumberRegex.exec(s);if(o==null){console.log(`Couldn't parse line number in error: ${s}`),console.log(i);return}const a=+o[1],c=i.split(`
`),d=c.length.toString().length+2,g=c.map((_,b)=>rightPad((b+1).toString(),d)+_);let $=0;for(let _=0;_<g.length;_++)$=Math.max(g[_].length,$);const j=g.slice(0,a-1),_e=g.slice(a-1,a),et=g.slice(a);console.log(j.join(`
`)),console.log(s.split(`
`)[0]),console.log(`%c ${rightPad(_e[0],$)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(et.join(`
`))}function createProgram(i){return throwIfNull(i,()=>i.createProgram(),"Unable to create WebGLProgram.")}function linkProgram(i,s){if(callAndCheck(i,()=>i.linkProgram(s)),!env().get("ENGINE_COMPILE_ONLY")&&i.getProgramParameter(s,i.LINK_STATUS)===!1)throw console.log(i.getProgramInfoLog(s)),new Error("Failed to link vertex and fragment shaders.")}function validateProgram(i,s){if(callAndCheck(i,()=>i.validateProgram(s)),i.getProgramParameter(s,i.VALIDATE_STATUS)===!1)throw console.log(i.getProgramInfoLog(s)),new Error("Shader program validation failed.")}function createStaticVertexBuffer(i,s){const o=throwIfNull(i,()=>i.createBuffer(),"Unable to create WebGLBuffer");return callAndCheck(i,()=>i.bindBuffer(i.ARRAY_BUFFER,o)),callAndCheck(i,()=>i.bufferData(i.ARRAY_BUFFER,s,i.STATIC_DRAW)),o}function createStaticIndexBuffer(i,s){const o=throwIfNull(i,()=>i.createBuffer(),"Unable to create WebGLBuffer");return callAndCheck(i,()=>i.bindBuffer(i.ELEMENT_ARRAY_BUFFER,o)),callAndCheck(i,()=>i.bufferData(i.ELEMENT_ARRAY_BUFFER,s,i.STATIC_DRAW)),o}function createTexture(i){return throwIfNull(i,()=>i.createTexture(),"Unable to create WebGLTexture.")}function validateTextureSize(i,s){const o=env().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(i<=0||s<=0){const a=`[${i}x${s}]`;throw new Error("Requested texture size "+a+" is invalid.")}if(i>o||s>o){const a=`[${i}x${s}]`,c=`[${o}x${o}]`;throw new Error("Requested texture size "+a+" greater than WebGL maximum on this browser / GPU "+c+".")}}function createFramebuffer(i){return throwIfNull(i,()=>i.createFramebuffer(),"Unable to create WebGLFramebuffer.")}function bindVertexBufferToProgramAttribute(i,s,o,a,c,d,g){const $=i.getAttribLocation(s,o);return $===-1?!1:(callAndCheck(i,()=>i.bindBuffer(i.ARRAY_BUFFER,a)),callAndCheck(i,()=>i.vertexAttribPointer($,c,i.FLOAT,!1,d,g)),callAndCheck(i,()=>i.enableVertexAttribArray($)),!0)}function bindTextureUnit(i,s,o){validateTextureUnit(i,o),callAndCheck(i,()=>i.activeTexture(i.TEXTURE0+o)),callAndCheck(i,()=>i.bindTexture(i.TEXTURE_2D,s))}function getProgramUniformLocationOrThrow(i,s,o){return throwIfNull(i,()=>i.getUniformLocation(s,o),'uniform "'+o+'" not present in program.')}function getProgramUniformLocation(i,s,o){return i.getUniformLocation(s,o)}function bindTextureToProgramUniformSampler(i,s,o,a){callAndCheck(i,()=>bindTextureUnit(i,s,a)),callAndCheck(i,()=>i.uniform1i(o,a))}function bindColorTextureToFramebuffer(i,s,o){callAndCheck(i,()=>i.bindFramebuffer(i.FRAMEBUFFER,o)),callAndCheck(i,()=>i.framebufferTexture2D(i.FRAMEBUFFER,i.COLOR_ATTACHMENT0,i.TEXTURE_2D,s,0))}function unbindColorTextureFromFramebuffer(i,s){callAndCheck(i,()=>i.bindFramebuffer(i.FRAMEBUFFER,s)),callAndCheck(i,()=>i.framebufferTexture2D(i.FRAMEBUFFER,i.COLOR_ATTACHMENT0,i.TEXTURE_2D,null,0))}function validateFramebuffer(i){const s=i.checkFramebufferStatus(i.FRAMEBUFFER);if(s!==i.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+getFramebufferErrorMessage(i,s))}function getFramebufferErrorMessage(i,s){switch(s){case i.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case i.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case i.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case i.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${s}`}}function throwIfNull(i,s,o){const a=callAndCheck(i,()=>s());if(a==null)throw new Error(o);return a}function validateTextureUnit(i,s){const o=i.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,a=s+i.TEXTURE0;if(a<i.TEXTURE0||a>o){const c=`[gl.TEXTURE0, gl.TEXTURE${o}]`;throw new Error(`textureUnit must be in ${c}.`)}}function getBatchDim(i,s=2){return sizeFromShape(i.slice(0,i.length-s))}function getRowsCols(i){if(i.length===0)throw Error("Cannot get rows and columns of an empty shape array.");return[i.length>1?i[i.length-2]:1,i[i.length-1]]}function getShapeAs3D(i){let s=[1,1,1];return i.length===0||i.length===1&&i[0]===1||(s=[getBatchDim(i),...getRowsCols(i)]),s}function getTextureShapeFromLogicalShape(i,s=!1){let o=env().getNumber("WEBGL_MAX_TEXTURE_SIZE"),a=env().getNumber("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE");a===1/0&&env().getBool("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE")&&(a=o/2),s&&(o=o*2,a=a*2,i=i.map(($,j)=>j>=i.length-2?nearestLargerEven(i[j]):i[j]),i.length===1&&(i=[2,i[0]])),i.length!==2&&(i=squeezeShape(i).newShape);let c=sizeFromShape(i),d=null;i.length<=1&&c<=o?d=[1,c]:i.length===2&&i[0]<=o&&i[1]<=o?d=i:i.length===3&&i[0]*i[1]<=o&&i[2]<=o?d=[i[0]*i[1],i[2]]:i.length===3&&i[0]<=o&&i[1]*i[2]<=o?d=[i[0],i[1]*i[2]]:i.length===4&&i[0]*i[1]*i[2]<=o&&i[3]<=o?d=[i[0]*i[1]*i[2],i[3]]:i.length===4&&i[0]<=o&&i[1]*i[2]*i[3]<=o&&(d=[i[0],i[1]*i[2]*i[3]]);const g=d!=null&&Math.max(...d)>a&&Math.min(...d)<=(s?2:1)&&Math.min(...d)>0;if(d==null||g)if(s){const $=getBatchDim(i);let j=2,_e=2;i.length&&([j,_e]=getRowsCols(i)),c=$*(j/2)*(_e/2),d=sizeToSquarishShape(c).map(et=>et*2)}else d=sizeToSquarishShape(c);return d}function isEven(i){return i%2===0}function isReshapeFree(i,s){if(i=i.slice(-2),s=s.slice(-2),arraysEqual(i,s)||!i.length||!s.length||i[0]===0||i[1]===0||s[0]===0||s[1]===0)return!0;if(i.length!==s.length){const o=i[i.length-1],a=s[s.length-1];if(o===a||isEven(o)&&isEven(a)&&(i[0]===1||s[0]===1))return!0}return i[1]===s[1]&&isEven(i[0])&&isEven(s[0])}let MAX_TEXTURE_SIZE,MAX_TEXTURES_IN_SHADER;function getWebGLMaxTextureSize(i){if(MAX_TEXTURE_SIZE==null){const s=getWebGLContext(i);MAX_TEXTURE_SIZE=s.getParameter(s.MAX_TEXTURE_SIZE)}return MAX_TEXTURE_SIZE}function getMaxTexturesInShader(i){if(MAX_TEXTURES_IN_SHADER==null){const s=getWebGLContext(i);MAX_TEXTURES_IN_SHADER=s.getParameter(s.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,MAX_TEXTURES_IN_SHADER)}function getWebGLDisjointQueryTimerVersion(i){if(i===0)return 0;let s;const o=getWebGLContext(i);return hasExtension(o,"EXT_disjoint_timer_query_webgl2")&&i===2?s=2:hasExtension(o,"EXT_disjoint_timer_query")?s=1:s=0,s}function hasExtension(i,s){return i.getExtension(s)!=null}function isWebGLVersionEnabled(i){try{if(getWebGLContext(i)!=null)return!0}catch(s){return console.log("Error when getting WebGL context: ",s),!1}return!1}function isCapableOfRenderingToFloatTexture(i){if(i===0)return!1;const s=getWebGLContext(i);if(i===1){if(!hasExtension(s,"OES_texture_float"))return!1}else if(!hasExtension(s,"EXT_color_buffer_float"))return!1;return createFloatTextureAndBindToFramebuffer(s)}function isDownloadFloatTextureEnabled(i){if(i===0)return!1;const s=getWebGLContext(i);if(i===1){if(!hasExtension(s,"OES_texture_float")||!hasExtension(s,"WEBGL_color_buffer_float"))return!1}else{if(hasExtension(s,"EXT_color_buffer_float"))return createFloatTextureAndBindToFramebuffer(s);const a="EXT_color_buffer_half_float";if(hasExtension(s,a)){const c=s.getExtension(a);return createHalfFloatTextureAndBindToFramebuffer(s,c)}return!1}return createFloatTextureAndBindToFramebuffer(s)}function createFloatTextureAndBindToFramebuffer(i){const s=getTextureConfig(i),o=i.createTexture();i.bindTexture(i.TEXTURE_2D,o),i.texImage2D(i.TEXTURE_2D,0,s.internalFormatFloat,1,1,0,s.textureFormatFloat,s.textureTypeFloat,null);const d=i.createFramebuffer();i.bindFramebuffer(i.FRAMEBUFFER,d),i.framebufferTexture2D(i.FRAMEBUFFER,i.COLOR_ATTACHMENT0,i.TEXTURE_2D,o,0);const g=i.checkFramebufferStatus(i.FRAMEBUFFER)===i.FRAMEBUFFER_COMPLETE;return i.bindTexture(i.TEXTURE_2D,null),i.bindFramebuffer(i.FRAMEBUFFER,null),i.deleteTexture(o),i.deleteFramebuffer(d),g}function createHalfFloatTextureAndBindToFramebuffer(i,s){const o=getTextureConfig(i,s),a=i.createTexture();i.bindTexture(i.TEXTURE_2D,a),i.texImage2D(i.TEXTURE_2D,0,o.internalFormatHalfFloat,1,1,0,o.textureFormatFloat,o.textureTypeHalfFloat,null);const g=i.createFramebuffer();i.bindFramebuffer(i.FRAMEBUFFER,g),i.framebufferTexture2D(i.FRAMEBUFFER,i.COLOR_ATTACHMENT0,i.TEXTURE_2D,a,0);const $=i.checkFramebufferStatus(i.FRAMEBUFFER)===i.FRAMEBUFFER_COMPLETE;return i.bindTexture(i.TEXTURE_2D,null),i.bindFramebuffer(i.FRAMEBUFFER,null),i.deleteTexture(a),i.deleteFramebuffer(g),$}function isWebGLFenceEnabled(i){return i!==2?!1:getWebGLContext(i).fenceSync!=null}function assertNotComplex(i,s){Array.isArray(i)||(i=[i]),i.forEach(o=>{o!=null&&assert$1(o.dtype!=="complex64",()=>`${s} does not support complex64 tensors in the WebGL backend.`)})}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ENV=env();ENV.registerFlag("HAS_WEBGL",()=>ENV.getNumber("WEBGL_VERSION")>0);ENV.registerFlag("WEBGL_VERSION",()=>isWebGLVersionEnabled(2)?2:isWebGLVersionEnabled(1)?1:0);ENV.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",()=>!1);ENV.registerFlag("WEBGL_BUFFER_SUPPORTED",()=>ENV.get("WEBGL_VERSION")===2);ENV.registerFlag("WEBGL_CPU_FORWARD",()=>!0);ENV.registerFlag("WEBGL_FORCE_F16_TEXTURES",()=>!1);ENV.registerFlag("WEBGL_PACK",()=>ENV.getBool("HAS_WEBGL"));ENV.registerFlag("WEBGL_PACK_NORMALIZATION",()=>ENV.getBool("WEBGL_PACK"));ENV.registerFlag("WEBGL_PACK_CLIP",()=>ENV.getBool("WEBGL_PACK"));ENV.registerFlag("WEBGL_PACK_DEPTHWISECONV",()=>ENV.getBool("WEBGL_PACK"));ENV.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",()=>ENV.getBool("WEBGL_PACK"));ENV.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",()=>ENV.getBool("WEBGL_PACK"));ENV.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",()=>ENV.getBool("WEBGL_PACK"));ENV.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",()=>ENV.getBool("WEBGL_PACK"));ENV.registerFlag("WEBGL_PACK_REDUCE",()=>ENV.getBool("WEBGL_PACK"));ENV.registerFlag("WEBGL_LAZILY_UNPACK",()=>ENV.getBool("WEBGL_PACK"));ENV.registerFlag("WEBGL_CONV_IM2COL",()=>ENV.getBool("WEBGL_PACK"));ENV.registerFlag("WEBGL_PACK_CONV2DTRANSPOSE",()=>ENV.getBool("WEBGL_PACK"));ENV.registerFlag("WEBGL_MAX_TEXTURE_SIZE",()=>getWebGLMaxTextureSize(ENV.getNumber("WEBGL_VERSION")));ENV.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",()=>getMaxTexturesInShader(ENV.getNumber("WEBGL_VERSION")));ENV.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",()=>{const i=ENV.getNumber("WEBGL_VERSION");return i===0?0:getWebGLDisjointQueryTimerVersion(i)});ENV.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",()=>ENV.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!isMobile());ENV.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",()=>isCapableOfRenderingToFloatTexture(ENV.getNumber("WEBGL_VERSION")));ENV.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",()=>ENV.getBool("WEBGL_FORCE_F16_TEXTURES")?!1:ENV.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"));ENV.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",()=>isDownloadFloatTextureEnabled(ENV.getNumber("WEBGL_VERSION")));ENV.registerFlag("WEBGL_FENCE_API_ENABLED",()=>isWebGLFenceEnabled(ENV.getNumber("WEBGL_VERSION")));ENV.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",()=>ENV.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0);ENV.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",()=>-1,i=>{if(typeof i!="number")throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be a number but got ${i}.`);if(i<0&&i!==-1)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${i}.`)});ENV.registerFlag("WEBGL_FLUSH_THRESHOLD",()=>isMobile()?1:-1,i=>{if(typeof i!="number")throw new Error(`WEBGL_FLUSH_THRESHOLD must be a number but got ${i}.`);if(i<0&&i!==-1)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${i}.`)});ENV.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",()=>128);ENV.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",()=>!1);ENV.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",()=>1e5);ENV.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",()=>128);ENV.registerFlag("WEBGL_EXP_CONV",()=>!1);ENV.registerFlag("SOFTWARE_WEBGL_ENABLED",()=>ENV.getBool("IS_TEST"));ENV.registerFlag("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE",()=>1/0);ENV.registerFlag("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE",()=>!1);ENV.registerFlag("WEBGL2_ISNAN_CUSTOM",()=>!1);ENV.registerFlag("ENGINE_COMPILE_ONLY",()=>!1);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function getGlslDifferences(){let i,s,o,a,c,d,g,$,j,_e;return env().getNumber("WEBGL_VERSION")===2?(i="#version 300 es",s="in",o="out",a="in",c="texture",d="outputColor",g="out vec4 outputColor;",$=env().getBool("WEBGL2_ISNAN_CUSTOM")?`
      bool isnan_custom(float val) {
        uint floatToUint = floatBitsToUint(val);
        return (floatToUint & 0x7fffffffu) > 0x7f800000u;
      }

      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan_custom(val.x),
          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));
      }

      #define isnan(value) isnan_custom(value)
    `:"",j="",_e=`
      #define round(value) newRound(value)
      int newRound(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 newRound(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `):(i="",s="attribute",o="varying",a="varying",c="texture2D",d="gl_FragColor",g="",$=`
      #define isnan(value) isnan_custom(value)
      bool isnan_custom(float val) {
        return (val > 0. || val < 1. || val == 0.) ? false : true;
      }
      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));
      }
    `,j=`
      uniform float INFINITY;

      bool isinf(float val) {
        return abs(val) == INFINITY;
      }
      bvec4 isinf(vec4 val) {
        return equal(abs(val), vec4(INFINITY));
      }
    `,_e=`
      int round(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 round(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `),{version:i,attribute:s,varyingVs:o,varyingFs:a,texture2D:c,output:d,defineOutput:g,defineSpecialNaN:$,defineSpecialInf:j,defineRound:_e}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function getLogicalCoordinatesFromFlatIndex(i,s,o="index"){const a=computeStrides(s);return a.map((c,d)=>{const g=`int ${i[d]} = ${o} / ${c}`,$=d===a.length-1?`int ${i[d+1]} = ${o} - ${i[d]} * ${c}`:`index -= ${i[d]} * ${c}`;return`${g}; ${$};`}).join("")}function getOutputLogicalCoordinatesFromFlatIndexByUniform(i,s,o="index"){const a=computeStrides(s);return a.map((c,d)=>{const g=`int ${i[d]} = ${o} / outShapeStrides[${d}]`,$=d===a.length-1?`int ${i[d+1]} = ${o} - ${i[d]} * outShapeStrides[${d}]`:`index -= ${i[d]} * outShapeStrides[${d}]`;return`${g}; ${$};`}).join("")}function symbolicallyComputeStrides(i,s){const o=i.length,a=i.map(d=>`${s}[${d}]`),c=new Array(o-1);c[o-2]=a[o-1];for(let d=o-3;d>=0;--d)c[d]=`(${c[d+1]} * ${a[d+1]})`;return c}function getLogicalCoordinatesFromFlatIndexByUniform(i,s,o="index"){const a=i.map((d,g)=>g),c=symbolicallyComputeStrides(a,s);return c.map((d,g)=>{const $=`int ${i[g]} = ${o} / ${c[g]}`,j=g===c.length-1?`int ${i[g+1]} = ${o} - ${i[g]} * ${c[g]}`:`index -= ${i[g]} * ${c[g]}`;return`${$}; ${j};`}).join("")}function getFlatIndexFrom3D(i){const s=computeStrides(i).map(o=>o.toString());return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * ${s[0]} + coords.y * ${s[1]} + coords.z;
  }
`}function getFlatIndexFrom3DOutput(){return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;
  }
`}const ENCODE_FLOAT_SNIPPET=`
  const float FLOAT_MAX = 1.70141184e38;
  const float FLOAT_MIN = 1.17549435e-38;

  lowp vec4 encode_float(highp float v) {
    if (isnan(v)) {
      return vec4(255, 255, 255, 255);
    }

    highp float av = abs(v);

    if(av < FLOAT_MIN) {
      return vec4(0.0, 0.0, 0.0, 0.0);
    } else if(v > FLOAT_MAX) {
      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;
    } else if(v < -FLOAT_MAX) {
      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;
    }

    highp vec4 c = vec4(0,0,0,0);

    highp float e = floor(log2(av));
    highp float m = exp2(fract(log2(av))) - 1.0;

    c[2] = floor(128.0 * m);
    m -= c[2] / 128.0;
    c[1] = floor(32768.0 * m);
    m -= c[1] / 32768.0;
    c[0] = floor(8388608.0 * m);

    highp float ebias = e + 127.0;
    c[3] = floor(ebias / 2.0);
    ebias -= c[3] * 2.0;
    c[2] += floor(ebias) * 128.0;

    c[3] += 128.0 * step(0.0, -v);

    return c / 255.0;
  }
`;/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const{getBroadcastDims}=backend_util;function makeShader(i,s,o){const a=[];if(i.forEach(tt=>{const nt=sizeFromShape(tt.shapeInfo.logicalShape);if(tt.shapeInfo.isUniform?a.push(`uniform float ${tt.name}${nt>1?`[${nt}]`:""};`):(a.push(`uniform sampler2D ${tt.name};`),a.push(`uniform int offset${tt.name};`)),o.enableShapeUniforms){const{uniformShape:rt}=getUniformInfoFromShape(o.packedInputs,tt.shapeInfo.logicalShape,tt.shapeInfo.texShape);switch(rt.length){case 1:a.push(`uniform int ${tt.name}Shape;`);break;case 2:a.push(`uniform ivec2 ${tt.name}Shape;`);break;case 3:a.push(`uniform ivec3 ${tt.name}Shape;`);break;case 4:a.push(`uniform ivec4 ${tt.name}Shape;`);break}a.push(`uniform ivec2 ${tt.name}TexShape;`)}}),o.enableShapeUniforms){switch(s.logicalShape.length){case 1:a.push("uniform int outShape;");break;case 2:a.push("uniform ivec2 outShape;"),a.push("uniform int outShapeStrides;");break;case 3:a.push("uniform ivec3 outShape;"),a.push("uniform ivec2 outShapeStrides;");break;case 4:a.push("uniform ivec4 outShape;"),a.push("uniform ivec3 outShapeStrides;");break}a.push("uniform ivec2 outTexShape;")}o.customUniforms&&o.customUniforms.forEach(tt=>{a.push(`uniform ${tt.type} ${tt.name}${tt.arrayIndex?`[${tt.arrayIndex}]`:""};`)});const c=a.join(`
`),d=i.map(tt=>getInputSamplingSnippet(tt,s,o.packedInputs,o.enableShapeUniforms)).join(`
`),g=s.texShape,$=getGlslDifferences(),j=getFloatTextureSampleSnippet($);let _e,et,_=getShaderPrefix($);return s.isPacked?(_e=getPackedOutputSamplingSnippet(s.logicalShape,g,o.enableShapeUniforms),et=getFloatTextureSetRGBASnippet($)):(_e=getOutputSamplingSnippet(s.logicalShape,g,o.enableShapeUniforms),et=getFloatTextureSetRSnippet($)),o.packedInputs&&(_+=SHADER_PACKED_PREFIX),[_,j,et,c,_e,d,o.userCode].join(`
`)}function getSamplerFromInInfo(i,s=!1){const o=i.shapeInfo.logicalShape;switch(o.length){case 0:return getSamplerScalar(i,s);case 1:return getSampler1D(i,s);case 2:return getSampler2D(i,s);case 3:return getSampler3D(i,s);case 4:return getSampler4D(i,s);case 5:return getSampler5D(i);case 6:return getSampler6D(i);default:throw new Error(`${o.length}-D input sampling is not yet supported`)}}function getPackedSamplerFromInInfo(i,s){switch(i.shapeInfo.logicalShape.length){case 0:return getPackedSamplerScalar(i);case 1:return getPackedSampler1D(i,s);case 2:return getPackedSampler2D(i,s);case 3:return getPackedSampler3D(i,s);default:return getPackedSamplerND(i,s)}}function getInputSamplingSnippet(i,s,o=!1,a){let c="";o?c+=getPackedSamplerFromInInfo(i,a):c+=getSamplerFromInInfo(i,a);const d=i.shapeInfo.logicalShape,g=s.logicalShape;return d.length<=g.length&&(o?c+=getPackedSamplerAtOutputCoords(i,s):c+=getSamplerAtOutputCoords(i,s)),c}function getPackedOutputSamplingSnippet(i,s,o){switch(i.length){case 0:return getOutputScalarCoords();case 1:return getOutputPacked1DCoords(i,s,o);case 2:return getOutputPacked2DCoords(i,s,o);case 3:return getOutputPacked3DCoords(i,s,o);default:return getOutputPackedNDCoords(i,s,o)}}function getOutputSamplingSnippet(i,s,o){switch(i.length){case 0:return getOutputScalarCoords();case 1:return getOutput1DCoords(i,s,o);case 2:return getOutput2DCoords(i,s,o);case 3:return getOutput3DCoords(i,s,o);case 4:return getOutput4DCoords(i,s,o);case 5:return getOutput5DCoords(i,s);case 6:return getOutput6DCoords(i,s);default:throw new Error(`${i.length}-D output sampling is not yet supported`)}}function getFloatTextureSampleSnippet(i){return`
    float sampleTexture(sampler2D textureSampler, vec2 uv) {
      return ${i.texture2D}(textureSampler, uv).r;
    }
  `}function getFloatTextureSetRSnippet(i){return`
    void setOutput(float val) {
      ${i.output} = vec4(val, 0, 0, 0);
    }
  `}function getFloatTextureSetRGBASnippet(i){return`
    void setOutput(vec4 val) {
      ${i.output} = val;
    }
  `}function getShaderPrefix(i){return`${i.version}
    precision highp float;
    precision highp int;
    precision highp sampler2D;
    ${i.varyingFs} vec2 resultUV;
    ${i.defineOutput}
    const vec2 halfCR = vec2(0.5, 0.5);

    struct ivec5
    {
      int x;
      int y;
      int z;
      int w;
      int u;
    };

    struct ivec6
    {
      int x;
      int y;
      int z;
      int w;
      int u;
      int v;
    };

    uniform float NAN;
    ${i.defineSpecialNaN}
    ${i.defineSpecialInf}
    ${i.defineRound}

    int imod(int x, int y) {
      return x - y * (x / y);
    }

    int idiv(int a, int b, float sign) {
      int res = a / b;
      int mod = imod(a, b);
      if (sign < 0. && mod != 0) {
        res -= 1;
      }
      return res;
    }

    //Based on the work of Dave Hoskins
    //https://www.shadertoy.com/view/4djSRW
    #define HASHSCALE1 443.8975
    float random(float seed){
      vec2 p = resultUV * seed;
      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);
      p3 += dot(p3, p3.yzx + 19.19);
      return fract((p3.x + p3.y) * p3.z);
    }

    ${SAMPLE_1D_SNIPPET}
    ${SAMPLE_2D_SNIPPET}
    ${SAMPLE_3D_SNIPPET}
  `}const SAMPLE_1D_SNIPPET=`
vec2 uvFromFlat(int texNumR, int texNumC, int index) {
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
vec2 packedUVfrom1D(int texNumR, int texNumC, int index) {
  int texelIndex = index / 2;
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,SAMPLE_2D_SNIPPET=`
vec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,
  int texNumC, int row, int col) {
  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,SAMPLE_3D_SNIPPET=`
vec2 packedUVfrom3D(int texNumR, int texNumC,
    int texelsInBatch, int texelsInLogicalRow, int b,
    int row, int col) {
  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,SHADER_PACKED_PREFIX=`
  float getChannel(vec4 frag, vec2 innerDims) {
    vec2 modCoord = mod(innerDims, 2.);
    return modCoord.x == 0. ?
      (modCoord.y == 0. ? frag.r : frag.g) :
      (modCoord.y == 0. ? frag.b : frag.a);
  }
  float getChannel(vec4 frag, int dim) {
    float modCoord = mod(float(dim), 2.);
    return modCoord == 0. ? frag.r : frag.g;
  }
`;function getOutputScalarCoords(){return`
    int getOutputCoords() {
      return 0;
    }
  `}function getOutputPacked1DCoords(i,s,o){const a=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)];return a[0]===1?o?`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ceil(float(outTexShape[1]) / 2.0));
      }
    `:`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ${a[1]}.0);
      }
    `:a[1]===1?o?`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ceil(float(outTexShape[0]) / 2.0));
      }
    `:`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ${a[0]}.0);
      }
    `:o?`
    int getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      return 2 * (resTexRC.x * packedTexShape[1] + resTexRC.y);
    }
  `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${a[0]}, ${a[1]}));
      return 2 * (resTexRC.x * ${a[1]} + resTexRC.y);
    }
  `}function getOutput1DCoords(i,s,o){return s[0]===1?o?`
      int getOutputCoords() {
        return int(resultUV.x * float(outTexShape[1]));
      }
    `:`
      int getOutputCoords() {
        return int(resultUV.x * ${s[1]}.0);
      }
    `:s[1]===1?o?`
      int getOutputCoords() {
        return int(resultUV.y * float(outTexShape[0]));
      }
    `:`
      int getOutputCoords() {
        return int(resultUV.y * ${s[0]}.0);
      }
    `:o?`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(outTexShape[0], outTexShape[1]));
      return resTexRC.x * outTexShape[1] + resTexRC.y;
    }
  `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${s[0]}, ${s[1]}));
      return resTexRC.x * ${s[1]} + resTexRC.y;
    }
  `}function getOutputPacked3DCoords(i,s,o){if(o)return`
    ivec3 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      int texelsInLogicalRow = int(ceil(float(outShape[2]) / 2.0));
      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;

      int b = index / texelsInBatch;
      index -= b * texelsInBatch;

      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec3(b, r, c);
    }
  `;const a=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)],c=Math.ceil(i[2]/2),d=c*Math.ceil(i[1]/2);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${a[0]}, ${a[1]}));
      int index = resTexRC.x * ${a[1]} + resTexRC.y;

      int b = index / ${d};
      index -= b * ${d};

      int r = 2 * (index / ${c});
      int c = imod(index, ${c}) * 2;

      return ivec3(b, r, c);
    }
  `}function getOutput3DCoords(i,s,o){if(o)return`
  ivec3 getOutputCoords() {
    ivec2 resTexRC = ivec2(resultUV.yx *
                           vec2(outTexShape[0], outTexShape[1]));
    int index = resTexRC.x * outTexShape[1] + resTexRC.y;
    ${getOutputLogicalCoordinatesFromFlatIndexByUniform(["r","c","d"],i)}
    return ivec3(r, c, d);
  }
`;const a=getLogicalCoordinatesFromFlatIndex(["r","c","d"],i);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${s[0]}, ${s[1]}));
      int index = resTexRC.x * ${s[1]} + resTexRC.y;
      ${a}
      return ivec3(r, c, d);
    }
  `}function getOutputPackedNDCoords(i,s,o){if(o)return`
    ivec4 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;

      int texelsInLogicalRow = int(ceil(float(outShape[3]) / 2.0));
      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[2]) / 2.0));
      int texelsInBatchN = texelsInBatch * outShape[1];

      int b2 = index / texelsInBatchN;
      index -= b2 * texelsInBatchN;

      int b = index / texelsInBatch;
      index -= b * texelsInBatch;

      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec4(b2, b, r, c);
    }
  `;const a=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)],c=Math.ceil(i[i.length-1]/2),d=c*Math.ceil(i[i.length-2]/2);let g=d,$="",j="b, r, c";for(let _e=2;_e<i.length-1;_e++)g*=i[i.length-_e-1],$=`
      int b${_e} = index / ${g};
      index -= b${_e} * ${g};
    `+$,j=`b${_e}, `+j;return`
    ivec${i.length} getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${a[0]}, ${a[1]}));
      int index = resTexRC.x * ${a[1]} + resTexRC.y;

      ${$}

      int b = index / ${d};
      index -= b * ${d};

      int r = 2 * (index / ${c});
      int c = imod(index, ${c}) * 2;

      return ivec${i.length}(${j});
    }
  `}function getOutput4DCoords(i,s,o){if(o)return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(outTexShape[0], outTexShape[1]));
      int index = resTexRC.x * outTexShape[1] + resTexRC.y;
      ${getOutputLogicalCoordinatesFromFlatIndexByUniform(["r","c","d","d2"],i)}
      return ivec4(r, c, d, d2);
    }
  `;const a=getLogicalCoordinatesFromFlatIndex(["r","c","d","d2"],i);return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${s[0]}, ${s[1]}));
      int index = resTexRC.x * ${s[1]} + resTexRC.y;
      ${a}
      return ivec4(r, c, d, d2);
    }
  `}function getOutput5DCoords(i,s){const o=getLogicalCoordinatesFromFlatIndex(["r","c","d","d2","d3"],i);return`
    ivec5 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${s[0]},
                             ${s[1]}));

      int index = resTexRC.x * ${s[1]} + resTexRC.y;

      ${o}

      ivec5 outShape = ivec5(r, c, d, d2, d3);
      return outShape;
    }
  `}function getOutput6DCoords(i,s){const o=getLogicalCoordinatesFromFlatIndex(["r","c","d","d2","d3","d4"],i);return`
    ivec6 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${s[0]}, ${s[1]}));
      int index = resTexRC.x * ${s[1]} + resTexRC.y;

      ${o}

      ivec6 result = ivec6(r, c, d, d2, d3, d4);
      return result;
    }
  `}function getOutputPacked2DCoords(i,s,o){const a=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)];if(arraysEqual(i,s))return o?`
      ivec2 getOutputCoords() {
        ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
        return 2 * ivec2(resultUV.yx * vec2(packedTexShape[0], packedTexShape[1]));
      }
    `:`
      ivec2 getOutputCoords() {
        return 2 * ivec2(resultUV.yx * vec2(${a[0]}, ${a[1]}));
      }
    `;const c=Math.ceil(i[1]/2);return o?`
    ivec2 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      int texelsInLogicalRow = int(ceil(float(outShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));

      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;
      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec2(r, c);
    }
  `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${a[0]}, ${a[1]}));

      int index = resTexRC.x * ${a[1]} + resTexRC.y;
      int r = 2 * (index / ${c});
      int c = imod(index, ${c}) * 2;

      return ivec2(r, c);
    }
  `}function getOutput2DCoords(i,s,o){return arraysEqual(i,s)?o?`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(outTexShape[0], outTexShape[1]));
      }
    `:`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(${s[0]}, ${s[1]}));
      }
    `:i[1]===1?o?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(outTexShape[0], outTexShape[1]));
        int index = resTexRC.x * outTexShape[1] + resTexRC.y;
        return ivec2(index, 0);
      }
    `:`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${s[0]}, ${s[1]}));
        int index = resTexRC.x * ${s[1]} + resTexRC.y;
        return ivec2(index, 0);
      }
    `:i[0]===1?o?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(outTexShape[0], outTexShape[1]));
        int index = resTexRC.x * outTexShape[1] + resTexRC.y;
        return ivec2(0, index);
      }
    `:`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${s[0]}, ${s[1]}));
        int index = resTexRC.x * ${s[1]} + resTexRC.y;
        return ivec2(0, index);
      }
    `:o?`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(outTexShape[0], outTexShape[1]));
      int index = resTexRC.x * outTexShape[1] + resTexRC.y;
      int r = index / outShape[1];
      int c = index - r * outShape[1];
      return ivec2(r, c);
    }
  `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${s[0]}, ${s[1]}));
      int index = resTexRC.x * ${s[1]} + resTexRC.y;
      int r = index / ${i[1]};
      int c = index - r * ${i[1]};
      return ivec2(r, c);
    }
  `}function getFlatOffsetUniformName(i){return`offset${i}`}function getPackedSamplerScalar(i){const s=i.name,o="get"+s.charAt(0).toUpperCase()+s.slice(1),a=getGlslDifferences();return`
    vec4 ${o}() {
      return ${a.texture2D}(${s}, halfCR);
    }
  `}function getSamplerScalar(i,s){const o=i.name,a="get"+o.charAt(0).toUpperCase()+o.slice(1);if(i.shapeInfo.isUniform)return`float ${a}() {return ${o};}`;const[c,d]=i.shapeInfo.texShape;if(c===1&&d===1)return`
      float ${a}() {
        return sampleTexture(${o}, halfCR);
      }
    `;const g=getFlatOffsetUniformName(o);if(s)return`
    float ${a}() {
      vec2 uv = uvFromFlat(${o}TexShape[0], ${o}TexShape[1], ${g});
      return sampleTexture(${o}, uv);
    }
  `;const[$,j]=i.shapeInfo.texShape;return`
    float ${a}() {
      vec2 uv = uvFromFlat(${$}, ${j}, ${g});
      return sampleTexture(${o}, uv);
    }
  `}function getPackedSampler1D(i,s){const o=i.name,a="get"+o.charAt(0).toUpperCase()+o.slice(1),c=i.shapeInfo.texShape,d=getGlslDifferences();if(s)return`
    vec4 ${a}(int index) {
      ivec2 packedTexShape = ivec2(ceil(float(${o}TexShape[0]) / 2.0), ceil(float(${o}TexShape[1]) / 2.0));
      vec2 uv = packedUVfrom1D(
        packedTexShape[0], packedTexShape[1], index);
      return ${d.texture2D}(${o}, uv);
    }
  `;const g=[Math.ceil(c[0]/2),Math.ceil(c[1]/2)];return`
    vec4 ${a}(int index) {
      vec2 uv = packedUVfrom1D(
        ${g[0]}, ${g[1]}, index);
      return ${d.texture2D}(${o}, uv);
    }
  `}function getSampler1D(i,s){const o=i.name,a="get"+o.charAt(0).toUpperCase()+o.slice(1);if(i.shapeInfo.isUniform)return`
      float ${a}(int index) {
        ${getUniformSampler(i)}
      }
    `;const c=i.shapeInfo.texShape,d=c[0],g=c[1];if(g===1&&d===1)return`
      float ${a}(int index) {
        return sampleTexture(${o}, halfCR);
      }
    `;const $=getFlatOffsetUniformName(o);return g===1?s?`
      float ${a}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${$}) + 0.5) / float(${o}TexShape[0]));
        return sampleTexture(${o}, uv);
      }
    `:`
      float ${a}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${$}) + 0.5) / ${d}.0);
        return sampleTexture(${o}, uv);
      }
    `:d===1?s?`
      float ${a}(int index) {
        vec2 uv = vec2((float(index + ${$}) + 0.5) / float(${o}TexShape[1]), 0.5);
        return sampleTexture(${o}, uv);
      }
    `:`
      float ${a}(int index) {
        vec2 uv = vec2((float(index + ${$}) + 0.5) / ${g}.0, 0.5);
        return sampleTexture(${o}, uv);
      }
    `:s?`
    float ${a}(int index) {
      vec2 uv = uvFromFlat(${o}TexShape[0], ${o}TexShape[1], index + ${$});
      return sampleTexture(${o}, uv);
    }
  `:`
    float ${a}(int index) {
      vec2 uv = uvFromFlat(${d}, ${g}, index + ${$});
      return sampleTexture(${o}, uv);
    }
  `}function getPackedSampler2D(i,s){const o=i.shapeInfo.logicalShape,a=i.name,c="get"+a.charAt(0).toUpperCase()+a.slice(1),d=i.shapeInfo.texShape,g=d[0],$=d[1],j=getGlslDifferences();if(d!=null&&arraysEqual(o,d))return s?`
      vec4 ${c}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${a}TexShape[1], ${a}TexShape[0]);

        return ${j.texture2D}(${a}, uv);
      }
    `:`
      vec4 ${c}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${$}.0, ${g}.0);

        return ${j.texture2D}(${a}, uv);
      }
    `;if(s)return`
    vec4 ${c}(int row, int col) {
      ivec2 packedTexShape = ivec2(ceil(float(${a}TexShape[0]) / 2.0), ceil(float(${a}TexShape[1]) / 2.0));
      int valuesPerRow = int(ceil(float(${a}Shape[1]) / 2.0));
      vec2 uv = packedUVfrom2D(valuesPerRow, packedTexShape[0], packedTexShape[1], row, col);
      return ${j.texture2D}(${a}, uv);
    }
  `;const _e=[Math.ceil(d[0]/2),Math.ceil(d[1]/2)],et=Math.ceil(o[1]/2);return`
    vec4 ${c}(int row, int col) {
      vec2 uv = packedUVfrom2D(${et}, ${_e[0]}, ${_e[1]}, row, col);
      return ${j.texture2D}(${a}, uv);
    }
  `}function getSampler2D(i,s){const o=i.shapeInfo.logicalShape,a=i.name,c="get"+a.charAt(0).toUpperCase()+a.slice(1),d=i.shapeInfo.texShape;if(d!=null&&arraysEqual(o,d)){if(s)return`
      float ${c}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${a}TexShape[1], ${a}TexShape[0]);
        return sampleTexture(${a}, uv);
      }
    `;const b=d[0],tt=d[1];return`
    float ${c}(int row, int col) {
      vec2 uv = (vec2(col, row) + halfCR) / vec2(${tt}.0, ${b}.0);
      return sampleTexture(${a}, uv);
    }
  `}const{newShape:g,keptDims:$}=squeezeShape(o),j=g;if(j.length<o.length){const b=squeezeInputInfo(i,j),tt=["row","col"];return`
      ${getSamplerFromInInfo(b,s)}
      float ${c}(int row, int col) {
        return ${c}(${getSqueezedParams(tt,$)});
      }
    `}if(i.shapeInfo.isUniform)return`
      float ${c}(int row, int col) {
        int index = round(dot(vec2(row, col), vec2(${o[1]}, 1)));
        ${getUniformSampler(i)}
      }
    `;const _e=d[0],et=d[1],_=getFlatOffsetUniformName(a);return et===1?s?`
      float ${c}(int row, int col) {
        float index = dot(vec3(row, col, ${_}), vec3(${a}Shape[1], 1, 1));
        vec2 uv = vec2(0.5, (index + 0.5) / float(${a}TexShape[0]));
        return sampleTexture(${a}, uv);
      }
    `:`
    float ${c}(int row, int col) {
      float index = dot(vec3(row, col, ${_}), vec3(${o[1]}, 1, 1));
      vec2 uv = vec2(0.5, (index + 0.5) / ${_e}.0);
      return sampleTexture(${a}, uv);
    }
  `:_e===1?s?`
      float ${c}(int row, int col) {
        float index = dot(vec3(row, col, ${_}), vec3(${a}Shape[1], 1, 1));
        vec2 uv = vec2((index + 0.5) / float(${a}TexShape[1]), 0.5);
        return sampleTexture(${a}, uv);
      }
    `:`
    float ${c}(int row, int col) {
      float index = dot(vec3(row, col, ${_}), vec3(${o[1]}, 1, 1));
      vec2 uv = vec2((index + 0.5) / ${et}.0, 0.5);
      return sampleTexture(${a}, uv);
    }
  `:s?`
      float ${c}(int row, int col) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${a}Shape[1] + col + ${_};
        vec2 uv = uvFromFlat(${a}TexShape[0], ${a}TexShape[1], index);
        return sampleTexture(${a}, uv);
      }
    `:`
  float ${c}(int row, int col) {
    // Explicitly use integer operations as dot() only works on floats.
    int index = row * ${o[1]} + col + ${_};
    vec2 uv = uvFromFlat(${_e}, ${et}, index);
    return sampleTexture(${a}, uv);
  }
`}function getPackedSampler3D(i,s){const o=i.shapeInfo.logicalShape,a=i.name,c="get"+a.charAt(0).toUpperCase()+a.slice(1),d=i.shapeInfo.texShape,g=[Math.ceil(d[0]/2),Math.ceil(d[1]/2)];if(o[0]===1){const b=o.slice(1),tt=[1,2],nt=squeezeInputInfo(i,b),rt=["b","row","col"];return`
        ${getPackedSamplerFromInInfo(nt,s)}
        vec4 ${c}(int b, int row, int col) {
          return ${c}(${getSqueezedParams(rt,tt)});
        }
      `}const $=getGlslDifferences();if(s)return`
    vec4 ${c}(int b, int row, int col) {
      ivec2 packedTexShape = ivec2(ceil(float(${a}TexShape[0]) / 2.0), ceil(float(${a}TexShape[1]) / 2.0));
      int valuesPerRow = int(ceil(float(${a}Shape[2]) / 2.0));
      int texelsInBatch = valuesPerRow * int(ceil(float(${a}Shape[1]) / 2.0));
      vec2 uv = packedUVfrom3D(
        packedTexShape[0], packedTexShape[1], texelsInBatch, valuesPerRow, b, row, col);
      return ${$.texture2D}(${a}, uv);
    }
  `;const j=g[0],_e=g[1],et=Math.ceil(o[2]/2),_=et*Math.ceil(o[1]/2);return`
    vec4 ${c}(int b, int row, int col) {
      vec2 uv = packedUVfrom3D(
        ${j}, ${_e}, ${_}, ${et}, b, row, col);
      return ${$.texture2D}(${a}, uv);
    }
  `}function getSampler3D(i,s){const o=i.shapeInfo.logicalShape,a=i.name,c="get"+a.charAt(0).toUpperCase()+a.slice(1),d=o[1]*o[2],g=o[2],{newShape:$,keptDims:j}=squeezeShape(o),_e=$;if(_e.length<o.length){const rt=squeezeInputInfo(i,_e),st=["row","col","depth"];return`
        ${getSamplerFromInInfo(rt,s)}
        float ${c}(int row, int col, int depth) {
          return ${c}(${getSqueezedParams(st,j)});
        }
      `}if(i.shapeInfo.isUniform)return`
      float ${c}(int row, int col, int depth) {
        int index = round(dot(vec3(row, col, depth),
                          vec3(${d}, ${g}, 1)));
        ${getUniformSampler(i)}
      }
    `;const et=i.shapeInfo.texShape,_=et[0],b=et[1],tt=i.shapeInfo.flatOffset;if(b===d&&tt==null)return s?`
      float ${c}(int row, int col, int depth) {
        int stride1 = ${a}Shape[2];
        float texR = float(row);
        float texC = dot(vec2(col, depth), vec2(stride1, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${a}TexShape[1], ${a}TexShape[0]);
        return sampleTexture(${a}, uv);
      }
    `:`
        float ${c}(int row, int col, int depth) {
          float texR = float(row);
          float texC = dot(vec2(col, depth), vec2(${g}, 1));
          vec2 uv = (vec2(texC, texR) + halfCR) /
                     vec2(${b}.0, ${_}.0);
          return sampleTexture(${a}, uv);
        }
      `;if(b===g&&tt==null)return s?`
      float ${c}(int row, int col, int depth) {
        float texR = dot(vec2(row, col), vec2(${a}Shape[1], 1));
        float texC = float(depth);
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${a}TexShape[1], ${a}TexShape[0]);
        return sampleTexture(${a}, uv);
      }
    `:`
    float ${c}(int row, int col, int depth) {
      float texR = dot(vec2(row, col), vec2(${o[1]}, 1));
      float texC = float(depth);
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${b}.0, ${_}.0);
      return sampleTexture(${a}, uv);
    }
  `;const nt=getFlatOffsetUniformName(a);return s?`
    float ${c}(int row, int col, int depth) {
      // Explicitly use integer operations as dot() only works on floats.
      int stride0 = ${a}Shape[1] * ${a}Shape[2];
      int stride1 = ${a}Shape[2];
      int index = row * stride0 + col * stride1 + depth + ${nt};
      vec2 uv = uvFromFlat(${a}TexShape[0], ${a}TexShape[1], index);
      return sampleTexture(${a}, uv);
    }
    `:`
      float ${c}(int row, int col, int depth) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${d} + col * ${g} + depth + ${nt};
        vec2 uv = uvFromFlat(${_}, ${b}, index);
        return sampleTexture(${a}, uv);
      }
  `}function getPackedSamplerND(i,s){const o=i.name,a="get"+o.charAt(0).toUpperCase()+o.slice(1),c=getGlslDifferences();if(s)return`
    vec4 ${a}(int b2, int b, int row, int col) {
      int valuesPerRow = int(ceil(float(${o}Shape[3]) / 2.0));
      int texelsInBatch = valuesPerRow * int(ceil(float(${o}Shape[2]) / 2.0));
      int index = b * texelsInBatch + (row / 2) * valuesPerRow + (col / 2);
      texelsInBatch *= ${o}Shape[1];
      index = b2 * texelsInBatch + index;
      ivec2 packedTexShape = ivec2(ceil(float(${o}TexShape[0]) / 2.0), ceil(float(${o}TexShape[1]) / 2.0));
      int texR = index / packedTexShape[1];
      int texC = index - texR * packedTexShape[1];
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(packedTexShape[1], packedTexShape[0]); return ${c.texture2D}(${o}, uv);
    }
  `;const d=i.shapeInfo.logicalShape,g=d.length,$=i.shapeInfo.texShape,j=[Math.ceil($[0]/2),Math.ceil($[1]/2)],_e=j[0],et=j[1],_=Math.ceil(d[g-1]/2);let b=_*Math.ceil(d[g-2]/2),tt="int b, int row, int col",nt=`b * ${b} + (row / 2) * ${_} + (col / 2)`;for(let rt=2;rt<g-1;rt++)tt=`int b${rt}, `+tt,b*=d[g-rt-1],nt=`b${rt} * ${b} + `+nt;return`
    vec4 ${a}(${tt}) {
      int index = ${nt};
      int texR = index / ${et};
      int texC = index - texR * ${et};
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${et}, ${_e});
      return ${c.texture2D}(${o}, uv);
    }
  `}function getSampler4D(i,s){const o=i.shapeInfo.logicalShape,a=i.name,c="get"+a.charAt(0).toUpperCase()+a.slice(1),d=o[3],g=o[2]*d,$=o[1]*g,{newShape:j,keptDims:_e}=squeezeShape(o);if(j.length<o.length){const it=squeezeInputInfo(i,j),at=["row","col","depth","depth2"];return`
      ${getSamplerFromInInfo(it,s)}
      float ${c}(int row, int col, int depth, int depth2) {
        return ${c}(${getSqueezedParams(at,_e)});
      }
    `}if(i.shapeInfo.isUniform)return`
      float ${c}(int row, int col, int depth, int depth2) {
        int index = round(dot(vec4(row, col, depth, depth2),
                          vec4(${$}, ${g}, ${d}, 1)));
        ${getUniformSampler(i)}
      }
    `;const et=i.shapeInfo.flatOffset,_=i.shapeInfo.texShape,b=_[0],tt=_[1],nt=`int stride2 = ${a}Shape[3];`,rt=`int stride1 = ${a}Shape[2] * stride2;`,st=`int stride0 = ${a}Shape[1] * stride1;`;if(tt===$&&et==null)return s?`
      float ${c}(int row, int col, int depth, int depth2) {
        ${nt}
        ${rt}
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(stride1, stride2, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${a}TexShape[1], ${a}TexShape[0]);
        return sampleTexture(${a}, uv);
      }
    `:`
      float ${c}(int row, int col, int depth, int depth2) {
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(${g}, ${d}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${tt}.0, ${b}.0);
        return sampleTexture(${a}, uv);
      }
    `;if(tt===d&&et==null)return s?`
      float ${c}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${a}Shape[1] * ${a}Shape[2], ${a}Shape[2], 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${a}TexShape[1], ${a}TexShape[0]);
        return sampleTexture(${a}, uv);
      }
    `:`
      float ${c}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${o[1]*o[2]}, ${o[2]}, 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${tt}.0, ${b}.0);
        return sampleTexture(${a}, uv);
      }
    `;const ot=getFlatOffsetUniformName(a);return s?`
    float ${c}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      ${nt}
      ${rt}
      ${st}
      int index = row * stride0 + col * stride1 +
          depth * stride2 + depth2;
      vec2 uv = uvFromFlat(${a}TexShape[0], ${a}TexShape[1], index + ${ot});
      return sampleTexture(${a}, uv);
    }
  `:`
    float ${c}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${$} + col * ${g} +
          depth * ${d} + depth2;
      vec2 uv = uvFromFlat(${b}, ${tt}, index + ${ot});
      return sampleTexture(${a}, uv);
    }
  `}function getSampler5D(i){const s=i.shapeInfo.logicalShape,o=i.name,a="get"+o.charAt(0).toUpperCase()+o.slice(1),c=s[4],d=s[3]*c,g=s[2]*d,$=s[1]*g,{newShape:j,keptDims:_e}=squeezeShape(s);if(j.length<s.length){const rt=squeezeInputInfo(i,j),st=["row","col","depth","depth2","depth3"];return`
      ${getSamplerFromInInfo(rt)}
      float ${a}(int row, int col, int depth, int depth2, int depth3) {
        return ${a}(${getSqueezedParams(st,_e)});
      }
    `}if(i.shapeInfo.isUniform)return`
      float ${a}(int row, int col, int depth, int depth2, int depth3) {
        float index = dot(
          vec4(row, col, depth, depth2),
          vec4(${$}, ${g}, ${d}, ${c})) +
          depth3;
        ${getUniformSampler(i)}
      }
    `;const et=i.shapeInfo.flatOffset,_=i.shapeInfo.texShape,b=_[0],tt=_[1];if(tt===$&&et==null)return`
      float ${a}(int row, int col, int depth, int depth2, int depth3) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
                         vec4(${g}, ${d}, ${c}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${tt}.0, ${b}.0);
        return sampleTexture(${o}, uv);
      }
    `;if(tt===c&&et==null)return`
      float ${a}(int row, int col, int depth, int depth2, int depth3) {
        float texR = dot(
          vec4(row, col, depth, depth2),
          vec4(${s[1]*s[2]*s[3]},
               ${s[2]*s[3]}, ${s[3]}, 1));
        int texC = depth3;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${tt}.0, ${b}.0);
        return sampleTexture(${o}, uv);
      }
    `;const nt=getFlatOffsetUniformName(o);return`
    float ${a}(int row, int col, int depth, int depth2, int depth3) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${$} + col * ${g} + depth * ${d} +
          depth2 * ${c} + depth3 + ${nt};
      vec2 uv = uvFromFlat(${b}, ${tt}, index);
      return sampleTexture(${o}, uv);
    }
  `}function getSampler6D(i){const s=i.shapeInfo.logicalShape,o=i.name,a="get"+o.charAt(0).toUpperCase()+o.slice(1),{newShape:c,keptDims:d}=squeezeShape(s);if(c.length<s.length){const st=squeezeInputInfo(i,c),ot=["row","col","depth","depth2","depth3","depth4"];return`
      ${getSamplerFromInInfo(st)}
      float ${a}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        return ${a}(${getSqueezedParams(ot,d)});
      }
    `}const g=s[5],$=s[4]*g,j=s[3]*$,_e=s[2]*j,et=s[1]*_e;if(i.shapeInfo.isUniform)return`
      float ${a}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
        int index = round(dot(
          vec4(row, col, depth, depth2),
          vec4(${et}, ${_e}, ${j}, ${$})) +
          dot(
            vec2(depth3, depth4),
            vec2(${g}, 1)));
        ${getUniformSampler(i)}
      }
    `;const _=i.shapeInfo.flatOffset,b=i.shapeInfo.texShape,tt=b[0],nt=b[1];if(nt===et&&_==null)return`
      float ${a}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
          vec4(${_e}, ${j}, ${$}, ${g})) +
               float(depth4);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${nt}.0, ${tt}.0);
        return sampleTexture(${o}, uv);
      }
    `;if(nt===g&&_==null)return`
      float ${a}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        float texR = dot(vec4(row, col, depth, depth2),
          vec4(${s[1]*s[2]*s[3]*s[4]},
               ${s[2]*s[3]*s[4]},
               ${s[3]*s[4]},
               ${s[4]})) + float(depth3);
        int texC = depth4;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${nt}.0, ${tt}.0);
        return sampleTexture(${o}, uv);
      }
    `;const rt=getFlatOffsetUniformName(o);return`
    float ${a}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${et} + col * ${_e} + depth * ${j} +
          depth2 * ${$} + depth3 * ${g} + depth4 + ${rt};
      vec2 uv = uvFromFlat(${tt}, ${nt}, index);
      return sampleTexture(${o}, uv);
    }
  `}function getUniformSampler(i){const s=i.name,o=sizeFromShape(i.shapeInfo.logicalShape);return o<2?`return ${s};`:`
    for (int i = 0; i < ${o}; i++) {
      if (i == index) {
        return ${s}[i];
      }
    }
  `}function getPackedSamplerAtOutputCoords(i,s){const o=i.name,a=o.charAt(0).toUpperCase()+o.slice(1),c="get"+a+"AtOutCoords",d=i.shapeInfo.logicalShape.length,g=s.logicalShape.length,$=getBroadcastDims(i.shapeInfo.logicalShape,s.logicalShape),j=getCoordsDataType(g),_e=g-d;let et;const _=["x","y","z","w","u","v"];d===0?et="":g<2&&$.length>=1?et="coords = 0;":et=$.map(it=>`coords.${_[it+_e]} = 0;`).join(`
`);let b="";g<2&&d>0?b="coords":b=i.shapeInfo.logicalShape.map((it,at)=>`coords.${_[at+_e]}`).join(", ");let tt="return outputValue;";const rt=sizeFromShape(i.shapeInfo.logicalShape)===1,ot=sizeFromShape(s.logicalShape)===1;if(d===1&&!rt&&!ot)tt=`
      return vec4(outputValue.xy, outputValue.xy);
    `;else if(rt&&!ot)g===1?tt=`
        return vec4(outputValue.x, outputValue.x, 0., 0.);
      `:tt=`
        return vec4(outputValue.x);
      `;else if($.length){const it=d-2,at=d-1;$.indexOf(it)>-1&&$.indexOf(at)>-1?tt="return vec4(outputValue.x);":$.indexOf(it)>-1?tt="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":$.indexOf(at)>-1&&(tt="return vec4(outputValue.xx, outputValue.zz);")}return`
    vec4 ${c}() {
      ${j} coords = getOutputCoords();
      ${et}
      vec4 outputValue = get${a}(${b});
      ${tt}
    }
  `}function getSamplerAtOutputCoords(i,s){const o=i.name,a=o.charAt(0).toUpperCase()+o.slice(1),c="get"+a+"AtOutCoords",d=s.texShape,g=i.shapeInfo.texShape,$=i.shapeInfo.logicalShape.length,j=s.logicalShape.length;if(!i.shapeInfo.isUniform&&$===j&&i.shapeInfo.flatOffset==null&&arraysEqual(g,d))return`
      float ${c}() {
        return sampleTexture(${o}, resultUV);
      }
    `;const _e=getCoordsDataType(j),et=getBroadcastDims(i.shapeInfo.logicalShape,s.logicalShape),_=j-$;let b;const tt=["x","y","z","w","u","v"];$===0?b="":j<2&&et.length>=1?b="coords = 0;":b=et.map(rt=>`coords.${tt[rt+_]} = 0;`).join(`
`);let nt="";return j<2&&$>0?nt="coords":nt=i.shapeInfo.logicalShape.map((rt,st)=>`coords.${tt[st+_]}`).join(", "),`
    float ${c}() {
      ${_e} coords = getOutputCoords();
      ${b}
      return get${a}(${nt});
    }
  `}function getCoordsDataType(i){if(i<=1)return"int";if(i===2)return"ivec2";if(i===3)return"ivec3";if(i===4)return"ivec4";if(i===5)return"ivec5";if(i===6)return"ivec6";throw Error(`GPU for rank ${i} is not yet supported`)}function getUniformInfoFromShape(i,s,o){const{newShape:a,keptDims:c}=squeezeShape(s),d=s.length,g=i&&d===3&&s[0]===1,$=g?s.slice(1):a,j=!i&&d>1&&!arraysEqual(s,o)&&a.length<d||g;return{useSqueezeShape:j,uniformShape:j?$:s,keptDims:c}}function squeezeInputInfo(i,s){const o=JSON.parse(JSON.stringify(i));return o.shapeInfo.logicalShape=s,o}function getSqueezedParams(i,s){return s.map(o=>i[o]).join(", ")}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function compileProgram(i,s,o,a){const c=o.map((et,_)=>{const b={logicalShape:et.shape,texShape:et.isUniform?null:et.texData.texShape,isUniform:et.isUniform,isPacked:et.isUniform?!1:et.texData.isPacked,flatOffset:null};return et.texData!=null&&et.texData.slice!=null&&et.texData.slice.flatOffset>0&&(b.flatOffset=et.texData.slice.flatOffset),{name:s.variableNames[_],shapeInfo:b}}),d=c.map(et=>et.shapeInfo),g={logicalShape:a.shape,texShape:a.texData.texShape,isUniform:!1,isPacked:a.texData.isPacked,flatOffset:null},$=makeShader(c,g,s),j=createFragmentShader(i.gl,$),_e=i.createProgram(j);return env().get("ENGINE_COMPILE_ONLY")?{program:s,fragmentShader:j,source:$,webGLProgram:_e,inShapeInfos:d,outShapeInfo:g,variablesLocations:null,customUniformLocations:null,infLoc:null,nanLoc:null,outShapeLocation:null,outShapeStridesLocation:null,outTexShapeLocation:null}:(i.buildVao(_e),Object.assign({program:s,fragmentShader:j,source:$,webGLProgram:_e,inShapeInfos:d,outShapeInfo:g},getUniformLocations(i,s,_e)))}function getUniformLocations(i,s,o){const a=[],c=[];let d,g,$,j=null,_e=null;_e=i.getUniformLocation(o,"NAN",!1),env().getNumber("WEBGL_VERSION")===1&&(j=i.getUniformLocation(o,"INFINITY",!1));const et=!1;for(const _ of s.variableNames){const b={name:_,uniform:i.getUniformLocation(o,_,et),offset:i.getUniformLocation(o,`offset${_}`,et)};s.enableShapeUniforms&&(b.shape=i.getUniformLocation(o,`${_}Shape`,et),b.texShape=i.getUniformLocation(o,`${_}TexShape`,et)),a.push(b)}if(s.enableShapeUniforms&&(d=i.getUniformLocation(o,"outShape",et),$=i.getUniformLocation(o,"outShapeStrides",et),g=i.getUniformLocation(o,"outTexShape",et)),s.customUniforms)for(const _ of s.customUniforms)c.push(i.getUniformLocation(o,_.name,et));return{variablesLocations:a,customUniformLocations:c,infLoc:j,nanLoc:_e,outShapeLocation:d,outShapeStridesLocation:$,outTexShapeLocation:g}}function validateBinaryAndProgram(i,s){if(i.length!==s.length)throw Error(`Binary was compiled with ${i.length} inputs, but was executed with ${s.length} inputs`);i.forEach((o,a)=>{const c=o.logicalShape,d=s[a],g=d.shape;if(!arraysEqual(c,g))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${c} and ${g} must match`);if(o.isUniform&&d.isUniform)return;const $=o.texShape,j=d.isUniform?null:d.texData.texShape;if(!arraysEqual($,j))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${$} and ${j} must match`)})}function runProgram(i,s,o,a,c){s.program.enableShapeUniforms||(validateBinaryAndProgram(s.inShapeInfos,o),validateBinaryAndProgram([s.outShapeInfo],[a]));const d=a.texData.texture,g=a.texData.texShape;a.texData.isPacked?i.setOutputPackedMatrixTexture(d.texture,g[0],g[1]):i.setOutputMatrixTexture(d.texture,g[0],g[1]),i.setProgram(s.webGLProgram),i.bindVertexArray(s.webGLProgram.vao),env().getNumber("WEBGL_VERSION")===1&&s.infLoc!==null&&i.gl.uniform1f(s.infLoc,1/0),s.nanLoc!==null&&i.gl.uniform1f(s.nanLoc,NaN);for(let j=0;j<o.length;++j){const _e=o[j],{uniform:et,offset:_,shape:b,texShape:tt}=s.variablesLocations[j];if(b){const{uniformShape:nt}=getUniformInfoFromShape(s.program.packedInputs,_e.shape,_e.texData.texShape);switch(nt.length){case 1:i.gl.uniform1iv(b,new Int32Array(nt));break;case 2:i.gl.uniform2iv(b,new Int32Array(nt));break;case 3:i.gl.uniform3iv(b,new Int32Array(nt));break;case 4:i.gl.uniform4iv(b,new Int32Array(nt));break}}if(tt&&i.gl.uniform2i(tt,_e.texData.texShape[0],_e.texData.texShape[1]),et!=null){if(_e.isUniform){if(sizeFromShape(_e.shape)<2)i.gl.uniform1f(et,_e.uniformValues[0]);else{let nt=_e.uniformValues;nt instanceof Float32Array||(nt=new Float32Array(nt)),i.gl.uniform1fv(et,nt)}continue}_e.texData.slice!=null&&_!=null&&i.gl.uniform1i(_,_e.texData.slice.flatOffset),i.setInputMatrixTexture(_e.texData.texture.texture,et,j)}}const $=s.outShapeLocation;if($)switch(a.shape.length){case 1:i.gl.uniform1iv($,new Int32Array(a.shape));break;case 2:i.gl.uniform2iv($,new Int32Array(a.shape));break;case 3:i.gl.uniform3iv($,new Int32Array(a.shape));break;case 4:i.gl.uniform4iv($,new Int32Array(a.shape));break}if(s.outShapeStridesLocation){const j=computeStrides(a.shape);switch(a.shape.length){case 2:i.gl.uniform1iv(s.outShapeStridesLocation,new Int32Array(j));break;case 3:i.gl.uniform2iv(s.outShapeStridesLocation,new Int32Array(j));break;case 4:i.gl.uniform3iv(s.outShapeStridesLocation,new Int32Array(j));break}}if(s.outTexShapeLocation&&i.gl.uniform2i(s.outTexShapeLocation,a.texData.texShape[0],a.texData.texShape[1]),s.program.customUniforms&&c)for(let j=0;j<s.program.customUniforms.length;++j){const _e=s.program.customUniforms[j],et=s.customUniformLocations[j],_=c[j];if(_e.type==="float")i.gl.uniform1fv(et,_);else if(_e.type==="vec2")i.gl.uniform2fv(et,_);else if(_e.type==="vec3")i.gl.uniform3fv(et,_);else if(_e.type==="vec4")i.gl.uniform4fv(et,_);else if(_e.type==="int")i.gl.uniform1iv(et,_);else if(_e.type==="ivec2")i.gl.uniform2iv(et,_);else if(_e.type==="ivec3")i.gl.uniform3iv(et,_);else if(_e.type==="ivec4")i.gl.uniform4iv(et,_);else throw Error(`uniform type ${_e.type} is not supported yet.`)}i.executeProgram()}function makeShaderKey(i,s,o){let a="";s.concat(o).forEach(g=>{const $=g.texData!=null&&g.texData.slice!=null&&g.texData.slice.flatOffset>0;if(i.enableShapeUniforms&&!g.isUniform){const j=g.texData.texShape,{useSqueezeShape:_e,uniformShape:et,keptDims:_}=getUniformInfoFromShape(i.packedInputs,g.shape,j);let b="",tt="",nt="";if(et.length===1&&i.packedInputs){const ut=[Math.ceil(j[0]/2),Math.ceil(j[1]/2)];b=`${ut[0]>1}_${ut[1]>1}`}else if(et.length===2&&!i.packedInputs)tt=`${et[0]>1}_${et[1]>1}`;else if(et.length>2&&!i.packedInputs){const ut=computeStrides(et);nt=`${ut[0]===j[1]}_${ut[ut.length-1]===j[1]}`}const rt=g.shape.length,st=et.length===2&&arraysEqual(g.shape,j),ot=sizeFromShape(g.shape)===1,it=getBroadcastDims$1(g.shape,o.shape),at=!i.packedInputs&&rt===o.shape.length&&arraysEqual(j,o.texData.texShape),lt=i.packedInputs||et.length>2?"":`${j[0]>1}_${j[1]>1}`;a+=`${rt}_${at}_${_e?_:""}_${et.length}_${ot}_${it}_${st}_${b}_${tt}_${nt}_${lt}_${$}`}else{const j=g.isUniform?"uniform":g.texData.texShape;a+=`${g.shape}_${j}_${$}`}});const c=i.userCode;let d=i.constructor.name;return d+="_"+a+"_"+c+`${env().getNumber("WEBGL_VERSION")}`,d}function useShapeUniforms(i){return env().getBool("WEBGL_USE_SHAPES_UNIFORMS")&&i<=4}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class DecodeMatrixProgram{constructor(s){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=PackingScheme.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const o=getGlslDifferences();this.outputShape=s,this.enableShapeUniforms=useShapeUniforms(this.outputShape.length),this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${this.enableShapeUniforms?getOutputLogicalCoordinatesFromFlatIndexByUniform(["r","c","d"],s):getLogicalCoordinatesFromFlatIndex(["r","c","d"],s)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));
        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getA(rc.x, rc.y, rc.z);
        }

        ${o.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class DecodeMatrixPackedProgram{constructor(s){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=PackingScheme.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const o=getGlslDifferences();this.outputShape=s,this.enableShapeUniforms=useShapeUniforms(this.outputShape.length),this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${this.enableShapeUniforms?getOutputLogicalCoordinatesFromFlatIndexByUniform(["r","c","d"],s):getLogicalCoordinatesFromFlatIndex(["r","c","d"],s)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));
        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));
        }

        ${o.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class EncodeFloatProgram{constructor(s){this.variableNames=["A"],this.outTexUsage=TextureUsage.DOWNLOAD;const o=getGlslDifferences();this.outputShape=s,this.userCode=`
      ${ENCODE_FLOAT_SNIPPET}

      void main() {
        float x = getAAtOutCoords();
        ${o.output} = encode_float(x);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class EncodeFloatPackedProgram{constructor(s){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=TextureUsage.DOWNLOAD;const o=getGlslDifferences();this.outputShape=s,this.userCode=`
      ${ENCODE_FLOAT_SNIPPET}

      void main() {
        ivec3 coords = getOutputCoords();
        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));
        ${o.output} = encode_float(x);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const CHANNEL_CHAR_TO_INDEX_MAP={R:0,G:1,B:2,A:3};class EncodeMatrixProgram{constructor(s,o=!1,a="RGBA"){this.variableNames=["A"],this.customUniforms=[{name:"texShape",type:"ivec2"}];const c=getGlslDifferences();this.outputShape=s,this.enableShapeUniforms=useShapeUniforms(this.outputShape.length);let d="result";o&&(d="floor(result * 255. + 0.5)");let g="";for(let $=0;$<a.length;$++){const j=a[$];g+=`
          if(offset == ${$}) {
            result = values[${CHANNEL_CHAR_TO_INDEX_MAP[j]}];
          }`}this.userCode=`
      ${this.enableShapeUniforms?getFlatIndexFrom3DOutput():getFlatIndexFrom3D(s)}

      void main() {
        ivec3 coords = getOutputCoords();
        int flatIndex = getFlatIndex(coords);
        float result = 0.;
        int offset = imod(flatIndex, ${a.length});

        flatIndex = idiv(flatIndex, ${a.length}, 1.);

        int r = flatIndex / texShape[1];
        if (r < texShape[0]) {
          int c = imod(flatIndex, texShape[1]);
          vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);
          vec4 values = ${c.texture2D}(A, uv);
          ${g}
        }
        ${c.output} = vec4(${d}, 0., 0., 0.);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class EncodeMatrixPackedProgram{constructor(s,o=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.customUniforms=[{name:"texShape",type:"ivec2"}];const a=getGlslDifferences();this.outputShape=s,this.enableShapeUniforms=useShapeUniforms(this.outputShape.length);let c="",d="result";o&&(d="floor(result * 255. + 0.5)");for(let g=0;g<=1;g++)for(let $=0;$<=1;$++){const j=g*2+$;c+=`
          localCoords = coords;
          if(localCoords[2] + ${$} < ${this.enableShapeUniforms?"outShape[2]":`${s[2]}`}) {
          localCoords[2] += ${$};
          if (localCoords[1] + ${g} < ${this.enableShapeUniforms?"outShape[1]":`${s[1]}`}) {
            localCoords[1] += ${g};

            flatIndex = getFlatIndex(localCoords);
            offset = imod(flatIndex, 4);

            flatIndex = idiv(flatIndex, 4, 1.);

            int r = flatIndex / texShape[1];
            int c = imod(flatIndex, texShape[1]);
            vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);
            values = ${a.texture2D}(A, uv);

            if (offset == 0) {
              result[${j}] = values[0];
            } else if (offset == 1) {
              result[${j}] = values[1];
            } else if (offset == 2) {
              result[${j}] = values[2];
            } else {
              result[${j}] = values[3];
            }
          }
        }
        `}this.userCode=`
        ${this.enableShapeUniforms?getFlatIndexFrom3DOutput():getFlatIndexFrom3D(s)}

        void main() {
          ivec3 coords = getOutputCoords();

          vec4 result = vec4(0.);
          int flatIndex, r, c, offset;
          ivec3 localCoords;
          vec2 uv;
          vec4 values;

          ${c}

          ${a.output} = ${d};
        }
    `}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function createVertexShader(i){const s=getGlslDifferences(),o=`${s.version}
    precision highp float;
    ${s.attribute} vec3 clipSpacePos;
    ${s.attribute} vec2 uv;
    ${s.varyingVs} vec2 resultUV;

    void main() {
      gl_Position = vec4(clipSpacePos, 1);
      resultUV = uv;
    }`;return createVertexShader$1(i,o)}function createVertexBuffer(i){const s=new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]);return createStaticVertexBuffer(i,s)}function createIndexBuffer(i){const s=new Uint16Array([0,1,2,2,1,3]);return createStaticIndexBuffer(i,s)}function createAndConfigureTexture(i,s,o,a,c,d){validateTextureSize(s,o);const g=createTexture(i),$=i.TEXTURE_2D;return callAndCheck(i,()=>i.bindTexture($,g)),callAndCheck(i,()=>i.texParameteri($,i.TEXTURE_WRAP_S,i.CLAMP_TO_EDGE)),callAndCheck(i,()=>i.texParameteri($,i.TEXTURE_WRAP_T,i.CLAMP_TO_EDGE)),callAndCheck(i,()=>i.texParameteri($,i.TEXTURE_MIN_FILTER,i.NEAREST)),callAndCheck(i,()=>i.texParameteri($,i.TEXTURE_MAG_FILTER,i.NEAREST)),env().getNumber("WEBGL_VERSION")===1?callAndCheck(i,()=>i.texImage2D($,0,a,s,o,0,c,d,null)):callAndCheck(i,()=>i.texStorage2D($,1,a,s,o)),callAndCheck(i,()=>i.bindTexture(i.TEXTURE_2D,null)),{texture:g,texShape:[o,s]}}function getInternalFormatForFloat32MatrixTexture(i){return i.internalFormatFloat}function createFloat32MatrixTexture(i,s,o,a){const[c,d]=getUnpackedMatrixTextureShapeWidthHeight(s,o);return createAndConfigureTexture(i,c,d,getInternalFormatForFloat32MatrixTexture(a),a.textureFormatFloat,i.FLOAT)}function getInternalFormatForFloat16MatrixTexture(i){return i.internalFormatHalfFloat}function createFloat16MatrixTexture(i,s,o,a){const[c,d]=getUnpackedMatrixTextureShapeWidthHeight(s,o);return createAndConfigureTexture(i,c,d,getInternalFormatForFloat16MatrixTexture(a),a.textureFormatFloat,a.textureTypeHalfFloat)}function getInternalFormatForUnsignedBytesMatrixTexture(i){return i.downloadTextureFormat}function createUnsignedBytesMatrixTexture(i,s,o,a){const[c,d]=getUnpackedMatrixTextureShapeWidthHeight(s,o);return createAndConfigureTexture(i,c,d,getInternalFormatForUnsignedBytesMatrixTexture(a),i.RGBA,i.UNSIGNED_BYTE)}function getInternalFormatForPackedMatrixTexture(i){return i.internalFormatPackedFloat}function createPackedMatrixTexture(i,s,o,a){const[c,d]=getPackedMatrixTextureShapeWidthHeight(s,o);return createAndConfigureTexture(i,c,d,getInternalFormatForPackedMatrixTexture(a),i.RGBA,i.FLOAT)}function getInternalFormatForFloat16PackedMatrixTexture(i){return i.internalFormatPackedHalfFloat}function createFloat16PackedMatrixTexture(i,s,o,a){const[c,d]=getPackedMatrixTextureShapeWidthHeight(s,o);return createAndConfigureTexture(i,c,d,getInternalFormatForFloat16PackedMatrixTexture(a),i.RGBA,a.textureTypeHalfFloat)}function bindVertexProgramAttributeStreams(i,s,o){return callAndCheck(i,()=>i.bindBuffer(i.ARRAY_BUFFER,o)),bindVertexBufferToProgramAttribute(i,s,"clipSpacePos",o,3,20,0)&&bindVertexBufferToProgramAttribute(i,s,"uv",o,2,20,12)}function uploadDenseMatrixToTexture(i,s,o,a,c,d){callAndCheck(i,()=>i.bindTexture(i.TEXTURE_2D,s));let g,$,j;c instanceof Uint8Array?(g=new Uint8Array(o*a*4),$=i.UNSIGNED_BYTE,j=i.RGBA):(g=new Float32Array(o*a*4),$=i.FLOAT,j=d.internalFormatPackedFloat),g.set(c),env().getNumber("WEBGL_VERSION")===2?callAndCheck(i,()=>i.texSubImage2D(i.TEXTURE_2D,0,0,0,o,a,i.RGBA,$,g)):callAndCheck(i,()=>i.texImage2D(i.TEXTURE_2D,0,j,o,a,0,i.RGBA,$,g)),callAndCheck(i,()=>i.bindTexture(i.TEXTURE_2D,null))}function uploadPixelDataToTexture(i,s,o){callAndCheck(i,()=>i.bindTexture(i.TEXTURE_2D,s)),o.data instanceof Uint8Array?env().getNumber("WEBGL_VERSION")===2?callAndCheck(i,()=>i.texSubImage2D(i.TEXTURE_2D,0,0,0,o.width,o.height,i.RGBA,i.UNSIGNED_BYTE,o.data)):callAndCheck(i,()=>i.texImage2D(i.TEXTURE_2D,0,i.RGBA,o.width,o.height,0,i.RGBA,i.UNSIGNED_BYTE,o.data)):env().getNumber("WEBGL_VERSION")===2?callAndCheck(i,()=>i.texSubImage2D(i.TEXTURE_2D,0,0,0,i.RGBA,i.UNSIGNED_BYTE,o)):callAndCheck(i,()=>i.texImage2D(i.TEXTURE_2D,0,i.RGBA,i.RGBA,i.UNSIGNED_BYTE,o)),callAndCheck(i,()=>i.bindTexture(i.TEXTURE_2D,null))}function createBufferFromOutputTexture(i,s,o,a){const c=i.createBuffer();callAndCheck(i,()=>i.bindBuffer(i.PIXEL_PACK_BUFFER,c));const $=4*4*s*o;return callAndCheck(i,()=>i.bufferData(i.PIXEL_PACK_BUFFER,$,i.STREAM_READ)),callAndCheck(i,()=>i.readPixels(0,0,o,s,i.RGBA,i.FLOAT,0)),callAndCheck(i,()=>i.bindBuffer(i.PIXEL_PACK_BUFFER,null)),c}function downloadFloat32MatrixFromBuffer(i,s,o){const a=i,c=new Float32Array(o);return a.bindBuffer(a.PIXEL_PACK_BUFFER,s),a.getBufferSubData(a.PIXEL_PACK_BUFFER,0,c),a.bindBuffer(a.PIXEL_PACK_BUFFER,null),c}function downloadByteEncodedFloatMatrixFromOutputTexture(i,s,o,a){const[c,d]=getUnpackedMatrixTextureShapeWidthHeight(s,o),g=4,$=new Uint8Array(getUnpackedArraySizeFromMatrixSize(s*o,g));return callAndCheck(i,()=>i.readPixels(0,0,c,d,a.downloadTextureFormat,i.UNSIGNED_BYTE,$)),new Float32Array($.buffer)}function downloadPackedMatrixFromBuffer(i,s,o,a,c,d,g,$){const j=i,_e=new Float32Array(getPackedRGBAArraySizeFromMatrixShape(d,g));return j.bindBuffer(j.PIXEL_PACK_BUFFER,s),j.getBufferSubData(j.PIXEL_PACK_BUFFER,0,_e),j.bindBuffer(j.PIXEL_PACK_BUFFER,null),_e}function downloadMatrixFromPackedOutputTexture(i,s,o){const a=new Float32Array(s*o*4);return callAndCheck(i,()=>i.readPixels(0,0,o,s,i.RGBA,i.FLOAT,a)),a}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class GPGPUContext{constructor(s){this.outputTexture=null,this.program=null,this.disposed=!1,this.itemsToPoll=[];const o=env().getNumber("WEBGL_VERSION");if(s!=null?(this.gl=s,setWebGLContext(o,s)):this.gl=getWebGLContext(o),s=this.gl,env().getNumber("WEBGL_VERSION")===2){const d=s;this.createVertexArray=()=>callAndCheck(d,()=>d.createVertexArray()),this.bindVertexArray=g=>callAndCheck(d,()=>d.bindVertexArray(g)),this.deleteVertexArray=g=>callAndCheck(d,()=>d.deleteVertexArray(g)),this.getVertexArray=()=>callAndCheck(d,()=>d.getParameter(d.VERTEX_ARRAY_BINDING))}else if(s!=null){const d=s.getExtension("OES_vertex_array_object");if(d==null)throw new Error("All WebGL1 implementations are expected to offer OES_vertex_array_object.");this.createVertexArray=()=>callAndCheck(s,()=>d.createVertexArrayOES()),this.bindVertexArray=g=>callAndCheck(s,()=>d.bindVertexArrayOES(g)),this.deleteVertexArray=g=>callAndCheck(s,()=>d.deleteVertexArrayOES(g)),this.getVertexArray=()=>callAndCheck(s,()=>s.getParameter(d.VERTEX_ARRAY_BINDING_OES))}let a="WEBGL_color_buffer_float";const c="EXT_color_buffer_half_float";if(this.parallelCompilationExtension=this.gl.getExtension("KHR_parallel_shader_compile"),env().getNumber("WEBGL_VERSION")===1){const d="OES_texture_float",g="OES_texture_half_float";if(this.textureFloatExtension=getExtensionOrThrow(this.gl,d),hasExtension(this.gl,g))this.textureHalfFloatExtension=getExtensionOrThrow(this.gl,g);else if(env().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(a),hasExtension(this.gl,c))this.colorBufferHalfFloatExtension=getExtensionOrThrow(this.gl,c);else if(env().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(a="EXT_color_buffer_float",hasExtension(this.gl,a))this.colorBufferFloatExtension=this.gl.getExtension(a);else if(hasExtension(this.gl,c))this.colorBufferHalfFloatExtension=this.gl.getExtension(c);else throw new Error("GL context does not support color renderable floats");this.vertexBuffer=createVertexBuffer(this.gl),this.indexBuffer=createIndexBuffer(this.gl),this.framebuffer=createFramebuffer(this.gl),this.textureConfig=getTextureConfig(this.gl,this.textureHalfFloatExtension)}get debug(){return env().getBool("DEBUG")}dispose(){if(this.disposed)return;this.program!=null&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),this.outputTexture!=null&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");const s=this.gl;callAndCheck(s,()=>s.finish()),callAndCheck(s,()=>s.bindFramebuffer(s.FRAMEBUFFER,null)),callAndCheck(s,()=>s.deleteFramebuffer(this.framebuffer)),callAndCheck(s,()=>s.bindBuffer(s.ARRAY_BUFFER,null)),callAndCheck(s,()=>s.bindBuffer(s.ELEMENT_ARRAY_BUFFER,null)),callAndCheck(s,()=>s.deleteBuffer(this.indexBuffer)),this.disposed=!0}createFloat32MatrixTexture(s,o){return this.throwIfDisposed(),createFloat32MatrixTexture(this.gl,s,o,this.textureConfig)}createFloat16MatrixTexture(s,o){return this.throwIfDisposed(),createFloat16MatrixTexture(this.gl,s,o,this.textureConfig)}createUnsignedBytesMatrixTexture(s,o){return this.throwIfDisposed(),createUnsignedBytesMatrixTexture(this.gl,s,o,this.textureConfig)}uploadPixelDataToTexture(s,o){this.throwIfDisposed(),uploadPixelDataToTexture(this.gl,s,o)}uploadDenseMatrixToTexture(s,o,a,c){this.throwIfDisposed(),uploadDenseMatrixToTexture(this.gl,s,o,a,c,this.textureConfig)}createFloat16PackedMatrixTexture(s,o){return this.throwIfDisposed(),createFloat16PackedMatrixTexture(this.gl,s,o,this.textureConfig)}createPackedMatrixTexture(s,o){return this.throwIfDisposed(),createPackedMatrixTexture(this.gl,s,o,this.textureConfig)}deleteMatrixTexture(s){this.throwIfDisposed(),this.outputTexture===s&&(unbindColorTextureFromFramebuffer(this.gl,this.framebuffer),this.outputTexture=null),callAndCheck(this.gl,()=>this.gl.deleteTexture(s))}downloadByteEncodedFloatMatrixFromOutputTexture(s,o,a){return this.downloadMatrixDriver(s,()=>downloadByteEncodedFloatMatrixFromOutputTexture(this.gl,o,a,this.textureConfig))}downloadPackedMatrixFromBuffer(s,o,a,c,d,g){return downloadPackedMatrixFromBuffer(this.gl,s,o,a,c,d,g,this.textureConfig)}downloadFloat32MatrixFromBuffer(s,o){return downloadFloat32MatrixFromBuffer(this.gl,s,o)}createBufferFromTexture(s,o,a){this.bindTextureToFrameBuffer(s);const c=createBufferFromOutputTexture(this.gl,o,a,this.textureConfig);return this.unbindTextureToFrameBuffer(),c}createAndWaitForFence(){const s=this.createFence(this.gl);return this.pollFence(s)}createFence(s){let o,a;if(env().getBool("WEBGL_FENCE_API_ENABLED")){const c=s,d=c.fenceSync(c.SYNC_GPU_COMMANDS_COMPLETE,0);s.flush(),a=()=>{const g=c.clientWaitSync(d,0,0);return g===c.ALREADY_SIGNALED||g===c.CONDITION_SATISFIED},o=d}else env().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(o=this.beginQuery(),this.endQuery(),a=()=>this.isQueryAvailable(o,env().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):a=()=>!0;return{query:o,isFencePassed:a}}downloadMatrixFromPackedTexture(s,o,a){return this.downloadMatrixDriver(s,()=>downloadMatrixFromPackedOutputTexture(this.gl,o,a))}createProgram(s){this.throwIfDisposed();const o=this.gl;this.vertexShader==null&&(this.vertexShader=createVertexShader(o));const a=createProgram(o);callAndCheck(o,()=>o.attachShader(a,this.vertexShader)),callAndCheck(o,()=>o.attachShader(a,s)),linkProgram(o,a);const c=Object.assign(a,{vao:this.createVertexArray()});return this.debug&&validateProgram(o,c),c}buildVao(s){this.setProgram(s),this.bindVertexArray(s.vao);const o=this.gl;callAndCheck(o,()=>o.bindBuffer(o.ELEMENT_ARRAY_BUFFER,this.indexBuffer)),bindVertexProgramAttributeStreams(o,s,this.vertexBuffer)}deleteProgram(s){this.throwIfDisposed(),s===this.program&&(this.program=null),s!=null&&(callAndCheck(this.gl,()=>this.gl.deleteProgram(s)),this.deleteVertexArray(s.vao))}setProgram(s){this.throwIfDisposed(),this.program=s,this.program!=null&&this.debug&&validateProgram(this.gl,this.program),callAndCheck(this.gl,()=>this.gl.useProgram(s))}getUniformLocation(s,o,a=!0){return this.throwIfDisposed(),a?getProgramUniformLocationOrThrow(this.gl,s,o):getProgramUniformLocation(this.gl,s,o)}getAttributeLocation(s,o){return this.throwIfDisposed(),callAndCheck(this.gl,()=>this.gl.getAttribLocation(s,o))}getUniformLocationNoThrow(s,o){return this.throwIfDisposed(),this.gl.getUniformLocation(s,o)}setInputMatrixTexture(s,o,a){this.throwIfDisposed(),this.throwIfNoProgram(),bindTextureToProgramUniformSampler(this.gl,s,o,a)}setOutputMatrixTexture(s,o,a){this.setOutputMatrixTextureDriver(s,a,o)}setOutputPackedMatrixTexture(s,o,a){this.throwIfDisposed();const[c,d]=getPackedMatrixTextureShapeWidthHeight(o,a);this.setOutputMatrixTextureDriver(s,c,d)}setOutputMatrixWriteRegion(s,o,a,c){this.setOutputMatrixWriteRegionDriver(a,s,c,o)}setOutputPackedMatrixWriteRegion(s,o,a,c){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){this.program!=null&&validateProgram(this.gl,this.program),validateFramebuffer(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();const s=this.gl;if(this.debug){const o=this.getVertexArray();console.assert(o===this.program.vao,"VAO changed between setProgram and executeProgram!"),this.debugValidate()}callAndCheck(s,()=>s.drawElements(s.TRIANGLES,6,s.UNSIGNED_SHORT,0))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),callAndCheck(this.gl,()=>this.gl.finish())}getQueryTimerExtension(){return this.disjointQueryTimerExtension==null&&(this.disjointQueryTimerExtension=getExtensionOrThrow(this.gl,env().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(env().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){const a=this.gl,c=this.getQueryTimerExtensionWebGL2(),d=a.createQuery();return a.beginQuery(c.TIME_ELAPSED_EXT,d),d}const s=this.getQueryTimerExtensionWebGL1(),o=s.createQueryEXT();return s.beginQueryEXT(s.TIME_ELAPSED_EXT,o),o}endQuery(){if(env().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){const o=this.gl,a=this.getQueryTimerExtensionWebGL2();o.endQuery(a.TIME_ELAPSED_EXT);return}const s=this.getQueryTimerExtensionWebGL1();s.endQueryEXT(s.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(s){return await repeatedTry(()=>this.disposed||this.isQueryAvailable(s,env().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))),this.getQueryTime(s,env().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(s,o){if(o===0)return null;if(o===2){const a=this.gl;return a.getQueryParameter(s,a.QUERY_RESULT)/1e6}else{const a=this.getQueryTimerExtensionWebGL1();return a.getQueryObjectEXT(s,a.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(s,o){if(o===0)return!0;if(o===2){const a=this.gl,c=this.getQueryTimerExtensionWebGL2(),d=a.getQueryParameter(s,a.QUERY_RESULT_AVAILABLE);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(c.GPU_DISJOINT_EXT)),d&&!this.disjoint}else{const a=this.getQueryTimerExtensionWebGL1(),c=a.getQueryObjectEXT(s,a.QUERY_RESULT_AVAILABLE_EXT);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(a.GPU_DISJOINT_EXT)),c&&!this.disjoint}}pollFence(s){return new Promise(o=>{this.addItemToPoll(()=>s.isFencePassed(),()=>o())})}pollItems(){const s=linearSearchLastTrue(this.itemsToPoll.map(o=>o.isDoneFn));for(let o=0;o<=s;++o){const{resolveFn:a}=this.itemsToPoll[o];a()}this.itemsToPoll=this.itemsToPoll.slice(s+1)}addItemToPoll(s,o){if(this.itemsToPoll.push({isDoneFn:s,resolveFn:o}),this.itemsToPoll.length>1)return;let a;"setTimeoutCustom"in env().platform&&(a=env().platform.setTimeoutCustom.bind(env().platform)),repeatedTry(()=>(this.pollItems(),this.itemsToPoll.length===0),()=>0,null,a)}bindTextureToFrameBuffer(s){this.throwIfDisposed(),bindColorTextureToFramebuffer(this.gl,s,this.framebuffer),this.debug&&validateFramebuffer(this.gl)}unbindTextureToFrameBuffer(){this.outputTexture!=null?(bindColorTextureToFramebuffer(this.gl,this.outputTexture,this.framebuffer),this.debug&&validateFramebuffer(this.gl)):unbindColorTextureFromFramebuffer(this.gl,this.framebuffer)}downloadMatrixDriver(s,o){this.bindTextureToFrameBuffer(s);const a=o();return this.unbindTextureToFrameBuffer(),a}setOutputMatrixTextureDriver(s,o,a){this.throwIfDisposed();const c=this.gl;bindColorTextureToFramebuffer(c,s,this.framebuffer),this.debug&&validateFramebuffer(c),this.outputTexture=s,callAndCheck(c,()=>c.viewport(0,0,o,a)),callAndCheck(c,()=>c.scissor(0,0,o,a))}setOutputMatrixWriteRegionDriver(s,o,a,c){this.throwIfDisposed(),callAndCheck(this.gl,()=>this.gl.scissor(s,o,a,c))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(this.program==null)throw new Error("No GPU program is currently set.")}}function linearSearchLastTrue(i){let s=0;for(;s<i.length&&i[s]();++s);return s-1}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const{addImpl:addImplCPU,bincountImpl:bincountImplCPU,bincountReduceImpl:bincountReduceImplCPU,bitwiseAndImpl:bitwiseAndImplCPU,castImpl:castImplCPU,ceilImpl:ceilImplCPU,concatImpl:concatImplCPU,equalImpl:equalImplCPU,expImpl:expImplCPU,expm1Impl:expm1ImplCPU,floorImpl:floorImplCPU,gatherNdImpl:gatherNdImplCPU,gatherV2Impl:gatherV2ImplCPU,greaterImpl:greaterImplCPU,greaterEqualImpl:greaterEqualImplCPU,lessImpl:lessImplCPU,lessEqualImpl:lessEqualImplCPU,linSpaceImpl:linSpaceImplCPU,logImpl:logImplCPU,maxImpl:maxImplCPU,maximumImpl:maximumImplCPU,minimumImpl:minimumImplCPU,multiplyImpl:multiplyImplCPU,negImpl:negImplCPU,notEqualImpl:notEqualImplCPU,prodImpl:prodImplCPU,raggedGatherImpl:raggedGatherImplCPU,raggedRangeImpl:raggedRangeImplCPU,raggedTensorToTensorImpl:raggedTensorToTensorImplCPU,rangeImpl:rangeImplCPU,rsqrtImpl:rsqrtImplCPU,scatterImpl:scatterImplCPU,sigmoidImpl:sigmoidImplCPU,simpleAbsImpl:simpleAbsImplCPU,sliceImpl:sliceImplCPU,sparseFillEmptyRowsImpl:sparseFillEmptyRowsImplCPU,sparseReshapeImpl:sparseReshapeImplCPU,sparseSegmentReductionImpl:sparseSegmentReductionImplCPU,sqrtImpl:sqrtImplCPU,staticRegexReplaceImpl:staticRegexReplaceImplCPU,stridedSliceImpl:stridedSliceImplCPU,stringNGramsImpl:stringNGramsImplCPU,stringSplitImpl:stringSplitImplCPU,stringToHashBucketFastImpl:stringToHashBucketFastImplCPU,subImpl:subImplCPU,tileImpl:tileImplCPU,topKImpl:topKImplCPU,transposeImpl:transposeImplCPU,uniqueImpl:uniqueImplCPU}=shared;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function getVecChannels(i,s){return["x","y","z","w","u","v"].slice(0,s).map(o=>`${i}.${o}`)}function getChannels(i,s){return s===1?[i]:getVecChannels(i,s)}function getSourceCoords$2(i,s){if(i===1)return"rc";let o="";for(let a=0;a<i;a++)o+=s[a],a<i-1&&(o+=",");return o}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class PackProgram{constructor(s){if(this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=s,this.rank=s.length,this.enableShapeUniforms=useShapeUniforms(this.outputShape.length),this.rank===0)this.userCode=`
        void main() {
          setOutput(vec4(getA(), 0., 0., 0.));
        }
      `;else{const o=getChannels("rc",this.rank),a=getCoordsDataType(this.rank),c=this.getOutOfBoundsCondition(o),d=this.getSetup(o),g=this.getOutput(o);this.userCode=`
        void main() {
          ${a} rc = getOutputCoords();

          if(${c}) {
            setOutput(vec4(0));
          } else {
            ${d}

            setOutput(vec4(${g}));
          }
        }
      `}}getSourceCoordsArr(s){const o=[];for(let a=0;a<=1;a++)for(let c=0;c<=1;c++){let d=`${a===0?"r":"rp1"}, ${c===0?"c":"cp1"}`;for(let g=2;g<this.rank;g++)d=`${s[s.length-1-g]},`+d;o.push(d)}return o}getOutOfBoundsCondition(s){if(this.rank===1)return`rc > ${this.enableShapeUniforms?"outShape":this.outputShape[0]}`;let o="";for(let a=this.rank-2;a<this.rank;a++)o+=`${s[a]} >= ${this.enableShapeUniforms?`outShape[${a}]`:this.outputShape[a]}`,a<this.rank-1&&(o+="||");return o}getSetup(s){if(this.rank===1)return"";const o=s.slice(-2),a=this.enableShapeUniforms?`outShape[${this.rank} - 1]`:this.outputShape[this.rank-1],c=this.enableShapeUniforms?`outShape[${this.rank} - 2]`:this.outputShape[this.rank-2];return`
      int r = ${o[0]};
      int c = ${o[1]};
      int rp1 = r + 1;
      int cp1 = c + 1;

      bool cEdge = cp1 >= ${a};
      bool rEdge = rp1 >= ${c};
    `}getOutput(s){const o=this.getSourceCoordsArr(s);return this.rank===1?`getA(rc), (rc + 1 >= ${this.enableShapeUniforms?"outShape":this.outputShape[0]} ? 0. : getA(rc + 1)), 0, 0`:`getA(${o[0]}),
            cEdge ? 0. : getA(${o[1]}),
            rEdge ? 0. : getA(${o[2]}),
            rEdge || cEdge ? 0. : getA(${o[3]})`}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ReshapePackedProgram{constructor(s,o){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"}],this.outputShape=s,this.enableShapeUniforms=useShapeUniforms(this.outputShape.length);let a="";for(let c=0;c<4;c++){let d="thisRC = rc;";c%2===1&&(d+="thisRC.z += 1;"),c>1&&(d+="thisRC.y += 1;"),a+=`
        ${d}
        ${c>0?"if(thisRC.y < rows && thisRC.z < cols){":""}
          int flatIndex = getFlatIndex(thisRC);

          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);
          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));

          result[${c}] =
            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);
        ${c>0?"}":""}
      `}this.userCode=`
      ${getReshapedInputCoords(o,this.enableShapeUniforms)}
      ${this.enableShapeUniforms?getFlatIndexFrom3DOutput():getFlatIndexFrom3D(s)}

      void main() {
        ivec3 rc = getOutputCoords();

        vec4 result = vec4(0.);

        ivec3 thisRC;
        int rows = ${this.enableShapeUniforms?"outShape[1]":s[1]};
        int cols = ${this.enableShapeUniforms?"outShape[2]":s[2]};

        ${a}

        setOutput(result);
      }
    `}}function getReshapedInputCoords(i,s){return`
    ivec3 inputCoordsFromReshapedOutCoords(int index) {
      ${s?getLogicalCoordinatesFromFlatIndexByUniform(["r","c","d"],"inputShape"):getLogicalCoordinatesFromFlatIndex(["r","c","d"],i)}
      return ivec3(r, c, d);
    }
  `}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class TextureManager{constructor(s){this.gpgpu=s,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.usedTextures={},this.logEnabled=!1}acquireTexture(s,o,a){const c=getPhysicalFromLogicalTextureType(o,a),d=getKeyFromTextureShape(s,c,a);d in this.freeTextures||(this.freeTextures[d]=[]),d in this.usedTextures||(this.usedTextures[d]=[]);const g=computeBytes(s,c,this.gpgpu.gl,this.gpgpu.textureConfig,a);if(this.freeTextures[d].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=g,this.log();const j=this.freeTextures[d].pop();return this.usedTextures[d].push(j),j}let $;return c===PhysicalTextureType.PACKED_2X2_FLOAT32?$=this.gpgpu.createPackedMatrixTexture(s[0],s[1]):c===PhysicalTextureType.PACKED_2X2_FLOAT16?$=this.gpgpu.createFloat16PackedMatrixTexture(s[0],s[1]):c===PhysicalTextureType.UNPACKED_FLOAT32?$=this.gpgpu.createFloat32MatrixTexture(s[0],s[1]):c===PhysicalTextureType.UNPACKED_FLOAT16?$=this.gpgpu.createFloat16MatrixTexture(s[0],s[1]):c===PhysicalTextureType.PACKED_4X1_UNSIGNED_BYTE&&($=this.gpgpu.createUnsignedBytesMatrixTexture(s[0],s[1])),this.usedTextures[d].push($),this.numUsedTextures++,this._numBytesAllocated+=g,this.log(),$}releaseTexture(s,o,a,c){if(this.freeTextures==null)return;const d=getPhysicalFromLogicalTextureType(a,c),g=getKeyFromTextureShape(o,d,c);g in this.freeTextures||(this.freeTextures[g]=[]);const $=computeBytes(o,d,this.gpgpu.gl,this.gpgpu.textureConfig,c),j=env().getNumber("WEBGL_DELETE_TEXTURE_THRESHOLD");j!==-1&&this._numBytesAllocated>j?(this.gpgpu.deleteMatrixTexture(s.texture),this._numBytesAllocated-=$):(this.freeTextures[g].push(s),this.numFreeTextures++,this._numBytesFree+=$),this.numUsedTextures--;const _e=this.usedTextures[g],et=_e&&_e.indexOf(s);if(et==null||et<0)throw new Error("Cannot release a texture that was never provided by this texture manager");_e[et]=_e[_e.length-1],_e.pop(),this.log()}log(){if(!this.logEnabled)return;const s=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${s})`);const o=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*o)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(this.freeTextures!=null){for(const s in this.freeTextures)this.freeTextures[s].forEach(o=>{this.gpgpu.deleteMatrixTexture(o.texture)});for(const s in this.usedTextures)this.usedTextures[s].forEach(o=>{this.gpgpu.deleteMatrixTexture(o.texture)});this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}}function numBytesForInternalFormat(i,s){const o=i;if(s===o.R32F)return 4;if(s===o.R16F)return 2;if(s===o.RGBA32F)return 16;if(s===i.RGBA)return 16;if(s===o.RGBA16F)return 8;if(s===o.RGBA8)return 4;throw new Error(`Unknown internal format ${s}`)}function computeBytes(i,s,o,a,c){const d=internalFormatForPhysicalTexType(s,a);let g;if(c){const[j,_e]=getPackedMatrixTextureShapeWidthHeight(i[0],i[1]);g=j*_e}else{const[j,_e]=getUnpackedMatrixTextureShapeWidthHeight(i[0],i[1]);g=j*_e}const $=numBytesForInternalFormat(o,d);return g*$}function internalFormatForPhysicalTexType(i,s){switch(i){case PhysicalTextureType.PACKED_2X2_FLOAT32:return getInternalFormatForPackedMatrixTexture(s);case PhysicalTextureType.PACKED_2X2_FLOAT16:return getInternalFormatForFloat16PackedMatrixTexture(s);case PhysicalTextureType.UNPACKED_FLOAT32:return getInternalFormatForFloat32MatrixTexture(s);case PhysicalTextureType.UNPACKED_FLOAT16:return getInternalFormatForFloat16MatrixTexture(s);case PhysicalTextureType.PACKED_4X1_UNSIGNED_BYTE:return getInternalFormatForUnsignedBytesMatrixTexture(s);default:throw new Error(`Unknown physical texture type ${i}`)}}function getPhysicalTextureForRendering(i){return env().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?i?PhysicalTextureType.PACKED_2X2_FLOAT32:PhysicalTextureType.UNPACKED_FLOAT32:i?PhysicalTextureType.PACKED_2X2_FLOAT16:PhysicalTextureType.UNPACKED_FLOAT16}function getPhysicalFromLogicalTextureType(i,s){if(i===TextureUsage.UPLOAD)return PhysicalTextureType.PACKED_2X2_FLOAT32;if(i===TextureUsage.RENDER||i==null)return getPhysicalTextureForRendering(s);if(i===TextureUsage.DOWNLOAD||i===TextureUsage.PIXELS)return PhysicalTextureType.PACKED_4X1_UNSIGNED_BYTE;throw new Error(`Unknown logical texture type ${i}`)}function getKeyFromTextureShape(i,s,o){return`${i[0]}_${i[1]}_${s}_${o}`}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class UnaryOpProgram{constructor(s,o){this.variableNames=["A"],this.outputShape=s,this.enableShapeUniforms=useShapeUniforms(this.outputShape.length),this.userCode=`
      float unaryOperation(float x) {
        ${o}
      }

      void main() {
        float x = getAAtOutCoords();
        float y = unaryOperation(x);

        setOutput(y);
      }
    `}}const CHECK_NAN_SNIPPET$1="if (isnan(x)) return x;",LINEAR$1="return x;",ABS$1="return abs(x);",ELU$2="return (x >= 0.0) ? x : (exp(x) - 1.0);",RELU$2=CHECK_NAN_SNIPPET$1+`
  return (x < 0.0) ? 0.0 : x;
`,RELU6$2=CHECK_NAN_SNIPPET$1+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,CLONE="return x;",SIGMOID$2="return 1.0 / (1.0 + exp(-1.0 * x));";/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const LINEAR="return x;",ELU$1=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,RELU$1=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,RELU6$1=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,SIGMOID$1="return 1.0 / (1.0 + exp(-1.0 * x));";class UnaryOpPackedProgram{constructor(s,o){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=s,this.enableShapeUniforms=useShapeUniforms(this.outputShape.length),this.userCode=`
      vec4 unaryOperation(vec4 x) {
        ${o}
      }

      void main() {
        vec4 x = getAAtOutCoords();
        vec4 y = unaryOperation(x);

        setOutput(y);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class UnpackProgram{constructor(s){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=s,this.enableShapeUniforms=useShapeUniforms(this.outputShape.length);const o=s.length,a=getChannels("rc",o),c=getCoordsDataType(o),d=getSourceCoords$2(o,a),g=a.slice(-2),$=o<=1?"rc":`vec2(${g.join(",")})`;this.userCode=`
      void main() {
        ${c} rc = getOutputCoords();
        vec4 packedInput = getA(${d});

        setOutput(getChannel(packedInput, ${$}));
      }
    `}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const whereImpl=whereImpl$2,EPSILON_FLOAT32=1e-7,EPSILON_FLOAT16=1e-4,binaryCaches={};function getBinaryCache(i){return i in binaryCaches||(binaryCaches[i]={}),binaryCaches[i]}const CPU_HANDOFF_SIZE_THRESHOLD=env().getNumber("CPU_HANDOFF_SIZE_THRESHOLD"),BEFORE_PAGING_CONSTANT=600;function numMBBeforeWarning(){return env().global.screen==null?1024:env().global.screen.height*env().global.screen.width*window.devicePixelRatio*BEFORE_PAGING_CONSTANT/1024/1024}class MathBackendWebGL extends KernelBackend{nextDataId(){return MathBackendWebGL.nextDataId++}constructor(s){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!env().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");let o;if(s!=null){if(s instanceof GPGPUContext)o=s;else{const a=getWebGLContext(env().getNumber("WEBGL_VERSION"),s);o=new GPGPUContext(a)}this.binaryCache={},this.gpgpuCreatedLocally=!1}else{const a=getWebGLContext(env().getNumber("WEBGL_VERSION"));o=new GPGPUContext(a),this.binaryCache=getBinaryCache(env().getNumber("WEBGL_VERSION")),this.gpgpuCreatedLocally=!0}this.gpgpu=o,this.canvas=this.gpgpu.gl.canvas,this.textureManager=new TextureManager(this.gpgpu),this.numMBBeforeWarning=numMBBeforeWarning(),this.texData=new DataStorage(this,engine())}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}writeTexture(s,o,a,c,d,g){const $=this.makeTensorInfo(o,a),j=this.texData.get($.dataId);j.isPacked=!1,j.texture={texture:s,texShape:[c,d]},j.texShape=[c,d];const _e=getShapeAs3D(o),et=new EncodeMatrixProgram(_e,!1,g),_=this.runWebGLProgram(et,[$],a,[[c,d]]);return _.shape=o,j.texture=null,this.disposeIntermediateTensorInfo($),_.dataId}write(s,o,a){if((env().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||env().getBool("DEBUG"))&&this.checkNumericalProblems(s),a==="complex64"&&s!=null)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const c={id:this.nextDataId()};return this.texData.set(c,{shape:o,dtype:a,values:s,usage:TextureUsage.UPLOAD,refCount:1}),c}refCount(s){return this.texData.has(s)?this.texData.get(s).refCount:0}incRef(s){const o=this.texData.get(s);o.refCount++}decRef(s){if(this.texData.has(s)){const o=this.texData.get(s);o.refCount--}}move(s,o,a,c,d){if(env().getBool("DEBUG")&&this.checkNumericalProblems(o),c==="complex64")throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(s,{shape:a,dtype:c,values:o,usage:TextureUsage.UPLOAD,refCount:d})}disposeIntermediateTensorInfo(s){this.disposeData(s.dataId)}readSync(s){const o=this.texData.get(s),{values:a,dtype:c,complexTensorInfos:d,slice:g,shape:$,isPacked:j}=o;if(g!=null){let b;j?b=new UnaryOpPackedProgram($,CLONE):b=new UnaryOpProgram($,CLONE);const tt=this.runWebGLProgram(b,[{dataId:s,shape:$,dtype:c}],c),nt=this.readSync(tt.dataId);return this.disposeIntermediateTensorInfo(tt),nt}if(a!=null)return this.convertAndCacheOnCPU(s);if(c==="string")return a;const _e=this.activeTimers!=null;let et;_e&&(et=now());let _;if(c==="complex64"){const b=this.readSync(d.real.dataId),tt=this.readSync(d.imag.dataId);_=mergeRealAndImagArrays(b,tt)}else _=this.getValuesFromTexture(s);return _e&&(this.downloadWaitMs+=now()-et),this.convertAndCacheOnCPU(s,_)}async read(s){if(this.pendingRead.has(s)){const nt=this.pendingRead.get(s);return new Promise(rt=>nt.push(rt))}const o=this.texData.get(s),{values:a,shape:c,slice:d,dtype:g,complexTensorInfos:$,isPacked:j}=o;if(d!=null){let nt;j?nt=new UnaryOpPackedProgram(c,CLONE):nt=new UnaryOpProgram(c,CLONE);const rt=this.runWebGLProgram(nt,[{dataId:s,shape:c,dtype:g}],g),st=this.read(rt.dataId);return this.disposeIntermediateTensorInfo(rt),st}if(a!=null)return this.convertAndCacheOnCPU(s);if(env().getBool("DEBUG")&&!env().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&env().getNumber("WEBGL_VERSION")===2)throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let _e=null,et;if(g!=="complex64"&&env().get("WEBGL_BUFFER_SUPPORTED")){et=this.decode(s);const nt=this.texData.get(et.dataId);_e=this.gpgpu.createBufferFromTexture(nt.texture.texture,...getDenseTexShape(c))}this.pendingRead.set(s,[]),g!=="complex64"&&await this.gpgpu.createAndWaitForFence();let _;if(g==="complex64"){const nt=await Promise.all([this.read($.real.dataId),this.read($.imag.dataId)]),rt=nt[0],st=nt[1];_=mergeRealAndImagArrays(rt,st)}else if(_e==null)_=this.getValuesFromTexture(s);else{const nt=sizeFromShape(c);_=this.gpgpu.downloadFloat32MatrixFromBuffer(_e,nt)}if(et!=null&&this.disposeIntermediateTensorInfo(et),_e!=null){const nt=this.gpgpu.gl;callAndCheck(nt,()=>nt.deleteBuffer(_e))}const b=this.convertAndCacheOnCPU(s,_),tt=this.pendingRead.get(s);return this.pendingRead.delete(s),tt.forEach(nt=>nt(b)),this.pendingDisposal.has(s)&&(this.pendingDisposal.delete(s),this.disposeData(s)&&engine().removeDataId(s,this),this.pendingDeletes--),b}readToGPU(s,o={}){const a=this.texData.get(s),{values:c,shape:d,slice:g,dtype:$,isPacked:j,texture:_e}=a;if($==="complex64")throw new Error("Does not support reading texture for complex64 dtype.");if(g!=null){let tt;j?tt=new UnaryOpPackedProgram(d,CLONE):tt=new UnaryOpProgram(d,CLONE);const nt=this.runWebGLProgram(tt,[{dataId:s,shape:d,dtype:$}],$),rt=this.readToGPU(nt,o);return this.disposeIntermediateTensorInfo(nt),rt}if(_e==null)throw c!=null?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");const et=this.decode(s,o.customTexShape),_=engine().makeTensorFromTensorInfo(et),b=this.texData.get(et.dataId);return Object.assign({tensorRef:_},b.texture)}bufferSync(s){const o=this.readSync(s.dataId);if(s.dtype==="string")try{const a=o.map(c=>decodeString(c));return buffer(s.shape,s.dtype,a)}catch{throw new Error("Failed to decode encoded string bytes into utf-8")}return buffer(s.shape,s.dtype,o)}checkNumericalProblems(s){if(s!=null)for(let o=0;o<s.length;o++){const a=s[o];if(!canBeRepresented(a))throw env().getBool("WEBGL_RENDER_FLOAT32_CAPABLE")?Error(`The value ${a} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`):Error(`The value ${a} cannot be represented on this device.`)}}getValuesFromTexture(s){const{shape:o,dtype:a,isPacked:c}=this.texData.get(s),d=sizeFromShape(o);if(env().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){const b=this.decode(s),tt=this.texData.get(b.dataId),nt=this.gpgpu.downloadMatrixFromPackedTexture(tt.texture.texture,...getDenseTexShape(o)).subarray(0,d);return this.disposeIntermediateTensorInfo(b),nt}const g=env().getBool("WEBGL_PACK")&&c===!0,$=g?getShapeAs3D(o):o,j=g?new EncodeFloatPackedProgram($):new EncodeFloatProgram($),_e=this.runWebGLProgram(j,[{shape:$,dtype:a,dataId:s}],"float32"),et=this.texData.get(_e.dataId),_=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(et.texture.texture,et.texShape[0],et.texShape[1]).subarray(0,d);return this.disposeIntermediateTensorInfo(_e),_}timerAvailable(){return env().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}time(s){const o=this.activeTimers,a=[];let c=!1;this.programTimersStack==null?(this.programTimersStack=a,c=!0):this.activeTimers.push(a),this.activeTimers=a,s();const d=flatten$1(this.activeTimers.map(j=>j.query)).filter(j=>j!=null),g=flatten$1(this.activeTimers.map(j=>j.name)).filter(j=>j!=null);this.activeTimers=o,c&&(this.programTimersStack=null);const $={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};return(async()=>{if(env().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){const j=await Promise.all(d);$.kernelMs=sum$3(j),$.getExtraProfileInfo=()=>j.map((_e,et)=>({name:g[et],ms:_e})).map(_e=>`${_e.name}: ${_e.ms}`).join(", ")}else $.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,$})()}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return env().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:now(),endMs:null}}endTimer(s){return env().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),s):(s.endMs=now(),s)}async getQueryTime(s){if(env().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(s);const o=s;return o.endMs-o.startMs}disposeData(s,o=!1){if(this.pendingDisposal.has(s))return!1;if(!this.texData.has(s))return!0;if(o?this.texData.get(s).refCount=0:this.texData.get(s).refCount--,!o&&this.texData.get(s).refCount>0)return!1;if(this.pendingRead.has(s))return this.pendingDisposal.add(s),this.pendingDeletes++,!1;this.releaseGPUData(s);const{complexTensorInfos:a}=this.texData.get(s);return a!=null&&(this.disposeData(a.real.dataId,o),this.disposeData(a.imag.dataId,o)),this.texData.delete(s),!0}releaseGPUData(s){const{texture:o,dtype:a,texShape:c,usage:d,isPacked:g,slice:$}=this.texData.get(s),j=$&&$.origDataId||s,_e=this.dataRefCount.get(j);_e>1?this.dataRefCount.set(j,_e-1):(this.dataRefCount.delete(j),o!=null&&(this.numBytesInGPU-=this.computeBytes(c,a),this.textureManager.releaseTexture(o,c,d,g)));const et=this.texData.get(s);et.texture=null,et.texShape=null,et.isPacked=!1,et.slice=null}getTexture(s){return this.uploadToGPU(s),this.texData.get(s).texture.texture}getDataInfo(s){return this.texData.get(s)}shouldExecuteOnCPU(s,o=CPU_HANDOFF_SIZE_THRESHOLD){return env().getBool("WEBGL_CPU_FORWARD")&&s.every(a=>this.texData.get(a.dataId).texture==null&&sizeFromShape(a.shape)<o)}getGPGPUContext(){return this.gpgpu}where(s){warn("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");const o=s.dataSync();return whereImpl(s.shape,o)}packedUnaryOp(s,o,a){const c=new UnaryOpPackedProgram(s.shape,o),d=this.compileAndRun(c,[s],a);return engine().makeTensorFromTensorInfo(d)}abs(s){if(this.shouldExecuteOnCPU([s])&&s.dtype!=="complex64"){const c=simpleAbsImplCPU(this.texData.get(s.dataId).values);return this.makeOutput(s.shape,s.dtype,c)}if(env().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(s,ABS$1,s.dtype);const o=new UnaryOpProgram(s.shape,ABS$1),a=this.compileAndRun(o,[s]);return engine().makeTensorFromTensorInfo(a)}makeTensorInfo(s,o,a){let c;if(o==="string"&&a!=null&&a.length>0&&isString(a[0])){const d=a.map(g=>encodeString(g));c=this.write(d,s,o)}else c=this.write(a,s,o);return this.texData.get(c).usage=null,{dataId:c,shape:s,dtype:o}}makeOutput(s,o,a){return engine().makeTensorFromTensorInfo(this.makeTensorInfo(s,o,a),this)}unpackTensor(s){const o=new UnpackProgram(s.shape);return this.runWebGLProgram(o,[s],s.dtype)}packTensor(s){const o=new PackProgram(s.shape);return this.runWebGLProgram(o,[s],s.dtype,null,!0)}packedReshape(s,o){const a=[getBatchDim(s.shape),...getRowsCols(s.shape)],c={dtype:s.dtype,shape:a,dataId:s.dataId},d=[getBatchDim(o),...getRowsCols(o)],g=new ReshapePackedProgram(d,a),$=!0,j=[a],_e=this.runWebGLProgram(g,[c],s.dtype,j,$);return{dataId:_e.dataId,shape:o,dtype:_e.dtype}}decode(s,o){const a=this.texData.get(s),{isPacked:c,shape:d,dtype:g}=a;if(o!=null){const b=sizeFromShape(d),tt=o[0]*o[1]*4;assert$1(b<=tt,()=>"customTexShape is too small. Row * Column * 4 should be equal or larger than the size of the tensor data.")}const $=getShapeAs3D(d);let j;c?j=new DecodeMatrixPackedProgram($):j=new DecodeMatrixProgram($);const _e=!0,et=[o??getDenseTexShape($)],_=this.runWebGLProgram(j,[{shape:$,dtype:g,dataId:s}],g,et,_e,o);return{dtype:g,shape:d,dataId:_.dataId}}runWebGLProgram(s,o,a,c,d=!1,g){const $=this.makeTensorInfo(s.outputShape,a),j=this.texData.get($.dataId);if(s.packedOutput&&(j.isPacked=!0),s.outPackingScheme===PackingScheme.DENSE){const ot=g??getDenseTexShape(s.outputShape);j.texShape=ot.map(it=>it*2)}if(s.outTexUsage!=null&&(j.usage=s.outTexUsage),sizeFromShape($.shape)===0)return j.values=getTypedArrayFromDType($.dtype,0),$;const _e=[],et=o.map(ot=>{if(ot.dtype==="complex64")throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let it=this.texData.get(ot.dataId);if(it.texture==null){if(!s.packedInputs&&sizeFromShape(ot.shape)<=env().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:ot.shape,texData:null,isUniform:!0,uniformValues:it.values};s.packedInputs&&(it.isPacked=!0,it.shape=ot.shape)}if(this.uploadToGPU(ot.dataId),!!it.isPacked!=!!s.packedInputs)ot=it.isPacked?this.unpackTensor(ot):this.packTensor(ot),_e.push(ot),it=this.texData.get(ot.dataId);else if(it.isPacked&&!isReshapeFree(it.shape,ot.shape)){const at=ot,lt=ot.shape;ot.shape=it.shape,ot=this.packedReshape(ot,lt),_e.push(ot),it=this.texData.get(ot.dataId),at.shape=lt}return{shape:ot.shape,texData:it,isUniform:!1}});this.uploadToGPU($.dataId);const _={shape:$.shape,texData:j,isUniform:!1},b=makeShaderKey(s,et,_),tt=this.getAndSaveBinary(b,()=>compileProgram(this.gpgpu,s,et,_)),nt=this.activeTimers!=null;let rt;nt&&(rt=this.startTimer()),env().get("ENGINE_COMPILE_ONLY")||runProgram(this.gpgpu,tt,et,_,c),_e.forEach(ot=>this.disposeIntermediateTensorInfo(ot)),nt&&(rt=this.endTimer(rt),this.activeTimers.push({name:s.constructor.name,query:this.getQueryTime(rt)}));const st=env().getNumber("WEBGL_FLUSH_THRESHOLD");if(st>0){const ot=now();ot-this.lastGlFlushTime>st&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=ot)}if(!env().getBool("WEBGL_LAZILY_UNPACK")&&j.isPacked&&d===!1){const ot=this.unpackTensor($);return this.disposeIntermediateTensorInfo($),ot}return $}compileAndRun(s,o,a,c,d=!1){return a=a||o[0].dtype,this.runWebGLProgram(s,o,a,c,d)}getAndSaveBinary(s,o){return s in this.binaryCache||(this.binaryCache[s]=o()),this.binaryCache[s]}getTextureManager(){return this.textureManager}dispose(){this.disposed||(env().getBool("IS_TEST")||Object.keys(this.binaryCache).forEach(o=>{this.gpgpu.deleteProgram(this.binaryCache[o].webGLProgram),delete this.binaryCache[o]}),this.textureManager.dispose(),this.canvas!=null&&typeof HTMLCanvasElement<"u"&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)}floatPrecision(){return this.floatPrecisionValue==null&&(this.floatPrecisionValue=tidy(()=>{if(!env().get("WEBGL_RENDER_FLOAT32_ENABLED")){const s=env().getBool("DEBUG");env().set("DEBUG",!1);const o=this.abs(scalar(1e-8)).dataSync()[0];if(env().set("DEBUG",s),o>0)return 32}return 16})),this.floatPrecisionValue}epsilon(){return this.floatPrecision()===32?EPSILON_FLOAT32:EPSILON_FLOAT16}uploadToGPU(s){const o=this.texData.get(s),{shape:a,dtype:c,values:d,texture:g,usage:$,isPacked:j}=o;if(g!=null)return;const _e=this.activeTimers!=null;let et;_e&&(et=now());let _=o.texShape;if(_==null&&(_=getTextureShapeFromLogicalShape(a,j),o.texShape=_),d!=null){const b=getShapeAs3D(a);let tt,nt=_[1],rt=_[0];const st=d instanceof Uint8Array||d instanceof Uint8ClampedArray;(j||!st)&&([nt,rt]=getPackedMatrixTextureShapeWidthHeight(_[0],_[1])),j?tt=new EncodeMatrixPackedProgram(b,st):tt=new EncodeMatrixProgram(b,st);const ot=st?[rt,nt]:_,it=this.makeTensorInfo(ot,c),at=this.texData.get(it.dataId);st?at.usage=TextureUsage.PIXELS:at.usage=TextureUsage.UPLOAD,at.texShape=ot,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(it.dataId),nt,rt,d);const lt=[[rt,nt]],ct=this.runWebGLProgram(tt,[it],c,lt,!0),dt=this.texData.get(ct.dataId);o.texShape=dt.texShape,o.isPacked=dt.isPacked,o.usage=dt.usage,env().get("ENGINE_COMPILE_ONLY")?this.disposeData(ct.dataId):(o.texture=dt.texture,o.values=null,this.texData.delete(ct.dataId)),this.disposeIntermediateTensorInfo(it),_e&&(this.uploadWaitMs+=now()-et)}else{const b=this.acquireTexture(_,$,c,j);o.texture=b}}convertAndCacheOnCPU(s,o){const a=this.texData.get(s),{dtype:c}=a;return o!=null&&(a.values=float32ToTypedArray(o,c)),a.values}acquireTexture(s,o,a,c){if(this.numBytesInGPU+=this.computeBytes(s,a),!this.warnedAboutMemory&&this.numBytesInGPU>this.numMBBeforeWarning*1024*1024){const d=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${d} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(s,o,c)}computeBytes(s,o){return s[0]*s[1]*bytesPerElement(o)}checkCompileCompletion(){for(const[,s]of Object.entries(this.binaryCache))this.checkCompletion_(s)}async checkCompileCompletionAsync(){const s=[];if(this.gpgpu.parallelCompilationExtension){for(const[,o]of Object.entries(this.binaryCache))s.push(this.checkCompletionAsync_(o));return Promise.all(s)}else{for(const[,o]of Object.entries(this.binaryCache)){const a=new Promise(c=>{try{this.checkCompletion_(o),c(!0)}catch(d){throw d}});s.push(a)}return Promise.all(s)}}async checkCompletionAsync_(s){return this.gpgpu.gl.getProgramParameter(s.webGLProgram,this.gpgpu.parallelCompilationExtension.COMPLETION_STATUS_KHR)?this.checkCompletion_(s):(await nextFrame(),this.checkCompletionAsync_(s))}checkCompletion_(s){if(this.gpgpu.gl.getProgramParameter(s.webGLProgram,this.gpgpu.gl.LINK_STATUS)===!1)throw console.log(this.gpgpu.gl.getProgramInfoLog(s.webGLProgram)),this.gpgpu.gl.getShaderParameter(s.fragmentShader,this.gpgpu.gl.COMPILE_STATUS)===!1?(logShaderSourceAndInfoLog(s.source,this.gpgpu.gl.getShaderInfoLog(s.fragmentShader)),new Error("Failed to compile fragment shader.")):new Error("Failed to link vertex and fragment shaders.");return!0}getUniformLocations(){for(const s of Object.values(this.binaryCache)){this.gpgpu.buildVao(s.webGLProgram);const{variablesLocations:o,customUniformLocations:a,infLoc:c,nanLoc:d,outShapeLocation:g,outShapeStridesLocation:$,outTexShapeLocation:j}=getUniformLocations(this.gpgpu,s.program,s.webGLProgram);s.variablesLocations=o,s.customUniformLocations=a,s.infLoc=c,s.nanLoc=d,s.outShapeLocation=g,s.outShapeStridesLocation=$,s.outTexShapeLocation=j}}createTensorFromGPUData(s,o,a){s.channels=s.channels||"RGBA";const{texture:c,height:d,width:g,channels:$}=s,j=engine().backend;if(!j.gpgpu.gl.isTexture(c))throw new Error("The texture is invalid. Also, please make sure the texture and the TFJS WebGL backend are using the same canvas. If you want to use your own custom canvas, you have to create and use the custom TFJS WebGL backend created from the canvas through 'new tf.MathBackendWebGL(customCanvas)'.");const _e=j.writeTexture(c,o,a,d,g,$);return engine().makeTensorFromDataId(_e,o,a,j)}}MathBackendWebGL.nextDataId=0;function float32ToTypedArray(i,s){if(s==="float32"||s==="complex64")return i;if(s==="int32"||s==="bool"){const o=s==="int32"?new Int32Array(i.length):new Uint8Array(i.length);for(let a=0;a<o.length;++a)o[a]=Math.round(i[a]);return o}else throw new Error(`Unknown dtype ${s}`)}/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */isBrowser()&&registerBackend("webgl",()=>new MathBackendWebGL,2);/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const CHECK_NAN_SNIPPET=`
  if (isnan(a)) return a;
  if (isnan(b)) return b;
`;class BinaryOpProgram{constructor(s,o,a){this.variableNames=["A","B"],this.outputShape=assertAndGetBroadcastShape(o,a),this.enableShapeUniforms=useShapeUniforms(this.outputShape.length),this.userCode=`
      float binaryOperation(float a, float b) {
        ${s}
      }

      void main() {
        float a = getAAtOutCoords();
        float b = getBAtOutCoords();
        setOutput(binaryOperation(a, b));
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const CHECK_NAN_SNIPPET_PACKED=`
  result.r = isNaN.r ? NAN : result.r;
  result.g = isNaN.g ? NAN : result.g;
  result.b = isNaN.b ? NAN : result.b;
  result.a = isNaN.a ? NAN : result.a;
`;class BinaryOpPackedProgram{constructor(s,o,a,c=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=assertAndGetBroadcastShape(o,a);const d=this.outputShape.length;this.enableShapeUniforms=useShapeUniforms(d);let g="";if(c)if(d===0||sizeFromShape(this.outputShape)===1)g=`
          result.y = 0.;
          result.z = 0.;
          result.w = 0.;
        `;else if(g=`
          ${getCoordsDataType(d)} coords = getOutputCoords();
        `,d===1)this.enableShapeUniforms?g+=`
            result.y = (coords + 1) >= outShape ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `:g+=`
            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `;else{const j=getChannels("coords",d);this.enableShapeUniforms?g+=`
            bool nextRowOutOfBounds =
              (${j[d-2]} + 1) >= outShape[${d} - 2];
            bool nextColOutOfBounds =
              (${j[d-1]} + 1) >= outShape[${d} - 1];
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `:g+=`
            bool nextRowOutOfBounds =
              (${j[d-2]} + 1) >= ${this.outputShape[d-2]};
            bool nextColOutOfBounds =
              (${j[d-1]} + 1) >= ${this.outputShape[d-1]};
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `}this.userCode=`
      vec4 binaryOperation(vec4 a, vec4 b) {
        ${s}
      }

      void main() {
        vec4 a = getAAtOutCoords();
        vec4 b = getBAtOutCoords();

        vec4 result = binaryOperation(a, b);
        ${g}

        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function identity(i){const{inputs:s,backend:o}=i,{x:a}=s;return o.incRef(a.dataId),{dataId:a.dataId,shape:a.shape,dtype:a.dtype}}const identityConfig={kernelName:Identity$1,backendName:"webgl",kernelFunc:identity};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function complex(i){const{inputs:s,backend:o}=i,{real:a,imag:c}=s,d=o.makeTensorInfo(a.shape,"complex64"),g=o.texData.get(d.dataId),$=identity({inputs:{x:a},backend:o}),j=identity({inputs:{x:c},backend:o});return g.complexTensorInfos={real:$,imag:j},d}const complexConfig={kernelName:Complex,backendName:"webgl",kernelFunc:complex};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const LEAKYRELU="return (a < 0.) ? b * a : a;",LEAKYRELU_PACKED=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`;function leakyRelu(i){const{inputs:s,backend:o,attrs:a}=i,{x:c}=s,{alpha:d}=a,g=o.makeTensorInfo([],"float32",createScalarValue(d,"float32")),$=env().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new BinaryOpPackedProgram(LEAKYRELU_PACKED,c.shape,g.shape):new BinaryOpProgram(LEAKYRELU,c.shape,g.shape),j=o.runWebGLProgram($,[c,g],"float32");return o.disposeIntermediateTensorInfo(g),j}const leakyReluConfig={kernelName:LeakyRelu,backendName:"webgl",kernelFunc:leakyRelu};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const PRELU="return (a < 0.) ? b * a : a;",PRELU_PACKED=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`;function prelu(i){const{inputs:s,backend:o}=i,{x:a,alpha:c}=s,d=env().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new BinaryOpPackedProgram(PRELU_PACKED,a.shape,c.shape):new BinaryOpProgram(PRELU,a.shape,c.shape);return o.runWebGLProgram(d,[a,c],"float32")}const preluConfig={kernelName:Prelu,backendName:"webgl",kernelFunc:prelu};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const CHECK_NAN_SNIPPET_UNARY="if (isnan(x)) return x;";function unaryKernelFunc({opSnippet:i,packedOpSnippet:s,cpuKernelImpl:o,dtype:a}){return({inputs:c,backend:d})=>{const{x:g}=c,$=d,j=a||g.dtype;if($.shouldExecuteOnCPU([g])&&o!=null){const _=$.texData.get(g.dataId),b=o(_.values,j);return $.makeTensorInfo(g.shape,j,b)}const _e=env().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&s!=null;let et;return _e?et=new UnaryOpPackedProgram(g.shape,s):et=new UnaryOpProgram(g.shape,i),$.runWebGLProgram(et,[g],j)}}function binaryKernelFunc({opSnippet:i,packedOpSnippet:s,checkOutOfBounds:o=!1,supportsComplex:a=!1,cpuKernelImpl:c,dtype:d}){return({inputs:g,backend:$})=>{const{a:j,b:_e}=g,et=$;if(a&&j.dtype==="complex64"){const nt=et.texData.get(j.dataId),rt=et.texData.get(_e.dataId),[st,ot]=[[nt.complexTensorInfos.real,rt.complexTensorInfos.real],[nt.complexTensorInfos.imag,rt.complexTensorInfos.imag]].map(at=>{const[lt,ut]=at,ct={dataId:lt.dataId,dtype:lt.dtype,shape:j.shape},dt={dataId:ut.dataId,dtype:ut.dtype,shape:_e.shape},pt=new BinaryOpProgram(i,j.shape,_e.shape);return et.runWebGLProgram(pt,[ct,dt],upcastType(lt.dtype,ut.dtype))}),it=complex({inputs:{real:st,imag:ot},backend:et});return et.disposeIntermediateTensorInfo(st),et.disposeIntermediateTensorInfo(ot),it}const _=d||upcastType(j.dtype,_e.dtype);if((j.dtype==="string"||_e.dtype==="string"||et.shouldExecuteOnCPU([j,_e]))&&c!=null){const nt=et.texData.get(j.dataId).values,rt=et.texData.get(_e.dataId).values,st=j.dtype==="string"?fromUint8ToStringArray(nt):nt,ot=j.dtype==="string"?fromUint8ToStringArray(rt):rt,[it,at]=c(j.shape,_e.shape,st,ot,_),lt=et.makeTensorInfo(at,_),ut=et.texData.get(lt.dataId);return ut.values=it,lt}const b=env().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&s!=null;let tt;return b?tt=new BinaryOpPackedProgram(s,j.shape,_e.shape,o):tt=new BinaryOpProgram(i,j.shape,_e.shape),et.runWebGLProgram(tt,[j,_e],_)}}function mapActivationToShaderProgram(i,s=!1){if(i==="linear")return s?LINEAR:LINEAR$1;if(i==="relu")return s?RELU$1:RELU$2;if(i==="elu")return s?ELU$1:ELU$2;if(i==="relu6")return s?RELU6$1:RELU6$2;if(i==="prelu")return s?PRELU_PACKED:PRELU;if(i==="leakyrelu")return s?LEAKYRELU_PACKED:LEAKYRELU;if(i==="sigmoid")return s?SIGMOID$1:SIGMOID$2;throw new Error(`Activation ${i} has not been implemented for the WebGL backend.`)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class MatMulPackedProgram{constructor(s,o,a,c=!1,d=!1,g=!1,$=null,j=!1,_e=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=a,this.enableShapeUniforms=useShapeUniforms(this.outputShape.length);const et=c?s[1]:s[2],_=Math.ceil(et/2),b=c?"i * 2, rc.y":"rc.y, i * 2",tt=d?"rc.z, i * 2":"i * 2, rc.z",nt=c?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],rt=d?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"];let st="",ot="";$&&(j?st=`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${$}
        }`:_e?st=`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${$}
        }`:st=`vec4 activation(vec4 x) {
          ${$}
        }`,ot="result = activation(result);");const it=g?"result += getBiasAtOutCoords();":"";g&&this.variableNames.push("bias"),j&&this.variableNames.push("preluActivationWeights"),_e&&this.variableNames.push("leakyreluAlpha");let at="rc.x",lt="rc.x";s[0]<o[0]?at=`imod(rc.x, ${s[0]})`:o[0]<s[0]&&(lt=`imod(rc.x, ${o[0]})`),this.userCode=`
      ${st}
      // Don't use uniform for sharedDimensionPacked for performance.
      const float sharedDimension = ${_}.0;

      vec4 dot2x2ARowBCol(ivec3 rc) {
        vec4 result = vec4(0);
        int batchA = ${at};
        int batchB = ${lt};
        for (int i = 0; i < ${_}; i++) {
          vec4 a = getMatrixA(batchA, ${b});
          vec4 b = getMatrixB(batchB, ${tt});

          // These swizzled products need to be separately added.
          // See: https://github.com/tensorflow/tfjs/issues/1735
          result += (${nt[0]} * ${rt[0]});
          result += (${nt[1]} * ${rt[1]});
        }
        return result;
      }

      void main() {
        ivec3 rc = getOutputCoords();
        vec4 result = dot2x2ARowBCol(rc);

        ${it}

        ${ot}

        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const COMPLEX_MULTIPLY={REAL:"return areal * breal - aimag * bimag;",IMAG:"return areal * bimag + aimag * breal;"};class BinaryOpComplexProgram{constructor(s,o,a){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=assertAndGetBroadcastShape(o,a),this.userCode=`
      float binaryOpComplex(
          float areal, float aimag, float breal, float bimag) {
        ${s}
      }

      void main() {
        float areal = getARealAtOutCoords();
        float aimag = getAImagAtOutCoords();
        float breal = getBRealAtOutCoords();
        float bimag = getBImagAtOutCoords();
        setOutput(binaryOpComplex(areal, aimag, breal, bimag));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const MUL="return a * b;";function multiply(i){const{inputs:s,backend:o}=i,{a,b:c}=s,d=upcastType(a.dtype,c.dtype);if(a.dtype==="complex64"){const $=o.texData.get(a.dataId),j=o.texData.get(c.dataId),_e=new BinaryOpComplexProgram(COMPLEX_MULTIPLY.REAL,a.shape,c.shape),et=new BinaryOpComplexProgram(COMPLEX_MULTIPLY.IMAG,a.shape,c.shape),_=[{dataId:$.complexTensorInfos.real.dataId,dtype:$.complexTensorInfos.real.dtype,shape:a.shape},{dataId:$.complexTensorInfos.imag.dataId,dtype:$.complexTensorInfos.imag.dtype,shape:a.shape},{dataId:j.complexTensorInfos.real.dataId,dtype:j.complexTensorInfos.real.dtype,shape:c.shape},{dataId:j.complexTensorInfos.imag.dataId,dtype:j.complexTensorInfos.imag.dtype,shape:c.shape}],b=o.runWebGLProgram(_e,_,"float32"),tt=o.runWebGLProgram(et,_,"float32"),nt=complex({inputs:{real:b,imag:tt},backend:o});return o.disposeIntermediateTensorInfo(b),o.disposeIntermediateTensorInfo(tt),nt}if(o.shouldExecuteOnCPU([a,c])){const $=o.texData.get(a.dataId),j=o.texData.get(c.dataId),[_e,et]=multiplyImplCPU(a.shape,c.shape,$.values,j.values,d),_=o.makeTensorInfo(et,d),b=o.texData.get(_.dataId);return b.values=_e,_}let g;return env().getBool("WEBGL_PACK_BINARY_OPERATIONS")?g=new BinaryOpPackedProgram(MUL,a.shape,c.shape):g=new BinaryOpProgram(MUL,a.shape,c.shape),o.runWebGLProgram(g,[a,c],d)}const multiplyConfig={kernelName:Multiply$1,backendName:"webgl",kernelFunc:multiply};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function packedReshape(i,s,o){const a=[getBatchDim(i.shape),...getRowsCols(i.shape)],c={dtype:i.dtype,shape:a,dataId:i.dataId},d=[getBatchDim(s),...getRowsCols(s)],g=new ReshapePackedProgram(d,a),$=!0,j=[a],_e=o.runWebGLProgram(g,[c],i.dtype,j,$);return{dataId:_e.dataId,shape:s,dtype:_e.dtype}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function reshape(i){const{inputs:s,backend:o,attrs:a}=i,{x:c}=s,{shape:d}=a,g=o,$=sizeFromShape(c.shape),j=inferFromImplicitShape(d,$),_e=sizeFromShape(j);assert$1($===_e,()=>`The new shape (${j}) has ${_e} elements and the old shape (${c.shape}) has ${$} elements. The new shape and old shape must have the same number of elements.`);const et=g.texData.get(c.dataId);return et.isPacked&&!isReshapeFree(c.shape,j)&&!(et.texture!==null&&isReshapeFree(et.shape,j))?packedReshape(c,j,g):(g.incRef(c.dataId),{dataId:c.dataId,shape:j,dtype:c.dtype})}const reshapeConfig={kernelName:Reshape$1,backendName:"webgl",kernelFunc:reshape};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class MeanProgram{constructor(s,o){this.variableNames=["x"];const{windowSize:a,batchSize:c,inSize:d,outSize:g}=s;this.outputShape=[c,g];const $=Math.floor(a/4)*4,j=a%4;let _e="sumValue += dot(values, ones);";if(o!=null){const _=1/o;_e=`sumValue += dot(values * ${isInt(_)?_.toPrecision(2):_}, ones);`}let et="";d%a>0&&(et=`
        if (inIdx < 0 || inIdx >= ${d}) {
          return 0.0;
        }
      `),this.userCode=`
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${et}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${a};

        float sumValue = 0.0;

        for (int i = 0; i < ${$}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${_e}
        }

        int inIdx = inOffset + ${$};
        if (${j===1}) {
          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);

          ${_e}
        } else if (${j===2}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1), 0.0, 0.0);

          ${_e}
        } else if (${j===3}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2), 0.0);

          ${_e}
        }
        setOutput(sumValue);
      }
    `}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ReduceProgram{constructor(s,o){this.variableNames=["x"];const{windowSize:a,batchSize:c,inSize:d,outSize:g}=s;this.outputShape=[c,g];let $="0.0",j="";o==="prod"?$="1.0":o==="min"?($="1.0 / 1e-20",j="min"):o==="max"&&($="-1.0 / 1e-20",j="max");let _e=`${o}(${o}(${o}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;o==="sum"?_e="sumValue":o==="prod"?_e="prodValue":o==="all"?_e="allValue":o==="any"&&(_e="anyValue");const et=Math.floor(a/4)*4,_=a%4;let b=`
      if (${o==="sum"}) {
        sumValue += dot(values, ones);
      } else if (${o==="prod"}) {
        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);
        prodValue *= tmp[0] * tmp[1];
      } else {
        minMaxValue = ${j}(values, minMaxValue);
        if (${o==="min"} || ${o==="max"}) {
          minMaxValue = ${j}(values, minMaxValue);
          bvec4 isNaN = isnan(values);
          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {
            minMaxValue = vec4(NAN);
          }
        }
      }
    `,tt="vec4";o==="all"?($="1.0",b=`
        bool reducedAllValue = all(values);
        float floatedReducedAllValue = float(reducedAllValue);
        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);
      `,tt="bvec4"):o==="any"&&($="0.0",b=`
        bool reducedAnyValue = any(values);
        float floatedReducedAnyValue = float(reducedAnyValue);
        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);
      `,tt="bvec4");let nt="";d%a>0&&(nt=`
        if (inIdx < 0 || inIdx >= ${d}) {
          return initializationValue;
        }
      `),this.userCode=`
      const float initializationValue = ${$};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${nt}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${a};

        vec4 minMaxValue = vec4(${$});
        float prodValue = 1.0;
        float sumValue = 0.0;
        float allValue = 1.0;
        float anyValue = 0.0;

        for (int i = 0; i < ${et}; i += 4) {
          int inIdx = inOffset + i;
          ${tt} values = ${tt}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${b}
        }

        int inIdx = inOffset + ${et};
        if (${_===1}) {
          ${tt} values = ${tt}(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          ${b}
        } else if (${_===2}) {
          ${tt} values = ${tt}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          ${b}
        } else if (${_===3}) {
          ${tt} values = ${tt}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          ${b}
        }
        setOutput(${_e});
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function getReductionStages(i){const s=[];for(;s.length===0||s[s.length-1].outSize!==1;){const o=s.length?s[s.length-1].outSize:i[1],a=computeOptimalWindowSize(o);s.push({inSize:o,windowSize:a,outSize:Math.ceil(o/a)})}return s}function reduce(i,s,o,a){const c=getReductionStages(i.shape);let d=i;for(let g=0;g<c.length;g++){const{inSize:$,windowSize:j,outSize:_e}=c[g];let et,_;o==="mean"?et=g===0?new MeanProgram({windowSize:j,inSize:$,batchSize:i.shape[0],outSize:_e},$):new MeanProgram({windowSize:j,inSize:$,batchSize:i.shape[0],outSize:_e}):et=new ReduceProgram({windowSize:j,inSize:$,batchSize:i.shape[0],outSize:_e},o),_=d,d=a.runWebGLProgram(et,[d],s),_.dataId!==i.dataId&&a.disposeIntermediateTensorInfo(_)}return d}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class TransposeProgram{constructor(s,o){this.variableNames=["A"];const a=new Array(s.length);for(let g=0;g<a.length;g++)a[g]=s[o[g]];this.outputShape=a,this.rank=a.length;const c=getCoordsDataType(this.rank),d=getSwitchedCoords(o);this.userCode=`
    void main() {
      ${c} resRC = getOutputCoords();
      setOutput(getA(${d}));
    }
    `}}function getSwitchedCoords(i){const s=i.length;if(s>6)throw Error(`Transpose for rank ${s} is not yet supported`);const o=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],a=new Array(s);for(let c=0;c<i.length;c++)a[i[c]]=o[c];return a.join()}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class TransposePackedProgram{constructor(s,o){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;const a=new Array(s.length);for(let et=0;et<a.length;et++)a[et]=s[o[et]];if(this.outputShape=a,this.rank=a.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);const c=getCoordsDataType(this.rank),d=getVecChannels("rc",this.rank),g=new Array(this.rank);for(let et=0;et<o.length;et++)g[o[et]]=d[et];const $=`vec2(${g.slice(-2).join()})`,j=`++${d[this.rank-1]} < ${a[this.rank-1]}`,_e=`getChannel(getA(${g.join()}), ${$})`;this.userCode=`
    void main() {
      ${c} rc = getOutputCoords();
      vec4 result = vec4(0.);
      result[0] = ${_e};
      if(${j}) {
        result[1] = ${_e};
      }
      --${d[this.rank-1]};
      if(++${d[this.rank-2]} < ${a[this.rank-2]}) {
        result[2] = ${_e};
        if(${j}) {
          result[3] = ${_e};
        }
      }
      setOutput(result);
    }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function transposeImpl(i,s,o){const a=env().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new TransposePackedProgram(i.shape,s):new TransposeProgram(i.shape,s);return o.runWebGLProgram(a,[i],i.dtype)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sumImpl(i,s,o,a){const c=s,d=i.shape.length,g=parseAxisParam(c,i.shape);let $=g;const j=getAxesPermutation($,d),_e=j!=null;let et=i;_e&&(et=transposeImpl(i,j,a),$=getInnerMostAxes($.length,d)),assertAxesAreInnerMostDims("sum",$,d);const[_,b]=computeOutAndReduceShapes(et.shape,$);let tt=_;o&&(tt=expandShapeToKeepDim(_,g));const nt=sizeFromShape(b),st=sizeFromShape(i.shape)/nt,ot=reshape({inputs:{x:et},attrs:{shape:[st,nt]},backend:a}),it=sumOutType(i.dtype),at=reduce(ot,it,"sum",a),lt=reshape({inputs:{x:at},attrs:{shape:tt},backend:a});return a.disposeIntermediateTensorInfo(ot),a.disposeIntermediateTensorInfo(at),_e&&a.disposeIntermediateTensorInfo(et),lt}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sum(i){const{inputs:s,backend:o,attrs:a}=i,{x:c}=s,{axis:d,keepDims:g}=a;return sumImpl(c,d,g,o)}const sumConfig={kernelName:Sum,backendName:"webgl",kernelFunc:sum};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function transpose(i){const{inputs:s,backend:o,attrs:a}=i,{x:c}=s,{perm:d}=a,g=o,$=c.shape.length,j=new Array($);for(let et=0;et<j.length;et++)j[et]=c.shape[d[et]];let _e;if(g.shouldExecuteOnCPU([c])){const _=g.texData.get(c.dataId).values,b=transposeImplCPU(_,c.shape,c.dtype,d,j);_e=g.makeTensorInfo(j,c.dtype);const tt=g.texData.get(_e.dataId);tt.values=b}else _e=transposeImpl(c,d,g);return _e}const transposeConfig={kernelName:Transpose,backendName:"webgl",kernelFunc:transpose};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const MATMUL_SHARED_DIM_THRESHOLD=1e3;function batchMatMulImpl({a:i,b:s,transposeA:o,transposeB:a,backend:c,bias:d=null,preluActivationWeights:g=null,leakyreluAlpha:$=0,activation:j=null}){const _e=i.shape.length,et=s.shape.length,_=o?i.shape[_e-2]:i.shape[_e-1],b=a?s.shape[et-1]:s.shape[et-2],tt=o?i.shape[_e-1]:i.shape[_e-2],nt=a?s.shape[et-2]:s.shape[et-1],rt=i.shape.slice(0,-2),st=s.shape.slice(0,-2),ot=sizeFromShape(rt),it=sizeFromShape(st),lt=assertAndGetBroadcastShape(i.shape.slice(0,-2),s.shape.slice(0,-2)).concat([tt,nt]);assert$1(_===b,()=>`Error in matMul: inner shapes (${_}) and (${b}) of Tensors with shapes ${i.shape} and ${s.shape} and transposeA=${o} and transposeB=${a} must match.`);const ut=o?[ot,_,tt]:[ot,tt,_],ct=a?[it,nt,b]:[it,b,nt],dt=reshape({inputs:{x:i},backend:c,attrs:{shape:ut}}),pt=reshape({inputs:{x:s},backend:c,attrs:{shape:ct}}),ht=[dt,pt],ft=Math.max(ot,it),yt=o?dt.shape[1]:dt.shape[2],wt=d!=null,_t=g!=null,bt=j==="leakyrelu",xt=j!=null?mapActivationToShaderProgram(j,!0):null,mt=wt||_t||bt||xt!=null;let vt;if((tt===1||nt===1)&&yt>MATMUL_SHARED_DIM_THRESHOLD&&mt===!1){let Ct=dt,kt=pt;o&&(Ct=transpose({inputs:{x:dt},backend:c,attrs:{perm:[0,2,1]}}),ht.push(Ct)),a&&(kt=transpose({inputs:{x:pt},backend:c,attrs:{perm:[0,2,1]}}),ht.push(kt));const Nt=nt!==1,Mt=nt===1;let Vt=Ct;Nt&&(Vt=reshape({inputs:{x:Ct},backend:c,attrs:{shape:[ft,yt,1]}}),ht.push(Vt));const Gt=nt===1?2:1;let Ft=kt;Mt&&(Ft=reshape({inputs:{x:kt},backend:c,attrs:{shape:[ft,1,yt]}}),ht.push(Ft));const jt=multiply({inputs:{a:Vt,b:Ft},backend:c});vt=sum({inputs:{x:jt},backend:c,attrs:{axis:Gt,keepDims:!0}}),ht.push(jt)}else{const Ct=upcastType(i.dtype,s.dtype),kt=new MatMulPackedProgram(ut,ct,[ft,tt,nt],o,a,wt,xt,_t,bt),Nt=[dt,pt];if(d!=null&&Nt.push(d),_t&&Nt.push(g),bt){const Mt=c.makeTensorInfo([],"float32",createScalarValue($,"float32"));Nt.push(Mt),ht.push(Mt)}vt=c.runWebGLProgram(kt,Nt,Ct)}const Et=reshape({inputs:{x:vt},backend:c,attrs:{shape:lt}});ht.push(vt);for(const Ct of ht)c.disposeIntermediateTensorInfo(Ct);return Et}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _fusedMatMul(i){const{inputs:s,backend:o,attrs:a}=i,{a:c,b:d,bias:g,preluActivationWeights:$}=s,{transposeA:j,transposeB:_e,activation:et,leakyreluAlpha:_}=a;return batchMatMulImpl({a:c,b:d,transposeA:j,transposeB:_e,backend:o,bias:g,preluActivationWeights:$,leakyreluAlpha:_,activation:et})}const _fusedMatMulConfig={kernelName:_FusedMatMul,backendName:"webgl",kernelFunc:_fusedMatMul};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ABS="return abs(x);";function abs(i){const{inputs:s,backend:o}=i,{x:a}=s;if(o.shouldExecuteOnCPU([a])&&a.dtype!=="complex64"){const d=o.texData.get(a.dataId),g=simpleAbsImplCPU(d.values);return o.makeTensorInfo(a.shape,a.dtype,g)}let c;return env().getBool("WEBGL_PACK_UNARY_OPERATIONS")?c=new UnaryOpPackedProgram(a.shape,ABS):c=new UnaryOpProgram(a.shape,ABS),o.runWebGLProgram(c,[a],a.dtype)}const absConfig={kernelName:Abs,backendName:"webgl",kernelFunc:abs};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ACOS=CHECK_NAN_SNIPPET$1+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return acos(x);
`,acos=unaryKernelFunc({opSnippet:ACOS}),acosConfig={kernelName:Acos,backendName:"webgl",kernelFunc:acos};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ACOSH=CHECK_NAN_SNIPPET$1+`
  if (x < 1.0) return NAN;
return log(x + sqrt(x * x - 1.0));`,acosh=unaryKernelFunc({opSnippet:ACOSH}),acoshConfig={kernelName:Acosh,backendName:"webgl",kernelFunc:acosh};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ADD="return a + b;",addKernelFunc=binaryKernelFunc({opSnippet:ADD,packedOpSnippet:ADD,supportsComplex:!0,cpuKernelImpl:addImplCPU}),addConfig={kernelName:Add$1,backendName:"webgl",kernelFunc:addKernelFunc};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class AddNProgram{constructor(s,o){this.outputShape=[],this.outputShape=s,this.variableNames=o.map((d,g)=>`T${g}`);const a=[];this.variableNames.forEach(d=>{a.push(`float v${d} = get${d}AtOutCoords();`)});const c=this.variableNames.map(d=>`v${d}`).join(" + ");this.userCode=`
      void main() {
        ${a.join(`
        `)}

        float result = ${c};
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class AddNPackedProgram{constructor(s,o){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=s,this.variableNames=o.map((d,g)=>`T${g}`);const a=[];this.variableNames.forEach(d=>{a.push(`vec4 v${d} = get${d}AtOutCoords();`)});const c=this.variableNames.map(d=>`v${d}`).join(" + ");this.userCode=`
      void main() {
        ${a.join(`
        `)}

        vec4 result = ${c};
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function addN(i){const{inputs:s,backend:o}=i,a=s;if(a.length===1)return identity({inputs:{x:a[0]},backend:o});if(a.length>env().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){const j=Math.floor(a.length/2),_e=addN({inputs:a.slice(0,j),backend:o}),et=addN({inputs:a.slice(j),backend:o});return addN({inputs:[_e,et],backend:o})}const c=a.map(j=>j.dtype).reduce((j,_e)=>upcastType(j,_e)),d=a.map(j=>j.shape),$=env().getBool("WEBGL_PACK")?new AddNPackedProgram(a[0].shape,d):new AddNProgram(a[0].shape,d);return o.runWebGLProgram($,a,c)}const addNConfig={kernelName:AddN,backendName:"webgl",kernelFunc:addN};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function all(i){const{inputs:s,backend:o,attrs:a}=i,{x:c}=s,{axis:d,keepDims:g}=a,$=c.shape.length,j=parseAxisParam(d,c.shape);let _e=j;const et=getAxesPermutation(_e,$);let _=c;et!=null&&(_=transpose({inputs:{x:c},backend:o,attrs:{perm:et}}),_e=getInnerMostAxes(_e.length,$)),assertAxesAreInnerMostDims("all",_e,$);const[b,tt]=computeOutAndReduceShapes(_.shape,_e),nt=sizeFromShape(tt),rt=reshape({inputs:{x:_},backend:o,attrs:{shape:[-1,nt]}}),st=reduce(rt,rt.dtype,"all",o);let ot;if(g){const it=expandShapeToKeepDim(b,j);ot=reshape({inputs:{x:st},backend:o,attrs:{shape:it}})}else ot=reshape({inputs:{x:st},backend:o,attrs:{shape:b}});return o.disposeIntermediateTensorInfo(rt),o.disposeIntermediateTensorInfo(st),et!=null&&o.disposeIntermediateTensorInfo(_),ot}const allConfig={kernelName:All,backendName:"webgl",kernelFunc:all};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function any(i){const{inputs:s,backend:o,attrs:a}=i,{x:c}=s,{axis:d,keepDims:g}=a,$=c.shape.length,j=parseAxisParam(d,c.shape);let _e=j;const et=getAxesPermutation(_e,$);let _=c;et!=null&&(_=transpose({inputs:{x:c},backend:o,attrs:{perm:et}}),_e=getInnerMostAxes(_e.length,$)),assertAxesAreInnerMostDims("any",_e,$);const[b,tt]=computeOutAndReduceShapes(_.shape,_e),nt=sizeFromShape(tt),rt=reshape({inputs:{x:_},backend:o,attrs:{shape:[-1,nt]}}),st=reduce(rt,rt.dtype,"any",o);let ot;if(g){const it=expandShapeToKeepDim(b,j);ot=reshape({inputs:{x:st},backend:o,attrs:{shape:it}})}else ot=reshape({inputs:{x:st},backend:o,attrs:{shape:b}});return o.disposeIntermediateTensorInfo(rt),o.disposeIntermediateTensorInfo(st),et!=null&&o.disposeIntermediateTensorInfo(_),ot}const anyConfig={kernelName:Any,backendName:"webgl",kernelFunc:any};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ArgMinMaxProgram{constructor(s,o,a){this.variableNames=["A"];const{windowSize:c,batchSize:d,outSize:g}=s;a||this.variableNames.push("bestIndicesA"),this.outputShape=[d,g];const $=o==="max"?">":"<",j=a?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${c};

        int bestIndex = inOffset;
        float bestValue = getA(batch, bestIndex);

        for (int i = 0; i < ${c}; i++) {
          int inIdx = ${j};
          float candidate = getA(batch, inIdx);
          if (candidate ${$} bestValue) {
            bestValue = candidate;
            bestIndex = inIdx;
          }
        }
        setOutput(float(bestIndex));
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ArgMinMaxPackedProgram{constructor(s,o,a,c){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,assert$1(s.length>2,()=>`Packed arg${a.charAt(0).toUpperCase()+a.slice(1)} supports only inputs with rank above 2.`);const d=s[s.length-1],g=Math.ceil(d/o);this.outputShape=s.slice(0,-1),g>1&&this.outputShape.push(g),c||this.variableNames.push("bestIndicesA");const $=this.outputShape,j=$.length,_e=getCoordsDataType(j),et=getChannels("coords",j);let _,b;if(g===1){b=j+1;const pt=getCoordsDataType(b);_=`
        ${pt} sourceLocR = ${pt}(${et.join()}, 0);
        ++${et[j-1]};
        ${pt} sourceLocG = ${pt}(${et.join()}, 0);
        ++${et[j-2]};
        ${pt} sourceLocA = ${pt}(${et.join()}, 0);
        --${et[j-1]};
        ${pt} sourceLocB = ${pt}(${et.join()}, 0);
        --${et[j-2]};`}else b=j,_=`
        ${_e} sourceLocR = coords;
        ++${et[j-1]};
        ${_e} sourceLocG = coords;
        ++${et[j-2]};
        ${_e} sourceLocA = coords;
        --${et[j-1]};
        ${_e} sourceLocB = coords;
        --${et[j-2]};`;const tt=["x","y","z","w","u","v"].slice(0,b),nt="."+tt[b-1],rt=tt.map(pt=>"int "+pt),st=getChannels("sourceLocR",b-1).concat("inIdx.r"),ot=getChannels("sourceLocG",b-1).concat("inIdx.g"),it=getChannels("sourceLocB",b-1).concat("inIdx.b"),at=getChannels("sourceLocA",b-1).concat("inIdx.a"),lt=a==="max"?"greaterThan":"lessThan",ut=c?"":`
          inIdx = round(vec4(getBestIndicesAChannel(${st.join()}),
                             getBestIndicesAChannel(${ot.join()}),
                             getBestIndicesAChannel(${it.join()}),
                             getBestIndicesAChannel(${at.join()})));`,ct=`vec4(
            getAChannel(${st.join()}),
            hasNextCol ? getAChannel(${ot.join()}) : 0.,
            hasNextRow ? getAChannel(${it.join()}) : 0.,
            hasNextRow && hasNextCol ? getAChannel(${at.join()}) : 0.)`,dt=c?"":`
      float getBestIndicesAChannel(${rt.join()}) {
        return getChannel(getBestIndicesA(${tt.join()}),
                                          vec2(${tt.slice(-2).join()}));
      }`;this.userCode=`
      float getAChannel(${rt.join()}) {
        return getChannel(getA(${tt.join()}),
                               vec2(${tt.slice(-2).join()}));
      }
      ${dt}
      void main() {
        ${_e} coords = getOutputCoords();
        bool hasNextCol = ${et[j-1]} < ${$[j-1]-1};
        bool hasNextRow = ${et[j-2]} < ${$[j-2]-1};
        ${_}
        ivec4 srcIdx = ivec4(sourceLocR${nt}, sourceLocG${nt},
          sourceLocB${nt}, sourceLocA${nt}) * ${o};
        ivec4 inIdx = srcIdx;
        vec4 bestIndex = vec4(inIdx);
        vec4 bestValue = ${ct};

        for (int i = 0; i < ${o}; i++) {
          inIdx = srcIdx;
          ${ut}
          vec4 candidate = ${ct};
          bvec4 nan = isnan(candidate);
          bvec4 replace = bvec4(
            vec4(${lt}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));

          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,
                           replace.y  ? candidate.y : bestValue.y,
                           replace.z  ? candidate.z : bestValue.z,
                           replace.w  ? candidate.w : bestValue.w);
          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));
          srcIdx++;
        }
        setOutput(bestIndex);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function argReduce(i,s,o,a=null){let c=s.shape[0],d=s.shape[1];a!=null&&(c=a.shape[0],d=a.shape[1]);const g=computeOptimalWindowSize(d),$={windowSize:g,inSize:d,batchSize:c,outSize:Math.ceil(d/g)},j=new ArgMinMaxProgram($,o,a==null),_e=[s];a!=null&&_e.push(a);const et=i.runWebGLProgram(j,_e,"int32");if(et.shape[1]===1)return et;const _=argReduce(i,s,o,et);return i.disposeIntermediateTensorInfo(et),_}function argReducePacked(i,s,o,a=null){const c=a!=null?a.shape:s.shape,d=c[c.length-1],g=computeOptimalWindowSize(d),$=new ArgMinMaxPackedProgram(c,g,o,a==null),j=a==null?[s]:[s,a],_e=i.runWebGLProgram($,j,"int32");if(_e.shape.length===s.shape.length){const et=argReducePacked(i,s,o,_e);return i.disposeIntermediateTensorInfo(_e),et}return _e}function argMinMaxReduce(i,s,o,a){const c=[o];if(assertAxesAreInnerMostDims("arg"+a.charAt(0).toUpperCase()+a.slice(1),c,s.shape.length),!env().getBool("WEBGL_PACK_REDUCE")||s.shape.length<=2){const d=[],g=i.texData.get(s.dataId),$=g!==null&&g.isPacked;let j=s;$&&(j=i.unpackTensor(s),d.push(j));const[_e,et]=computeOutAndReduceShapes(j.shape,c),_=sizeFromShape(et),b=reshape({inputs:{x:j},backend:i,attrs:{shape:[-1,_]}});d.push(b);const tt=argReduce(i,b,a);d.push(tt);const nt=reshape({inputs:{x:tt},backend:i,attrs:{shape:_e}});return d.forEach(rt=>i.disposeIntermediateTensorInfo(rt)),nt}return argReducePacked(i,s,a)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function argMax(i){const{inputs:s,backend:o,attrs:a}=i,{x:c}=s,{axis:d}=a;let g=parseAxisParam(d,c.shape);const $=getAxesPermutation(g,c.shape.length);let j=c;const _e=[];$!=null&&(j=transpose({inputs:{x:c},backend:o,attrs:{perm:$}}),_e.push(j),g=getInnerMostAxes(g.length,j.shape.length)),assertAxesAreInnerMostDims("argMax",[g[0]],j.shape.length);const et=argMinMaxReduce(o,j,g[0],"max");return _e.forEach(_=>o.disposeIntermediateTensorInfo(_)),et}const argMaxConfig={kernelName:ArgMax,backendName:"webgl",kernelFunc:argMax};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function argMin(i){const{inputs:s,backend:o,attrs:a}=i,{x:c}=s,{axis:d}=a;let g=parseAxisParam(d,c.shape);const $=getAxesPermutation(g,c.shape.length);let j=c;const _e=[];$!=null&&(j=transpose({inputs:{x:c},backend:o,attrs:{perm:$}}),_e.push(j),g=getInnerMostAxes(g.length,j.shape.length)),assertAxesAreInnerMostDims("argMin",[g[0]],j.shape.length);const et=argMinMaxReduce(o,j,g[0],"min");return _e.forEach(_=>o.disposeIntermediateTensorInfo(_)),et}const argMinConfig={kernelName:ArgMin,backendName:"webgl",kernelFunc:argMin};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ASIN=CHECK_NAN_SNIPPET$1+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return asin(x);
`,asin=unaryKernelFunc({opSnippet:ASIN}),asinConfig={kernelName:Asin,backendName:"webgl",kernelFunc:asin};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ASINH=CHECK_NAN_SNIPPET$1+"return log(x + sqrt(x * x + 1.0));",asinh=unaryKernelFunc({opSnippet:ASINH}),asinhConfig={kernelName:Asinh,backendName:"webgl",kernelFunc:asinh};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ATAN=CHECK_NAN_SNIPPET$1+`
  return atan(x);
`,atan=unaryKernelFunc({opSnippet:ATAN}),atanConfig={kernelName:Atan,backendName:"webgl",kernelFunc:atan};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ATAN2=CHECK_NAN_SNIPPET+`
  return atan(a, b);
`,ATAN2_PACKED=`
  vec4 result = atan(a, b);
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+CHECK_NAN_SNIPPET_PACKED+`
  return result;
`,atan2=binaryKernelFunc({opSnippet:ATAN2,packedOpSnippet:ATAN2_PACKED}),atan2Config={kernelName:Atan2,backendName:"webgl",kernelFunc:atan2};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ATANH=CHECK_NAN_SNIPPET$1+`
  if ((x < -1.0) || (x > 1.0)) return NAN;
return (log(1.0 + x) - log(1.0 - x)) / 2.0;`,atanh=unaryKernelFunc({opSnippet:ATANH}),atanhConfig={kernelName:Atanh,backendName:"webgl",kernelFunc:atanh};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Pool2DProgram{constructor(s,o,a,c=!1,d=!1){if(this.variableNames=["x"],o==="avg"&&a)throw new Error("Cannot compute positions for average pool.");const g=s.filterWidth,$=s.strideHeight,j=s.strideWidth,_e=s.dilationHeight,et=s.dilationWidth,_=s.effectiveFilterHeight,b=s.effectiveFilterWidth,tt=s.padInfo.top,nt=s.padInfo.left;this.outputShape=s.outShape;const rt=o==="avg",st=`((batch  * ${s.inHeight} + xR) * ${s.inWidth} + xC) * ${s.inChannels} + d`,ot=`(xR * ${s.inWidth} + xC) * ${s.inChannels} + d`;let it="0.0";if(rt||(it="-1.0 / 1e-20"),a){const pt=">=";this.userCode=`
        const ivec2 strides = ivec2(${$}, ${j});
        const ivec2 pads = ivec2(${tt}, ${nt});

        void main() {
          ivec4 coords = getOutputCoords();
          int batch = coords[0];
          int d = coords[3];

          ivec2 xRCCorner = coords.yz * strides - pads;
          int xRCorner = xRCCorner.x;
          int xCCorner = xRCCorner.y;

          // max/min x(?, ?, d) to get y(yR, yC, d).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;
          float avgValue = 0.0;

          for (int wR = 0; wR < ${_};
              wR += ${_e}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${s.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${b};
                wC += ${et}) {
              int xC = xCCorner + wC;

              if (xC < 0 || xC >= ${s.inWidth}) {
                continue;
              }

              float value = getX(batch, xR, xC, d);

              // If a min / max value has already been found, use it. If not,
              // use the current value.
              float currMinMaxValue = mix(
                  value, minMaxValue, minMaxValueFound);
              if (value ${pt} currMinMaxValue) {
                minMaxValue = value;
                minMaxValueFound = 1.0;
                minMaxPosition = ${c?d?st:ot:`wR * ${b} + wC`};
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}const at="max";let lt=`${o}(${o}(${o}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;o==="avg"&&(lt="avgValue / max(count, 1.0)");const ut=Math.floor(g/4)*4,ct=g%4,dt=`
      if (${rt}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = ${at}(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec2 strides = ivec2(${$}, ${j});
      const ivec2 pads = ivec2(${tt}, ${nt});
      const float initializationValue = ${it};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xR, int xC, int d) {
        if (xC < 0 || xC >= ${s.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xR, xC, d);
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d = coords[3];

        ivec2 xRCCorner = coords.yz * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // max/min x(?, ?, d) to get y(yR, yC, d).
        // ? = to be determined
        vec4 minMaxValue = vec4(${it});
        float avgValue = 0.0;
        count = 0.0;

        for (int wR = 0; wR < ${_};
            wR += ${_e}) {
          int xR = xRCorner + wR;

          if (xR < 0 || xR >= ${s.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${ut}; wC += 4) {
            int xC = xCCorner + wC * ${et};

            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${et}, d),
              getValue(batch, xR, xC + 2 * ${et}, d),
              getValue(batch, xR, xC + 3 * ${et}, d)
            );

            ${dt}
          }

          int xC = xCCorner + ${ut};
          if (${ct===1}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              initializationValue,
              initializationValue,
              initializationValue
            );

            ${dt}
          } else if (${ct===2}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${et}, d),
              initializationValue,
              initializationValue
            );

            ${dt}
          } else if (${ct===3}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${et}, d),
              getValue(batch, xR, xC + 2 * ${et}, d),
              initializationValue
            );

            ${dt}
          }
        }
        setOutput(${lt});
      }
    `}}class Pool3DProgram{constructor(s,o,a,c=!1,d=!1){if(this.variableNames=["x"],o==="avg"&&a)throw new Error("Cannot compute positions for average pool.");const g=s.filterWidth,$=s.strideDepth,j=s.strideHeight,_e=s.strideWidth,et=s.dilationDepth,_=s.dilationHeight,b=s.dilationWidth,tt=s.effectiveFilterDepth,nt=s.effectiveFilterHeight,rt=s.effectiveFilterWidth,st=s.padInfo.front,ot=s.padInfo.top,it=s.padInfo.left;this.outputShape=s.outShape;const at=o==="avg";let lt="0.0";if(at||(lt="-1.0 / 1e-20"),a){const ft=">=";this.userCode=`
        const ivec3 strides =
            ivec3(${$}, ${j}, ${_e});
        const ivec3 pads = ivec3(${st}, ${ot}, ${it});

        void main() {
          ivec5 coords = getOutputCoords();
          int batch = coords.x;
          int ch = coords.u;

          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
          int xDCorner = xCorner.x;
          int xRCorner = xCorner.y;
          int xCCorner = xCorner.z;

          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;

          for (int wD = 0; wD < ${tt};
              wD += ${et}) {
            int xD = xDCorner + wD;

            if (xD < 0 || xD >= ${s.inDepth}) {
              continue;
            }

            for (int wR = 0; wR < ${nt};
                wR += ${_}) {
              int xR = xRCorner + wR;

              if (xR < 0 || xR >= ${s.inHeight}) {
                continue;
              }

              for (int wC = 0; wC < ${rt};
                  wC += ${b}) {
                int xC = xCCorner + wC;

                if (xC < 0 || xC >= ${s.inWidth}) {
                  continue;
                }

                float value = getX(batch, xD, xR, xC, ch);

                // If a min / max value has already been found, use it. If not,
                // use the current value.
                float currMinMaxValue = mix(
                    value, minMaxValue, minMaxValueFound);
                if (value ${ft} currMinMaxValue) {
                  minMaxValue = value;
                  minMaxValueFound = 1.0;
                  minMaxPosition = ${c?d?`(((batch * ${s.inDepth} + xD) * ${s.inHeight} + xR) * ${s.inWidth} + xC) * ${s.inChannels} + ch`:`((xD * ${s.inHeight} + xR) * ${s.inWidth} + xC) * ${s.inChannels} + ch`:`wD * ${nt} * ${rt} +
                      wR * ${rt} + wC`};
                }
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}const ut="max";let ct=`${o}(${o}(${o}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;o==="avg"&&(ct="avgValue / max(count, 1.0)");const dt=Math.floor(g/4)*4,pt=g%4,ht=`
      if (${at}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = ${ut}(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec3 strides =
        ivec3(${$}, ${j}, ${_e});
      const ivec3 pads = ivec3(${st}, ${ot}, ${it});
      const float initializationValue = ${lt};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xD, int xR, int xC, int ch) {
        if (xC < 0 || xC >= ${s.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xD, xR, xC, ch);
      }

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xDCorner = xCorner.x;
        int xRCorner = xCorner.y;
        int xCCorner = xCorner.z;

        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).
        // ? = to be determined
        vec4 minMaxValue = vec4(${lt});
        float avgValue = 0.0;
        count = 0.0;

        for (int wD = 0; wD < ${tt};
            wD += ${et}) {
          int xD = xDCorner + wD;

          if (xD < 0 || xD >= ${s.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${nt};
            wR += ${_}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${s.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${dt}; wC += 4) {
              int xC = xCCorner + wC * ${b};

              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${b}, ch),
                getValue(batch, xD, xR, xC + 2 * ${b}, ch),
                getValue(batch, xD, xR, xC + 3 * ${b}, ch)
              );

              ${ht}
            }

            int xC = xCCorner + ${dt};
            if (${pt===1}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                initializationValue,
                initializationValue,
                initializationValue
              );

              ${ht}
            } else if (${pt===2}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${b}, ch),
                initializationValue,
                initializationValue
              );

              ${ht}
            } else if (${pt===3}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${b}, ch),
                getValue(batch, xD, xR, xC + 2 * ${b}, ch),
                initializationValue
              );

              ${ht}
            }
          }
        }
        setOutput(${ct});
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function avgPool(i){const{inputs:s,backend:o,attrs:a}=i,{x:c}=s;assertNotComplex(c,"avgPool");const{filterSize:d,strides:g,pad:$,dimRoundingMode:j}=a,_e=1;assert$1(eitherStridesOrDilationsAreOne(g,_e),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${g} and dilations '${_e}'`);const et=computePool2DInfo(c.shape,d,g,_e,$,j);if(et.filterWidth===1&&et.filterHeight===1&&arraysEqual(et.inShape,et.outShape))return identity({inputs:{x:c},backend:o});const _=new Pool2DProgram(et,"avg",!1);return o.runWebGLProgram(_,[c],"float32")}const avgPoolConfig={kernelName:AvgPool,backendName:"webgl",kernelFunc:avgPool};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function avgPool3D(i){const{inputs:s,backend:o,attrs:a}=i,{x:c}=s,{filterSize:d,strides:g,pad:$,dimRoundingMode:j,dataFormat:_e}=a,et=[1,1,1],_=computePool3DInfo(c.shape,d,g,et,$,j,_e),b=new Pool3DProgram(_,"avg",!1);return o.runWebGLProgram(b,[c],"float32")}const avgPool3DConfig={kernelName:AvgPool3D,backendName:"webgl",kernelFunc:avgPool3D};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class AvgPool2DBackpropProgram{constructor(s){this.variableNames=["dy"],this.outputShape=s.inShape;const o=s.filterHeight,a=s.filterWidth,c=s.strideHeight,d=s.strideWidth,g=s.dilationHeight,$=s.dilationWidth,j=s.effectiveFilterHeight,_e=s.effectiveFilterWidth,et=j-1-s.padInfo.top,_=_e-1-s.padInfo.left,b=1/(o*a);this.userCode=`
      const ivec2 pads = ivec2(${et}, ${_});
      const float avgMultiplier = float(${b});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${j};
            wR += ${g}) {
          float dyR = float(dyRCorner + wR) / ${c}.0;

          if (dyR < 0.0 || dyR >= ${s.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${_e};
            wC+= ${$}) {
            float dyC = float(dyCCorner + wC) / ${d}.0;

            if (dyC < 0.0 || dyC >= ${s.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);

            dotProd += dyValue * avgMultiplier;
          }
        }
        setOutput(dotProd);
      }
    `}}class AvgPool3DBackpropProgram{constructor(s){this.variableNames=["dy"],this.outputShape=s.inShape;const o=s.filterDepth,a=s.filterHeight,c=s.filterWidth,d=s.strideDepth,g=s.strideHeight,$=s.strideWidth,j=s.dilationDepth,_e=s.dilationHeight,et=s.dilationWidth,_=s.effectiveFilterDepth,b=s.effectiveFilterHeight,tt=s.effectiveFilterWidth,nt=_-1-s.padInfo.front,rt=b-1-s.padInfo.top,st=tt-1-s.padInfo.left,ot=1/(o*a*c);this.userCode=`
      const ivec3 pads = ivec3(${nt}, ${rt}, ${st});
      const float avgMultiplier = float(${ot});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${_};
            wD += ${j}) {
          float dyD = float(dyDCorner + wD) / ${d}.0;

          if (dyD < 0.0 || dyD >= ${s.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${b};
              wR += ${_e}) {
            float dyR = float(dyRCorner + wR) / ${g}.0;

            if (dyR < 0.0 || dyR >= ${s.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${tt};
                wC += ${et}) {
              float dyC = float(dyCCorner + wC) / ${$}.0;

              if (dyC < 0.0 || dyC >= ${s.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);

              dotProd += dyValue * avgMultiplier;
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function avgPool3DGrad(i){const{inputs:s,backend:o,attrs:a}=i,{dy:c,input:d}=s,g=d,{filterSize:$,strides:j,pad:_e,dimRoundingMode:et}=a,_=[1,1,1],b=computePool3DInfo(g.shape,$,j,_,_e,et),tt=new AvgPool3DBackpropProgram(b);return o.runWebGLProgram(tt,[c],g.dtype)}const avgPool3DGradConfig={kernelName:AvgPool3DGrad,backendName:"webgl",kernelFunc:avgPool3DGrad};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function avgPoolGrad(i){const{inputs:s,backend:o,attrs:a}=i,{dy:c,input:d}=s,g=d;assertNotComplex([c,d],"avgPoolGrad");const{filterSize:$,strides:j,pad:_e}=a,et=computePool2DInfo(g.shape,$,j,1,_e),_=new AvgPool2DBackpropProgram(et);return o.runWebGLProgram(_,[c],g.dtype)}const avgPoolGradConfig={kernelName:AvgPoolGrad,backendName:"webgl",kernelFunc:avgPoolGrad};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function batchMatMul(i){const{inputs:s,backend:o,attrs:a}=i,{a:c,b:d}=s,{transposeA:g,transposeB:$}=a;return batchMatMulImpl({a:c,b:d,transposeA:g,transposeB:$,backend:o})}const batchMatMulConfig={kernelName:BatchMatMul,backendName:"webgl",kernelFunc:batchMatMul};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class BatchNormProgram{constructor(s,o,a,c,d,g){this.outputShape=[],this.variableNames=["x","mean","variance"],assertAndGetBroadcastShape(s,o),assertAndGetBroadcastShape(s,a);let $="0.0";c!=null&&(assertAndGetBroadcastShape(s,c),this.variableNames.push("offset"),$="getOffsetAtOutCoords()");let j="1.0";d!=null&&(assertAndGetBroadcastShape(s,d),this.variableNames.push("scale"),j="getScaleAtOutCoords()"),this.outputShape=s,this.userCode=`
      void main() {
        float x = getXAtOutCoords();
        float mean = getMeanAtOutCoords();
        float variance = getVarianceAtOutCoords();
        float offset = ${$};
        float scale = ${j};
        float inv = scale * inversesqrt(variance + float(${g}));
        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class BatchNormPackedProgram{constructor(s,o,a,c,d,g){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],assertAndGetBroadcastShape(s,o),assertAndGetBroadcastShape(s,a);let $="vec4(0.0)";c!=null&&(assertAndGetBroadcastShape(s,c),this.variableNames.push("offset"),$="getOffsetAtOutCoords()");let j="vec4(1.0)";d!=null&&(assertAndGetBroadcastShape(s,d),this.variableNames.push("scale"),j="getScaleAtOutCoords()"),this.outputShape=s,this.userCode=`
      void main() {
        vec4 offset = ${$};
        vec4 scale = ${j};

        vec4 x = getXAtOutCoords();
        vec4 mean = getMeanAtOutCoords();
        vec4 variance = getVarianceAtOutCoords();

        vec4 inv = scale * inversesqrt(variance + vec4(${g}));

        setOutput((x - mean) * inv + offset);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const batchNorm=({inputs:i,backend:s,attrs:o})=>{const{x:a,mean:c,variance:d,offset:g,scale:$}=i;assert$1(c.shape.length===d.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),assert$1(g==null||c.shape.length===g.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),assert$1($==null||c.shape.length===$.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");let{varianceEpsilon:j}=o;j==null&&(j=.001);const _e=[a,c,d];let et=null;g!=null&&(et=g.shape,_e.push(g));let _=null;$!=null&&(_=$.shape,_e.push($));const b=env().getBool("WEBGL_PACK_NORMALIZATION")?new BatchNormPackedProgram(a.shape,c.shape,d.shape,et,_,j):new BatchNormProgram(a.shape,c.shape,d.shape,et,_,j);return s.runWebGLProgram(b,_e,_e[0].dtype)},batchNormConfig={kernelName:FusedBatchNorm,backendName:"webgl",kernelFunc:batchNorm};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class SliceProgram{constructor(s){this.variableNames=["source"],this.outputShape=s,this.rank=s.length;const o=getCoordsDataType(this.rank);this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const a=getCoords$1(this.rank);let c;const d=s.map((g,$)=>`sourceLoc.${coords[$]} = start[${$}] + coords.${coords[$]};`);c=`
        ${o} sourceLoc;
        ${o} coords = getOutputCoords();
        ${d.join(`
`)}
      `,this.userCode=`
      void main() {
        ${c}
        setOutput(getSource(${a}));
      }
    `}}const coords=["x","y","z","w","u","v"];function getCoords$1(i){if(i===1)return"sourceLoc";if(i<=6)return coords.slice(0,i).map(s=>"sourceLoc."+s).join(",");throw Error(`Slicing for rank ${i} is not yet supported`)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class SlicePackedProgram{constructor(s){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=s,this.rank=s.length,this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const o=getCoordsDataType(this.rank),a=getChannels("coords",this.rank),c=getChannels("sourceLoc",this.rank),d=this.rank===1?"sourceLoc":`vec2(${c.slice(-2).join()})`,g=`getChannel(getSource(${c.join()}), ${d})`,$=`
      result.x = ${g};
      if (++${a[this.rank-1]} < ${s[this.rank-1]}) {
        ++${c[this.rank-1]};
        result.y = ${g};
        --${c[this.rank-1]};
      }
    `,j=this.rank===1?"":`
      --${a[this.rank-1]};
      if (++${a[this.rank-2]} < ${s[this.rank-2]}) {
        ++${c[this.rank-2]};
        result.z = ${g};
        if (++${a[this.rank-1]} < ${s[this.rank-1]}) {
          ++${c[this.rank-1]};
          result.w = ${g};
        }
      }
    `,_e=this.rank<=4?`sourceLoc = coords +
            ${o}(${s.map((et,_)=>`start[${_}]`).join()});`:s.map((et,_)=>`${c[_]} = ${a[_]} + start[${_}];`).join(`
`);this.userCode=`
      void main() {
        ${o} coords = getOutputCoords();
        ${o} sourceLoc;
        ${_e}
        vec4 result = vec4(0.);
        ${$}
        ${j}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function shallowSlice(i,s,o,a){const c=a.texData.get(i.dataId),d=a.makeTensorInfo(o,i.dtype),g=a.texData.get(d.dataId);Object.assign(g,c),g.refCount=1,g.shape=o,g.dtype=i.dtype;let $=computeFlatOffset(s,computeStrides(i.shape));c.slice&&($+=c.slice.flatOffset),g.slice={flatOffset:$,origDataId:c.slice&&c.slice.origDataId||i.dataId};const j=a.dataRefCount.get(g.slice.origDataId)||1;return a.dataRefCount.set(g.slice.origDataId,j+1),d}function slice(i){const{inputs:s,backend:o,attrs:a}=i,{x:c}=s,{begin:d,size:g}=a,[$,j]=parseSliceParams(c,d,g);if(assertParamsValid(c,$,j),sizeFromShape(j)===0)return o.makeTensorInfo(j,c.dtype,[]);if(o.shouldExecuteOnCPU([c])||c.dtype==="string"){const _=o.texData.get(c.dataId),b=sliceImplCPU(_.values,$,j,c.shape,c.dtype);return o.makeTensorInfo(j,c.dtype,b)}const{isPacked:_e}=o.texData.get(c.dataId),et=isSliceContinous(c.shape,$,j);if(_e||!et){const _=env().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new SlicePackedProgram(j):new SliceProgram(j),b=[$];return o.runWebGLProgram(_,[c],c.dtype,b)}return o.uploadToGPU(c.dataId),shallowSlice(c,$,j,o)}const sliceConfig={kernelName:Slice,backendName:"webgl",kernelFunc:slice};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const batchToSpaceND=i=>{const{inputs:s,backend:o,attrs:a}=i,{x:c}=s,{blockShape:d,crops:g}=a;assert$1(c.shape.length<=4,()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet");const $=d.reduce((it,at)=>it*at),j=getReshaped(c.shape,d,$),_e=getPermuted(j.length,d.length),et=getReshapedPermuted(c.shape,d,$),_=getSliceBeginCoords(g,d.length),b=getSliceSize(et,g,d.length),tt=[],nt=reshape({inputs:{x:c},backend:o,attrs:{shape:j}}),rt=transpose({inputs:{x:nt},backend:o,attrs:{perm:_e}}),st=reshape({inputs:{x:rt},backend:o,attrs:{shape:et}}),ot=slice({inputs:{x:st},backend:o,attrs:{begin:_,size:b}});return tt.push(nt),tt.push(rt),tt.push(st),tt.forEach(it=>o.disposeIntermediateTensorInfo(it)),ot},batchToSpaceNDConfig={kernelName:BatchToSpaceND,backendName:"webgl",kernelFunc:batchToSpaceND};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bincount(i){const{inputs:s,backend:o,attrs:a}=i,{x:c,weights:d}=s,{size:g}=a,$=o.readSync(c.dataId),j=o.readSync(d.dataId),_e=bincountImplCPU($,j,d.dtype,d.shape,g);return o.makeTensorInfo([g],d.dtype,_e)}const bincountConfig={kernelName:Bincount,backendName:"webgl",kernelFunc:bincount};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const BITWISEAND=`
  int r = int(a.r) & int(b.r);
  int g = int(a.g) & int(b.g);
  int rb = int(a.b) & int(b.b);
  int ra = int(a.a) & int(b.a);
  return vec4(r, g, rb, ra);
`,BITWISEAND_UNPACKED=`
  return float(int(a.r) & int(b.r));
`;function bitwiseAnd(i){const{inputs:s,backend:o}=i,{a,b:c}=s,d=env().getBool("WEBGL_PACK_BINARY_OPERATIONS"),g=env().getNumber("WEBGL_VERSION");if(o.shouldExecuteOnCPU([a,c])||g===1){const j=o.texData.get(a.dataId).values,_e=o.texData.get(c.dataId).values,[et,_]=bitwiseAndImplCPU(a.shape,c.shape,j,_e,a.dtype),b=o.makeTensorInfo(_,a.dtype),tt=o.texData.get(b.dataId);return tt.values=et,b}let $;return d?$=new BinaryOpPackedProgram(BITWISEAND,a.shape,c.shape,!1):$=new BinaryOpProgram(BITWISEAND_UNPACKED,a.shape,c.shape),o.runWebGLProgram($,[a,c],a.dtype)}const bitwiseAndConfig={kernelName:BitwiseAnd,backendName:"webgl",kernelFunc:bitwiseAnd};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function broadcastArgs(i){const{inputs:s,backend:o}=i,{s0:a,s1:c}=s,d=o.readSync(a.dataId),g=o.readSync(c.dataId),$=assertAndGetBroadcastShape(Array.from(d),Array.from(g));return o.makeTensorInfo([$.length],"int32",Int32Array.from($))}const broadcastArgsConfig={kernelName:BroadcastArgs,backendName:"webgl",kernelFunc:broadcastArgs};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const NOT_EQUAL="return float(a != b);",notEqual=binaryKernelFunc({opSnippet:NOT_EQUAL,cpuKernelImpl:notEqualImplCPU,dtype:"bool"}),notEqualConfig={kernelName:NotEqual,backendName:"webgl",kernelFunc:notEqual};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function real(i){const{inputs:s,backend:o}=i,{input:a}=s,c=o.texData.get(a.dataId);return identity({inputs:{x:c.complexTensorInfos.real},backend:o})}const realConfig={kernelName:Real,backendName:"webgl",kernelFunc:real};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const TO_INT="return float(int(x));";function int(i,s){const o=new UnaryOpProgram(i.shape,TO_INT),a=s.runWebGLProgram(o,[i],"int32");return{dataId:a.dataId,shape:a.shape,dtype:a.dtype}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cast(i){const{inputs:s,backend:o,attrs:a}=i,{x:c}=s,{dtype:d}=a;if(d==="complex64"){if(c.dtype==="complex64")return identity({inputs:{x:c},backend:o});const g=zeros$1(c.shape),$=cast({inputs:{x:c},backend:o,attrs:{dtype:"float32"}}),j=complex({inputs:{real:$,imag:g},backend:o});return g.dispose(),o.disposeIntermediateTensorInfo($),j}if(c.dtype==="complex64"){const g=real({inputs:{input:c},backend:o}),$=cast({inputs:{x:g},backend:o,attrs:{dtype:d}});return o.disposeIntermediateTensorInfo(g),$}if(!hasEncodingLoss(c.dtype,d)){const g=identity({inputs:{x:c},backend:o});return{dataId:g.dataId,shape:g.shape,dtype:d}}if(o.shouldExecuteOnCPU([c])){const g=o.texData.get(c.dataId).values,[$,j,_e]=castImplCPU(g,c.shape,c.dtype,d);return o.makeTensorInfo($,j,_e)}if(d==="int32")return int(c,o);if(d==="bool"){const g=o.makeTensorInfo([],"bool",getTypedArrayFromDType("bool",1)),j=notEqual({inputs:{a:c,b:g},backend:o});return o.disposeIntermediateTensorInfo(g),j}throw new Error(`Error in Cast: failed to cast ${c.dtype} to ${d}`)}const castConfig={kernelName:Cast,backendName:"webgl",kernelFunc:cast};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const CEIL="return ceil(x);",ceil=unaryKernelFunc({opSnippet:CEIL,packedOpSnippet:CEIL,cpuKernelImpl:ceilImplCPU}),ceilConfig={kernelName:Ceil,backendName:"webgl",kernelFunc:ceil};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ClipProgram{constructor(s){this.variableNames=["A"],this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=s,this.userCode=`

      void main() {
        float value = getAAtOutCoords();
        if (isnan(value)) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, minVal, maxVal));
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ClipPackedProgram{constructor(s){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=s,this.userCode=`
      void main() {
        vec4 value = getAAtOutCoords();

        if (any(isnan(value))) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function clipByValue(i){const{inputs:s,backend:o,attrs:a}=i,{x:c}=s,{clipValueMin:d,clipValueMax:g}=a;let $;env().getBool("WEBGL_PACK_CLIP")?$=new ClipPackedProgram(c.shape):$=new ClipProgram(c.shape);const j=[[d],[g]];return o.runWebGLProgram($,[c],c.dtype,j)}const clipByValueConfig={kernelName:ClipByValue,backendName:"webgl",kernelFunc:clipByValue};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ComplexAbsProgram{constructor(s){this.variableNames=["real","imag"],this.outputShape=s,this.userCode=`
      void main() {
        float re = abs(getRealAtOutCoords());
        float im = abs(getImagAtOutCoords());
        float mx = max(re, im);

        // sadly the length function in glsl is not underflow-safe
        // (at least not on Intel GPUs). So the safe solution is
        // to ensure underflow-safety in all cases.
        setOutput(
          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))
        );
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function makeComplexComponentTensorInfo(i,s){return{dataId:s.dataId,dtype:s.dtype,shape:i.shape}}function complexAbs(i){const{inputs:s,backend:o}=i,{x:a}=s,c=o.texData.get(a.dataId),d=new ComplexAbsProgram(a.shape),g=[makeComplexComponentTensorInfo(a,c.complexTensorInfos.real),makeComplexComponentTensorInfo(a,c.complexTensorInfos.imag)];return o.runWebGLProgram(d,g,g[0].dtype)}const complexAbsConfig={kernelName:ComplexAbs,backendName:"webgl",kernelFunc:complexAbs};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ConcatProgram{constructor(s){this.outputShape=[],this.outputShape=computeOutShape$1(s,1),this.variableNames=s.map((g,$)=>`T${$}`);const o=new Array(s.length-1);o[0]=s[0][1];for(let g=1;g<o.length;g++)o[g]=o[g-1]+s[g][1];const a=[`if (yC < ${o[0]}) setOutput(getT0(yR, yC));`];for(let g=1;g<o.length;g++){const $=o[g-1];a.push(`else if (yC < ${o[g]}) setOutput(getT${g}(yR, yC-${$}));`)}const c=o.length,d=o[o.length-1];a.push(`else setOutput(getT${c}(yR, yC-${d}));`),this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int yR = coords.x;
        int yC = coords.y;

        ${a.join(`
        `)}
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ConcatPackedProgram{constructor(s,o){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=computeOutShape$1(s,o);const a=this.outputShape,c=a.length,d=getCoordsDataType(c),g=getChannels("coords",c),$=["x","y","z","w","u","v"].slice(0,c);this.variableNames=s.map((rt,st)=>`T${st}`);const j=new Array(s.length-1);j[0]=s[0][o];for(let rt=1;rt<j.length;rt++)j[rt]=j[rt-1]+s[rt][o];const _e=$[o],et=$.slice(-2),_=$.join();let b=`if (${_e} < ${j[0]}) {
        return getChannel(
            getT0(${_}), vec2(${et.join()}));
        }`;for(let rt=1;rt<j.length;rt++){const st=j[rt-1];b+=`
        if (${_e} < ${j[rt]}  && ${_e} >= ${j[rt-1]}) {
          return getChannel(
            getT${rt}(${shiftedChannels($,_e,st)}),
            vec2(${shiftedChannels(et,_e,st)}));
        }`}const tt=j.length,nt=j[j.length-1];b+=`
        return getChannel(
          getT${tt}(${shiftedChannels($,_e,nt)}),
          vec2(${shiftedChannels(et,_e,nt)}));`,this.userCode=`
      float getValue(${$.map(rt=>"int "+rt)}) {
        ${b}
      }

      void main() {
        ${d} coords = getOutputCoords();
        vec4 result = vec4(getValue(${g}), 0., 0., 0.);

        ${g[c-1]} = ${g[c-1]} + 1;
        if (${g[c-1]} < ${a[c-1]}) {
          result.g = getValue(${g});
        }

        ${g[c-2]} = ${g[c-2]} + 1;
        if (${g[c-2]} < ${a[c-2]}) {
          result.a = getValue(${g});
        }

        ${g[c-1]} = ${g[c-1]} - 1;
        if (${g[c-2]} < ${a[c-2]} &&
            ${g[c-1]} < ${a[c-1]}) {
          result.b = getValue(${g});
        }
        setOutput(result);
      }
    `}}function shiftedChannels(i,s,o){const a=i.indexOf(s);return i.map((d,g)=>g===a?`${d} - ${o}`:d).join()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function imag(i){const{inputs:s,backend:o}=i,{input:a}=s,c=o.texData.get(a.dataId);return identity({inputs:{x:c.complexTensorInfos.imag},backend:o})}const imagConfig={kernelName:Imag,backendName:"webgl",kernelFunc:imag};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function concatImpl(i,s,o){const a=i[0].dtype;if(a==="complex64"){const tt=i.map(it=>real({inputs:{input:it},backend:o})),nt=i.map(it=>imag({inputs:{input:it},backend:o})),rt=concatImpl(tt,s,o),st=concatImpl(nt,s,o),ot=complex({inputs:{real:rt,imag:st},backend:o});return tt.forEach(it=>o.disposeIntermediateTensorInfo(it)),nt.forEach(it=>o.disposeIntermediateTensorInfo(it)),o.disposeIntermediateTensorInfo(rt),o.disposeIntermediateTensorInfo(st),ot}let c=o.shouldExecuteOnCPU(i);if(a==="string"&&(c=!0),c){const tt=i.map(lt=>{const ct=[-1,sizeFromShape(lt.shape.slice(s))];return reshape({inputs:{x:lt},backend:o,attrs:{shape:ct}})}),nt=tt.map(lt=>({vals:o.readSync(lt.dataId),shape:lt.shape})),rt=computeOutShape$1(tt.map(lt=>lt.shape),1),st=tt[0].shape[0]===1,ot=concatImplCPU(nt,rt,a,st),it=computeOutShape$1(i.map(lt=>lt.shape),s),at=o.makeTensorInfo(it,a,ot);return tt.forEach(lt=>o.disposeIntermediateTensorInfo(lt)),at}const d=i.filter(tt=>sizeFromShape(tt.shape)>0),g=env().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&d[0].shape.length>1;if(d.length===1){const tt=g?new UnaryOpProgram(i[0].shape,CLONE):new UnaryOpPackedProgram(i[0].shape,CLONE);return o.runWebGLProgram(tt,i,a)}const $=env().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER");if(d.length>$){const tt=[];for(let rt=0;rt<d.length;rt+=$){const st=d.slice(rt,rt+$);tt.push(concatImpl(st,s,o))}const nt=concatImpl(tt,s,o);for(const rt of tt)o.disposeIntermediateTensorInfo(rt);return nt}if(g){const tt=new ConcatPackedProgram(d.map(nt=>nt.shape),s);return o.runWebGLProgram(tt,d,a)}const{tensors2D:j,outShape:_e}=computeTensors2D(d,s,o),et=new ConcatProgram(j.map(tt=>tt.shape)),_=o.runWebGLProgram(et,j,a);j.forEach(tt=>o.disposeIntermediateTensorInfo(tt));const b=reshape({inputs:{x:_},attrs:{shape:_e},backend:o});return o.disposeIntermediateTensorInfo(_),b}function computeTensors2D(i,s,o){const a=computeOutShape$1(i.map(d=>d.shape),s);return{tensors2D:i.map(d=>reshape({inputs:{x:d},attrs:{shape:[-1,sizeFromShape(d.shape.slice(s))]},backend:o})),outShape:a}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function concat(i){const{inputs:s,backend:o,attrs:a}=i,{axis:c}=a,d=parseAxisParam(c,s[0].shape)[0],g=s.map(_e=>_e.shape);assertParamsConsistent(g,d);const $=computeOutShape$1(s.map(_e=>_e.shape),d);if(sizeFromShape($)===0)return o.makeTensorInfo($,s[0].dtype,[]);const j=s.filter(_e=>sizeFromShape(_e.shape)>0);return j.length===1?identity({inputs:{x:j[0]},backend:o}):concatImpl(j,d,o)}const concatConfig={kernelName:Concat,backendName:"webgl",kernelFunc:concat};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Conv2DProgram{constructor(s,o=!1,a=null,c=!1,d=!1){this.variableNames=["x","W"],this.outputShape=s.outShape;const g=s.padInfo.top,$=s.padInfo.left,j=s.strideHeight,_e=s.strideWidth,et=s.dilationHeight,_=s.dilationWidth,b=s.filterHeight,tt=s.filterWidth,nt=Math.floor(s.inChannels/4)*4,rt=s.inChannels%4,st=s.dataFormat==="channelsLast",ot=st?1:2,it=st?2:3,at=st?3:1;let lt="",ut="";a&&(c?lt=`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${a}
        }`:d?lt=`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${a}
        }`:lt=`
          float activation(float x) {
            ${a}
          }
        `,ut="result = activation(result);");const ct=o?"result += getBiasAtOutCoords();":"";o&&this.variableNames.push("bias"),c&&this.variableNames.push("preluActivationWeights"),d&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${lt}

      const ivec2 strides = ivec2(${j}, ${_e});
      const ivec2 pads = ivec2(${g}, ${$});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d2 = coords[${at}];

        ivec2 xRCCorner =
            ivec2(coords[${ot}], coords[${it}]) * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${b}; wR++) {
          int xR = xRCorner + wR * ${et};

          if (xR < 0 || xR >= ${s.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${tt}; wC++) {
            int xC = xCCorner + wC * ${_};

            if (xC < 0 || xC >= ${s.inWidth}) {
              continue;
            }

            for (int d1 = 0; d1 < ${nt}; d1 += 4) {
              vec4 wValues = vec4(
                getW(wR, wC, d1, d2),
                getW(wR, wC, d1 + 1, d2),
                getW(wR, wC, d1 + 2, d2),
                getW(wR, wC, d1 + 3, d2)
              );

              if (${st}) {
                vec4 xValues = vec4(
                  getX(batch, xR, xC, d1),
                  getX(batch, xR, xC, d1 + 1),
                  getX(batch, xR, xC, d1 + 2),
                  getX(batch, xR, xC, d1 + 3)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec4 xValues = vec4(
                  getX(batch, d1, xR, xC),
                  getX(batch, d1 + 1, xR, xC),
                  getX(batch, d1 + 2, xR, xC),
                  getX(batch, d1 + 3, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }
            }

            if (${rt===1}) {

              if (${st}) {
                dotProd +=
                    getX(batch, xR, xC, ${nt}) *
                    getW(wR, wC, ${nt}, d2);
              } else {
                dotProd +=
                    getX(batch, ${nt}, xR, xC) *
                    getW(wR, wC, ${nt}, d2);
              }

            } else if (${rt===2}) {
              vec2 wValues = vec2(
                getW(wR, wC, ${nt}, d2),
                getW(wR, wC, ${nt} + 1, d2)
              );

              if (${st}) {
                vec2 xValues = vec2(
                  getX(batch, xR, xC, ${nt}),
                  getX(batch, xR, xC, ${nt} + 1)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec2 xValues = vec2(
                  getX(batch, ${nt}, xR, xC),
                  getX(batch, ${nt} + 1, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            } else if (${rt===3}) {
              vec3 wValues = vec3(
                getW(wR, wC, ${nt}, d2),
                getW(wR, wC, ${nt} + 1, d2),
                getW(wR, wC, ${nt} + 2, d2)
              );

              if (${st}) {
                vec3 xValues = vec3(
                  getX(batch, xR, xC, ${nt}),
                  getX(batch, xR, xC, ${nt} + 1),
                  getX(batch, xR, xC, ${nt} + 2)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec3 xValues = vec3(
                  getX(batch, ${nt}, xR, xC),
                  getX(batch, ${nt} + 1, xR, xC),
                  getX(batch, ${nt} + 2, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            }
          }
        }

        float result = dotProd;
        ${ct}
        ${ut}
        setOutput(result);
      }
    `}}class Conv3DProgram{constructor(s){this.variableNames=["x","W"],this.outputShape=s.outShape;const o=s.padInfo.front,a=s.padInfo.top,c=s.padInfo.left,d=s.strideDepth,g=s.strideHeight,$=s.strideWidth,j=s.dilationDepth,_e=s.dilationHeight,et=s.dilationWidth,_=s.filterDepth,b=s.filterHeight,tt=s.filterWidth,nt=Math.floor(s.inChannels/4)*4,rt=s.inChannels%4;this.userCode=`
      const ivec3 strides = ivec3(${d}, ${g}, ${$});
      const ivec3 pads = ivec3(${o}, ${a}, ${c});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d2 = coords.u;

        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xFCorner = xFRCCorner.x;
        int xRCorner = xFRCCorner.y;
        int xCCorner = xFRCCorner.z;

        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get
        // y(yF, yR, yC, d2). ? = to be determined. : = across all
        // values in that axis.
        float dotProd = 0.0;
        for (int wF = 0; wF < ${_}; wF++) {
          int xF = xFCorner + wF * ${j};

          if (xF < 0 || xF >= ${s.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${b}; wR++) {
            int xR = xRCorner + wR * ${_e};

            if (xR < 0 || xR >= ${s.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${tt}; wC++) {
              int xC = xCCorner + wC * ${et};

              if (xC < 0 || xC >= ${s.inWidth}) {
                continue;
              }

              for (int d1 = 0; d1 < ${nt}; d1 += 4) {
                vec4 xValues = vec4(
                  getX(batch, xF, xR, xC, d1),
                  getX(batch, xF, xR, xC, d1 + 1),
                  getX(batch, xF, xR, xC, d1 + 2),
                  getX(batch, xF, xR, xC, d1 + 3)
                );
                vec4 wValues = vec4(
                  getW(wF, wR, wC, d1, d2),
                  getW(wF, wR, wC, d1 + 1, d2),
                  getW(wF, wR, wC, d1 + 2, d2),
                  getW(wF, wR, wC, d1 + 3, d2)
                );

                dotProd += dot(xValues, wValues);
              }

              if (${rt===1}) {
                dotProd +=
                  getX(batch, xF, xR, xC, ${nt}) *
                  getW(wF, wR, wC, ${nt}, d2);
              } else if (${rt===2}) {
                vec2 xValues = vec2(
                  getX(batch, xF, xR, xC, ${nt}),
                  getX(batch, xF, xR, xC, ${nt} + 1)
                );
                vec2 wValues = vec2(
                  getW(wF, wR, wC, ${nt}, d2),
                  getW(wF, wR, wC, ${nt} + 1, d2)
                );
                dotProd += dot(xValues, wValues);
              } else if (${rt===3}) {
                vec3 xValues = vec3(
                  getX(batch, xF, xR, xC, ${nt}),
                  getX(batch, xF, xR, xC, ${nt} + 1),
                  getX(batch, xF, xR, xC, ${nt} + 2)
                );
                vec3 wValues = vec3(
                  getW(wF, wR, wC, ${nt}, d2),
                  getW(wF, wR, wC, ${nt} + 1, d2),
                  getW(wF, wR, wC, ${nt} + 2, d2)
                );
                dotProd += dot(xValues, wValues);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Conv2DPackedProgram{constructor(s,o=!1,a=null,c=!1,d=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=s.outShape,this.enableShapeUniforms=useShapeUniforms(this.outputShape.length);const g=s.padInfo.left,$=s.strideWidth,j=s.dilationWidth,_e=s.filterHeight,et=s.filterWidth,_=et;let b=`
       int xR; int xC; int xCOffset;
       vec4 wTexel; vec4 previous; vec4 final;`;for(let st=0;st<et;st++)b+=`
           vec4 xTexelC${st*2};
           int xTexelC${st*2}Ready;
           vec4 xTexelC${st*2+1};
           int xTexelC${st*2+1}Ready;
           vec4 xC${st};`;b+=`
     for (int r = 0; r < ${_e}; r++) {
      for (int d1 = 0; d1 < ${s.inChannels}; d1 += 2) {
       `;for(let st=0;st<et;st++)b+=`
           xTexelC${st*2} = vec4(0.0);
           xTexelC${st*2}Ready = 0;
           xTexelC${st*2+1} = vec4(0.0);
           xTexelC${st*2+1}Ready = 0;
           xC${st} = vec4(0.0);`;b+=`
         xR = xRCorner + r * dilations[0];
         if (xR >=0 && xR < inDims[0]) {
       `;for(let st=0;st<(_+1)/2;st++){const ot=st*2;if(b+=`
           xC = xCCorner + ${ot*j};
           `,$===1){if(ot<et&&(g%2===1?(b+=`
                 xCOffset = xC + 1;
                 if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${ot}Ready == 0) {
                   xTexelC${ot} = getX(batch, xR, xCOffset, d1);

                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${ot}.zw = vec2(0.0);
                   }
                   xTexelC${ot}Ready = 1;
                 }
               `,j===1&&ot>0?b+=`
                 xC${ot} = vec4(xTexelC${ot-2}.zw, xTexelC${ot}.xy);
                 `:b+=`
                   xCOffset = xC + 1 - 2;

                   if (xCOffset >= 0 && xCOffset < inDims[1]) {
                     previous = getX(batch, xR, xCOffset, d1);

                     // Need to manually clear unused channels in case
                     // we're reading from recycled texture.
                     if (xCOffset + 1 >= inDims[1]) {
                       previous.zw = vec2(0.0);
                     }

                     xC${ot} = vec4(previous.zw, xTexelC${ot}.xy);
                   } else {
                     xC${ot} = vec4(0.0, 0.0, xTexelC${ot}.xy);
                   }
                   `):b+=`
                 if (xC >= 0 && xC < inDims[1] && xTexelC${ot}Ready == 0) {
                   xTexelC${ot} = getX(batch, xR, xC, d1);
                   if (xC + 1 >= inDims[1]) {
                     xTexelC${ot}.zw = vec2(0.0);
                   }
                   xTexelC${ot}Ready = 1;
                 }

                 xC${ot} = xTexelC${ot};
                 `,ot+1<et)){const it=g%2===0?nearestLargerEven(j):j;j%2===0&&g%2===1||j%2!==0&&g%2!==1?(b+=`
                   xCOffset = xC + imod(pads[1], 2) + ${it};

                   if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${ot+1}Ready == 0) {
                     xTexelC${ot+1} = getX(batch, xR, xCOffset, d1);

                     // Need to manually clear unused channels in case
                     // we're reading from recycled texture.
                     if (xCOffset + 1 >= inDims[1]) {
                       xTexelC${ot+1}.zw = vec2(0.0);
                     }
                     xTexelC${ot+1}Ready = 1;
                   }
                   `,j>1?b+=`
                     xCOffset -= 2;
                     if (xCOffset >= 0 && xCOffset < inDims[1]) {
                      previous = getX(batch, xR, xCOffset, d1);
                      xC${ot+1} = vec4(previous.zw, xTexelC${ot+1}.xy);
                     } else {
                      xC${ot+1} = vec4(0.0, 0.0, xTexelC${ot+1}.xy);
                     }
                     `:b+=`
                     xC${ot+1} = vec4(xTexelC${ot}.zw, xTexelC${ot+1}.xy);
                     `):it===1?b+=`
                     xC${ot+1} = xTexelC${ot};
                     `:b+=`
                     xCOffset = xC + ${it};

                     if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${ot+1}Ready == 0) {
                       xTexelC${ot+1} = getX(batch, xR, xCOffset, d1);
                       if (xCOffset + 1 >= inDims[1]) {
                         xTexelC${ot+1}.zw = vec2(0.0);
                       }
                       xTexelC${ot+1}Ready = 1;
                     }

                     xC${ot+1} = xTexelC${ot+1};
                     `}}else ot<et&&(g%2===1?(b+=`
                 xCOffset = xC + 1 - strides[1];
                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${ot}Ready == 0) {
                   xTexelC${ot} = getX(batch, xR, xCOffset, d1);
                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${ot}.zw = vec2(0.0);
                   }
                   xTexelC${ot}Ready = 1;
                 }

                 if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${ot+1}Ready == 0) {
                   xTexelC${ot+1} = getX(batch, xR, xC + 1, d1);
                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xC + 2 >= inDims[1]) {
                     xTexelC${ot+1}.zw = vec2(0.0);
                   }
                   xTexelC${ot+1}Ready = 1;
                 }

                 xC${ot} = vec4(xTexelC${ot}.zw, xTexelC${ot+1}.zw);
               `,ot+1<et&&(b+=`
                   final = vec4(0.0);
                   xCOffset = xC + 1 + strides[1];
                   if(xCOffset >= 0 && xCOffset < inDims[1]) {
                     final = getX(batch, xR, xCOffset, d1);
                   }
                   xC${ot+1} = vec4(xTexelC${ot+1}.xy, final.xy);
                 `)):(b+=`
                 if(xC >= 0 && xC < inDims[1] && xTexelC${ot}Ready == 0) {
                   xTexelC${ot} = getX(batch, xR, xC, d1);
                   if (xC + 1 >= inDims[1]) {
                     xTexelC${ot}.zw = vec2(0.0);
                   }
                   xTexelC${ot}Ready = 1;
                 }

                 xCOffset = xC + strides[1];
                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${ot+1}Ready == 0) {
                   xTexelC${ot+1} = getX(batch, xR, xCOffset, d1);
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${ot+1}.zw = vec2(0.);
                   }
                   xTexelC${ot+1}Ready = 1;
                 }

                 xC${ot} = vec4(
                   xTexelC${ot}.xy, xTexelC${ot+1}.xy);
               `,ot+1<et&&(b+=`
                   xC${ot+1} = vec4(xTexelC${ot}.zw, xTexelC${ot+1}.zw);
                 `)));ot<et&&(b+=`
             wTexel = getW(r, ${ot}, d1, d2);
             dotProd += xC${ot}.xxzz * vec4(wTexel.xy, wTexel.xy);
             if(d1 + 1 < ${s.inChannels}) {
               dotProd += xC${ot}.yyww * vec4(wTexel.zw, wTexel.zw);
             }
           `,ot+1<et&&(b+=`
               wTexel = getW(r, ${ot+1}, d1, d2);
               dotProd += xC${ot+1}.xxzz * vec4(wTexel.xy, wTexel.xy);
               if(d1 + 1 < ${s.inChannels}) {
                 dotProd += xC${ot+1}.yyww * vec4(wTexel.zw, wTexel.zw);
               }
             `))}b+=`
     }
   `,b+=`
     }
   `,b+=`
     }
   `;let tt="",nt="";a&&(c?tt=`vec4 activation(vec4 a) {
           vec4 b = getPreluActivationWeightsAtOutCoords();
           ${a}
         }`:d?tt=`vec4 activation(vec4 a) {
           vec4 b = getLeakyreluAlphaAtOutCoords();
           ${a}
         }`:tt=`vec4 activation(vec4 x) {
           ${a}
         }`,nt="result = activation(result);");const rt=o?"result += getBiasAtOutCoords();":"";o&&this.variableNames.push("bias"),c&&this.variableNames.push("preluActivationWeights"),d&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
       ${tt}

       void main() {
         ivec4 coords = getOutputCoords();
         int batch = coords.x;
         ivec2 xRCCorner = coords.yz * strides - pads;
         int d2 = coords.w;
         int xRCorner = xRCCorner.x;
         int xCCorner = xRCCorner.y;

         //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.
         vec4 dotProd = vec4(0.000000000000001);

         ${b}

         vec4 result = dotProd - vec4(0.000000000000001);
         ${rt}
         ${nt}
         setOutput(result);
       }
     `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Im2ColPackedProgram{constructor(s,o){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec4"},{name:"pad",type:"ivec2"},{name:"stride",type:"ivec2"},{name:"dilation",type:"ivec2"},{name:"inChannels",type:"int"},{name:"itemsPerBlockRow",type:"int"},{name:"outWidth",type:"int"}],this.outputShape=s,this.enableShapeUniforms=useShapeUniforms(this.outputShape.length);const{dataFormat:a}=o,c=getGlslDifferences(),d=a==="channelsLast",g=d?1:2,$=d?2:3,j=this.enableShapeUniforms?"if(blockIndex < outShape[2] && pos < outShape[1]) {":`if(blockIndex < ${s[2]} && pos < ${s[1]}) {`;let _e="";for(let et=0;et<=1;et++)for(let _=0;_<=1;_++)_e+=`
          blockIndex = rc.z + ${_};
          pos = rc.y + ${et};

          ${j}
            offsetY = int(blockIndex / outWidth) * stride[0] - pad[0];
            d0 = offsetY + dilation[0] * (pos / itemsPerBlockRow);

            if(d0 < inputShape[${g}] && d0 >= 0) {
              // Use custom imod instead mod. On Intel GPU, mod may generate
              // unexpected value.
              // https://github.com/tensorflow/tfjs/issues/5447
              offsetX = imod(blockIndex, outWidth) * stride[1] - pad[1];
              d1 = offsetX + dilation[1] * (imod(pos, itemsPerBlockRow) /
                  inChannels);

              if(d1 < inputShape[${$}] && d1 >= 0) {

                ch = imod(pos, inChannels);

                if (${d}) {
                  innerDims = vec2(d1, ch);
                  result[${et*2+_}] = getChannel(
                    getA(rc.x, d0, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                } else {
                  innerDims = vec2(d0, d1);
                  result[${et*2+_}] = getChannel(
                    getA(rc.x, ch, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                }
              }
            }
          }
        `;this.userCode=`
      void main() {
        ivec3 rc = getOutputCoords();

        vec4 result = vec4(0);

        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;
        vec2 innerDims;

        ${_e}

        ${c.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function getShapeForBatchMatMul(i,s){const o=i.length;return o>=3?s?[...i.slice(0,-3),i[o-3]*i[o-2],i[o-1]]:[...i.slice(0,-3),i[o-3],i[o-2]*i[o-1]]:!s&&o===1&&i[0]>1?[i[0],1]:null}function conv2dByMatMul({x:i,filter:s,convInfo:o,backend:a,bias:c=null,preluActivationWeights:d=null,leakyreluAlpha:g=0,activation:$=null}){const j=i.shape,_e=a.texData.get(i.dataId),et=o.inChannels,_=j[0]*j[1]*j[2],b=o.outChannels,tt=o.dataFormat==="channelsLast",nt=!1,rt=!1;let st;const ot=[];if(d!=null){const lt=getShapeForBatchMatMul(d.shape,tt);lt!=null&&(d=reshape({inputs:{x:d},backend:a,attrs:{shape:lt}}),ot.push(d))}if(c!=null){const lt=getShapeForBatchMatMul(c.shape,tt);lt!=null&&(c=reshape({inputs:{x:c},backend:a,attrs:{shape:lt}}),ot.push(c))}if(!((_===1||b===1)&&et>MATMUL_SHARED_DIM_THRESHOLD)&&_e.isPacked&&tt&&_e.texture!=null&&j[2]%2!==0&&arraysEqual(_e.shape.slice(-3),j.slice(-3))){const lt=j[0]*j[1]*(j[2]+1),ut={dataId:i.dataId,shape:[1,lt,o.inChannels],dtype:i.dtype},ct=_e.shape;_e.shape=_e.shape.slice(),_e.shape[_e.shape.length-2]++,assert$1(isReshapeFree(_e.shape,ut.shape),()=>`packed reshape ${_e.shape} to ${ut.shape} isn't free`);const dt=reshape({inputs:{x:s},backend:a,attrs:{shape:[1,o.inChannels,o.outChannels]}});ot.push(dt);const pt=batchMatMulImpl({a:ut,b:dt,backend:a,transposeA:nt,transposeB:rt,bias:c,activation:$,preluActivationWeights:d,leakyreluAlpha:g}),ht=a.texData.get(pt.dataId);assert$1(ht.isPacked,()=>"batchMatMul result is expected to be packed"),_e.shape=ct,ht.shape=o.outShape,st=identity({inputs:{x:pt},backend:a}),st.shape=o.outShape,ot.push(pt)}else{const lt=o.outHeight*o.outWidth,ut=reshape({inputs:{x:i},backend:a,attrs:{shape:tt?[o.batchSize,lt,o.inChannels]:[o.batchSize,o.inChannels,lt]}}),ct=reshape({inputs:{x:s},backend:a,attrs:{shape:[1,o.inChannels,o.outChannels]}}),dt=batchMatMulImpl({a:tt?ut:ct,b:tt?ct:ut,transposeA:!tt,transposeB:rt,backend:a,bias:c,activation:$,preluActivationWeights:d,leakyreluAlpha:g});st=reshape({inputs:{x:dt},backend:a,attrs:{shape:o.outShape}}),ot.push(ut),ot.push(ct),ot.push(dt)}for(const lt of ot)a.disposeIntermediateTensorInfo(lt);return st}function conv2dWithIm2Row({x:i,filter:s,convInfo:o,backend:a,bias:c=null,preluActivationWeights:d=null,leakyreluAlpha:g=0,activation:$=null}){const{filterWidth:j,filterHeight:_e,inChannels:et,outWidth:_,outHeight:b,dataFormat:tt}=o,nt=tt==="channelsLast",rt=j*_e*et,st=b*_,ot=[o.batchSize,rt,st],it=!0,at=!1,lt=[];if(d!=null){const Et=getShapeForBatchMatMul(d.shape,nt);Et!=null&&(d=reshape({inputs:{x:d},backend:a,attrs:{shape:Et}}),lt.push(d))}if(c!=null){const Et=getShapeForBatchMatMul(c.shape,nt);Et!=null&&(c=reshape({inputs:{x:c},backend:a,attrs:{shape:Et}}),lt.push(c))}const ut=reshape({inputs:{x:s},backend:a,attrs:{shape:[1,rt,sizeFromShape(s.shape)/rt]}});lt.push(ut);const ct=new Im2ColPackedProgram(ot,o),dt=[i.shape,[o.padInfo.top,o.padInfo.left],[o.strideHeight,o.strideWidth],[o.dilationHeight,o.dilationWidth],[o.inChannels],[o.filterWidth*o.inChannels],[o.outWidth]],pt=a.runWebGLProgram(ct,[i],"float32",dt),ht=reshape({inputs:{x:pt},backend:a,attrs:{shape:ot}});lt.push(pt),lt.push(ht);const ft=c!=null,yt=d!=null,wt=$==="leakyrelu",_t=$?mapActivationToShaderProgram($,!0):null,bt=new MatMulPackedProgram(nt?ht.shape:ut.shape,nt?ut.shape:ht.shape,nt?[o.batchSize,st,o.outChannels]:[o.batchSize,o.outChannels,st],it,at,ft,_t,yt,wt),xt=nt?[ht,ut]:[ut,ht];if(c&&xt.push(c),yt&&xt.push(d),wt){const Et=a.makeTensorInfo([],"float32",createScalarValue(g,"float32"));xt.push(Et),lt.push(Et)}const mt=a.runWebGLProgram(bt,xt,"float32"),vt=reshape({inputs:{x:mt},backend:a,attrs:{shape:o.outShape}});lt.push(mt);for(const Et of lt)a.disposeIntermediateTensorInfo(Et);return vt}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function conv2d(i){const{inputs:s,backend:o,attrs:a}=i,{x:c,filter:d}=s,{strides:g,pad:$,dataFormat:j,dilations:_e,dimRoundingMode:et}=a,_=convertConv2DDataFormat(j),b=computeConv2DInfo(c.shape,d.shape,g,_e,$,et,!1,_);let tt;if(b.filterHeight===1&&b.filterWidth===1&&b.dilationHeight===1&&b.dilationWidth===1&&b.strideHeight===1&&b.strideWidth===1&&(b.padInfo.type==="SAME"||b.padInfo.type==="VALID"))tt=conv2dByMatMul({x:c,filter:d,convInfo:b,backend:o});else if(b.strideWidth<=2&&_==="channelsLast"&&env().getBool("WEBGL_EXP_CONV")){const rt=new Conv2DPackedProgram(b),st=[[b.padInfo.top,b.padInfo.left],[b.strideHeight,b.strideWidth],[b.dilationHeight,b.dilationWidth],[b.inHeight,b.inWidth]];tt=o.runWebGLProgram(rt,[c,d],"float32",st)}else if(env().getBool("WEBGL_CONV_IM2COL"))tt=conv2dWithIm2Row({x:c,filter:d,convInfo:b,backend:o});else{const rt=new Conv2DProgram(b);tt=o.runWebGLProgram(rt,[c,d],"float32")}const nt=reshape({inputs:{x:tt},backend:o,attrs:{shape:b.outShape}});return o.disposeIntermediateTensorInfo(tt),nt}const conv2DConfig={kernelName:Conv2D$1,backendName:"webgl",kernelFunc:conv2d};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Conv2DDerFilterProgram{constructor(s){this.variableNames=["x","dy"],this.outputShape=s.filterShape;const o=s.strideHeight,a=s.strideWidth,c=s.padInfo.top,d=s.padInfo.left,g=s.dataFormat==="channelsLast";this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int d2 = coords.w;

        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int b = 0; b < ${s.batchSize}; b++) {
          for (int yR = 0; yR < ${s.outHeight}; yR++) {
            int xR = wR + yR * ${o} - ${c};

            if (xR < 0 || xR >= ${s.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${s.outWidth}; yC++) {
              int xC = wC + yC * ${a} - ${d};

              if (xC < 0 || xC >= ${s.inWidth}) {
                continue;
              }

              ${g?`float dyValue = getDy(b, yR, yC, d2);
              float xValue = getX(b, xR, xC, d1);
              dotProd += (xValue * dyValue);`:`float dyValue = getDy(b, d2, yR, yC);
              float xValue = getX(b, d1, xR, xC);
              dotProd += (xValue * dyValue);`}
            }
          }
        }
        setOutput(dotProd);
      }
    `}}class Conv2DDerInputProgram{constructor(s){this.variableNames=["dy","W"],this.outputShape=s.inShape;const o=s.filterHeight,a=s.filterWidth,c=s.strideHeight,d=s.strideWidth,g=s.dataFormat==="channelsLast",$=o-1-s.padInfo.top,j=a-1-s.padInfo.left,_e=g?1:2,et=g?2:3,_=g?3:1;this.userCode=`
      const ivec2 pads = ivec2(${$}, ${j});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[${_}];

        ivec2 dyCorner = ivec2(coords[${_e}], coords[${et}]) - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${o}; wR++) {
          float dyR = float(dyRCorner + wR) / ${c}.0;

          if (dyR < 0.0 || dyR >= ${s.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${o} - 1 - wR;

          for (int wC = 0; wC < ${a}; wC++) {
            float dyC = float(dyCCorner + wC) / ${d}.0;

            if (dyC < 0.0 || dyC >= ${s.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${a} - 1 - wC;

            for (int d2 = 0; d2 < ${s.outChannels}; d2++) {

              if (${g}) {
                float xValue = getDy(batch, idyR, idyC, d2);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              } else {
                float xValue = getDy(batch, d2, idyR, idyC);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }

            }
          }
        }
        setOutput(dotProd);
      }
    `}}class Conv3DDerFilterProgram{constructor(s){this.variableNames=["x","dy"],this.outputShape=s.filterShape;const o=s.strideDepth,a=s.strideHeight,c=s.strideWidth,d=s.padInfo.front,g=s.padInfo.top,$=s.padInfo.left;this.userCode=`
      void main() {
        ivec5 coords = getOutputCoords();
        int wF = coords.x;
        int wR = coords.y;
        int wC = coords.z;
        int d1 = coords.w;
        int d2 = coords.u;

        float dotProd = 0.0;

        for (int b = 0; b < ${s.batchSize}; b++) {
          for (int yF = 0; yF < ${s.outDepth}; yF++) {
            int xF = wF + yF * ${o} - ${d};

            if (xF < 0 || xF >= ${s.inDepth}) {
              continue;
            }

            for (int yR = 0; yR < ${s.outHeight}; yR++) {
              int xR = wR + yR * ${a} - ${g};

              if (xR < 0 || xR >= ${s.inHeight}) {
                continue;
              }

              for (int yC = 0; yC < ${s.outWidth}; yC++) {
                int xC = wC + yC * ${c} - ${$};

                if (xC < 0 || xC >= ${s.inWidth}) {
                  continue;
                }

                float dyValue = getDy(b, yF, yR, yC, d2);
                float xValue = getX(b, xF, xR, xC, d1);
                dotProd += (xValue * dyValue);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}}class Conv3DDerInputProgram{constructor(s){this.variableNames=["dy","W"],this.outputShape=s.inShape;const o=s.filterDepth,a=s.filterHeight,c=s.filterWidth,d=s.strideDepth,g=s.strideHeight,$=s.strideWidth,j=o-1-s.padInfo.front,_e=a-1-s.padInfo.top,et=c-1-s.padInfo.left;this.userCode=`
      const ivec3 pads = ivec3(${j}, ${_e}, ${et});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.u;


        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyFCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        float dotProd = 0.0;
        for (int wF = 0; wF < ${o}; wF++) {
          float dyF = float(dyFCorner + wF) / ${d}.0;

          if (dyF < 0.0 || dyF >= ${s.outDepth}.0 || fract(dyF) > 0.0) {
            continue;
          }
          int idyF = int(dyF);

          int wFPerm = ${o} - 1 - wF;

          for (int wR = 0; wR < ${a}; wR++) {
            float dyR = float(dyRCorner + wR) / ${g}.0;

            if (dyR < 0.0 || dyR >= ${s.outHeight}.0 ||
              fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            int wRPerm = ${a} - 1 - wR;

            for (int wC = 0; wC < ${c}; wC++) {
              float dyC = float(dyCCorner + wC) / ${$}.0;

              if (dyC < 0.0 || dyC >= ${s.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              int wCPerm = ${c} - 1 - wC;

              for (int d2 = 0; d2 < ${s.outChannels}; d2++) {
                float xValue = getDy(batch, idyF, idyR, idyC, d2);
                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function conv2DBackpropFilter(i){const{inputs:s,backend:o,attrs:a}=i,{x:c,dy:d}=s,{strides:g,pad:$,dataFormat:j,dimRoundingMode:_e,filterShape:et}=a,_=convertConv2DDataFormat(j),b=computeConv2DInfo(c.shape,et,g,1,$,_e,!1,_),tt=new Conv2DDerFilterProgram(b);return o.runWebGLProgram(tt,[c,d],"float32")}const conv2DBackpropFilterConfig={kernelName:Conv2DBackpropFilter,backendName:"webgl",kernelFunc:conv2DBackpropFilter};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Conv2DDerInputPackedProgram{constructor(s){this.variableNames=["dy","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"strides",type:"vec2"}],this.outputShape=s.inShape,this.enableShapeUniforms=useShapeUniforms(this.outputShape.length);const o=s.filterHeight,a=s.filterWidth,c=o-1-s.padInfo.top,d=a-1-s.padInfo.left;this.userCode=`
      const ivec2 pads = ivec2(${c}, ${d});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[3];

        ivec2 dyCorner = ivec2(coords[1], coords[2]) - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        vec4 result = vec4(0.);
        for (int wR = 0; wR < ${o}; wR++) {
          float dyR = float(dyRCorner + wR) / strides[0];
          if (dyR < 0.0 || dyR >= ${s.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);
          int wRPerm = ${o} - 1 - wR;

          for (int wC = 0; wC < ${a}; wC++) {
            int wCPerm = ${a} - 1 - wC;

            float dyC = float(dyCCorner + wC) / strides[1];
            bool idyCVal = (dyC >= 0.0) && (dyC < ${s.outWidth}.0)
              && (fract(dyC) == 0.0);
            int idyC = int(dyC);

            float dyC2 = float(dyCCorner + wC + 1) / strides[1];
            bool idyCVal2 = (dyC2 >= 0.0) && (dyC2 < ${s.outWidth}.0)
              && (fract(dyC2) == 0.0);
            int idyC2 = int(dyC2);

            if (idyCVal && idyCVal2) {
              for (int d2 = 0; d2 < ${s.outChannels}; d2 += 2) {
                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);
                vec4 dySample = getDy(batch, idyR, idyC, d2);
                vec4 dySample2 = (idyC / 2 == idyC2 / 2) ?
                  dySample : getDy(batch, idyR, idyC2, d2);

                vec2 dyValue = mod(float(idyC), 2.) == 0. ?
                  dySample.xy : dySample.zw;
                result.xy += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));

                dyValue = mod(float(idyC2), 2.) == 0. ?
                  dySample2.xy : dySample2.zw;
                result.zw += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));
              }
            } else if (idyCVal) {
              for (int d2 = 0; d2 < ${s.outChannels}; d2 += 2) {
                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);
                vec4 dySample = getDy(batch, idyR, idyC, d2);
                vec2 dyValue = mod(float(idyC), 2.) == 0. ?
                  dySample.xy : dySample.zw;
                result.xy += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));
              }
            } else if (idyCVal2) {
              for (int d2 = 0; d2 < ${s.outChannels}; d2 += 2) {
                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);
                vec4 dySample = getDy(batch, idyR, idyC2, d2);
                vec2 dyValue = mod(float(idyC2), 2.) == 0. ?
                  dySample.xy : dySample.zw;
                result.zw += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));
              }
            }
          }
        }
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function conv2DBackpropInput(i){const{inputs:s,backend:o,attrs:a}=i,{dy:c,filter:d}=s,{inputShape:g,strides:$,pad:j,dataFormat:_e,dimRoundingMode:et}=a,_=convertConv2DDataFormat(_e),b=computeConv2DInfo(g,d.shape,$,1,j,et,!1,_);if(env().getBool("WEBGL_PACK_CONV2DTRANSPOSE")&&_==="channelsLast"){const tt=[[b.strideHeight,b.strideWidth]],nt=new Conv2DDerInputPackedProgram(b);return o.runWebGLProgram(nt,[c,d],"float32",tt)}else{const tt=new Conv2DDerInputProgram(b);return o.runWebGLProgram(tt,[c,d],"float32")}}const conv2DBackpropInputConfig={kernelName:Conv2DBackpropInput,backendName:"webgl",kernelFunc:conv2DBackpropInput};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function conv3D(i){const{inputs:s,backend:o,attrs:a}=i,{x:c,filter:d}=s,{strides:g,pad:$,dilations:j}=a,_e=computeConv3DInfo(c.shape,d.shape,g,j,$),et=new Conv3DProgram(_e);return o.runWebGLProgram(et,[c,d],"float32")}const conv3DConfig={kernelName:Conv3D$1,backendName:"webgl",kernelFunc:conv3D};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function conv3DBackpropFilterV2(i){const{inputs:s,backend:o,attrs:a}=i,{x:c,dy:d}=s,{strides:g,pad:$,filterShape:j}=a,_e=computeConv3DInfo(c.shape,j,g,1,$),et=new Conv3DDerFilterProgram(_e);return o.runWebGLProgram(et,[c,d],"float32")}const conv3DBackpropFilterV2Config={kernelName:Conv3DBackpropFilterV2,backendName:"webgl",kernelFunc:conv3DBackpropFilterV2};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function conv3DBackpropInput(i){const{inputs:s,backend:o,attrs:a}=i,{dy:c,filter:d}=s,{pad:g,strides:$,inputShape:j}=a,_e=computeConv3DInfo(j,d.shape,$,1,g),et=new Conv3DDerInputProgram(_e);return o.runWebGLProgram(et,[c,d],"float32")}const conv3DBackpropInputConfig={kernelName:Conv3DBackpropInputV2,backendName:"webgl",kernelFunc:conv3DBackpropInput};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const COS=CHECK_NAN_SNIPPET_UNARY+`
  return cos(x);
`,COS_PACKED=`
  vec4 result = cos(x);
  bvec4 isNaN = isnan(x);
  ${CHECK_NAN_SNIPPET_PACKED}
  return result;
`,cos=unaryKernelFunc({opSnippet:COS,packedOpSnippet:COS_PACKED}),cosConfig={kernelName:Cos,backendName:"webgl",kernelFunc:cos};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const COSH=`
  float e2x = exp(-x);
  return (e2x + 1.0 / e2x) / 2.0;
`,cosh=unaryKernelFunc({opSnippet:COSH}),coshConfig={kernelName:Cosh,backendName:"webgl",kernelFunc:cosh};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class CropAndResizeProgram{constructor(s,o,a,c,d){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];const[g,$,j,_e]=s,[et]=o,[_,b]=a;this.outputShape=[et,_,b,_e];const tt=c==="bilinear"?1:0,[nt,rt]=[`${$-1}.0`,`${j-1}.0`],[st,ot,it]=_>1?[`${($-1)/(_-1)}`,"(y2-y1) * height_ratio",`y1*${nt} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${nt}`],[at,lt,ut]=b>1?[`${(j-1)/(b-1)}`,"(x2-x1) * width_ratio",`x1*${rt} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${rt}`];this.userCode=`
      const float height_ratio = float(${st});
      const float width_ratio = float(${at});
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int y = coords[1];
        int x = coords[2];
        int d = coords[3];

        // get box vals
        float y1 = getBoxes(b,0);
        float x1 = getBoxes(b,1);
        float y2 = getBoxes(b,2);
        float x2 = getBoxes(b,3);

        // get image in batch index
        int bInd = round(getBoxInd(b));
        if(bInd < 0 || bInd >= ${g}) {
          return;
        }

        float height_scale = ${ot};
        float width_scale = ${lt};

        float in_y = ${it};
        if( in_y < 0.0 || in_y > ${nt} ) {
          setOutput(float(${d}));
          return;
        }
        float in_x = ${ut};
        if( in_x < 0.0 || in_x > ${rt} ) {
          setOutput(float(${d}));
          return;
        }

        vec2 sourceFracIndexCR = vec2(in_x,in_y);
        if(${tt} == 1) {
          // Compute the four integer indices.
          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);
          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));

          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);
          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);
          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);
          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);

          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);

          float top = topLeft + (topRight - topLeft) * fracCR.x;
          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;
          float newValue = top + (bottom - top) * fracCR.y;
          setOutput(newValue);
        } else {
          // Compute the coordinators of nearest neighbor point.
          ivec2 sourceNearestCR = ivec2(floor(
            sourceFracIndexCR + vec2(0.5,0.5)));
          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);
          setOutput(newValue);
        }
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cropAndResize=i=>{const{inputs:s,backend:o,attrs:a}=i,{image:c,boxes:d,boxInd:g}=s,{cropSize:$,method:j,extrapolationValue:_e}=a,et=new CropAndResizeProgram(c.shape,d.shape,$,j,_e);return o.runWebGLProgram(et,[c,d,g],"float32")},cropAndResizeConfig={kernelName:CropAndResize,backendName:"webgl",kernelFunc:cropAndResize};var CumOpType;(function(i){i.Prod="*",i.Sum="+"})(CumOpType||(CumOpType={}));class CumProgram{constructor(s,o,a,c){this.op=s,this.outputShape=o,this.variableNames=["x"],this.customUniforms=[{name:"index",type:"float"}];const d=this.outputShape.length,g=this.op===CumOpType.Prod?"1.0":"0.0",$=a?g:`getX(${getCoords(d,"coords",this.op)})`,j=this.outputShape[this.outputShape.length-1];let _e="",et="";a?(_e=c?`end != ${j-1}`:"end != 0",et=c?"end + 1":"end - 1"):(_e=c?`end + pow2 < ${j}`:"end >= pow2",et=c?"end + pow2":"end - pow2"),this.userCode=`
      void main() {
        ${getCoordsDataType(d)} coords = getOutputCoords();
        int end = ${getFinalCoord(d,"coords",this.op)};
        float val = ${$};
        int pow2 = int(pow(2.0, index));
        if (${_e}) {
          int idx = ${et};
          ${getFinalCoord(d,"coords",this.op)} = idx;
          val ${this.op}= getX(${getCoords(d,"coords",this.op)});
        }
        setOutput(val);
      }
    `}}function getCoords(i,s,o){if(i===1)return`${s}`;if(i===2)return`${s}.x, ${s}.y`;if(i===3)return`${s}.x, ${s}.y, ${s}.z`;if(i===4)return`${s}.x, ${s}.y, ${s}.z, ${s}.w`;throw new Error(`Cumulative ${o} for rank ${i} is not yet supported`)}function getFinalCoord(i,s,o){if(i===1)return`${s}`;if(i===2)return`${s}.y`;if(i===3)return`${s}.z`;if(i===4)return`${s}.w`;throw new Error(`Cumulative ${o} for rank ${i} is not yet supported`)}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cumImpl(i,s,o,a,c,d){const g=s.shape.length,$=getAxesPermutation([a],g);let j=s;$!=null&&(j=transpose({inputs:{x:s},backend:o,attrs:{perm:$}}));const _e=getInnerMostAxes(1,g)[0];if(_e!==g-1)throw new Error(`WebGL cumprod shader expects an inner-most axis=${s.shape.length-1} but got axis=${a}`);const et=j.shape[_e];let _=identity({inputs:{x:j},backend:o});for(let b=0;b<=Math.ceil(Math.log2(et))-1;b++){const tt=new CumProgram(i,j.shape,!1,d),nt=[[b]],rt=_;_=o.runWebGLProgram(tt,[_],_.dtype,nt),o.disposeIntermediateTensorInfo(rt)}if(c){const b=new CumProgram(i,j.shape,c,d),tt=_;_=o.runWebGLProgram(b,[_],_.dtype),o.disposeIntermediateTensorInfo(tt)}if($!=null){const b=getUndoAxesPermutation($),tt=transpose({inputs:{x:_},backend:o,attrs:{perm:b}});return o.disposeIntermediateTensorInfo(_),o.disposeIntermediateTensorInfo(j),tt}return _}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cumprod(i){const{inputs:s,backend:o,attrs:a}=i,{x:c}=s,{axis:d,exclusive:g,reverse:$}=a;return cumImpl(CumOpType.Prod,c,o,d,g,$)}const cumprodConfig={kernelName:Cumprod,backendName:"webgl",kernelFunc:cumprod};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cumsum(i){const{inputs:s,backend:o,attrs:a}=i,{x:c}=s,{axis:d,exclusive:g,reverse:$}=a;return cumImpl(CumOpType.Sum,c,o,d,g,$)}const cumsumConfig={kernelName:Cumsum,backendName:"webgl",kernelFunc:cumsum};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function denseBincount(i){const{inputs:s,backend:o,attrs:a}=i,{x:c,weights:d}=s,{size:g,binaryOutput:$}=a;if(c.shape.length===1){const j=o.readSync(c.dataId),_e=o.readSync(d.dataId),et=bincountImplCPU(j,_e,d.dtype,d.shape,g);return o.makeTensorInfo([g],d.dtype,et)}else if(c.shape.length===2){const j=o.bufferSync(c),_e=o.bufferSync(d),et=bincountReduceImplCPU(j,_e,g,$);return o.makeTensorInfo(et.shape,d.dtype,et.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${c.shape.length}.`)}const denseBincountConfig={kernelName:DenseBincount,backendName:"webgl",kernelFunc:denseBincount};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class DepthToSpaceProgram{constructor(s,o,a){this.variableNames=["x"],this.outputShape=[],this.outputShape=s,this.blockSize=o,this.dataFormat=a,this.userCode=`
    void main() {
      ivec4 coords = getOutputCoords();
      int b = coords[0];
      int h = ${this.getHeightCoordString()};
      int w = ${this.getWidthCoordString()};
      int d = ${this.getDepthCoordString()};

      int in_h = h / ${o};
      int offset_h = imod(h, ${o});
      int in_w = w / ${o};
      int offset_w = imod(w, ${o});
      int offset_d = (offset_h * ${o} + offset_w) *
        ${this.getOutputDepthSize()};
      int in_d = d + offset_d;

      float result = ${this.getInputSamplingString()};
      setOutput(result);
    }
  `}getHeightCoordString(){return this.dataFormat==="NHWC"?"coords[1]":"coords[2]"}getWidthCoordString(){return this.dataFormat==="NHWC"?"coords[2]":"coords[3]"}getDepthCoordString(){return this.dataFormat==="NHWC"?"coords[3]":"coords[1]"}getOutputDepthSize(){return this.dataFormat==="NHWC"?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return this.dataFormat==="NHWC"?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function depthToSpace(i){const{inputs:s,backend:o,attrs:a}=i,{x:c}=s,{blockSize:d,dataFormat:g}=a,$=c.shape[0],j=g==="NHWC"?c.shape[1]:c.shape[2],_e=g==="NHWC"?c.shape[2]:c.shape[3],et=g==="NHWC"?c.shape[3]:c.shape[1],_=j*d,b=_e*d,tt=et/(d*d),nt=g==="NHWC"?[$,_,b,tt]:[$,tt,_,b],rt=new DepthToSpaceProgram(nt,d,g);return o.runWebGLProgram(rt,[c],c.dtype)}const depthToSpaceConfig={kernelName:DepthToSpace,backendName:"webgl",kernelFunc:depthToSpace};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class DepthwiseConv2DProgram{constructor(s,o=!1,a=null,c=!1,d=!1){this.variableNames=["x","W"],this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=s.outShape,this.enableShapeUniforms=useShapeUniforms(this.outputShape.length);const g=s.filterHeight,$=s.filterWidth,j=s.outChannels/s.inChannels;let _e="",et="";a&&(c?_e=`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${a}
        }`:d?_e=`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${a}
        }`:_e=`
          float activation(float x) {
            ${a}
          }
        `,et="result = activation(result);");const _=o?"result += getBiasAtOutCoords();":"";o&&this.variableNames.push("bias"),c&&this.variableNames.push("preluActivationWeights"),d&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${_e}

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${j};
        int q = d2 - d1 * ${j};

        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.
        for (int wR = 0; wR < ${g}; wR++) {
          int xR = xRCorner + wR * dilations[0];

          if (xR < 0 || xR >= inDims[0]) {
            continue;
          }

          for (int wC = 0; wC < ${$}; wC++) {
            int xC = xCCorner + wC * dilations[1];

            if (xC < 0 || xC >= inDims[1]) {
              continue;
            }

            float xVal = getX(batch, xR, xC, d1);
            float wVal = getW(wR, wC, d1, q);
            dotProd += xVal * wVal;
          }
        }

        float result = dotProd;
        ${_}
        ${et}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class DepthwiseConvPacked2DProgram{constructor(s,o=!1,a=null,c=!1,d=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=s.outShape,this.enableShapeUniforms=useShapeUniforms(this.outputShape.length);const g=s.outChannels/s.inChannels,$=s.padInfo.left,j=s.strideWidth,_e=s.dilationWidth,et=s.filterHeight,_=s.filterWidth,b=_;let tt=`
      int xR; int xC; int xCOffset;
      vec4 wTexel; vec4 previous; vec4 final;`;for(let ot=0;ot<_;ot++)tt+=`
          vec4 xTexelC${ot*2};
          int xTexelC${ot*2}Ready;
          vec4 xTexelC${ot*2+1};
          int xTexelC${ot*2+1}Ready;
          vec4 xC${ot};`;tt+=`
    for (int r = 0; r < ${et}; r++) {
      `;for(let ot=0;ot<_;ot++)tt+=`
          xTexelC${ot*2} = vec4(0.0);
          xTexelC${ot*2}Ready = 0;
          xTexelC${ot*2+1} = vec4(0.0);
          xTexelC${ot*2+1}Ready = 0;
          xC${ot} = vec4(0.0);`;tt+=`
        xR = xRCorner + r * dilations[0];
        if (xR >=0 && xR < inDims[0]) {
      `;for(let ot=0;ot<(b+1)/2;ot++){const it=ot*2;if(tt+=`
          xC = xCCorner + ${it*_e};
          `,j===1){if(it<_&&($%2===1?(tt+=`
                xCOffset = xC + 1;
                if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${it}Ready == 0) {
                  xTexelC${it} = getX(batch, xR, xCOffset, d1);

                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${it}.zw = vec2(0.0);
                  }
                  xTexelC${it}Ready = 1;
                }
              `,_e===1&&it>0?tt+=`
                xC${it} = vec4(xTexelC${it-2}.zw, xTexelC${it}.xy);
                `:tt+=`
                  xCOffset = xC + 1 - 2;

                  if (xCOffset >= 0 && xCOffset < inDims[1]) {
                    previous = getX(batch, xR, xCOffset, d1);

                    // Need to manually clear unused channels in case
                    // we're reading from recycled texture.
                    if (xCOffset + 1 >= inDims[1]) {
                      previous.zw = vec2(0.0);
                    }

                    xC${it} = vec4(previous.zw, xTexelC${it}.xy);
                  } else {
                    xC${it} = vec4(0.0, 0.0, xTexelC${it}.xy);
                  }
                  `):tt+=`
                if (xC >= 0 && xC < inDims[1] && xTexelC${it}Ready == 0) {
                  xTexelC${it} = getX(batch, xR, xC, d1);
                  if (xC + 1 >= inDims[1]) {
                    xTexelC${it}.zw = vec2(0.0);
                  }
                  xTexelC${it}Ready = 1;
                }

                xC${it} = xTexelC${it};
                `,it+1<_)){const at=$%2===0?nearestLargerEven(_e):_e;_e%2===0&&$%2===1||_e%2!==0&&$%2!==1?(tt+=`
                  xCOffset = xC + imod(pads[1], 2) + ${at};

                  if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${it+1}Ready == 0) {
                    xTexelC${it+1} = getX(batch, xR, xCOffset, d1);

                    // Need to manually clear unused channels in case
                    // we're reading from recycled texture.
                    if (xCOffset + 1 >= inDims[1]) {
                      xTexelC${it+1}.zw = vec2(0.0);
                    }
                    xTexelC${it+1}Ready = 1;
                  }
                  `,_e>1?tt+=`
                    xCOffset -= 2;
                    if (xCOffset >= 0 && xCOffset < inDims[1]) {
                     previous = getX(batch, xR, xCOffset, d1);
                     xC${it+1} = vec4(previous.zw, xTexelC${it+1}.xy);
                    } else {
                     xC${it+1} = vec4(0.0, 0.0, xTexelC${it+1}.xy);
                    }
                    `:tt+=`
                    xC${it+1} = vec4(xTexelC${it}.zw, xTexelC${it+1}.xy);
                    `):at===1?tt+=`
                    xC${it+1} = xTexelC${it};
                    `:tt+=`
                    xCOffset = xC + ${at};

                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${it+1}Ready == 0) {
                      xTexelC${it+1} = getX(batch, xR, xCOffset, d1);
                      if (xCOffset + 1 >= inDims[1]) {
                        xTexelC${it+1}.zw = vec2(0.0);
                      }
                      xTexelC${it+1}Ready = 1;
                    }

                    xC${it+1} = xTexelC${it+1};
                    `}}else it<_&&($%2===1?(tt+=`
                xCOffset = xC + 1 - strides[1];
                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${it}Ready == 0) {
                  xTexelC${it} = getX(batch, xR, xCOffset, d1);
                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${it}.zw = vec2(0.0);
                  }
                  xTexelC${it}Ready = 1;
                }

                if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${it+1}Ready == 0) {
                  xTexelC${it+1} = getX(batch, xR, xC + 1, d1);
                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xC + 2 >= inDims[1]) {
                    xTexelC${it+1}.zw = vec2(0.0);
                  }
                  xTexelC${it+1}Ready = 1;
                }

                xC${it} = vec4(xTexelC${it}.zw, xTexelC${it+1}.zw);
              `,it+1<_&&(tt+=`
                  final = vec4(0.0);
                  xCOffset = xC + 1 + strides[1];
                  if(xCOffset >= 0 && xCOffset < inDims[1]) {
                    final = getX(batch, xR, xCOffset, d1);
                  }
                  xC${it+1} = vec4(xTexelC${it+1}.xy, final.xy);
                `)):(tt+=`
                if(xC >= 0 && xC < inDims[1] && xTexelC${it}Ready == 0) {
                  xTexelC${it} = getX(batch, xR, xC, d1);
                  if (xC + 1 >= inDims[1]) {
                    xTexelC${it}.zw = vec2(0.0);
                  }
                  xTexelC${it}Ready = 1;
                }

                xCOffset = xC + strides[1];
                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${it+1}Ready == 0) {
                  xTexelC${it+1} = getX(batch, xR, xCOffset, d1);
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${it+1}.zw = vec2(0.);
                  }
                  xTexelC${it+1}Ready = 1;
                }

                xC${it} = vec4(
                  xTexelC${it}.xy, xTexelC${it+1}.xy);
              `,it+1<_&&(tt+=`
                  xC${it+1} = vec4(xTexelC${it}.zw, xTexelC${it+1}.zw);
                `)));it<_&&(tt+=`
            wTexel = getW(r, ${it}, d1, q);
            dotProd += xC${it} * vec4(wTexel.xz, wTexel.xz);
          `,it+1<_&&(tt+=`
              wTexel = getW(r, ${it+1}, d1, q);
              dotProd += xC${it+1} * vec4(wTexel.xz, wTexel.xz);
            `))}tt+=`
    }
  `,tt+=`
      }
    `;let nt="",rt="";a&&(c?nt=`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${a}
        }`:d?nt=`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${a}
        }`:nt=`vec4 activation(vec4 x) {
          ${a}
        }`,rt="result = activation(result);");const st=o?"result += getBiasAtOutCoords();":"";o&&this.variableNames.push("bias"),c&&this.variableNames.push("preluActivationWeights"),d&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${nt}

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${g};
        int q = d2 - d1 * ${g};
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.
        vec4 dotProd = vec4(0.000000000000001);

        ${tt}

        vec4 result = dotProd - vec4(0.000000000000001);
        ${st}
        ${rt}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function depthwiseConv2dNative(i){const{inputs:s,backend:o,attrs:a}=i,{x:c,filter:d}=s,{strides:g,pad:$,dilations:j,dimRoundingMode:_e}=a;let et=j;et==null&&(et=[1,1]),assert$1(eitherStridesOrDilationsAreOne(g,et),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${g} and dilations '${et}'`);const _=computeConv2DInfo(c.shape,d.shape,g,et,$,_e,!0);let b;env().getBool("WEBGL_PACK_DEPTHWISECONV")&&_.strideWidth<=2&&_.outChannels/_.inChannels===1?b=new DepthwiseConvPacked2DProgram(_):b=new DepthwiseConv2DProgram(_);const tt=[[_.padInfo.top,_.padInfo.left],[_.strideHeight,_.strideWidth],[_.dilationHeight,_.dilationWidth],[_.inHeight,_.inWidth]];return o.runWebGLProgram(b,[c,d],"float32",tt)}const depthwiseConv2dNativeConfig={kernelName:DepthwiseConv2dNative,backendName:"webgl",kernelFunc:depthwiseConv2dNative};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class DepthwiseConv2DDerFilterProgram{constructor(s){this.variableNames=["x","dy"],this.outputShape=s.filterShape;const o=s.strideHeight,a=s.strideWidth,c=s.padInfo.top,d=s.padInfo.left,g=s.outChannels/s.inChannels;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int dm = coords.w;
        int d2 = d1 * ${g} + dm;

        float dotProd = 0.0;

        // TO DO: Vec4 over the batch size
        for (int b = 0; b < ${s.batchSize}; b++) {
          for (int yR = 0; yR < ${s.outHeight}; yR++) {
            int xR = wR + yR * ${o} - ${c};

            if (xR < 0 || xR >= ${s.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${s.outWidth}; yC++) {
              int xC = wC + yC * ${a} - ${d};

              if (xC < 0 || xC >= ${s.inWidth}) {
                continue;
              }

              float dyValue = getDy(b, yR, yC, d2);
              float xValue = getX(b, xR, xC, d1);
              dotProd += (xValue * dyValue);
            }
          }
        }
        setOutput(dotProd);
      }
    `}}class DepthwiseConv2DDerInputProgram{constructor(s){this.variableNames=["dy","W"],this.outputShape=s.inShape;const o=s.filterHeight,a=s.filterWidth,c=s.strideHeight,d=s.strideWidth,g=o-1-s.padInfo.top,$=a-1-s.padInfo.left,j=s.outChannels/s.inChannels;this.userCode=`
      const ivec2 pads = ivec2(${g}, ${$});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[3];
        ivec2 dyCorner = coords.yz - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        float dotProd = 0.0;

        for (int wR = 0; wR < ${o}; wR++) {
          float dyR = float(dyRCorner + wR) / ${c}.0;

          if (dyR < 0.0 || dyR >= ${s.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${o} - 1 - wR;

          for (int wC = 0; wC < ${a}; wC++) {
            float dyC = float(dyCCorner + wC) / ${d}.0;

            if (dyC < 0.0 || dyC >= ${s.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${a} - 1 - wC;

            // TO DO: Vec4 over the channelMul
            for (int dm = 0; dm < ${j}; dm++) {
              int d2 = d1 * ${j} + dm;
              float xValue = getDy(batch, idyR, idyC, d2);
              float wValue = getW(wRPerm, wCPerm, d1, dm);
              dotProd += xValue * wValue;
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function depthwiseConv2dNativeBackpropFilter(i){const{inputs:s,backend:o,attrs:a}=i,{x:c,dy:d}=s,{strides:g,dilations:$,pad:j,dimRoundingMode:_e,filterShape:et}=a,_=computeConv2DInfo(c.shape,et,g,$,j,_e,!0),b=new DepthwiseConv2DDerFilterProgram(_);return o.runWebGLProgram(b,[c,d],"float32")}const depthwiseConv2dNativeBackpropFilterConfig={kernelName:DepthwiseConv2dNativeBackpropFilter,backendName:"webgl",kernelFunc:depthwiseConv2dNativeBackpropFilter};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function depthwiseConv2dNativeBackpropInput(i){const{inputs:s,backend:o,attrs:a}=i,{dy:c,filter:d}=s,{strides:g,dilations:$,pad:j,dimRoundingMode:_e,inputShape:et}=a,_=computeConv2DInfo(et,d.shape,g,$,j,_e,!0),b=new DepthwiseConv2DDerInputProgram(_);return o.runWebGLProgram(b,[c,d],"float32")}const depthwiseConv2dNativeBackpropInputConfig={kernelName:DepthwiseConv2dNativeBackpropInput,backendName:"webgl",kernelFunc:depthwiseConv2dNativeBackpropInput};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class DiagProgram{constructor(s){this.variableNames=["X"],this.outputShape=[s,s],this.userCode=`
      void main() {
          ivec2 coords = getOutputCoords();
          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;
          setOutput(val);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function diag(i){const{inputs:s,backend:o}=i,{x:a}=s,c=[...a.shape,...a.shape],d=sizeFromShape(a.shape),g=reshape({inputs:{x:a},backend:o,attrs:{shape:[d]}}),$=new DiagProgram(d),j=o.runWebGLProgram($,[g],g.dtype),_e=reshape({inputs:{x:j},backend:o,attrs:{shape:c}});return o.disposeIntermediateTensorInfo(g),o.disposeIntermediateTensorInfo(j),_e}const diagConfig={kernelName:Diag,backendName:"webgl",kernelFunc:diag};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Dilation2DProgram{constructor(s){this.variableNames=["x","W"],this.outputShape=s.outShape;const{inHeight:o,inWidth:a,padInfo:c,strideHeight:d,strideWidth:g,filterHeight:$,filterWidth:j,dilationHeight:_e,dilationWidth:et}=s,{top:_,left:b}=c;this.userCode=`
      const ivec2 strides = ivec2(${d}, ${g});
      const ivec2 pads = ivec2(${_}, ${b});
      const float neg_infinity = -3.4e38;

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.w;
        ivec2 outTopLeftCorner =
            coords.yz * strides - pads;
        int hBeg = outTopLeftCorner.x;
        int wBeg = outTopLeftCorner.y;

        float curVal = neg_infinity;
        for (int h = 0; h < ${$}; h++) {
          int hIn = hBeg + h * ${_e};

          if (hIn >= 0 && hIn < ${o}) {
            for (int w = 0; w < ${j}; w++) {
              int wIn = wBeg + w * ${et};

              if (wIn >= 0 && wIn < ${a}) {
                float xVal = getX(batch, hIn, wIn, d1);
                float wVal = getW(h, w, d1);

                float val = xVal + wVal;
                if (val > curVal) {
                  curVal = val;
                }
              }
            }
          }
        }

        float result = curVal;
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dilation2D(i){const{inputs:s,backend:o,attrs:a}=i,{x:c,filter:d}=s,{strides:g,pad:$,dilations:j}=a,_e=computeDilation2DInfo(c.shape,d.shape,g,$,"NHWC",j);let et;const _=new Dilation2DProgram(_e);et=o.runWebGLProgram(_,[c,d],"float32");const b=reshape({inputs:{x:et},backend:o,attrs:{shape:_e.outShape}});return o.disposeIntermediateTensorInfo(et),b}const dilation2DConfig={kernelName:Dilation2D,backendName:"webgl",kernelFunc:dilation2D};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function einsum(i){const{inputs:s,backend:o,attrs:a}=i,{equation:c}=a,d=s,{allDims:g,summedDims:$,idDims:j}=decodeEinsumEquation(c,d.length);checkEinsumDimSizes(g.length,j,d);const{path:_e,steps:et}=getEinsumComputePath($,j),_=et.length;let b=null,tt=g.length;const nt=[];for(let rt=0;rt<_;++rt){for(const st of et[rt]){const{permutationIndices:ot,expandDims:it}=getEinsumPermutation(tt,j[st]);let at;isIdentityPermutation(ot)?at=d[st]:(at=transpose({inputs:{x:d[st]},backend:o,attrs:{perm:ot}}),nt.push(at));const lt=at.shape.slice();for(let ut=0;ut<it.length;++ut)lt.splice(it[ut],0,1);arraysEqual(at.shape,lt)||(at=reshape({inputs:{x:at},backend:o,attrs:{shape:lt}}),nt.push(at)),b===null?b=at:(b=multiply({inputs:{a:at,b},backend:o}),nt.push(b))}rt<_-1&&(_e[rt]>=0&&(b=sum({inputs:{x:b},backend:o,attrs:{axis:_e[rt]-(g.length-tt),keepDims:!1}}),nt.push(b)),tt--)}for(const rt of nt)rt!==b&&o.disposeIntermediateTensorInfo(rt);return b}const einsumConfig={kernelName:Einsum,backendName:"webgl",kernelFunc:einsum};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ELU="return (x >= 0.0) ? x : (exp(x) - 1.0);",ELU_PACKED=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,elu=unaryKernelFunc({opSnippet:ELU,packedOpSnippet:ELU_PACKED}),eluConfig={kernelName:Elu$1,backendName:"webgl",kernelFunc:elu};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ELU_DER="return (b >= 0.0) ? a : a * (b + 1.0);",ELU_DER_PACKED=`
  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));
  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));
`,eluGrad=i=>{const{inputs:s,backend:o}=i,{dy:a,y:c}=s,d=env().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new BinaryOpPackedProgram(ELU_DER_PACKED,a.shape,c.shape):new BinaryOpProgram(ELU_DER,a.shape,c.shape);return o.runWebGLProgram(d,[a,c],a.dtype)},eluGradConfig={kernelName:EluGrad,backendName:"webgl",kernelFunc:eluGrad};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const PACKED_EQUAL=`
  return vec4(equal(a, b));
`,EQUAL="return float(a == b);",equal=binaryKernelFunc({opSnippet:EQUAL,packedOpSnippet:PACKED_EQUAL,dtype:"bool",cpuKernelImpl:equalImplCPU}),equalConfig={kernelName:Equal,backendName:"webgl",kernelFunc:equal};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ERF=`
  // Error function is calculated approximately with elementary function.
  // See "Handbook of Mathematical Functions with Formulas,
  // Graphs, and Mathematical Tables", Abramowitz and Stegun.
  float p = ${ERF_P};
  float a1 = ${ERF_A1};
  float a2 = ${ERF_A2};
  float a3 = ${ERF_A3};
  float a4 = ${ERF_A4};
  float a5 = ${ERF_A5};

  float sign = sign(x);
  x = abs(x);
  float t = 1.0 / (1.0 + p * x);
  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));
`,erf=unaryKernelFunc({opSnippet:ERF}),erfConfig={kernelName:Erf,backendName:"webgl",kernelFunc:erf};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const EXP=CHECK_NAN_SNIPPET_UNARY+`
  return exp(x);
`,EXP_PACKED=`
  vec4 result = exp(x);
  bvec4 isNaN = isnan(x);
  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,exp=unaryKernelFunc({opSnippet:EXP,packedOpSnippet:EXP_PACKED,cpuKernelImpl:expImplCPU,dtype:"float32"}),expConfig={kernelName:Exp,backendName:"webgl",kernelFunc:exp};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function expandDims(i){const{inputs:s,attrs:o,backend:a}=i,{dim:c}=o,{input:d}=s,g=d.shape.length,$=d.shape.slice();let j=c;return c<0&&(assert$1(-(g+1)<=c,()=>`Axis must be in the interval [${-(g+1)}, ${g}]`),j=g+c+1),$.splice(j,0,1),reshape({inputs:{x:d},backend:a,attrs:{shape:$}})}const expandDimsConfig={kernelName:ExpandDims,backendName:"webgl",kernelFunc:expandDims};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const EXPM1="return exp(x) - 1.0;",expm1=unaryKernelFunc({opSnippet:EXPM1,packedOpSnippet:EXPM1,cpuKernelImpl:expm1ImplCPU}),expm1Config={kernelName:Expm1,backendName:"webgl",kernelFunc:expm1};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class FFTProgram{constructor(s,o,a){this.variableNames=["real","imag"];const c=o[1];this.outputShape=o;const d=a?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,g=a?`${c}.0`:"1.0";let $;if(s==="real")$="return real * expR - imag * expI;";else if(s==="imag")$="return real * expI + imag * expR;";else throw new Error(`FFT component must be either "real" or "imag", got ${s}.`);this.userCode=`
      const float exponentMultiplier = ${d};

      float unaryOpComplex(float real, float expR, float imag, float expI) {
        ${$}
      }

      float mulMatDFT(int batch, int index) {
        float indexRatio = float(index) / float(${c});
        float exponentMultiplierTimesIndexRatio =
            exponentMultiplier * indexRatio;

        float result = 0.0;

        for (int i = 0; i < ${c}; i++) {
          // x = (-2|2 * PI / N) * index * i;
          float x = exponentMultiplierTimesIndexRatio * float(i);
          float expR = cos(x);
          float expI = sin(x);
          float real = getReal(batch, i);
          float imag = getImag(batch, i);

          result +=
              unaryOpComplex(real, expR, imag, expI) / ${g};
        }

        return result;
      }

      void main() {
        ivec2 coords = getOutputCoords();
        setOutput(mulMatDFT(coords[0], coords[1]));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fftImpl(i,s,o){const a=o.texData.get(i.dataId),c=sizeFromShape(i.shape),d=i.shape[i.shape.length-1],g=c/d,$=reshape({inputs:{x:i},backend:o,attrs:{shape:[g,d]}}),j=$.shape,_e=new FFTProgram("real",j,s),et=new FFTProgram("imag",j,s),_=[{dataId:a.complexTensorInfos.real.dataId,dtype:a.complexTensorInfos.real.dtype,shape:j},{dataId:a.complexTensorInfos.imag.dataId,dtype:a.complexTensorInfos.imag.dtype,shape:j}],b=o.runWebGLProgram(_e,_,"float32"),tt=o.runWebGLProgram(et,_,"float32"),nt=complex({inputs:{real:b,imag:tt},backend:o});o.disposeIntermediateTensorInfo(b),o.disposeIntermediateTensorInfo(tt);const rt=reshape({inputs:{x:nt},backend:o,attrs:{shape:i.shape}});return o.disposeIntermediateTensorInfo($),o.disposeIntermediateTensorInfo(nt),rt}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fft(i){const{inputs:s,backend:o}=i,{input:a}=s;return fftImpl(a,!1,o)}const fftConfig={kernelName:FFT,backendName:"webgl",kernelFunc:fft};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class FillProgram{constructor(s,o){this.outputShape=[],this.customUniforms=[{name:"value",type:"float"}],this.variableNames=["x"],this.outputShape=s,this.userCode=`
      void main() {
        // Input can be obtained from uniform value.
        setOutput(value);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fill(i){const{backend:s,attrs:o}=i,{shape:a,value:c}=o;let{dtype:d}=o;if(d=d||inferDtype(c),d==="string"){const g=getArrayFromDType(d,sizeFromShape(a));return g.fill(c),s.makeTensorInfo(a,d,g)}else{const g=new FillProgram(a,c),$=[[c]];return s.runWebGLProgram(g,[],d,$)}}const fillConfig={kernelName:Fill,backendName:"webgl",kernelFunc:fill};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class FlipLeftRightProgram{constructor(s){this.variableNames=["Image"],this.outputShape=[];const o=s[2];this.outputShape=s,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];

          int coordX = ${o} - x - 1;
          float outputValue;
          if(coordX >= 0 && coordX < ${o}) {
            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);
          } else {
            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);
          }
          setOutput(outputValue);
        }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const flipLeftRightConfig={kernelName:FlipLeftRight,backendName:"webgl",kernelFunc:({inputs:i,backend:s})=>{const{image:o}=i,a=s,c=new FlipLeftRightProgram(o.shape);return a.runWebGLProgram(c,[o],o.dtype)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const FLOOR="return floor(x);",floor=unaryKernelFunc({opSnippet:FLOOR,packedOpSnippet:FLOOR,cpuKernelImpl:floorImplCPU}),floorConfig={kernelName:Floor,backendName:"webgl",kernelFunc:floor};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const INT_DIV=`
  float s = sign(a) * sign(b);
  int ia = round(a);
  int ib = round(b);
  if (ib != 0) {
    // Windows (D3D) wants guaranteed non-zero int division at compile-time.
    return float(idiv(ia, ib, s));
  } else {
    return NAN;
  }
`,INT_DIV_PACKED=`
  ivec4 ia = round(a);
  ivec4 ib = round(b);
  bvec4 cond = notEqual(ib, ivec4(0));
  ivec4 result = ivec4(0);
  vec4 s = sign(a) * sign(b);

  // Windows (D3D) wants guaranteed non-zero int division at compile-time.
  if (cond[0]) {
    result[0] = idiv(ia[0], ib[0], s[0]);
  }
  if (cond[1]) {
    result[1] = idiv(ia[1], ib[1], s[1]);
  }
  if (cond[2]) {
    result[2] = idiv(ia[2], ib[2], s[2]);
  }
  if (cond[3]) {
    result[3] = idiv(ia[3], ib[3], s[3]);
  }
  return vec4(result);
`,floorDiv=binaryKernelFunc({opSnippet:INT_DIV,packedOpSnippet:INT_DIV_PACKED,dtype:"int32"}),floorDivConfig={kernelName:FloorDiv,backendName:"webgl",kernelFunc:floorDiv};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class FromPixelsProgram{constructor(s){this.variableNames=["A"];const o=getGlslDifferences(),[a,c]=s;this.outputShape=s,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${c}.0, ${a}.0);

        vec4 values = ${o.texture2D}(A, uv);
        float value;
        if (depth == 0) {
          value = values.r;
        } else if (depth == 1) {
          value = values.g;
        } else if (depth == 2) {
          value = values.b;
        } else if (depth == 3) {
          value = values.a;
        }

        setOutput(floor(value * 255.0 + 0.5));
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class FromPixelsPackedProgram{constructor(s){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const o=getGlslDifferences(),[a,c]=s;this.outputShape=s,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];

        vec4 result = vec4(0.);

        for(int row=0; row<=1; row++) {
          for(int col=0; col<=1; col++) {
            texC = coords[1] + row;
            depth = coords[2] + col;

            vec2 uv = (vec2(texC, texR) + halfCR) /
                       vec2(${c}.0, ${a}.0);
            vec4 values = ${o.texture2D}(A, uv);
            float value;
            if (depth == 0) {
              value = values.r;
            } else if (depth == 1) {
              value = values.g;
            } else if (depth == 2) {
              value = values.b;
            } else if (depth == 3) {
              value = values.a;
            }

            result[row * 2 + col] = floor(value * 255.0 + 0.5);
          }
        }

        ${o.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fromPixelsConfig={kernelName:FromPixels,backendName:"webgl",kernelFunc:fromPixels};let fromPixels2DContext,willReadFrequently=env().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");function fromPixels(i){const{inputs:s,backend:o,attrs:a}=i;let{pixels:c}=s;const{numChannels:d}=a,g=typeof HTMLVideoElement<"u"&&c instanceof HTMLVideoElement,$=typeof HTMLImageElement<"u"&&c instanceof HTMLImageElement,[j,_e]=g?[c.videoWidth,c.videoHeight]:[c.width,c.height],et=[_e,j],_=[_e,j,d];if($||g){const rt=env().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");(fromPixels2DContext==null||rt!==willReadFrequently)&&(willReadFrequently=rt,fromPixels2DContext=document.createElement("canvas").getContext("2d",{willReadFrequently})),fromPixels2DContext.canvas.width=j,fromPixels2DContext.canvas.height=_e,fromPixels2DContext.drawImage(c,0,0,j,_e),c=fromPixels2DContext.canvas}const b=o.makeTensorInfo(et,"int32");o.texData.get(b.dataId).usage=TextureUsage.PIXELS,o.gpgpu.uploadPixelDataToTexture(o.getTexture(b.dataId),c);const tt=env().getBool("WEBGL_PACK")?new FromPixelsPackedProgram(_):new FromPixelsProgram(_),nt=o.runWebGLProgram(tt,[b],"int32");return o.disposeData(b.dataId),nt}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fusedConv2d(i){const{inputs:s,backend:o,attrs:a}=i,{x:c,filter:d,bias:g,preluActivationWeights:$}=s,{strides:j,pad:_e,dataFormat:et,dilations:_,dimRoundingMode:b,activation:tt,leakyreluAlpha:nt}=a,rt=convertConv2DDataFormat(et),st=computeConv2DInfo(c.shape,d.shape,j,_,_e,b,!1,rt);let ot;const it=[],at=g!=null,lt=$!=null,ut=tt==="leakyrelu",ct=()=>{const pt=[c,d],ht=(ft,yt)=>{if(yt==="NCHW"&&ft.shape.length===1&&ft.shape[0]!==1){const wt=reshape({inputs:{x:ft},backend:o,attrs:{shape:[ft.shape[0],1,1]}});return it.push(wt),wt}return ft};if(at&&pt.push(ht(g,et)),lt&&pt.push(ht($,et)),ut){const ft=o.makeTensorInfo([],"float32",createScalarValue(nt,"float32"));pt.push(ft),it.push(ft)}return pt};if(st.filterHeight===1&&st.filterWidth===1&&st.dilationHeight===1&&st.dilationWidth===1&&st.strideHeight===1&&st.strideWidth===1&&(st.padInfo.type==="SAME"||st.padInfo.type==="VALID"))ot=conv2dByMatMul({x:c,filter:d,convInfo:st,backend:o,bias:g,activation:tt,preluActivationWeights:$,leakyreluAlpha:nt});else if(st.strideWidth<=2&&rt==="channelsLast"&&env().getBool("WEBGL_EXP_CONV")){const pt=tt?mapActivationToShaderProgram(tt,!0):null,ht=new Conv2DPackedProgram(st,at,pt,lt,ut),ft=[[st.padInfo.top,st.padInfo.left],[st.strideHeight,st.strideWidth],[st.dilationHeight,st.dilationWidth],[st.inHeight,st.inWidth]],yt=ct();ot=o.runWebGLProgram(ht,yt,"float32",ft)}else if(env().getBool("WEBGL_CONV_IM2COL"))ot=conv2dWithIm2Row({x:c,filter:d,convInfo:st,backend:o,bias:g,activation:tt,preluActivationWeights:$,leakyreluAlpha:nt});else{const pt=tt?mapActivationToShaderProgram(tt,!1):null,ht=new Conv2DProgram(st,at,pt,lt,ut),ft=ct();ot=o.runWebGLProgram(ht,ft,"float32")}const dt=reshape({inputs:{x:ot},backend:o,attrs:{shape:st.outShape}});return it.push(ot),it.forEach(pt=>o.disposeIntermediateTensorInfo(pt)),dt}const fusedConv2DConfig={kernelName:FusedConv2D,backendName:"webgl",kernelFunc:fusedConv2d};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fusedDepthwiseConv2D(i){const{inputs:s,backend:o,attrs:a}=i,{x:c,filter:d,bias:g,preluActivationWeights:$}=s,{strides:j,pad:_e,dilations:et,dimRoundingMode:_,activation:b,leakyreluAlpha:tt}=a,nt=[];let rt=et;rt==null&&(rt=[1,1]),assert$1(eitherStridesOrDilationsAreOne(j,rt),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${j} and dilations '${rt}'`);const st=computeConv2DInfo(c.shape,d.shape,j,rt,_e,_,!0),ot=env().getBool("WEBGL_PACK_DEPTHWISECONV")&&st.strideWidth<=2&&st.outChannels/st.inChannels===1,it=b?mapActivationToShaderProgram(b,ot):null,at=[c,d],lt=g!=null,ut=$!=null,ct=b==="leakyrelu";if(lt&&at.push(g),ut&&at.push($),ct){const ft=o.makeTensorInfo([],"float32",createScalarValue(tt,"float32"));at.push(ft),nt.push(ft)}let dt;ot?dt=new DepthwiseConvPacked2DProgram(st,lt,it,ut,ct):dt=new DepthwiseConv2DProgram(st,lt,it,ut,ct);const pt=[[st.padInfo.top,st.padInfo.left],[st.strideHeight,st.strideWidth],[st.dilationHeight,st.dilationWidth],[st.inHeight,st.inWidth]],ht=o.runWebGLProgram(dt,at,"float32",pt);return nt.forEach(ft=>o.disposeIntermediateTensorInfo(ft)),ht}const fusedDepthwiseConv2DConfig={kernelName:FusedDepthwiseConv2D,backendName:"webgl",kernelFunc:fusedDepthwiseConv2D};class GatherNDProgram{constructor(s,o,a,c){this.sliceDim=s,this.strides=o,this.paramsShape=c,this.variableNames=["x","indices"],this.outputShape=a;const d=getCoordsDataType(a.length);let g=`
    int index;`;for(let $=0;$<this.sliceDim;$++)g+=`
          index = round(getIndices(coords[0], ${$}));
          out_of_bounds = out_of_bounds || index < 0;
          out_of_bounds = out_of_bounds || index >= ${this.paramsShape[$]};
          flattenIndex += index * ${this.strides[$]};`;this.userCode=`
         void main() {
          ${d} coords = getOutputCoords();
          int flattenIndex = 0;
          bool out_of_bounds = false;

          ${g}

          setOutput(out_of_bounds ? 0.0 : getX(flattenIndex, coords[1]));
        }
      `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gatherNd(i){const{inputs:s,backend:o}=i,{params:a,indices:c}=s,d=c.shape,g=d[d.length-1],$=sizeFromShape(a.shape),[j,_e,et,_]=prepareAndValidate(a,c),b=reshape({inputs:{x:c},backend:o,attrs:{shape:[_e,g]}}),tt=reshape({inputs:{x:a},backend:o,attrs:{shape:[sizeFromShape(a.shape)/et,et]}});if(o.shouldExecuteOnCPU([a,c])||a.dtype==="string"){const ot=o.readSync(c.dataId),it=o.bufferSync(a),at=gatherNdImplCPU(ot,it,a.dtype,_e,g,et,_,a.shape,$);return o.makeTensorInfo(j,a.dtype,at.values)}const nt=new GatherNDProgram(g,_,[_e,et],a.shape),rt=o.runWebGLProgram(nt,[tt,b],tt.dtype),st=reshape({inputs:{x:rt},backend:o,attrs:{shape:j}});return o.disposeIntermediateTensorInfo(b),o.disposeIntermediateTensorInfo(tt),o.disposeIntermediateTensorInfo(rt),st}const gatherNdConfig={kernelName:GatherNd,backendName:"webgl",kernelFunc:gatherNd};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class GatherProgram{constructor(s,o){this.variableNames=["A","indices"],this.outputShape=o,this.rank=o.length;const a=getCoordsDataType(this.rank),c=getSourceCoords$1(s);this.userCode=`
      void main() {
        ${a} resRC = getOutputCoords();
        int index = int(getIndices(resRC.x, resRC.z));
        float inBounds = (index >= 0) && (index < ${s[2]}) ? 1.0 : 0.0;
        setOutput(inBounds * getA(${c}));
      }
    `}}function getSourceCoords$1(i,s){const o=["resRC.x","resRC.y","resRC.z","resRC.w"],a=[];for(let c=0;c<i.length;c++)c===2?a.push("index"):a.push(`${o[c]}`);return a.join()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gatherV2(i){const{inputs:s,backend:o,attrs:a}=i,{x:c,indices:d}=s,{axis:g,batchDims:$}=a,j=parseAxisParam(g,c.shape)[0];if(env().get("DEBUG")){const it=o.readSync(d.dataId),at=c.shape[j];for(let lt=0;lt<it.length;++lt){const ut=it[lt];assert$1(ut<=at-1&&ut>=0,()=>`GatherV2: the index value ${ut} is not in [0, ${at-1}]`)}}const _e=collectGatherOpShapeInfo(c,d,j,$),et=sizeFromShape(d.shape),_=[],b=reshape({inputs:{x:c},backend:o,attrs:{shape:[_e.batchSize,_e.outerSize,_e.dimSize,_e.sliceSize]}}),tt=reshape({inputs:{x:d},backend:o,attrs:{shape:[_e.batchSize,et/_e.batchSize]}});_.push(b),_.push(tt);const nt=[_e.batchSize,_e.outerSize,et/_e.batchSize,_e.sliceSize];if(o.shouldExecuteOnCPU([c,d])||c.dtype==="string"){const it=o.bufferSync(tt),at=o.bufferSync(b),lt=gatherV2ImplCPU(at,it,nt);return _.forEach(ut=>o.disposeIntermediateTensorInfo(ut)),o.makeTensorInfo(_e.outputShape,lt.dtype,lt.values)}const rt=new GatherProgram(b.shape,nt),st=o.runWebGLProgram(rt,[b,tt],b.dtype);_.push(st);const ot=reshape({inputs:{x:st},backend:o,attrs:{shape:_e.outputShape}});return _.forEach(it=>o.disposeIntermediateTensorInfo(it)),ot}const gatherV2Config={kernelName:GatherV2,backendName:"webgl",kernelFunc:gatherV2};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const GREATER="return float(a > b);",GREATER_PACKED=`
  return vec4(greaterThan(a, b));
`,greater=binaryKernelFunc({opSnippet:GREATER,packedOpSnippet:GREATER_PACKED,cpuKernelImpl:greaterImplCPU,dtype:"bool"}),greaterConfig={kernelName:Greater,backendName:"webgl",kernelFunc:greater};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const GREATER_EQUAL="return float(a >= b);",GREATER_EQUAL_PACKED=`
  return vec4(greaterThanEqual(a, b));
`,greaterEqual=binaryKernelFunc({opSnippet:GREATER_EQUAL,packedOpSnippet:GREATER_EQUAL_PACKED,dtype:"bool",cpuKernelImpl:greaterEqualImplCPU}),greaterEqualConfig={kernelName:GreaterEqual,backendName:"webgl",kernelFunc:greaterEqual};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ifft(i){const{inputs:s,backend:o}=i,{input:a}=s;return fftImpl(a,!0,o)}const ifftConfig={kernelName:IFFT,backendName:"webgl",kernelFunc:ifft};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const IS_FINITE="return float(!isnan(x) && !isinf(x));",isFinite$1=unaryKernelFunc({opSnippet:IS_FINITE,dtype:"bool"}),isFiniteConfig={kernelName:IsFinite,backendName:"webgl",kernelFunc:isFinite$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const IS_INF="return float(isinf(x));",isInf=unaryKernelFunc({opSnippet:IS_INF,dtype:"bool"}),isInfConfig={kernelName:IsInf,backendName:"webgl",kernelFunc:isInf};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const IS_NAN="return float(isnan(x));",isNaN$1=unaryKernelFunc({opSnippet:IS_NAN,dtype:"bool"}),isNaNConfig={kernelName:IsNan,backendName:"webgl",kernelFunc:isNaN$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const LESS="return float(a < b);",LESS_PACKED=`
  return vec4(lessThan(a, b));
`,less=binaryKernelFunc({opSnippet:LESS,packedOpSnippet:LESS_PACKED,cpuKernelImpl:lessImplCPU,dtype:"bool"}),lessConfig={kernelName:Less,backendName:"webgl",kernelFunc:less};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const LESS_EQUAL="return float(a <= b);",LESS_EQUAL_PACKED=`
  return vec4(lessThanEqual(a, b));
`,lessEqual=binaryKernelFunc({opSnippet:LESS_EQUAL,packedOpSnippet:LESS_EQUAL_PACKED,cpuKernelImpl:lessEqualImplCPU,dtype:"bool"}),lessEqualConfig={kernelName:LessEqual,backendName:"webgl",kernelFunc:lessEqual};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function linSpace(i){const{backend:s,attrs:o}=i,{start:a,stop:c,num:d}=o,g=linSpaceImplCPU(a,c,d);return s.makeTensorInfo([g.length],"float32",g)}const linSpaceConfig={kernelName:LinSpace,backendName:"webgl",kernelFunc:linSpace};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const LOG=CHECK_NAN_SNIPPET_UNARY+`
  return x < 0.0 ? 0./0. : log(x);
`,LOG_PACKED=`
  vec4 result = log(x);
  bvec4 isNaN = isnan(x);
  result.r = isNaN.r ? x.r : (x.r < 0.0 ? 0./0. : result.r);
  result.g = isNaN.g ? x.g : (x.g < 0.0 ? 0./0. : result.g);
  result.b = isNaN.b ? x.b : (x.b < 0.0 ? 0./0. : result.b);
  result.a = isNaN.a ? x.a : (x.a < 0.0 ? 0./0. : result.a);
  return result;
`,log=unaryKernelFunc({opSnippet:LOG,packedOpSnippet:LOG_PACKED,cpuKernelImpl:logImplCPU}),logConfig={kernelName:Log,backendName:"webgl",kernelFunc:log};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const LOG1P=CHECK_NAN_SNIPPET_UNARY+`
  return log(1.0 + x);
`,log1p=unaryKernelFunc({opSnippet:LOG1P}),log1pConfig={kernelName:Log1p,backendName:"webgl",kernelFunc:log1p};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const LOGICAL_AND="return float(a >= 1.0 && b >= 1.0);",LOGICAL_AND_PACKED=`
  return vec4(
    vec4(greaterThanEqual(a, vec4(1.0))) *
    vec4(greaterThanEqual(b, vec4(1.0))));
`,logicalAnd=binaryKernelFunc({opSnippet:LOGICAL_AND,packedOpSnippet:LOGICAL_AND_PACKED,dtype:"bool"}),logicalAndConfig={kernelName:LogicalAnd,backendName:"webgl",kernelFunc:logicalAnd};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const LOGICAL_NOT="return float(!(x >= 1.0));",logicalNot=unaryKernelFunc({opSnippet:LOGICAL_NOT}),logicalNotConfig={kernelName:LogicalNot,backendName:"webgl",kernelFunc:logicalNot};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const LOGICAL_OR="return float(a >= 1.0 || b >= 1.0);",LOGICAL_OR_PACKED=`
  return min(
    vec4(greaterThanEqual(a, vec4(1.0))) +
    vec4(greaterThanEqual(b, vec4(1.0))),
    vec4(1.0));
`,logicalOr=binaryKernelFunc({opSnippet:LOGICAL_OR,packedOpSnippet:LOGICAL_OR_PACKED,dtype:"bool"}),logicalOrConfig={kernelName:LogicalOr,backendName:"webgl",kernelFunc:logicalOr};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class LRNProgram{constructor(s,o,a,c,d){this.variableNames=["x"],this.outputShape=[];const g=o,$=s[3]-1;this.outputShape=s;let j;const _e=`float(${a}) + float(${c}) * sum`;d===.5?j=`inversesqrt(${_e})`:d===1?j=`1.0/(${_e})`:j=`exp(log(${_e}) * float(-${d}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];
        int d = coords[3];
        float x = getX(b, r, c, d);
        float sum = 0.0;
        for (int j = -${g}; j <= ${g}; j++) {
          int idx = d + j;
          if (idx >= 0 && idx <=  ${$}) {
            float z = getX(b, r, c, idx);
            sum += z * z;
          }
        }
        float val = x * ${j};
        setOutput(val);
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class LRNPackedProgram{constructor(s,o,a,c,d){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;const g=o,$=s[3]-1;this.outputShape=s;let j;const _e=`float(${a}) + float(${c}) * sum`;d===.5?j=`inversesqrt(${_e})`:d===1?j=`1.0/(${_e})`:j=`exp(log(${_e}) * float(-${d}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords.x;
        int r = coords.y;
        int c = coords.z;
        int d = coords.w;

        bool hasNextCol = d < ${this.outputShape[3]};
        bool hasNextRow = c < ${this.outputShape[2]};

        vec4 sum = vec4(0.);
        vec4 xFragAtOutputCoords = getX(b, r, c, d);

        vec4 xAtOutputCoords = vec4(
          getChannel(xFragAtOutputCoords, vec2(c, d)),
          hasNextCol ?
            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,
          hasNextRow ?
            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,
          (hasNextRow && hasNextCol) ?
            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0
        );

        int firstChannel = d - ${g};
        vec2 cache = vec2(0.);
        if(firstChannel >= 0){
          vec4 firstChannelFrag = getX(b, r, c, firstChannel);
          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));
            if(hasNextRow){
              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));
            }
        }

        ivec2 depth = ivec2(d, d + 1);
        for (int j = - ${g}; j <= ${g}; j++) {
          ivec2 idx = depth + j;
          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));
          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${$}));

          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;
          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;

          if(depthInRange || depthPlusOneInRange){
            vec4 z = vec4(0.);
            vec4 xFragAtCurrentDepth;
            z.xz = cache.xy;
            if(depthPlusOneInRange && hasNextCol){
              xFragAtCurrentDepth = idx.y != d ?
                getX(b, r, c, idx.y) : xFragAtOutputCoords;
              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));
              if(hasNextRow){
                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));
              }
            }
            cache.xy = z.yw;
            sum += z * z;
          }
        }
        vec4 result = xAtOutputCoords * ${j};
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lrn=i=>{const{inputs:s,backend:o,attrs:a}=i,{x:c}=s,{depthRadius:d,bias:g,alpha:$,beta:j}=a,_e=env().getBool("WEBGL_PACK_NORMALIZATION")?new LRNPackedProgram(c.shape,d,g,$,j):new LRNProgram(c.shape,d,g,$,j);return o.runWebGLProgram(_e,[c],c.dtype)},LRNConfig={kernelName:LRN,backendName:"webgl",kernelFunc:lrn};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class LRNGradProgram{constructor(s,o,a,c,d){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=s,this.depth=s[3],this.depthRadius=o,this.bias=a,this.alpha=c,this.beta=d,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];

        float result = 0.0;
        for (int d = 0; d < ${this.depth}; ++d) {
          int depthBegin = int(max(0.0, float(d - ${o})));
          int depthEnd = int(min(float(${this.depth}),
              float(d + ${o} + 1)));

          const int MIN_DEPTH_BEGIN = 0;
          const int MAX_DEPTH_END = ${this.depth};

          float norm = 0.0;
          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd) {
              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);
            }
            else {
              break;
            }
          }

          norm = float(${c}) * norm + float(${a});

          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd){
              float dyi = -2.0 * float(${c})
                * float(${d})
                * getInputImage(b, r, c, k) * getOutputImage(b, r, c, d)
                / norm;
              if (k == d) {
                dyi += pow(norm, -1.0 * ${d});
              }
              if (k == coords[3]) {
                dyi *= getDy(b, r, c, d);
                result += dyi;
              }
            }
            else {
              break;
            }
          }
      }
      setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lrnGrad=i=>{const{inputs:s,backend:o,attrs:a}=i,{x:c,y:d,dy:g}=s,{depthRadius:$,bias:j,alpha:_e,beta:et}=a,_=new LRNGradProgram(c.shape,$,j,_e,et);return o.runWebGLProgram(_,[c,d,g],c.dtype)},LRNGradConfig={kernelName:LRNGrad,backendName:"webgl",kernelFunc:lrnGrad};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function maxImpl(i,s,o,a){const c=sizeFromShape(s),g=sizeFromShape(i.shape)/c,$=reshape({inputs:{x:i},attrs:{shape:[g,c]},backend:a}),j=reduce($,i.dtype,"max",a),_e=reshape({inputs:{x:j},attrs:{shape:o},backend:a});return a.disposeIntermediateTensorInfo($),a.disposeIntermediateTensorInfo(j),_e}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function max(i){const{inputs:s,backend:o,attrs:a}=i,{x:c}=s,{reductionIndices:d,keepDims:g}=a,$=c.shape.length,j=parseAxisParam(d,c.shape);let _e=j;const et=getAxesPermutation(_e,$),_=et!=null,b=o.shouldExecuteOnCPU([c]);let tt=c;if(_){if(b){const at=o.texData.get(tt.dataId).values,lt=new Array($);for(let dt=0;dt<lt.length;dt++)lt[dt]=c.shape[et[dt]];const ut=transposeImplCPU(at,c.shape,c.dtype,et,lt);tt=o.makeTensorInfo(lt,c.dtype);const ct=o.texData.get(tt.dataId);ct.values=ut}else tt=transposeImpl(c,et,o);_e=getInnerMostAxes(_e.length,$)}assertAxesAreInnerMostDims("max",_e,$);const[nt,rt]=computeOutAndReduceShapes(tt.shape,_e);let st=nt;g&&(st=expandShapeToKeepDim(nt,j));let ot;if(b){const at=o.texData.get(tt.dataId).values,lt=maxImplCPU(at,sizeFromShape(rt),st,c.dtype);ot=o.makeTensorInfo(st,c.dtype);const ut=o.texData.get(ot.dataId);ut.values=lt}else ot=maxImpl(tt,rt,st,o);return _&&o.disposeIntermediateTensorInfo(tt),ot}const maxConfig={kernelName:Max,backendName:"webgl",kernelFunc:max};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const MAXIMUM=CHECK_NAN_SNIPPET+`
  return max(a, b);
`,MAXIMUM_PACKED=`
  vec4 result = vec4(max(a, b));
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+CHECK_NAN_SNIPPET_PACKED+`
  return result;
`,maximum=binaryKernelFunc({opSnippet:MAXIMUM,packedOpSnippet:MAXIMUM_PACKED,cpuKernelImpl:maximumImplCPU}),maximumConfig={kernelName:Maximum$1,backendName:"webgl",kernelFunc:maximum};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function maxPool(i){const{inputs:s,backend:o,attrs:a}=i,{x:c}=s;assertNotComplex(c,"maxPool");const{filterSize:d,strides:g,pad:$,dimRoundingMode:j}=a,_e=1;assert$1(eitherStridesOrDilationsAreOne(g,_e),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${g} and dilations '${_e}'`);const et=computePool2DInfo(c.shape,d,g,_e,$,j);if(et.filterWidth===1&&et.filterHeight===1&&arraysEqual(et.inShape,et.outShape))return identity({inputs:{x:c},backend:o});const _=new Pool2DProgram(et,"max",!1);return o.runWebGLProgram(_,[c],c.dtype)}const maxPoolConfig={kernelName:MaxPool,backendName:"webgl",kernelFunc:maxPool};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function maxPool3d(i){const{inputs:s,backend:o,attrs:a}=i,{x:c}=s,{filterSize:d,strides:g,pad:$,dataFormat:j,dimRoundingMode:_e}=a,et=[1,1,1],_=computePool3DInfo(c.shape,d,g,et,$,_e,j),b=new Pool3DProgram(_,"max",!1);return o.runWebGLProgram(b,[c],c.dtype)}const maxPool3DConfig={kernelName:MaxPool3D,backendName:"webgl",kernelFunc:maxPool3d};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class MaxPool2DBackpropProgram{constructor(s){this.variableNames=["dy","maxPos"],this.outputShape=s.inShape;const o=s.strideHeight,a=s.strideWidth,c=s.dilationHeight,d=s.effectiveFilterHeight,g=s.effectiveFilterWidth,$=d-1-s.padInfo.top,j=g-1-s.padInfo.left,_e=d*g-1;this.userCode=`
      const ivec2 pads = ivec2(${$}, ${j});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${d};
          wR += ${c}) {
          float dyR = float(dyRCorner + wR) / ${o}.0;

          if (dyR < 0.0 || dyR >= ${s.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${g}; wC++) {
            float dyC = float(dyCCorner + wC) / ${a}.0;

            if (dyC < 0.0 || dyC >= ${s.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);
            int maxPosValue = ${_e} - int(getMaxPos(b, idyR, idyC, d));

            // Get the current value, check it against the value from the
            // position matrix.
            int curPosValue = wR * ${g} + wC;
            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

            dotProd += dyValue * mask;
          }
        }
        setOutput(dotProd);
      }
    `}}class MaxPool3DBackpropProgram{constructor(s){this.variableNames=["dy","maxPos"],this.outputShape=s.inShape;const o=s.strideDepth,a=s.strideHeight,c=s.strideWidth,d=s.dilationDepth,g=s.dilationHeight,$=s.dilationWidth,j=s.effectiveFilterDepth,_e=s.effectiveFilterHeight,et=s.effectiveFilterWidth,_=j-1-s.padInfo.front,b=_e-1-s.padInfo.top,tt=et-1-s.padInfo.left,nt=j*_e*et-1;this.userCode=`
      const ivec3 pads = ivec3(${_}, ${b}, ${tt});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${j};
           wD += ${d}) {
          float dyD = float(dyDCorner + wD) / ${o}.0;

          if (dyD < 0.0 || dyD >= ${s.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${_e};
              wR += ${g}) {
            float dyR = float(dyRCorner + wR) / ${a}.0;

            if (dyR < 0.0 || dyR >= ${s.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${et};
                wC += ${$}) {
              float dyC = float(dyCCorner + wC) / ${c}.0;

              if (dyC < 0.0 || dyC >= ${s.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);
              int maxPosValue = ${nt} -
                  int(getMaxPos(batch, idyD, idyR, idyC, ch));

              // Get the current value, check it against the value from the
              // position matrix.
              int curPosValue =
                  wD * ${_e} * ${et} +
                  wR * ${et} + wC;
              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

              dotProd += dyValue * mask;
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function maxPool3DGrad(i){const{inputs:s,backend:o,attrs:a}=i,{dy:c,input:d}=s,g=d,{filterSize:$,strides:j,pad:_e,dimRoundingMode:et}=a,_=[1,1,1],b=computePool3DInfo(g.shape,$,j,_,_e,et),tt=new Pool3DProgram(b,"max",!0),nt=o.runWebGLProgram(tt,[g],g.dtype),rt=new MaxPool3DBackpropProgram(b),st=o.runWebGLProgram(rt,[c,nt],g.dtype);return o.disposeIntermediateTensorInfo(nt),st}const maxPool3DGradConfig={kernelName:MaxPool3DGrad,backendName:"webgl",kernelFunc:maxPool3DGrad};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function maxPoolGrad(i){const{inputs:s,backend:o,attrs:a}=i,{dy:c,input:d,output:g}=s,$=d;assertNotComplex([d,g],"maxPoolGrad");const{filterSize:j,strides:_e,pad:et,dimRoundingMode:_}=a,b=computePool2DInfo($.shape,j,_e,1,et,_),tt=!0,nt=new Pool2DProgram(b,"max",tt),rt=o.runWebGLProgram(nt,[$],$.dtype),st=new MaxPool2DBackpropProgram(b),ot=o.runWebGLProgram(st,[c,rt],$.dtype);return o.disposeIntermediateTensorInfo(rt),ot}const maxPoolGradConfig={kernelName:MaxPoolGrad,backendName:"webgl",kernelFunc:maxPoolGrad};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function maxPoolWithArgmaxImpl(i,s,o,a){let c=new Pool2DProgram(o,"max",!1);const d=a.runWebGLProgram(c,[i],"float32");c=new Pool2DProgram(o,"max",!0,!0,s);const g=a.runWebGLProgram(c,[i],"float32");return[d,g]}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const maxPoolWithArgmaxConfig={kernelName:MaxPoolWithArgmax,backendName:"webgl",kernelFunc:({inputs:i,attrs:s,backend:o})=>{const{x:a}=i,{filterSize:c,strides:d,pad:g,includeBatchInIndex:$}=s,j=o;assert$1(a.shape.length===4,()=>`Error in maxPool: input must be rank 4 but got rank ${a.shape.length}.`);const _e=[1,1];assert$1(eitherStridesOrDilationsAreOne(d,_e),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${d} and dilations '${_e}'`);const et=computePool2DInfo(a.shape,c,d,_e,g),[_,b]=maxPoolWithArgmaxImpl(a,$,et,j);return[_,b]}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function meanImpl(i,s,o,a){const c=sizeFromShape(s),g=sizeFromShape(i.shape)/c,$=reshape({inputs:{x:i},attrs:{shape:[g,c]},backend:a}),j=reduce($,"float32","mean",a),_e=reshape({inputs:{x:j},attrs:{shape:o},backend:a});return a.disposeIntermediateTensorInfo($),a.disposeIntermediateTensorInfo(j),_e}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const meanConfig={kernelName:Mean,backendName:"webgl",kernelFunc:({inputs:i,attrs:s,backend:o})=>{const{x:a}=i,{keepDims:c,axis:d}=s,g=o,$=a.shape.length,j=parseAxisParam(d,a.shape);let _e=j;const et=getAxesPermutation(_e,$),_=et!=null,b=g.shouldExecuteOnCPU([a]),tt=[];let nt=a;if(_){if(b){const lt=g.texData.get(nt.dataId).values,ut=new Array($);for(let pt=0;pt<ut.length;pt++)ut[pt]=a.shape[et[pt]];const ct=transposeImplCPU(lt,a.shape,a.dtype,et,ut);nt=g.makeTensorInfo(ut,a.dtype);const dt=g.texData.get(nt.dataId);dt.values=ct}else nt=transposeImpl(a,et,g);tt.push(nt),_e=getInnerMostAxes(_e.length,$)}assertAxesAreInnerMostDims("sum",_e,$);const[rt,st]=computeOutAndReduceShapes(nt.shape,_e);let ot=rt;c&&(ot=expandShapeToKeepDim(rt,j));const it=meanImpl(nt,st,ot,g);for(const at of tt)g.disposeIntermediateTensorInfo(at);return it}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function min(i){const{inputs:s,backend:o,attrs:a}=i,{x:c}=s,{axis:d,keepDims:g}=a,$=c.shape.length,j=parseAxisParam(d,c.shape);let _e=j;const et=getAxesPermutation(_e,$);let _=c;et!=null&&(_=transpose({inputs:{x:c},backend:o,attrs:{perm:et}}),_e=getInnerMostAxes(_e.length,c.shape.length)),assertAxesAreInnerMostDims("min",_e,$);const[b,tt]=computeOutAndReduceShapes(_.shape,_e),nt=sizeFromShape(tt),rt=reshape({inputs:{x:_},backend:o,attrs:{shape:[-1,nt]}}),st=reduce(rt,rt.dtype,"min",o);let ot;if(g){const it=expandShapeToKeepDim(b,j);ot=reshape({inputs:{x:st},backend:o,attrs:{shape:it}})}else ot=reshape({inputs:{x:st},backend:o,attrs:{shape:b}});return o.disposeIntermediateTensorInfo(rt),o.disposeIntermediateTensorInfo(st),et!=null&&o.disposeIntermediateTensorInfo(_),ot}const minConfig={kernelName:Min,backendName:"webgl",kernelFunc:min};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const MINIMUM=CHECK_NAN_SNIPPET+`
  return min(a, b);
`,MINIMUM_PACKED=`
  vec4 result = vec4(min(a, b));
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+CHECK_NAN_SNIPPET_PACKED+`
  return result;
`,minimum=binaryKernelFunc({opSnippet:MINIMUM,packedOpSnippet:MINIMUM_PACKED,cpuKernelImpl:minimumImplCPU}),minimumConfig={kernelName:Minimum$1,backendName:"webgl",kernelFunc:minimum};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class MirrorPadProgram{constructor(s,o,a){this.variableNames=["x"],this.outputShape=o.map((et,_)=>et[0]+s[_]+et[1]);const c=s.length,d=getCoordsDataType(c),g=o.map(et=>et[0]).join(","),$=o.map((et,_)=>et[0]+s[_]).join(","),j=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,c),_e=a==="reflect"?0:1;if(c===1){this.userCode=`
        int start = ${g};
        int end = ${$};

        void main() {
          int outC = getOutputCoords();
          if (outC < start) {
            outC = start * 2 - outC - ${_e};
          } else if(outC >= end) {
            outC = (end - 1) * 2 - outC + ${_e};
          }
          setOutput(getX(outC - start));
        }
      `;return}this.userCode=`
      ${d} start = ${d}(${g});
      ${d} end = ${d}(${$});

      void main() {
        ${d} outC = getOutputCoords();
        for (int i = 0; i < ${c}; i++) {
          if (outC[i] < start[i]) {
            outC[i] = start[i] * 2 - outC[i] - ${_e};
          } else if(outC[i] >= end[i]) {
            outC[i] = (end[i] - 1) * 2 - outC[i] + ${_e};
          }
        }
        ${d} coords = outC - start;
        setOutput(getX(${j}));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class MirrorPadPackedProgram{constructor(s,o,a){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=o.map((nt,rt)=>nt[0]+s[rt]+nt[1]);const c=s.length,d=getCoordsDataType(c),g=o.map(nt=>nt[0]).join(","),$=o.map((nt,rt)=>nt[0]+s[rt]).join(","),j=getChannels("rc",c),_e=getChannels("source",c),et=`${j[c-1]} < ${this.outputShape[c-1]}`,_=c===1?"source":`vec2(${_e.slice(-2).join()})`,b=a==="reflect"?0:1;let tt="";if(c===1){const nt=`
        ${d} source = rc;
        if (source < start) {
          source = start * 2 - source - ${b};
        } else if (source >= end) {
          source = (end - 1) * 2 - source + ${b};
        }
        source -= start;
      `;tt=`
        ${d} rc = outputLoc;
        ${nt}
        result[0] = getChannel(getX(${_e.join()}), ${_});
        ${j[c-1]} += 1;
        if(${et}) {
          ${nt}
          result[1] = getChannel(getX(${_e.join()}), ${_});
        }
      `}else{const nt=`
        ${d} source = rc;
        ${d} lt = ${d}(lessThan(source, start));
        ${d} gte = ${d}(greaterThanEqual(source, end));
        ${d} orig = 1 - (lt + gte);
        source = orig * source +
                lt * (start * 2 - source - ${b}) +
                gte * ((end - 1) * 2 - source + ${b});
        source -= start;
      `;tt=`
        ${d} rc = outputLoc;
        ${nt}
        result[0] = getChannel(getX(${_e.join()}), ${_});
        ${j[c-1]} += 1;
        if(${et}) {
          ${nt}
          result[1] = getChannel(getX(${_e.join()}), ${_});
        }
        rc = outputLoc;
        ${j[c-2]} += 1;
        if(${j[c-2]} < ${this.outputShape[c-2]}) {
          ${nt}
          result[2] = getChannel(getX(${_e.join()}), ${_});
          ${j[c-1]} += 1;
          if(${et}) {
            ${nt}
            result[3] = getChannel(getX(${_e.join()}), ${_});
          }
        }
      `}this.userCode=`
      const ${d} start = ${d}(${g});
      const ${d} end = ${d}(${$});

      void main() {
        ${d} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${tt}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mirrorPadKernelFunc=({inputs:i,backend:s,attrs:o})=>{const{x:a}=i,{paddings:c,mode:d}=o,g=env().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new MirrorPadPackedProgram(a.shape,c,d):new MirrorPadProgram(a.shape,c,d);return s.runWebGLProgram(g,[a],a.dtype)},mirrorPadConfig={kernelName:MirrorPad,backendName:"webgl",kernelFunc:mirrorPadKernelFunc};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const MOD=`if (b == 0.0) return NAN;
  return mod(a, b);`,MOD_PACKED=`
  vec4 result = mod(a, b);
  bvec4 isNaN = equal(b, vec4(0.0));
  `+CHECK_NAN_SNIPPET_PACKED+`
  return result;
`,mod=binaryKernelFunc({opSnippet:MOD,packedOpSnippet:MOD_PACKED}),modConfig={kernelName:Mod,backendName:"webgl",kernelFunc:mod};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class MultinomialProgram{constructor(s,o,a){this.variableNames=["probs"],this.customUniforms=[{name:"seed",type:"float"}],this.outputShape=[s,a],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];

        float r = random(seed);
        float cdf = 0.0;

        for (int i = 0; i < ${o-1}; i++) {
          cdf += getProbs(batch, i);

          if (r < cdf) {
            setOutput(float(i));
            return;
          }
        }

        // If no other event happened, last event happened.
        setOutput(float(${o-1}));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const DIV=`
if (a == b) {
  return 1.0;
};
return a / b;`,DIV_PACKED=`
  // vec4 one = vec4(equal(a, b));
  // return one + (vec4(1.0) - one) * a / b;
  vec4 result = a / b;
  if(a.x == b.x) {
    result.x = 1.;
  }
  if(a.y == b.y) {
    result.y = 1.;
  }
  if(a.z == b.z) {
    result.z = 1.;
  }
  if(a.w == b.w) {
    result.w = 1.;
  }

  return result;
`,realDiv=binaryKernelFunc({opSnippet:DIV,packedOpSnippet:DIV_PACKED,checkOutOfBounds:!0}),realDivConfig={kernelName:RealDiv,backendName:"webgl",kernelFunc:realDiv};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const SUB="return a - b;",sub=binaryKernelFunc({opSnippet:SUB,packedOpSnippet:SUB,supportsComplex:!0,cpuKernelImpl:subImplCPU}),subConfig={kernelName:Sub,backendName:"webgl",kernelFunc:sub};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function softmax(i){const{inputs:s,backend:o,attrs:a}=i,{logits:c}=s,{dim:d}=a,g=parseAxisParam([d],c.shape),$=max({inputs:{x:c},backend:o,attrs:{reductionIndices:g,keepDims:!1}}),j=expandShapeToKeepDim($.shape,g),_e=reshape({inputs:{x:$},backend:o,attrs:{shape:j}}),et=sub({inputs:{a:c,b:_e},backend:o}),_=exp({inputs:{x:et},backend:o}),b=sum({inputs:{x:_},backend:o,attrs:{axis:g,keepDims:!1}}),tt=reshape({inputs:{x:b},backend:o,attrs:{shape:j}}),nt=realDiv({inputs:{a:_,b:tt},backend:o});return o.disposeIntermediateTensorInfo($),o.disposeIntermediateTensorInfo(_e),o.disposeIntermediateTensorInfo(et),o.disposeIntermediateTensorInfo(_),o.disposeIntermediateTensorInfo(b),o.disposeIntermediateTensorInfo(tt),nt}const softmaxConfig={kernelName:Softmax$2,backendName:"webgl",kernelFunc:softmax};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function multinomial(i){const{inputs:s,backend:o,attrs:a}=i,{logits:c}=s,{numSamples:d,seed:g,normalized:$}=a,j=$?c:softmax({inputs:{logits:c},backend:o,attrs:{dim:c.shape.length-1}}),_e=j.shape[0],et=j.shape[1],_=new MultinomialProgram(_e,et,d),b=[[g]],tt=o.runWebGLProgram(_,[j],"int32",b);return $||o.disposeIntermediateTensorInfo(j),tt}const multinomialConfig={kernelName:Multinomial,backendName:"webgl",kernelFunc:multinomial};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const NEG=CHECK_NAN_SNIPPET$1+`
  return -x;
`,NEG_PACKED=`
  vec4 result = -x;
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`;function neg(i){const{inputs:s,backend:o}=i,{x:a}=s;if(o.shouldExecuteOnCPU([a])){const d=o.texData.get(a.dataId),[g,$]=negImplCPU(d.values,a.shape,a.dtype);return o.makeTensorInfo($,a.dtype,g)}let c;return env().getBool("WEBGL_PACK_UNARY_OPERATIONS")?c=new UnaryOpPackedProgram(a.shape,NEG_PACKED):c=new UnaryOpProgram(a.shape,NEG),o.runWebGLProgram(c,[a],a.dtype)}const negConfig={kernelName:Neg,backendName:"webgl",kernelFunc:neg};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nonMaxSuppressionV3Impl=nonMaxSuppressionV3Impl$2;function nonMaxSuppressionV3(i){warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:s,backend:o,attrs:a}=i,{boxes:c,scores:d}=s,{maxOutputSize:g,iouThreshold:$,scoreThreshold:j}=a,_e=o.readSync(c.dataId),et=o.readSync(d.dataId),{selectedIndices:_}=nonMaxSuppressionV3Impl(_e,et,g,$,j);return o.makeTensorInfo([_.length],"int32",new Int32Array(_))}const nonMaxSuppressionV3Config={kernelName:NonMaxSuppressionV3,backendName:"webgl",kernelFunc:nonMaxSuppressionV3};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nonMaxSuppressionV4Impl=nonMaxSuppressionV4Impl$2;function nonMaxSuppressionV4(i){warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:s,backend:o,attrs:a}=i,{boxes:c,scores:d}=s,{maxOutputSize:g,iouThreshold:$,scoreThreshold:j,padToMaxOutputSize:_e}=a,et=o.readSync(c.dataId),_=o.readSync(d.dataId),{selectedIndices:b,validOutputs:tt}=nonMaxSuppressionV4Impl(et,_,g,$,j,_e);return[o.makeTensorInfo([b.length],"int32",new Int32Array(b)),o.makeTensorInfo([],"int32",new Int32Array([tt]))]}const nonMaxSuppressionV4Config={kernelName:NonMaxSuppressionV4,backendName:"webgl",kernelFunc:nonMaxSuppressionV4};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nonMaxSuppressionV5Impl=nonMaxSuppressionV5Impl$2;function nonMaxSuppressionV5(i){warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:s,backend:o,attrs:a}=i,{boxes:c,scores:d}=s,{maxOutputSize:g,iouThreshold:$,scoreThreshold:j,softNmsSigma:_e}=a,et=o.readSync(c.dataId),_=o.readSync(d.dataId),b=g,tt=$,nt=j,rt=_e,{selectedIndices:st,selectedScores:ot}=nonMaxSuppressionV5Impl(et,_,b,tt,nt,rt);return[o.makeTensorInfo([st.length],"int32",new Int32Array(st)),o.makeTensorInfo([ot.length],"float32",new Float32Array(ot))]}const nonMaxSuppressionV5Config={kernelName:NonMaxSuppressionV5,backendName:"webgl",kernelFunc:nonMaxSuppressionV5};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class OneHotProgram{constructor(s,o,a,c){this.variableNames=["indices"],this.outputShape=[s,o],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int index = round(getIndices(coords.x));
        setOutput(mix(float(${c}), float(${a}),
                      float(index == coords.y)));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const oneHot=i=>{const{inputs:s,backend:o,attrs:a}=i,{indices:c}=s,{dtype:d,depth:g,onValue:$,offValue:j}=a,_e=sizeFromShape(c.shape),et=new OneHotProgram(_e,g,$,j),_=reshape({inputs:{x:c},backend:o,attrs:{shape:[_e]}}),b=o.runWebGLProgram(et,[_],d);o.disposeIntermediateTensorInfo(_);const tt=[...c.shape,g],nt=reshape({inputs:{x:b},backend:o,attrs:{shape:tt}});return o.disposeIntermediateTensorInfo(b),nt},oneHotConfig={kernelName:OneHot,backendName:"webgl",kernelFunc:oneHot};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zerosLike(i){const{inputs:s,backend:o}=i,{x:a}=s;if(a.dtype==="complex64"){const c=real({inputs:{input:a},backend:o}),d=zerosLike({inputs:{x:c},backend:o}),g=imag({inputs:{input:a},backend:o}),$=zerosLike({inputs:{x:g},backend:o}),j=complex({inputs:{real:d,imag:$},backend:o});return o.disposeIntermediateTensorInfo(c),o.disposeIntermediateTensorInfo(d),o.disposeIntermediateTensorInfo(g),o.disposeIntermediateTensorInfo($),j}else return fill({attrs:{shape:a.shape,dtype:a.dtype,value:a.dtype==="string"?"":0},backend:o})}const zerosLikeConfig={kernelName:ZerosLike,backendName:"webgl",kernelFunc:zerosLike};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function onesLike(i){const{inputs:s,backend:o}=i,{x:a}=s;if(a.dtype==="string")throw new Error("onesLike is not supported under string dtype");if(a.dtype==="complex64"){const c=real({inputs:{input:a},backend:o}),d=onesLike({inputs:{x:c},backend:o}),g=imag({inputs:{input:a},backend:o}),$=zerosLike({inputs:{x:g},backend:o}),j=complex({inputs:{real:d,imag:$},backend:o});return o.disposeIntermediateTensorInfo(c),o.disposeIntermediateTensorInfo(d),o.disposeIntermediateTensorInfo(g),o.disposeIntermediateTensorInfo($),j}else return fill({attrs:{shape:a.shape,dtype:a.dtype,value:1},backend:o})}const onesLikeConfig={kernelName:OnesLike,backendName:"webgl",kernelFunc:onesLike};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pack(i){const{inputs:s,backend:o,attrs:a}=i,{axis:c}=a;if(s.length===1)return expandDims({inputs:{input:s[0]},backend:o,attrs:{dim:c}});const d=s[0].shape,g=s[0].dtype;s.forEach(et=>{assertShapesMatch(d,et.shape,"All tensors passed to stack must have matching shapes"),assert$1(g===et.dtype,()=>"All tensors passed to stack must have matching dtypes")});const $=[],j=s.map(et=>{const _=expandDims({inputs:{input:et},backend:o,attrs:{dim:c}});return $.push(_),_}),_e=concat({inputs:j,backend:o,attrs:{axis:c}});return $.forEach(et=>o.disposeIntermediateTensorInfo(et)),_e}const packConfig={kernelName:Pack,backendName:"webgl",kernelFunc:pack};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class PadProgram{constructor(s,o,a){this.variableNames=["x"],this.customUniforms=[{name:"value",type:"float"}],this.outputShape=o.map((_e,et)=>_e[0]+s[et]+_e[1]);const c=s.length,d=getCoordsDataType(c),g=o.map(_e=>_e[0]).join(","),$=o.map((_e,et)=>_e[0]+s[et]).join(","),j=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,c);if(c===1){this.userCode=`
        int start = ${g};
        int end = ${$};

        void main() {
          int outC = getOutputCoords();
          if (outC < start || outC >= end) {
            setOutput(value);
          } else {
            setOutput(getX(outC - start));
          }
        }
      `;return}this.userCode=`
      ${d} start = ${d}(${g});
      ${d} end = ${d}(${$});

      void main() {
        ${d} outC = getOutputCoords();
        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {
          setOutput(value);
        } else {
          ${d} coords = outC - start;
          setOutput(getX(${j}));
        }
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class PadPackedProgram{constructor(s,o,a){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"value",type:"float"}],this.outputShape=o.map((rt,st)=>rt[0]+s[st]+rt[1]);const c=s.length,d=getCoordsDataType(c),g=o.map(rt=>rt[0]).join(","),$=o.map((rt,st)=>rt[0]+s[st]).join(","),j=getChannels("rc",c),_e=getChannels("source",c),et=`${j[c-1]} < ${this.outputShape[c-1]}`,_=c===1?"source":`vec2(${_e.slice(-2).join()})`,b=[`${d} rc = outputLoc;`,`${j[c-1]} += 1;
       if(${et}) {
      `,c===1?"":`}
       rc = outputLoc;
       ${j[c-2]} += 1;
       if(${j[c-2]} < ${this.outputShape[c-2]}) {`,c===1?"":`  ${j[c-1]} += 1;
         if(${et}) {`],tt=c===1?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))";let nt="";for(let rt=0,st=c===1?2:4;rt<st;rt++)nt+=`
        ${b[rt]}
        if (${tt}) {
          result[${rt}] = float(value);
        } else {
          ${d} source = rc - start;
          result[${rt}] = getChannel(getX(${_e.join()}), ${_});
        }
      `;nt+=c===1?"} ":"}}",this.userCode=`
      const ${d} start = ${d}(${g});
      const ${d} end = ${d}(${$});

      void main() {
        ${d} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${nt}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const padV2=i=>{const{inputs:s,backend:o,attrs:a}=i,{x:c}=s,{paddings:d,constantValue:g}=a;if(sizeFromShape(c.shape)===0){const _e=d.map((et,_)=>et[0]+c.shape[_]+et[1]);return fill({backend:o,attrs:{shape:_e,value:g,dtype:c.dtype}})}const $=env().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new PadPackedProgram(c.shape,d,g):new PadProgram(c.shape,d,g),j=[[g]];return o.runWebGLProgram($,[c],c.dtype,j)},padV2Config={kernelName:PadV2,backendName:"webgl",kernelFunc:padV2};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const POW=`
  if(a < 0.0 && floor(b) < b){
    return NAN;
  }
  if (b == 0.0) {
    return 1.0;
  }
  return (round(mod(b, 2.0)) != 1) ?
      pow(abs(a), b) : sign(a) * pow(abs(a), b);
`,POW_PACKED=`
  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.
  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));
  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);
  vec4 result = multiplier * pow(abs(a), b);

  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS
  bvec4 isExpZero = equal(b, vec4(0.0));
  result.r = isExpZero.r ? 1.0 : result.r;
  result.g = isExpZero.g ? 1.0 : result.g;
  result.b = isExpZero.b ? 1.0 : result.b;
  result.a = isExpZero.a ? 1.0 : result.a;

  bvec4 isNaN1 = lessThan(a, vec4(0.0));
  bvec4 isNaN2 = lessThan(floor(b), b);
  bvec4 isNaN = bvec4(isNaN1.x && isNaN2.x, isNaN1.y && isNaN2.y, isNaN1.z && isNaN2.z, isNaN1.w && isNaN2.w);
  `+CHECK_NAN_SNIPPET_PACKED+`
  return result;
`,pow=binaryKernelFunc({opSnippet:POW,packedOpSnippet:POW_PACKED}),powConfig={kernelName:Pow,backendName:"webgl",kernelFunc:pow};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function prod(i){const{inputs:s,backend:o,attrs:a}=i,{x:c}=s,{axis:d,keepDims:g}=a,$=c.shape.length,j=[],_e=parseAxisParam(d,c.shape);let et=_e;const _=getAxesPermutation(et,$);let b=c;_!=null&&(b=transpose({inputs:{x:c},backend:o,attrs:{perm:_}}),et=getInnerMostAxes(et.length,$),j.push(b)),assertAxesAreInnerMostDims("prod",et,$);let tt;if(o.shouldExecuteOnCPU([b])){const nt=o.texData.get(b.dataId).values,{outVals:rt,outShape:st,outDtype:ot}=prodImplCPU(b.shape,b.dtype,nt,et);tt=o.makeTensorInfo(st,ot,rt)}else{const[nt,rt]=computeOutAndReduceShapes(b.shape,et),st=sizeFromShape(rt),ot=reshape({inputs:{x:b},backend:o,attrs:{shape:[-1,st]}}),it=sumOutType(c.dtype),at=reduce(ot,it,"prod",o);tt=reshape({inputs:{x:at},backend:o,attrs:{shape:nt}}),j.push(ot),j.push(at)}if(g){j.push(tt);const nt=expandShapeToKeepDim(tt.shape,_e);tt=reshape({inputs:{x:tt},backend:o,attrs:{shape:nt}})}return j.forEach(nt=>o.disposeIntermediateTensorInfo(nt)),tt}const prodConfig={kernelName:Prod,backendName:"webgl",kernelFunc:prod};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function raggedGather(i){const{inputs:s,backend:o,attrs:a}=i,{paramsNestedSplits:c,paramsDenseValues:d,indices:g}=s,{outputRaggedRank:$}=a,j=c.map(ot=>o.readSync(ot.dataId)),_e=c.map(ot=>ot.shape),et=o.readSync(d.dataId),_=o.readSync(g.dataId),[b,tt,nt]=raggedGatherImplCPU(j,_e,et,d.shape,d.dtype,_,g.shape,$),rt=b.map(ot=>o.makeTensorInfo([ot.length],"int32",ot)),st=o.makeTensorInfo(nt,d.dtype,tt);return rt.concat([st])}const raggedGatherConfig={kernelName:RaggedGather,backendName:"webgl",kernelFunc:raggedGather};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function raggedRange(i){const{inputs:s,backend:o}=i,{starts:a,limits:c,deltas:d}=s,g=o.readSync(a.dataId),$=o.readSync(c.dataId),j=o.readSync(d.dataId),[_e,et]=raggedRangeImplCPU(g,a.shape,a.dtype,$,c.shape,j,d.shape),_=o.makeTensorInfo([_e.length],"int32",_e),b=o.makeTensorInfo([et.length],a.dtype,et);return[_,b]}const raggedRangeConfig={kernelName:RaggedRange,backendName:"webgl",kernelFunc:raggedRange};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function raggedTensorToTensor(i){const{inputs:s,backend:o,attrs:a}=i,{shape:c,values:d,defaultValue:g,rowPartitionTensors:$}=s,{rowPartitionTypes:j}=a,_e=o.readSync(c.dataId),et=o.readSync(d.dataId),_=o.readSync(g.dataId),b=$.map(st=>o.readSync(st.dataId)),tt=$.map(st=>st.shape),[nt,rt]=raggedTensorToTensorImplCPU(_e,c.shape,et,d.shape,d.dtype,_,g.shape,b,tt,j);return o.makeTensorInfo(nt,d.dtype,rt)}const raggedTensorToTensorConfig={kernelName:RaggedTensorToTensor,backendName:"webgl",kernelFunc:raggedTensorToTensor};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const range=i=>{const{backend:s,attrs:o}=i,{start:a,stop:c,step:d,dtype:g}=o,$=rangeImplCPU(a,c,d,g);return s.makeTensorInfo([$.length],g,$)},rangeConfig={kernelName:Range,backendName:"webgl",kernelFunc:range};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const RECIPROCAL="return 1.0 / x;",reciprocal=unaryKernelFunc({opSnippet:RECIPROCAL}),reciprocalConfig={kernelName:Reciprocal,backendName:"webgl",kernelFunc:reciprocal};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const RELU=CHECK_NAN_SNIPPET$1+`
  return (x < 0.0) ? 0.0 : x;
`,RELU_PACKED=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,relu=unaryKernelFunc({opSnippet:RELU,packedOpSnippet:RELU_PACKED}),reluConfig={kernelName:Relu$1,backendName:"webgl",kernelFunc:relu};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const RELU6=CHECK_NAN_SNIPPET$1+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,RELU6_PACKED=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,relu6=unaryKernelFunc({opSnippet:RELU6,packedOpSnippet:RELU6_PACKED}),relu6Config={kernelName:Relu6$1,backendName:"webgl",kernelFunc:relu6};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ResizeBilinearProgram{constructor(s,o,a,c,d){this.variableNames=["A"],this.outputShape=[];const[g,$,j,_e]=s;this.outputShape=[g,o,a,_e];const et=[c&&o>1?$-1:$,c&&a>1?j-1:j],_=[c&&o>1?o-1:o,c&&a>1?a-1:a];let b;d?b="(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":b="vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${et[0]/_[0]},
          ${et[1]/_[1]});
      const vec2 inputShapeRC = vec2(${$}.0, ${j}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${b};

        // Compute the four integer indices.
        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));
        ivec2 sourceCeilRC = ivec2(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);
        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);
        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);
        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);

        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);

        float top = topLeft + (topRight - topLeft) * fracRC.y;
        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;
        float newValue = top + (bottom - top) * fracRC.x;

        setOutput(newValue);
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ResizeBilinearPackedProgram{constructor(s,o,a,c,d){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[g,$,j,_e]=s;this.outputShape=[g,o,a,_e];const et=[c&&o>1?$-1:$,c&&a>1?j-1:j],_=[c&&o>1?o-1:o,c&&a>1?a-1:a];let b;d?b="(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":b="vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${et[0]/_[0]},
          ${et[1]/_[1]},
          ${et[1]/_[1]});
      const vec3 inputShapeRC = vec3(${$}.0, ${j}.0,
                                     ${j}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${b};

        // Compute the four integer indices.
        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));
        ivec3 sourceCeilRC = ivec3(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${_e-1};
        bool hasNextRow = coords.z < ${a-1};

        // In parallel, construct four corners for all four components in
        // packed 2x2 cell.
        vec4 topLeft = vec4(
          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 bottomLeft = vec4(
          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 topRight = vec4(
          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec4 bottomRight = vec4(
          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);

        vec4 top = mix(topLeft, topRight, fracRC.yyzz);
        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);
        vec4 newValue = mix(top, bottom, fracRC.x);

        setOutput(newValue);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function resizeBilinear(i){const{inputs:s,backend:o,attrs:a}=i,{images:c}=s,{alignCorners:d,halfPixelCenters:g,size:$}=a,[j,_e]=$,et=env().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new ResizeBilinearPackedProgram(c.shape,j,_e,d,g):new ResizeBilinearProgram(c.shape,j,_e,d,g);return o.runWebGLProgram(et,[c],"float32")}const resizeBilinearConfig={kernelName:ResizeBilinear,backendName:"webgl",kernelFunc:resizeBilinear};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ResizeBilinearBackpropProgram{constructor(s,o,a){this.variableNames=["dy"],this.outputShape=[],this.outputShape=o;const[,c,d]=o,[,g,$]=s,j=[a&&g>1?c-1:c,a&&$>1?d-1:d],_e=[a&&g>1?g-1:g,a&&$>1?$-1:$],et=j[0]/_e[0],_=j[1]/_e[1],b=1/et,tt=1/_,nt=Math.ceil(b)*2+2,rt=Math.ceil(tt)*2+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${et});
        const float widthScale = float(${_});

        const float invHeightScale = float(${b});
        const float invWidthScale = float(${tt});

        const int winHeight = int(${nt});
        const int winWidth = int(${rt});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(startRLerp - float(winHeight / 2));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(startCLerp - float(winWidth / 2));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${g}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${$}) {
              continue;
            }

            float dxR = float(dyR) * heightScale;
            int topDxRIndex = int(floor(dxR));
            int bottomDxRIndex = int(min(ceil(dxR), ${c-1}.0));
            float dxRLerp = dxR - float(topDxRIndex);
            float inverseDxRLerp = 1.0 - dxRLerp;

            float dxC = float(dyC) * widthScale;
            int leftDxCIndex = int(floor(dxC));
            int rightDxCIndex = int(min(ceil(dxC), ${d-1}.0));
            float dxCLerp = dxC - float(leftDxCIndex);
            float inverseDxCLerp = 1.0 - dxCLerp;

            if (r == topDxRIndex && c == leftDxCIndex) {
              // topLeft
              accumulator +=
                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;
            }

            if (r == topDxRIndex && c == rightDxCIndex) {
              // topRight
              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;
            }

            if (r == bottomDxRIndex && c == leftDxCIndex) {
              // bottomLeft
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;
            }

            if (r == bottomDxRIndex && c == rightDxCIndex) {
              // bottomRight
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function resizeBilinearGrad(i){const{inputs:s,backend:o,attrs:a}=i,{images:c,dy:d}=s,{alignCorners:g}=a,$=new ResizeBilinearBackpropProgram(d.shape,c.shape,g);return o.runWebGLProgram($,[d],d.dtype)}const resizeBilinearGradConfig={kernelName:ResizeBilinearGrad,backendName:"webgl",kernelFunc:resizeBilinearGrad};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ResizeNearestNeighborProgram{constructor(s,o,a,c,d){this.variableNames=["A"],this.outputShape=[];const[g,$,j,_e]=s;this.outputShape=[g,o,a,_e];const et=[c&&o>1?$-1:$,c&&a>1?j-1:j],_=[c&&o>1?o-1:o,c&&a>1?a-1:a],b=c?"0.5":"0.0";let tt;d?tt="max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":tt="vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${et[0]/_[0]},
          ${et[1]/_[1]});
      const vec2 inputShapeRC = vec2(${$}.0, ${j}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${tt};

        // Compute the coordinators of nearest neighbor point.
        ivec2 sourceNearestRC = ivec2(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${b})));
        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);

        setOutput(newValue);
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ResizeNearestNeighborPackedProgram{constructor(s,o,a,c,d){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[g,$,j,_e]=s;this.outputShape=[g,o,a,_e];const et=[c&&o>1?$-1:$,c&&a>1?j-1:j],_=[c&&o>1?o-1:o,c&&a>1?a-1:a],b=c?"0.5":"0.0";let tt;d?tt="max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":tt="vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${et[0]/_[0]},
          ${et[1]/_[1]},
          ${et[1]/_[1]});
      const vec3 inputShapeRC = vec3(${$}.0, ${j}.0,
                                     ${j}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${tt};

        // Compute the coordinators of nearest neighbor point.
        ivec3 sourceNearestRC = ivec3(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${b})));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${_e-1};
        bool hasNextRow = coords.z < ${a-1};

        vec4 newValue = vec4(
          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),
          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);

        setOutput(newValue);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function resizeNearestNeighbor(i){const{inputs:s,backend:o,attrs:a}=i,{images:c}=s,{alignCorners:d,halfPixelCenters:g,size:$}=a,[j,_e]=$,et=env().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new ResizeNearestNeighborPackedProgram(c.shape,j,_e,d,g):new ResizeNearestNeighborProgram(c.shape,j,_e,d,g);return o.runWebGLProgram(et,[c],c.dtype)}const resizeNearestNeighborConfig={kernelName:ResizeNearestNeighbor,backendName:"webgl",kernelFunc:resizeNearestNeighbor};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ResizeNearestNeigborBackpropProgram{constructor(s,o,a){this.variableNames=["dy"],this.outputShape=[],this.outputShape=o;const[,c,d]=o,[,g,$]=s,j=[a&&g>1?c-1:c,a&&$>1?d-1:d],_e=[a&&g>1?g-1:g,a&&$>1?$-1:$],et=j[0]/_e[0],_=j[1]/_e[1],b=1/et,tt=1/_,nt=Math.ceil(b)*2+2,rt=Math.ceil(tt)*2+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${et});
        const float widthScale = float(${_});

        const float invHeightScale = float(${b});
        const float invWidthScale = float(${tt});

        const int winHeight = int(${nt});
        const int winWidth = int(${rt});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(floor(startRLerp - float(winHeight / 2)));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(floor(startCLerp - float(winWidth / 2)));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${g}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${$}) {
              continue;
            }

            float sourceFracRow =
              float(${j[0]}) *
                (float(dyR) / float(${_e[0]}));

            float sourceFracCol =
                float(${j[1]}) *
                  (float(dyC) / float(${_e[1]}));

            int sourceNearestRow = int(min(
                float(int(${c}) - 1),
                ${a} ? float(round(sourceFracRow)) :
                                  float(floor(sourceFracRow))));

            int sourceNearestCol = int(min(
                float(int(${d}) - 1),
                ${a} ? float(round(sourceFracCol)) :
                                  float(floor(sourceFracCol))));

            if (r == sourceNearestRow && c == sourceNearestCol) {
              accumulator += getDy(b, dyR, dyC, d);
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function resizeNearestNeighborGrad(i){const{inputs:s,backend:o,attrs:a}=i,{images:c,dy:d}=s,{alignCorners:g}=a,$=new ResizeNearestNeigborBackpropProgram(d.shape,c.shape,g);return o.runWebGLProgram($,[d],d.dtype)}const resizeNearestNeighborGradConfig={kernelName:ResizeNearestNeighborGrad,backendName:"webgl",kernelFunc:resizeNearestNeighborGrad};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ReverseProgram{constructor(s,o){this.variableNames=["x"];const a=s.length;if(a>4)throw new Error(`WebGL backend: Reverse of rank-${a} tensor is not yet supported`);if(this.outputShape=s,a===1){this.userCode=`
        void main() {
          int coord = getOutputCoords();
          setOutput(getX(${s[0]} - coord - 1));
        }
      `;return}const c=$=>o.indexOf($)!==-1&&s[$]!==1?`${s[$]} - coords[${$}] - 1`:`coords[${$}]`,d=s.map(($,j)=>c(j)).join(","),g=getCoordsDataType(a);this.userCode=`
      void main() {
        ${g} coords = getOutputCoords();
        setOutput(getX(${d}));
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ReversePackedProgram{constructor(s,o){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;const a=s.length;if(a>4)throw new Error(`WebGL backend: Reverse of rank-${a} tensor is not yet supported`);this.outputShape=s;const c=getChannels("rc",a),d=`${c[a-1]} + 1 < ${this.outputShape[a-1]}`,g=`${c[a-2]} + 1 < ${this.outputShape[a-2]}`,$=getCoordsDataType(a);a===1?this.userCode=`
        void main(){
          int rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = getChannel(getX(${s[0]} - rc - 1),
            ${s[0]} - rc - 1);
          if(${d}){
              result.g = getChannel(getX(${s[0]} - (rc  + 1) - 1),
                ${s[0]} - (rc  + 1) - 1);
          }
          setOutput(result);
        }
      `:this.userCode=`
        void main() {
          ${$} rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = ${j(c.slice())};
          if(${d}){
            result.g = ${_e(c.slice())};
          }
          if(${g}) {
            result.b = ${et(c.slice())};
            if(${d}) {
              result.a = ${_(c.slice())};
            }
          }
          setOutput(result);
        }
    `;function j(nt){return b(nt)}function _e(nt){return nt[a-1]="("+nt[a-1]+" + 1)",b(nt)}function et(nt){return nt[a-2]="("+nt[a-2]+" + 1)",b(nt)}function _(nt){return nt[a-1]="("+nt[a-1]+" + 1)",nt[a-2]="("+nt[a-2]+" + 1)",b(nt)}function b(nt){const rt=s.map((it,at)=>tt(at,nt)),st=rt.join(","),ot=rt.slice(-2).join(",");return`getChannel(getX(${st}), vec2(${ot}))`}function tt(nt,rt){return o.indexOf(nt)!==-1&&s[nt]!==1?`${s[nt]} - ${rt[nt]} - 1`:`${rt[nt]}`}}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function reverse(i){const{inputs:s,backend:o,attrs:a}=i,{x:c}=s,{dims:d}=a,g=c.shape.length,$=parseAxisParam(d,c.shape);if(g===0)return identity({inputs:{x:c},backend:o});const j=env().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new ReversePackedProgram(c.shape,$):new ReverseProgram(c.shape,$);return o.runWebGLProgram(j,[c],c.dtype)}const reverseConfig={kernelName:Reverse,backendName:"webgl",kernelFunc:reverse};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class RotateProgram{constructor(s,o){this.variableNames=["Image"],this.outputShape=[],this.customUniforms=[{name:"params",type:"vec4"}];const a=s[1],c=s[2];this.outputShape=s;let d="";typeof o=="number"?d=`float outputValue = ${o.toFixed(2)};`:d=`
        vec3 fill = vec3(${o.join(",")});
        float outputValue = fill[coords[3]];`,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];
          int y = coords[1];
          float coordXFloat = (float(x) - params[0]) * params[3] -
            (float(y) - params[1]) * params[2];
          float coordYFloat = (float(x) - params[0]) * params[2] +
            (float(y) - params[1]) * params[3];
          int coordX = int(round(coordXFloat + params[0]));
          int coordY = int(round(coordYFloat + params[1]));
          ${d}
          if(coordX >= 0 && coordX < ${c} && coordY >= 0 && coordY < ${a}) {
            outputValue = getImage(coords[0], coordY, coordX, coords[3]);
          }
          setOutput(outputValue);
        }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rotateWithOffsetConfig={kernelName:RotateWithOffset,backendName:"webgl",kernelFunc:({inputs:i,attrs:s,backend:o})=>{const{image:a}=i,{radians:c,fillValue:d,center:g}=s,$=o,j=new RotateProgram(a.shape,d),[_e,et]=getImageCenter(g,a.shape[1],a.shape[2]),_=[[_e,et,Math.sin(c),Math.cos(c)]];return $.runWebGLProgram(j,[a],a.dtype,_)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ROUND=`
  // OpenGL ES does not support round function.
  // The algorithm is based on banker's rounding.
  float base = floor(x);
  if ((x - base) < 0.5) {
    return floor(x);
  } else if ((x - base) > 0.5) {
    return ceil(x);
  } else {
    if (mod(base, 2.0) == 0.0) {
      return base;
    } else {
      return base + 1.0;
    }
  }
`,round=unaryKernelFunc({opSnippet:ROUND}),roundConfig={kernelName:Round,backendName:"webgl",kernelFunc:round};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const RSQRT="return inversesqrt(x);",rsqrt=unaryKernelFunc({opSnippet:RSQRT,cpuKernelImpl:rsqrtImplCPU}),rsqrtConfig={kernelName:Rsqrt,backendName:"webgl",kernelFunc:rsqrt};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ScatterProgram{constructor(s,o,a,c,d,g,$=!0,j=!1){this.variableNames=["updates","indices","defaultValue"],this.outputShape=g;const _e=getCoordsDataType(d.length),et=getCoordsDataType(g.length);let _="";a===1?_="i":a===2&&(_="i, j");const b=`getIndices(${_})`;let tt="";c===1?tt="i":c===2&&(tt="i, coords[1]");const nt=`getUpdates(${tt})`;let rt="";j&&(rt="coords[0], coords[1]");const st=`getDefaultValue(${rt})`,ot=o>1?"strides[j]":"strides";this.userCode=`
        ${_e} strides = ${_e}(${d});

        void main() {
          ${et} coords = getOutputCoords();
          float sum = 0.0;
          bool found = false;
          for (int i = 0; i < ${s}; i++) {
            int flattenedIndex = 0;
            for (int j = 0; j < ${o}; j++) {
              int index = round(${b});
              flattenedIndex += index * ${ot};
            }
            if (flattenedIndex == coords[0]) {
              sum += ${nt};
              found = true;
            }
          }
          setOutput(mix(${st}, sum, float(found)));
        }
      `}}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ScatterPackedProgram{constructor(s,o,a,c,d,g,$=!0,j=!1){this.variableNames=["updates","indices","defaultValue"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=g;const _e=getCoordsDataType(d.length),et=getCoordsDataType(g.length);let _="";a===1?_="i":a===2&&(_="i, j");const b=`getIndices(${_})`;let tt="";c===1?tt="i":c===2&&(tt="i, coords[1]");const nt=`getUpdates(${tt})`;let rt="";j&&(rt="coords[0], coords[1]");const st=`getDefaultValue(${rt})`,ot=o>1?"strides[j]":"strides",it=o>1?"strides[j + 1]":"strides";this.userCode=`
        ${_e} strides = ${_e}(${d});

        void main() {
          ${et} coords = getOutputCoords();
          vec4 sum = vec4(0.);
          vec4 found = vec4(0.);
          for (int i = 0; i < ${s}; i+=2) {
            ivec2 flattenedIndex = ivec2(0);
            for (int j = 0; j < ${o}; j+=2) {
              ivec4 index = round(${b});
              flattenedIndex += index.xz * ${ot};
              if (j + 1 < ${o}) {
                flattenedIndex += index.yw * ${it};
              }
            }
            if (flattenedIndex[0] == coords[0] || flattenedIndex[1] == coords[0] ||
                flattenedIndex[0] == coords[0] + 1 || flattenedIndex[1] == coords[0] + 1) {
              vec4 updVals = ${nt};
              if (flattenedIndex[0] == coords[0]) {
                sum.xy += updVals.xy;
                found.xy = vec2(1.);
              } else if (flattenedIndex[0] == coords[0] + 1) {
                sum.zw += updVals.xy;
                found.zw = vec2(1.);
              }
              if (flattenedIndex[1] == coords[0]) {
                sum.xy += updVals.zw;
                found.xy = vec2(1.);
              } else if (flattenedIndex[1] == coords[0] + 1) {
                sum.zw += updVals.zw;
                found.zw = vec2(1.);
              }
            }
          }
          setOutput(mix(${st}, sum, found));
        }
      `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function scatterNd(i){const{inputs:s,backend:o,attrs:a}=i,{indices:c,updates:d}=s,{shape:g}=a,{sliceRank:$,numUpdates:j,sliceSize:_e,strides:et,outputSize:_}=calculateShapes(d,c,g),b=[_/_e,_e];if(_===0)return o.makeTensorInfo(g,c.dtype);const tt=reshape({inputs:{x:c},backend:o,attrs:{shape:[j,$]}}),nt=reshape({inputs:{x:d},backend:o,attrs:{shape:[j,_e]}}),rt=o.makeTensorInfo([],"float32",new Float32Array([0]));let st;env().getBool("WEBGL_PACK")?st=new ScatterPackedProgram(j,$,tt.shape.length,nt.shape.length,et,b):st=new ScatterProgram(j,$,tt.shape.length,nt.shape.length,et,b);const ot=o.runWebGLProgram(st,[nt,tt,rt],nt.dtype),it=reshape({inputs:{x:ot},backend:o,attrs:{shape:g}});return o.disposeIntermediateTensorInfo(tt),o.disposeIntermediateTensorInfo(nt),o.disposeIntermediateTensorInfo(ot),o.disposeIntermediateTensorInfo(rt),it}const scatterNdConfig={kernelName:ScatterNd,backendName:"webgl",kernelFunc:scatterNd};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class SearchSortedProgram{constructor(s,o,a,c){this.variableNames=["sortedSequence","values"],this.customUniforms=[{name:"numInputs",type:"int"}],this.outputShape=[s,a];const d="while (left < right) {",g=`for (int i = 0; i < ${Math.ceil(Math.log2(o+1))}; ++i) { if (left >= right) break;`,$=env().getNumber("WEBGL_VERSION")===2?d:g,j=c==="left"?"<":"<=";this.userCode=`
       int findBound(int batch, float value) {
         int left = 0;
         int right = numInputs;
         int mid;
         ${$}
           mid = (left + right) / 2;
           if (getSortedSequence(batch, mid) ${j} value) {
             left = mid + 1;
           } else {
             right = mid;
           }
         }
         return right;
       }

       void main() {
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int valueIndex = coords[1];

         float value = getValues(batch, valueIndex);

         setOutput(float(findBound(batch, value)));
       }
     `}}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function searchSorted(i){const{inputs:s,backend:o,attrs:a}=i,{sortedSequence:c,values:d}=s,{side:g}=a,$=new SearchSortedProgram(c.shape[0],c.shape[1],d.shape[1],g),j=[[c.shape[1]]];return o.runWebGLProgram($,[c,d],"int32",j)}const searchSortedConfig={kernelName:SearchSorted,backendName:"webgl",kernelFunc:searchSorted};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class SelectProgram{constructor(s,o,a){this.variableNames=["c","a","b"],this.outputShape=o;let c,d;if(a>4)throw Error(`Where for rank ${a} is not yet supported`);if(a===1)d="resRC",c="resRC";else{const $=["resRC.x","resRC.y","resRC.z","resRC.w"],j=[],_e=[];for(let et=0;et<o.length;et++)_e.push(`${$[et]}`),et<s&&j.push(`${$[et]}`);c=j.join(),d=_e.join()}const g=getCoordsDataType(a);this.userCode=`
      void main() {
        ${g} resRC = getOutputCoords();
        float cVal = getC(${c});
        if (cVal >= 1.0) {
          setOutput(getA(${d}));
        } else {
          setOutput(getB(${d}));
        }
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function select(i){const{inputs:s,backend:o}=i,{condition:a,t:c,e:d}=s,g=new SelectProgram(a.shape.length,c.shape,c.shape.length);return o.runWebGLProgram(g,[a,c,d],upcastType(c.dtype,d.dtype))}const selectConfig={kernelName:Select,backendName:"webgl",kernelFunc:select};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const SELU=`
  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.
  // see: https://arxiv.org/abs/1706.02515
  float scaleAlpha = ${SELU_SCALEALPHA};
  float scale = ${SELU_SCALE};
  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);
`,selu=unaryKernelFunc({opSnippet:SELU}),seluConfig={kernelName:Selu$1,backendName:"webgl",kernelFunc:selu};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const SIGMOID=CHECK_NAN_SNIPPET_UNARY+`
  return 1.0 / (1.0 + exp(-1.0 * x));
`,SIGMOID_PACKED=`
  vec4 result = 1.0 / (1.0 + exp(-1.0 * x));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,sigmoid=unaryKernelFunc({opSnippet:SIGMOID,packedOpSnippet:SIGMOID_PACKED,cpuKernelImpl:sigmoidImplCPU}),sigmoidConfig={kernelName:Sigmoid$1,backendName:"webgl",kernelFunc:sigmoid};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const SIGN=`
  if (isnan(x)) { return 0.0; }
  return sign(x);
`,sign=unaryKernelFunc({opSnippet:SIGN}),signConfig={kernelName:Sign,backendName:"webgl",kernelFunc:sign};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const SIN=CHECK_NAN_SNIPPET_UNARY+`
  return sin(x);
`,SIN_PACKED=`
  vec4 result = sin(x);
  bvec4 isNaN = isnan(x);
  ${CHECK_NAN_SNIPPET_PACKED}
  return result;
`,sin=unaryKernelFunc({opSnippet:SIN,packedOpSnippet:SIN_PACKED}),sinConfig={kernelName:Sin,backendName:"webgl",kernelFunc:sin};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const SINH=`
  float e2x = exp(x);
  return (e2x - 1.0 / e2x) / 2.0;
`,sinh=unaryKernelFunc({opSnippet:SINH}),sinhConfig={kernelName:Sinh,backendName:"webgl",kernelFunc:sinh};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const SOFTPLUS=`
  float epsilon = 1.1920928955078125e-7;
  float threshold = log(epsilon) + 2.0;

  bool too_large = x > -threshold;
  bool too_small = x < threshold;

  float result;
  float exp_x = exp(x);

  if (too_large){
    result = x;
  }
  else if (too_small){
    result = exp_x;
  }
  else{
    result = log(exp_x + 1.0);
  }
  return result;
`,softplus=unaryKernelFunc({opSnippet:SOFTPLUS}),softplusConfig={kernelName:Softplus$1,backendName:"webgl",kernelFunc:softplus};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const spaceToBatchND=i=>{const{inputs:s,backend:o,attrs:a}=i,{x:c}=s,{blockShape:d,paddings:g}=a;assert$1(c.shape.length<=4,()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet");const $=d.reduce((ot,it)=>ot*it),j=[[0,0]];j.push(...g);for(let ot=1+d.length;ot<c.shape.length;++ot)j.push([0,0]);const _e=[],et=padV2({inputs:{x:c},backend:o,attrs:{paddings:j,constantValue:0}}),_=getReshaped(et.shape,d,$,!1),b=getPermuted(_.length,d.length,!1),tt=getReshapedPermuted(et.shape,d,$,!1),nt=reshape({inputs:{x:et},backend:o,attrs:{shape:_}}),rt=transpose({inputs:{x:nt},backend:o,attrs:{perm:b}}),st=reshape({inputs:{x:rt},backend:o,attrs:{shape:tt}});return _e.push(et),_e.push(nt),_e.push(rt),_e.forEach(ot=>o.disposeIntermediateTensorInfo(ot)),st},spaceToBatchNDConfig={kernelName:SpaceToBatchND,backendName:"webgl",kernelFunc:spaceToBatchND};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sparseFillEmptyRows(i){const{inputs:s,backend:o}=i,{indices:a,values:c,denseShape:d,defaultValue:g}=s;if(d.shape.length!==1)throw new Error(`Dense shape must be a vector, saw:
         ${d.shape}`);if(a.shape.length!==2)throw new Error(`Indices must be a matrix, saw:
         ${a.shape}`);if(c.shape.length!==1)throw new Error(`Values must be a vector, saw:
         ${c.shape}`);if(g.shape.length!==0)throw new Error(`Default value must be a scalar, saw:
        ${g.shape}`);const $=o.readSync(a.dataId),j=o.readSync(c.dataId),_e=o.readSync(d.dataId),et=o.readSync(g.dataId)[0],[_,b,tt,nt,rt]=sparseFillEmptyRowsImplCPU($,a.shape,a.dtype,j,c.dtype,_e,et);return[o.makeTensorInfo(b,a.dtype,_),o.makeTensorInfo([b[0]],c.dtype,tt),o.makeTensorInfo([nt.length],"bool",new Uint8Array(nt.map(st=>Number(st)))),o.makeTensorInfo([rt.length],a.dtype,new Int32Array(rt))]}const sparseFillEmptyRowsConfig={kernelName:SparseFillEmptyRows,backendName:"webgl",kernelFunc:sparseFillEmptyRows};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sparseReshape(i){const{inputs:s,backend:o}=i,{inputIndices:a,inputShape:c,newShape:d}=s;if(a.shape.length!==2)throw new Error(`Input indices should be a matrix but received shape ${a.shape}`);if(c.shape.length!==1)throw new Error(`Input shape should be a vector but received shape ${c.shape}`);if(d.shape.length!==1)throw new Error(`Target shape should be a vector but received shape ${d.shape}`);const g=Array.from(o.readSync(c.dataId)),$=o.readSync(a.dataId),j=Array.from(o.readSync(d.dataId)),[_e,et,_]=sparseReshapeImplCPU($,a.shape,a.dtype,g,j);return[o.makeTensorInfo(et,a.dtype,_e),o.makeTensorInfo([_.length],d.dtype,new Int32Array(_))]}const sparseReshapeConfig={kernelName:SparseReshape,backendName:"webgl",kernelFunc:sparseReshape};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sparseSegmentMean(i){const{inputs:s,backend:o}=i,{data:a,indices:c,segmentIds:d}=s;if(a.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(c.shape.length!==1)throw new Error(`Indices should be a vector but received shape
              ${c.shape}`);if(d.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
              ${d.shape}`);const g=o.readSync(a.dataId),$=o.readSync(c.dataId),j=o.readSync(d.dataId),[_e,et]=sparseSegmentReductionImplCPU(g,a.shape,a.dtype,$,j,!0);return o.makeTensorInfo(et,a.dtype,_e)}const sparseSegmentMeanConfig={kernelName:SparseSegmentMean,backendName:"webgl",kernelFunc:sparseSegmentMean};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sparseSegmentSum(i){const{inputs:s,backend:o}=i,{data:a,indices:c,segmentIds:d}=s;if(a.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(c.shape.length!==1)throw new Error(`Indices should be a vector but received shape
             ${c.shape}`);if(d.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
             ${d.shape}`);const g=o.readSync(a.dataId),$=o.readSync(c.dataId),j=o.readSync(d.dataId),[_e,et]=sparseSegmentReductionImplCPU(g,a.shape,a.dtype,$,j);return o.makeTensorInfo(et,a.dtype,_e)}const sparseSegmentSumConfig={kernelName:SparseSegmentSum,backendName:"webgl",kernelFunc:sparseSegmentSum};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sparseToDense(i){const{inputs:s,backend:o,attrs:a}=i,{sparseIndices:c,sparseValues:d,defaultValue:g}=s,{outputShape:$}=a,{sliceRank:j,numUpdates:_e,sliceSize:et,strides:_,outputSize:b}=calculateShapes(d,c,$),tt=!1;if(d.dtype==="string"){const ot=o.bufferSync(c),it=o.bufferSync(d),at=decodeString(o.readSync(g.dataId)[0]),lt=scatterImplCPU(ot,it,$,b,et,_e,j,_,at,tt);return o.makeTensorInfo($,lt.dtype,lt.values)}const nt=new ScatterProgram(_e,j,c.shape.length,d.shape.length,_,[b,1],tt),rt=o.runWebGLProgram(nt,[d,c,g],d.dtype),st=reshape({inputs:{x:rt},backend:o,attrs:{shape:$}});return o.disposeIntermediateTensorInfo(rt),st}const sparseToDenseConfig={kernelName:SparseToDense,backendName:"webgl",kernelFunc:sparseToDense};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function splitV(i){const{inputs:s,backend:o,attrs:a}=i,{x:c}=s,{numOrSizeSplits:d,axis:g}=a,$=parseAxisParam(g,c.shape)[0],j=prepareSplitSize(c,d,$),_e=c.shape.length,et=new Array(_e).fill(0),_=c.shape.slice();return j.map(b=>{const tt=[..._];tt[$]=b;const nt=slice({inputs:{x:c},backend:o,attrs:{begin:et,size:tt}});return et[$]+=b,nt})}const splitVConfig={kernelName:SplitV,backendName:"webgl",kernelFunc:splitV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const SQRT="return sqrt(x);",sqrt=unaryKernelFunc({opSnippet:SQRT,packedOpSnippet:SQRT,cpuKernelImpl:sqrtImplCPU}),sqrtConfig={kernelName:Sqrt,backendName:"webgl",kernelFunc:sqrt};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const SQUARE="return x * x;",square=unaryKernelFunc({opSnippet:SQUARE}),squareConfig={kernelName:Square,backendName:"webgl",kernelFunc:square};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const SQUARED_DIFFERENCE="return (a - b) * (a - b);",squaredDifference=binaryKernelFunc({opSnippet:SQUARED_DIFFERENCE,packedOpSnippet:SQUARED_DIFFERENCE}),squaredDifferenceConfig={kernelName:SquaredDifference,backendName:"webgl",kernelFunc:squaredDifference};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function staticRegexReplace(i){const{inputs:s,backend:o,attrs:a}=i,{x:c}=s;if(c.dtype!=="string")throw new Error("Input must be of datatype string");const d=o.readSync(c.dataId),g=fromUint8ToStringArray(d),$=staticRegexReplaceImplCPU(g,"string",a);return o.makeTensorInfo(c.shape,"string",$)}const staticRegexReplaceConfig={kernelName:StaticRegexReplace,backendName:"webgl",kernelFunc:staticRegexReplace};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function step({inputs:i,attrs:s,backend:o}){const{x:a}=i,c=CHECK_NAN_SNIPPET$1+`
    return x > 0.0 ? 1.0 : float(${s.alpha});
  `,d=new UnaryOpProgram(a.shape,c);return o.runWebGLProgram(d,[a],a.dtype)}const stepConfig={kernelName:Step,backendName:"webgl",kernelFunc:step};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class StridedSliceProgram{constructor(s,o,a){this.variableNames=["x"],this.outputShape=a;const c=a.length,d=getCoordsDataType(a.length),g=getCoordsDataType(a.length);let $="";if(c===1)$="coords * strides + begin";else{let j=0;$=a.map((_e,et)=>(j++,a.length===1?`coords * strides[${et}] + begin[${et}]`:`coords[${j-1}] * strides[${et}] + begin[${et}]`)).join(",")}this.userCode=`
      ${d} begin = ${d}(${s});
      ${d} strides = ${d}(${o});

      void main() {
        ${g} coords = getOutputCoords();
        setOutput(getX(${$}));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function stridedSlice(i){const{inputs:s,backend:o,attrs:a}=i,{x:c}=s,{begin:d,end:g,strides:$,beginMask:j,endMask:_e,ellipsisMask:et,newAxisMask:_,shrinkAxisMask:b}=a,{finalShapeSparse:tt,finalShape:nt,isIdentity:rt,sliceDim0:st,isSimpleSlice:ot,begin:it,end:at,strides:lt}=sliceInfo(c.shape,d,g,$,j,_e,et,_,b);let ut;if(rt)ut=reshape({inputs:{x:c},backend:o,attrs:{shape:nt}});else if(st||ot){assert$1(c.shape.length>=1,()=>`Input must have rank at least 1, got: ${c.shape.length}`);const dt=computeOutShape$2(it,at,lt),pt=slice({inputs:{x:c},backend:o,attrs:{begin:it,size:dt}});ut=reshape({inputs:{x:pt},backend:o,attrs:{shape:nt}}),o.disposeIntermediateTensorInfo(pt)}else if(o.shouldExecuteOnCPU([c])){const pt=o.readSync(c.dataId),ht=buffer(c.shape,c.dtype,pt),ft=stridedSliceImplCPU(tt,ht,lt,it);ut=o.makeTensorInfo(nt,c.dtype,ft.values)}else{const pt=new StridedSliceProgram(it,lt,tt);ut=o.runWebGLProgram(pt,[c],c.dtype)}const ct=reshape({inputs:{x:ut},backend:o,attrs:{shape:nt}});return o.disposeIntermediateTensorInfo(ut),ct}const stridedSliceConfig={kernelName:StridedSlice,backendName:"webgl",kernelFunc:stridedSlice};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function stringNGrams(i){const{inputs:s,backend:o,attrs:a}=i,{separator:c,nGramWidths:d,leftPad:g,rightPad:$,padWidth:j,preserveShortSequences:_e}=a,{data:et,dataSplits:_}=s,b=o.readSync(et.dataId),tt=o.readSync(_.dataId),[nt,rt]=stringNGramsImplCPU(b,tt,c,d,g,$,j,_e);return[o.makeTensorInfo([nt.length],"string",nt),o.makeTensorInfo(_.shape,"int32",rt)]}const stringNGramsConfig={kernelName:StringNGrams,backendName:"webgl",kernelFunc:stringNGrams};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function stringSplit(i){const{inputs:s,backend:o,attrs:a}=i,{skipEmpty:c}=a,{input:d,delimiter:g}=s;if(d.dtype!=="string")throw new Error("Input must be of datatype string");if(d.shape.length!==1)throw new Error(`Input must be a vector, got shape: ${d.shape}`);if(g.shape.length!==0)throw new Error(`Delimiter must be a scalar, got shape: ${g.shape}`);const $=o.readSync(d.dataId),j=o.readSync(g.dataId)[0],[_e,et,_]=stringSplitImplCPU($,j,c),b=et.length;return[o.makeTensorInfo([b,2],"int32",_e),o.makeTensorInfo([b],"string",et),o.makeTensorInfo([2],"int32",new Int32Array(_))]}const stringSplitConfig={kernelName:StringSplit,backendName:"webgl",kernelFunc:stringSplit};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function stringToHashBucketFast(i){const{inputs:s,backend:o,attrs:a}=i,{numBuckets:c}=a,{input:d}=s;if(d.dtype!=="string")throw new Error("Input must be of datatype string");if(c<=0)throw new Error("Number of buckets must be at least 1");const g=o.readSync(d.dataId),$=stringToHashBucketFastImplCPU(g,c);return o.makeTensorInfo(d.shape,"int32",$)}const stringToHashBucketFastConfig={kernelName:StringToHashBucketFast,backendName:"webgl",kernelFunc:stringToHashBucketFast};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const TAN="return tan(x);",tan=unaryKernelFunc({opSnippet:TAN}),tanConfig={kernelName:Tan,backendName:"webgl",kernelFunc:tan};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const TANH=`
  float e2x = exp(-2.0 * abs(x));
  return sign(x) * (1.0 - e2x) / (1.0 + e2x);
`,tanh=unaryKernelFunc({opSnippet:TANH}),tanhConfig={kernelName:Tanh$1,backendName:"webgl",kernelFunc:tanh};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tensorScatterUpdate(i){const{inputs:s,backend:o,attrs:a}=i,{tensor:c,indices:d,updates:g}=s,{sliceRank:$,numUpdates:j,sliceSize:_e,strides:et,outputSize:_}=calculateShapes(g,d,c.shape),b=[_/_e,_e];if(_===0)return o.makeTensorInfo(c.shape,d.dtype);const tt=reshape({inputs:{x:d},backend:o,attrs:{shape:[j,$]}}),nt=reshape({inputs:{x:g},backend:o,attrs:{shape:[j,_e]}}),rt=reshape({inputs:{x:c},backend:o,attrs:{shape:b}}),st=new ScatterProgram(j,$,tt.shape.length,nt.shape.length,et,b,!1,!0),ot=o.runWebGLProgram(st,[nt,tt,rt],rt.dtype),it=reshape({inputs:{x:ot},backend:o,attrs:{shape:c.shape}});return o.disposeIntermediateTensorInfo(tt),o.disposeIntermediateTensorInfo(nt),o.disposeIntermediateTensorInfo(rt),o.disposeIntermediateTensorInfo(ot),it}const tensorScatterUpdateConfig={kernelName:TensorScatterUpdate,backendName:"webgl",kernelFunc:tensorScatterUpdate};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class TileProgram{constructor(s,o){this.variableNames=["A"];const a=new Array(s.length);for(let g=0;g<a.length;g++)a[g]=s[g]*o[g];this.outputShape=a,this.rank=a.length;const c=getCoordsDataType(this.rank),d=getSourceCoords(s);this.userCode=`
      void main() {
        ${c} resRC = getOutputCoords();
        setOutput(getA(${d}));
      }
    `}}function getSourceCoords(i){const s=i.length;if(s>5)throw Error(`Tile for rank ${s} is not yet supported`);if(s===1)return`imod(resRC, ${i[0]})`;const o=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],a=[];for(let c=0;c<i.length;c++)a.push(`imod(${o[c]}, ${i[c]})`);return a.join()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tile(i){const{inputs:s,backend:o,attrs:a}=i,{x:c}=s,{reps:d}=a;if(c.dtype==="string"||c.shape.length>5){const j=o.readSync(c.dataId),_e=c.dtype==="string"?j.map(b=>decodeString(b)):j,et=buffer(c.shape,c.dtype,_e),_=tileImplCPU(et,d);return o.makeTensorInfo(_.shape,_.dtype,_.values)}const g=new TileProgram(c.shape,d);return o.runWebGLProgram(g,[c],c.dtype)}const tileConfig={kernelName:Tile,backendName:"webgl",kernelFunc:tile};class SwapProgram{constructor(s){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"negativeInf",type:"float"},{name:"dir",type:"int"},{name:"inc",type:"int"}],this.outputShape=s,this.userCode=`
       void main() {
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int elemIdx = coords[1];

         // We compare elements pair-wise within a group of size 2 * inc.
         // The comparing rule for each group alternates between ascending
         // and descending. Within each group, we compare each pair at
         // positions i and i+inc. To decide whether an element at position i
         // is x0 or x1, we mod it by 2 * inc, if the result is smaller than
         // inc, it is in the first half of the group, we denote it as x0,
         // otherwise we denote it as x1.
         // For example, as shown in the Bitonic top K paper referenced above,
         // Figure5(a) shows that element[1] is in the
         // second half of the group when group size is 2, but it is in the
         // first half of the group when group size is 4.

         bool isFirstInPair = imod(elemIdx, 2 * inc) < inc;
         int i = isFirstInPair ? elemIdx : elemIdx - inc;

         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));
         int i1 = firstPass == 1 ? i + inc : int(getIndices(batch, i + inc));
         float x0 = i0 < n ? getX(batch, i0) : negativeInf;
         float x1 = i1 < n ? getX(batch, i1) : negativeInf;

         // Denotes which direction indices are in (ascending or descending).
         bool reverse = imod(elemIdx, 2 * dir) >= dir;
         bool isGreater = x0 > x1 || (x0 == x1 && i1 > i0);
         if (reverse == isGreater) { // Elements in opposite order of direction
           int iTemp = i0;
           i0 = i1;
           i1 = iTemp;
         }
         if (isFirstInPair) {
            setOutput(float(i0));
         } else {
            setOutput(float(i1));
         }
       }
     `}}class MergeProgram{constructor(s){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"k",type:"int"}],this.outputShape=s,this.userCode=`
    void main() {
         // Takes max of indices (0, k), (1, k + 1), (2, k + 2) ...
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int elemIdx = coords[1];

         // The output size is half of the previous size.
         // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _ (k=4),
         // we only need to output the indices at positions |, the indices at
         // positions _ can be thrown away, see Figure5(b) After Phase 2
         // (Merge phase) in the Bitonic Top K paper referenced above.
         // For example, the paper shows we only need to output the orange bars.
         // The output sequence should look like this | | | | | | | |.
         // Because the sequence is halved, to map the output index back
         // to the previous sequence to find the corresponding value,
         // we need to double the index. When we double the index,
         // we basically interpolate a position, so 2i looks like
         // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k position
         // of each 2k positions by - elemIdx % k. E.g. for output at
         // index 4,5,6,7, we want to get the corresponding element at
         // original index 8,9,10,11, for output at index 8,9,10,11,
         // we want to get the corresponding element at original index
         // 16,17,18,19, so on and so forth.

         int i = elemIdx < k ? elemIdx : (elemIdx * 2 - imod(elemIdx, k));
         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));
         int i1 = firstPass == 1 ? i + k : int(getIndices(batch, i + k));

         float x0 = getX(batch, i0);
         float x1 = i1 < n ? getX(batch, i1) : x0;

         setOutput(x0 >= x1 ? float(i0) : float(i1));
       }
     `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function disposeIntermediateTensorInfoOrNull(i,s){s!==null&&i.disposeIntermediateTensorInfo(s)}function roundUpToPow2(i){let s=1;for(;s<i;)s*=2;return s}function topK(i){const{inputs:s,backend:o,attrs:a}=i,{x:c}=s,{k:d,sorted:g}=a,$=env().getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),j=env().getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD"),_e=c.shape,et=_e[_e.length-1];if(o.shouldExecuteOnCPU([c])||et<$||d>j){const ft=o.readSync(c.dataId),[yt,wt]=topKImplCPU(ft,_e,c.dtype,d,g);return[o.makeTensorInfo(yt.shape,yt.dtype,yt.values),o.makeTensorInfo(wt.shape,wt.dtype,wt.values)]}if(d===0)return _e[_e.length-1]=0,[o.makeTensorInfo(_e,c.dtype,[]),o.makeTensorInfo(_e,"int32",[])];if(et===1)return[c,fill({attrs:{shape:_e,dtype:"int32",value:0},backend:o})];const _=o.texData.get(c.dataId),b=_!==null&&_.isPacked,tt=b?o.unpackTensor(c):c,rt=sizeFromShape(_e)/et,st=reshape({inputs:{x:tt},attrs:{shape:[rt,et]},backend:o});b&&disposeIntermediateTensorInfoOrNull(o,tt);const ot=roundUpToPow2(d),it=roundUpToPow2(et);let at=null;const lt=()=>at===null?[st,st]:[st,at],ut=(ft,yt,wt)=>{const _t=lt(),bt=new SwapProgram(wt),mt=[[et],[at===null?1:0],[Number.NEGATIVE_INFINITY],[ft],[yt]],vt=at;at=o.runWebGLProgram(bt,_t,"int32",mt),disposeIntermediateTensorInfoOrNull(o,vt)};for(let ft=1;ft<ot;ft*=2){const yt=ft*2;for(let wt=ft;wt>=1;wt/=2)ut(yt,wt,[rt,it])}for(let ft=it;ft>ot;ft/=2){const yt=lt(),wt=new MergeProgram([rt,ft/2]),bt=[[et],[at===null?1:0],[ot]],xt=at;at=o.runWebGLProgram(wt,yt,"int32",bt),disposeIntermediateTensorInfoOrNull(o,xt);const mt=ot/2,vt=mt*2;for(let Et=mt;Et>=1;Et/=2)ut(vt,Et,at.shape)}let ct=at;at=slice({inputs:{x:at},backend:o,attrs:{begin:0,size:[rt,d]}}),disposeIntermediateTensorInfoOrNull(o,ct);let dt=gatherV2({inputs:{x:st,indices:at},backend:o,attrs:{axis:1,batchDims:1}});disposeIntermediateTensorInfoOrNull(o,st);const pt=_e.slice(0,-1);pt.push(d),ct=at,at=reshape({inputs:{x:at},attrs:{shape:pt},backend:o}),disposeIntermediateTensorInfoOrNull(o,ct);const ht=dt;return dt=reshape({inputs:{x:dt},attrs:{shape:pt},backend:o}),disposeIntermediateTensorInfoOrNull(o,ht),[dt,at]}const topKConfig={kernelName:TopK,backendName:"webgl",kernelFunc:topK};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class TransformProgram{constructor(s,o,a,c,d,g){this.variableNames=["Image","Transforms"],this.outputShape=g;const $=a==="nearest"?1:2;let j;switch(c){case"constant":j=1;break;case"reflect":j=2;break;case"wrap":j=3;break;case"nearest":j=4;break;default:j=1;break}this.userCode=`
            float mapCoord(float outCoord, float len) {
              float inCoord = outCoord;
              if(${j} == 2) {
                if (inCoord < 0.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz2 = 2.0 * len;
                    if (inCoord < sz2) {
                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +
                      inCoord;
                    }
                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;
                  }
                } else if (inCoord > len - 1.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz2 = 2.0 * len;
                    inCoord -= sz2 * float(int(float(inCoord / sz2)));
                    if (inCoord >= len) {
                      inCoord = sz2 - inCoord - 1.0;
                    }
                  }
                }
                return clamp(inCoord, 0.0, len - 1.0);
              } else if (${j} == 3) {
                if (inCoord < 0.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz = len - 1.0;
                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);
                  }
                } else if (inCoord > len - 1.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz = len - 1.0;
                    inCoord -= len * float(int(float(inCoord / sz)));
                  }
                }
                return clamp(inCoord, 0.0, len - 1.0);
              } else if (${j} == 4) {
                return clamp(outCoord, 0.0, len - 1.0);
              } else {
                return outCoord;
              }
            }

            float readWithFillValue(int batch, int coordY, int coordX,
              int channel) {
              float outputValue;
              if (0 <= coordY && coordY < ${s} && 0 <= coordX && coordX < ${o}) {
                  outputValue = getImage(batch, coordY, coordX, channel);
              } else {
                outputValue = float(${d});
              }
              return outputValue;
            }

            void main() {
              ivec4 coords = getOutputCoords();
              float outputValue;
              int batch = coords[0];
              int x = coords[2];
              int y = coords[1];
              int channel = coords[3];
              float xf = float(x);
              float yf = float(y);
              float a1 = getTransforms(batch, 0);
              float a2 = getTransforms(batch, 1);
              float a3 = getTransforms(batch, 2);
              float b1 = getTransforms(batch, 3);
              float b2 = getTransforms(batch, 4);
              float b3 = getTransforms(batch, 5);
              float c1 = getTransforms(batch, 6);
              float c2 = getTransforms(batch, 7);
              float projection = c1 * xf + c2 * yf + 1.0;
              if (projection == 0.0) {
                outputValue = float(${d});
              } else {
                float inX = (a1 * xf + a2 * yf + a3) / projection;
                float inY = (b1 * xf + b2 * yf + b3) / projection;
                float mapX = mapCoord(inX, float(${o}));
                float mapY = mapCoord(inY, float(${s}));

                if (${$} == 1) {
                  int coordY = int(round(mapY));
                  int coordX = int(round(mapX));
                  outputValue = readWithFillValue(batch, coordY, coordX,
                    channel);
                } else {
                  float yFloor = floor(mapY);
                  float xFloor = floor(mapX);
                  float yCeil = yFloor + 1.0;
                  float xCeil = xFloor + 1.0;
                  float valueYFloor = (xCeil - mapX) *
                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);
                  float valueYCeil = (xCeil - mapX) *
                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);
                  outputValue = (yCeil - mapY) * valueYFloor +
                  (mapY - yFloor) * valueYCeil;
                }
              }
              setOutput(outputValue);
            }
        `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function transform(i){const{inputs:s,backend:o,attrs:a}=i,{image:c,transforms:d}=s,{interpolation:g,fillMode:$,fillValue:j,outputShape:_e}=a,[et,_,b,tt]=c.shape,[nt,rt]=_e??[_,b],st=[et,nt,rt,tt],ot=new TransformProgram(_,b,g,$,j,st);return o.runWebGLProgram(ot,[c,d],"float32")}const transformConfig={kernelName:Transform,backendName:"webgl",kernelFunc:transform};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function unique(i){const{inputs:s,attrs:o,backend:a}=i,{axis:c}=o,{x:d}=s;assertNotComplex(d,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");const g=a.readSync(d.dataId),{outputValues:$,outputShape:j,indices:_e}=uniqueImplCPU(g,c,d.shape,d.dtype);return[a.makeTensorInfo(j,d.dtype,$),a.makeTensorInfo([_e.length],"int32",_e)]}const uniqueConfig={kernelName:Unique,backendName:"webgl",kernelFunc:unique};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function unpack(i){const{inputs:s,backend:o,attrs:a}=i,{value:c}=s;let{axis:d}=a;d<0&&(d+=c.shape.length);const g=c,$=g.shape.length,j=c.shape[d],_e=new Array($-1);let et=0;for(let rt=0;rt<$;rt++)rt!==d&&(_e[et++]=g.shape[rt]);const _=[],b=new Array($).fill(0),tt=g.shape.slice();tt[d]=1;const nt=new Array(j);for(let rt=0;rt<nt.length;rt++){b[d]=rt;const st=slice({inputs:{x:g},backend:o,attrs:{begin:b,size:tt}}),ot=reshape({inputs:{x:st},backend:o,attrs:{shape:_e}});nt[rt]=ot,_.push(st)}return _.forEach(rt=>o.disposeIntermediateTensorInfo(rt)),nt}const unpackConfig={kernelName:Unpack,backendName:"webgl",kernelFunc:unpack};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class SegmentOpProgram{constructor(s,o){this.variableNames=["x","segmentIds"];const a=s.windowSize,c=s.batchSize,d=s.inSize,g=s.numSegments,$=g*Math.ceil(d/a);this.outputShape=[c,$];const j="0.0",_e="sumValue",et=Math.floor(a/4)*4,_=a%4,b=`
        sumValue += dot(values, segFilter);
    `;let tt="";d%a>0&&(tt=`
        if (inIdx < 0 || inIdx >= ${d}) {
          return initializationValue;
        }
      `);let nt="";d%a>0&&(nt=`
        if (inIdx < 0 || inIdx >= ${d}) {
          return -1.0;
        }
      `),this.userCode=`
      const float initializationValue = ${j};

      float getValue(int batch, int inIdx) {
        ${tt}
        return getX(batch, inIdx);
      }

      float getSegmentIdAtIndex(int inIdx) {
        ${nt}
        return getSegmentIds(inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = int(floor(float(outIdx) / float(
          ${g})) * float(${a}));
        int currentSeg = int(mod(float(outIdx), float(${g})));

        float sumValue = 0.0;

        for (int i = 0; i < ${et}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0
          );

          ${b}
        }

        int inIdx = inOffset + ${et};
        if (${_===1}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            0,
            0,
            0
          );

          ${b}
        } else if (${_===2}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
              0,
              0
          );

          ${b}
        } else if (${_===3}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            0
          );

          ${b}
        }
        setOutput(${_e});
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function unsortedSegmentSum(i){const{inputs:s,backend:o,attrs:a}=i,{x:c,segmentIds:d}=s,{numSegments:g}=a,$=c.shape.length,j=[];let _e=0;const et=getAxesPermutation([_e],$);let _=c;et!=null&&(_=transpose({inputs:{x:c},backend:o,attrs:{perm:et}}),j.push(_),_e=getInnerMostAxes(1,$)[0]);const b=computeOutShape(_.shape,_e,g),tt=sizeFromShape([_.shape[_e]]),nt=reshape({inputs:{x:_},backend:o,attrs:{shape:[-1,tt]}});j.push(nt);const rt=sumOutType(c.dtype),st=(lt,ut,ct,dt,pt)=>{const ht=lt.shape[0],ft=lt.shape[1],yt=segOpComputeOptimalWindowSize(ft,pt),wt={windowSize:yt,inSize:ft,batchSize:ht,numSegments:pt},_t=new SegmentOpProgram(wt,ut),bt=o.compileAndRun(_t,[lt,ct],dt);if(j.push(bt),bt.shape[1]===pt)return bt;const xt=range({backend:o,attrs:{start:0,stop:pt,step:1,dtype:"float32"}}),mt=tile({inputs:{x:xt},backend:o,attrs:{reps:[ft/yt]}});return j.push(xt),j.push(mt),st(bt,ut,mt,dt,pt)},ot=st(nt,"unsortedSegmentSum",d,rt,g),it=reshape({inputs:{x:ot},backend:o,attrs:{shape:b}});let at=it;if(et!=null){j.push(it);const lt=getUndoAxesPermutation(et);at=transpose({inputs:{x:at},backend:o,attrs:{perm:lt}})}return j.forEach(lt=>o.disposeIntermediateTensorInfo(lt)),at}const unsortedSegmentSumConfig={kernelName:UnsortedSegmentSum,backendName:"webgl",kernelFunc:unsortedSegmentSum};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kernelConfigs=[_fusedMatMulConfig,absConfig,acosConfig,acoshConfig,addConfig,addNConfig,allConfig,anyConfig,argMaxConfig,argMinConfig,asinConfig,asinhConfig,atanConfig,atan2Config,atanhConfig,avgPoolConfig,avgPool3DConfig,avgPool3DGradConfig,avgPoolGradConfig,batchMatMulConfig,batchNormConfig,batchToSpaceNDConfig,bincountConfig,bitwiseAndConfig,broadcastArgsConfig,castConfig,ceilConfig,clipByValueConfig,complexConfig,complexAbsConfig,concatConfig,conv2DConfig,conv2DBackpropFilterConfig,conv2DBackpropInputConfig,conv3DConfig,conv3DBackpropFilterV2Config,conv3DBackpropInputConfig,cosConfig,coshConfig,cropAndResizeConfig,cumprodConfig,cumsumConfig,denseBincountConfig,depthToSpaceConfig,depthwiseConv2dNativeConfig,depthwiseConv2dNativeBackpropFilterConfig,depthwiseConv2dNativeBackpropInputConfig,diagConfig,dilation2DConfig,einsumConfig,eluConfig,eluGradConfig,equalConfig,erfConfig,expConfig,expandDimsConfig,expm1Config,fftConfig,fillConfig,flipLeftRightConfig,floorConfig,floorDivConfig,fromPixelsConfig,fusedConv2DConfig,fusedDepthwiseConv2DConfig,gatherNdConfig,gatherV2Config,greaterConfig,greaterEqualConfig,identityConfig,ifftConfig,imagConfig,isFiniteConfig,isInfConfig,isNaNConfig,leakyReluConfig,lessConfig,lessEqualConfig,linSpaceConfig,logConfig,log1pConfig,logicalAndConfig,logicalNotConfig,logicalOrConfig,LRNConfig,LRNGradConfig,maxConfig,maximumConfig,maxPoolConfig,maxPool3DConfig,maxPool3DGradConfig,maxPoolGradConfig,maxPoolWithArgmaxConfig,meanConfig,minConfig,minimumConfig,mirrorPadConfig,modConfig,multinomialConfig,multiplyConfig,negConfig,nonMaxSuppressionV3Config,nonMaxSuppressionV4Config,nonMaxSuppressionV5Config,notEqualConfig,oneHotConfig,onesLikeConfig,packConfig,padV2Config,powConfig,preluConfig,prodConfig,raggedGatherConfig,raggedRangeConfig,raggedTensorToTensorConfig,rangeConfig,realConfig,realDivConfig,reciprocalConfig,reluConfig,relu6Config,reshapeConfig,resizeBilinearConfig,resizeBilinearGradConfig,resizeNearestNeighborConfig,resizeNearestNeighborGradConfig,reverseConfig,rotateWithOffsetConfig,roundConfig,rsqrtConfig,scatterNdConfig,searchSortedConfig,selectConfig,seluConfig,sigmoidConfig,signConfig,sinConfig,sinhConfig,sliceConfig,softmaxConfig,softplusConfig,spaceToBatchNDConfig,sparseFillEmptyRowsConfig,sparseReshapeConfig,sparseSegmentMeanConfig,sparseSegmentSumConfig,sparseToDenseConfig,splitVConfig,sqrtConfig,squareConfig,squaredDifferenceConfig,staticRegexReplaceConfig,stepConfig,stridedSliceConfig,stringNGramsConfig,stringSplitConfig,stringToHashBucketFastConfig,subConfig,sumConfig,tanConfig,tanhConfig,tensorScatterUpdateConfig,tileConfig,topKConfig,transformConfig,transposeConfig,uniqueConfig,unpackConfig,unsortedSegmentSumConfig,zerosLikeConfig];for(const i of kernelConfigs)registerKernel(i);function Test(){const[i,s]=reactExports.useState("Ikke startet"),[o,a]=reactExports.useState(null),c=async()=>{try{s("Starter test..."),console.log("Starting TensorFlow.js test");const d=sequential();d.add(dense({units:1,inputShape:[1]})),d.compile({loss:"meanSquaredError",optimizer:"sgd"}),s("Model oprettet og kompileret"),console.log("Model created and compiled");const g=tensor2d([1,2,3,4],[4,1]),$=tensor2d([2,4,6,8],[4,1]);s("Træner model..."),await d.fit(g,$,{epochs:10,callbacks:{onEpochEnd:(et,_)=>{console.log(`Epoch ${et}: loss = ${_==null?void 0:_.loss}`),s(`Træning epoch ${et+1}/10`)}}});const _e=await d.predict(tensor2d([5],[1,1])).data();s(`Success! Prediction for input 5: ${_e[0]}`),console.log("Test completed successfully")}catch(d){console.error("Test failed:",d),a(d instanceof Error?d.message:"Unknown error"),s("Test fejlede")}};return jsxRuntimeExports.jsx("div",{className:"min-h-screen bg-background p-6",children:jsxRuntimeExports.jsxs("div",{className:"max-w-2xl mx-auto space-y-4",children:[jsxRuntimeExports.jsx("h1",{className:"text-2xl font-semibold",children:"AI Model Test"}),jsxRuntimeExports.jsx(Card,{className:"p-4",children:jsxRuntimeExports.jsxs("div",{className:"space-y-4",children:[jsxRuntimeExports.jsxs("p",{children:[jsxRuntimeExports.jsx("strong",{children:"Status:"})," ",i]}),o&&jsxRuntimeExports.jsxs("p",{className:"text-red-500",children:[jsxRuntimeExports.jsx("strong",{children:"Fejl:"})," ",o]}),jsxRuntimeExports.jsx(Button,{onClick:c,children:"Start Test"})]})})]})})}function Router(){return jsxRuntimeExports.jsxs(Switch,{children:[jsxRuntimeExports.jsx(Route,{path:"/",component:Home}),jsxRuntimeExports.jsx(Route,{path:"/test",component:Test}),jsxRuntimeExports.jsx(Route,{component:NotFound})]})}function App(){return jsxRuntimeExports.jsxs(QueryClientProvider,{client:queryClient,children:[jsxRuntimeExports.jsx(Router,{}),jsxRuntimeExports.jsx(Toaster,{})]})}createRoot(document.getElementById("root")).render(jsxRuntimeExports.jsx(reactExports.StrictMode,{children:jsxRuntimeExports.jsx(App,{})}));
